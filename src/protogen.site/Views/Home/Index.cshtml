@{
    ViewData["Title"] = "Generator";
}
<script src="~/lib/monaco-editor/min/vs/loader.js"></script>
<script>
    require.config({ paths: { 'vs': 'lib/monaco-editor/min/vs' } });
</script>
<h2>@ViewData["Title"].</h2>
<a href="/about">Wait... what is this?</a>
<div>
    <h3>Schema (can be <a href="https://developers.google.com/protocol-buffers/docs/proto">proto2</a> or <a href="https://developers.google.com/protocol-buffers/docs/proto3">proto3</a>):</h3>
    <p>(note: some features are still missing; map&lt;K,V&gt;, oneof, dynamic, Struct, Timestamp, Duration, Any, Wrapper types, FieldMask, ListValue, Value, NullValue)</p>
    <button id="generatecsharp">Generate</button>
    <div id="protocontainer" style="width:100%; max-width:unset;height:600px;border:1px solid grey"></div>
    <script>
        require(['vs/editor/editor.main'], function () {
            require(['js/proto3lang'], function (proto3lang) {
                monaco.languages.register({ id: 'proto3lang' });
                monaco.languages.setMonarchTokensProvider('proto3lang', proto3lang);
                var editor = monaco.editor.create(document.getElementById('protocontainer'), {
                    value: JSON.parse('@Json.Serialize(ViewData["schema"])'),
                    language: 'proto3lang'
                });
                document.getElementById("generatecsharp").addEventListener("click", function () {
                    jQuery.post("/generate", "schema=" + editor.getValue({ preserveBOM: false, lineEnding: "\n" }), function (data, textStatus, jqXHR) {
                        if (data.code)
                        {

                        }
                    }, "text");
                });
            });
        });
    </script>
    <p>Not sure what to use? How about <a href="https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/descriptor.proto">descriptor.proto</a>?</p>
</div>
<div id="result">
    @if (ViewData.ContainsKey("error"))
    {
        <h3>Error</h3>
        <pre class="has-error">@ViewData["error"]</pre>
    }
    @if (ViewData.ContainsKey("code"))
    {

    }
    <h3>Generated Code</h3>
    <div id="csharpcontainer" style="width:100%; max-width:unset;height:600px;border:1px solid grey"></div>
    <script>
        require(['vs/editor/editor.main'], function () {
            var csharpcnt = document.getElementById('csharpcontainer');
            var editor = monaco.editor.create(csharpcnt, {
                value: csharpcnt.dataset.code,
                language: 'csharp',
                readOnly: true
            });
        });
    </script>

</div>