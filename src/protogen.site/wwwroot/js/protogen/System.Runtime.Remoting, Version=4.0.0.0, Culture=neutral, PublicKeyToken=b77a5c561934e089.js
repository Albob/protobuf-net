/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm20 = JSIL.DeclareAssembly("System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Runtime.Remoting.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Runtime.Remoting.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Runtime.Remoting.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2046.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.IO");
/* interface System.IO.IByteBufferPool */ 

JSIL.MakeInterface(
  "System.IO.IByteBufferPool", false, [], function ($) {
    $.Method({}, "GetBuffer", JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte])));
    $.Method({}, "ReturnBuffer", JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte])));
  }, []);

/* class System.IO.ByteBufferAllocator */ 

(function ByteBufferAllocator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.IO.ByteBufferAllocator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetBuffer", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReturnBuffer", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.Field({Static:false, Public:false}, "_bufferSize", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.IO.IByteBufferPool")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.IO.ByteBufferPool */ 

(function ByteBufferPool$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.IO.ByteBufferPool", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetBuffer", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReturnBuffer", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.Field({Static:false, Public:false}, "_bufferPool", $jsilcore.TypeRef("System.Array", [$jsilcore.TypeRef("System.Array", [$.Byte])]));

    $.Field({Static:false, Public:false}, "_current", $.Int32);

    $.Field({Static:false, Public:false}, "_last", $.Int32);

    $.Field({Static:false, Public:false}, "_max", $.Int32);

    $.Field({Static:false, Public:false}, "_bufferSize", $.Int32);

    $.Field({Static:false, Public:false}, "_controlCookie", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.IO.IByteBufferPool")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime");
JSIL.DeclareNamespace("System.Runtime.Remoting");
JSIL.DeclareNamespace("System.Runtime.Remoting.Services");
/* class System.Runtime.Remoting.Services.RemotingClientProxy */ 

(function RemotingClientProxy$Members () {
  var $, $thisType;





























  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Runtime.Remoting.Services.RemotingClientProxy", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ConfigureProxy", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConnectProxy", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowAutoRedirect", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Cookies", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Domain", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnableCookies", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Password", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreAuthenticate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProxyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProxyPort", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Timeout", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Url", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UserAgent", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Username", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AllowAutoRedirect", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Domain", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnableCookies", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Password", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PreAuthenticate", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProxyName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProxyPort", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Timeout", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Url", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UserAgent", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Username", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_tp", $.Object);

    $.Field({Static:false, Public:false}, "_url", $.String);

    $.Property({Static:false, Public:true }, "AllowAutoRedirect", $.Boolean);

    $.Property({Static:false, Public:true }, "Cookies", $.Object);

    $.Property({Static:false, Public:true }, "EnableCookies", $.Boolean);

    $.Property({Static:false, Public:true }, "PreAuthenticate", $.Boolean);

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.Property({Static:false, Public:true }, "Timeout", $.Int32);

    $.Property({Static:false, Public:true }, "Url", $.String);

    $.Property({Static:false, Public:true }, "UserAgent", $.String);

    $.Property({Static:false, Public:true }, "Username", $.String);

    $.Property({Static:false, Public:true }, "Password", $.String);

    $.Property({Static:false, Public:true }, "Domain", $.String);

    $.Property({Static:false, Public:true }, "ProxyName", $.String);

    $.Property({Static:false, Public:true }, "ProxyPort", $.Int32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; });

})();

/* class System.Runtime.Remoting.Services.RemotingService */ 

(function RemotingService$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Runtime.Remoting.Services.RemotingService", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Application", 
      JSIL.MethodSignature.Return($asm28.TypeRef("System.Web.HttpApplicationState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Context", 
      JSIL.MethodSignature.Return($asm28.TypeRef("System.Web.HttpContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Server", 
      JSIL.MethodSignature.Return($asm28.TypeRef("System.Web.HttpServerUtility"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Session", 
      JSIL.MethodSignature.Return($asm28.TypeRef("System.Web.SessionState.HttpSessionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_User", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.IPrincipal"))
    );

    $.Property({Static:false, Public:true }, "Application", $asm28.TypeRef("System.Web.HttpApplicationState"));

    $.Property({Static:false, Public:true }, "Context", $asm28.TypeRef("System.Web.HttpContext"));

    $.Property({Static:false, Public:true }, "Session", $asm28.TypeRef("System.Web.SessionState.HttpSessionState"));

    $.Property({Static:false, Public:true }, "Server", $asm28.TypeRef("System.Web.HttpServerUtility"));

    $.Property({Static:false, Public:true }, "User", $asm07.TypeRef("System.Security.Principal.IPrincipal"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime.Remoting.MetadataServices");
/* class System.Runtime.Remoting.MetadataServices.MetaData */ 

(function MetaData$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.MetaData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertCodeSourceFileToAssemblyFile", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertCodeSourceStreamToAssemblyFile", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.ArrayList"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertSchemaStreamToCodeSourceStream", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Collections.ArrayList"), 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertSchemaStreamToCodeSourceStream", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Collections.ArrayList"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertSchemaStreamToCodeSourceStream", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Collections.ArrayList")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertTypesToSchemaToFile", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertTypesToSchemaToFile", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.ServiceType")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertTypesToSchemaToStream", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertTypesToSchemaToStream", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.ServiceType")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "RetrieveSchemaFromUrlToFile", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "RetrieveSchemaFromUrlToStream", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SaveStreamToFile", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.ServiceType */ 

(function ServiceType$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.ServiceType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ObjectType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Url", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_url", $.String);

    $.Property({Static:false, Public:true }, "ObjectType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Url", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider */ 

(function SdlChannelSinkProvider$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), [$asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetChannelData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelDataStore"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_bRemoteApplicationMetadataEnabled", $.Boolean);

    $.Field({Static:false, Public:false}, "_bMetadataEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.SdlChannelSink */ 

(function SdlChannelSink$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.SdlChannelSink", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSdl", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MetadataEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RemoteApplicationMetadataEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_MetadataEnabled", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_RemoteApplicationMetadataEnabled", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupUrlBashingForIisIfNecessary", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupUrlBashingForIisIfNecessaryWorker", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldIntercept", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $jsilcore.TypeRef("JSIL.Reference", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType")])])
    );

    $.Field({Static:false, Public:false}, "_receiver", $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"));

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_bRemoteApplicationMetadataEnabled", $.Boolean);

    $.Field({Static:false, Public:false}, "_bMetadataEnabled", $.Boolean);

    $.Property({Static:false, Public:false}, "RemoteApplicationMetadataEnabled", $.Boolean);

    $.Property({Static:false, Public:false}, "MetadataEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.SUDSParserException */ 

(function SUDSParserException$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Runtime.Remoting.MetadataServices.SUDSParserException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.SchemaBlockType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.SchemaBlockType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    ALL: 0, 
    SEQUENCE: 1, 
    CHOICE: 2, 
    ComplexContent: 3, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.SUDSParser */ 

(function SUDSParser$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.SUDSParser", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextReader"), $.String, 
          $asm07.TypeRef("System.Collections.ArrayList"), $.String, 
          $.Boolean, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Parse", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "wsdlParser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.SUDSGeneratorException */ 

(function SUDSGeneratorException$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Runtime.Remoting.MetadataServices.SUDSGeneratorException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.SUDSGenerator */ 

(function SUDSGenerator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.SUDSGenerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.TextWriter")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.ServiceType")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.TextWriter")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Generate", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "wsdlGenerator", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator"));

    $.Field({Static:false, Public:false}, "sdlType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.SdlType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.SdlType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Sdl: 0, 
    Wsdl: 1, 
  }
);

/* enum System.Runtime.Remoting.MetadataServices.UrtType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.UrtType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Interop: 1, 
    UrtSystem: 2, 
    UrtUser: 3, 
    Xsd: 4, 
  }
);

/* enum System.Runtime.Remoting.MetadataServices.SUDSType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.SUDSType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    ClientProxy: 1, 
    MarshalByRef: 2, 
  }
);

/* enum System.Runtime.Remoting.MetadataServices.XsdVersion */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.XsdVersion", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    V1999: 0, 
    V2000: 1, 
    V2001: 2, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.SudsConverter */ 

(function SudsConverter$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Runtime.Remoting.MetadataServices.SudsConverter", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "GetXsdVersion", 
      new JSIL.MethodSignature($.String, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.XsdVersion")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXsiVersion", 
      new JSIL.MethodSignature($.String, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.XsdVersion")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapClrTypeToXsdType", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapXsdToClrTypes", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.Field({Static:true , Public:false}, "Xsd1999", $.String, "http://www.w3.org/1999/XMLSchema");

    $.Field({Static:true , Public:false}, "Xsi1999", $.String, "http://www.w3.org/1999/XMLSchema-instance");

    $.Field({Static:true , Public:false}, "Xsd2000", $.String, "http://www.w3.org/2000/10/XMLSchema");

    $.Field({Static:true , Public:false}, "Xsi2000", $.String, "http://www.w3.org/2000/10/XMLSchema-instance");

    $.Field({Static:true , Public:false}, "Xsd2001", $.String, "http://www.w3.org/2001/XMLSchema");

    $.Field({Static:true , Public:false}, "Xsi2001", $.String, "http://www.w3.org/2001/XMLSchema-instance");

    $.Field({Static:true , Public:false}, "typeofByte", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Byte.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSByte", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.SByte.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofBoolean", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Boolean.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofChar", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Char.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofDouble", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Double.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSingle", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Single.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofDecimal", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Decimal.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofInt16", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Int16.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofInt32", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Int32.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofInt64", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Int64.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofUInt16", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.UInt16.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofUInt32", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.UInt32.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofUInt64", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.UInt64.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapTime", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapDate", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapYearMonth", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapYear", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapMonthDay", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapDay", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapMonth", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapHexBinary", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapBase64Binary", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapInteger", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapPositiveInteger", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNonPositiveInteger", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNonNegativeInteger", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNegativeInteger", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapAnyUri", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapQName", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNotation", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNormalizedString", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapToken", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapLanguage", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapName", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapIdrefs", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapEntities", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNmtoken", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNmtokens", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapNcName", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapId", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapIdref", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofSoapEntity", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofString", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.String.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofObject", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Object.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofVoid", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Void.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofDateTime", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.DateTime.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofTimeSpan", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.TimeSpan.__Type__;
      });

    $.Field({Static:true , Public:false}, "typeofISoapXsd", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd.__Type__;
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.Util */ 

(function Util$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Runtime.Remoting.MetadataServices.Util", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "Log", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_LOGGING"]; });

    $.ExternalMethod({Static:true , Public:false}, "LogInput", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.TextReader")]))
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_LOGGING"]; });

    $.ExternalMethod({Static:true , Public:false}, "LogString", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_LOGGING"]; });

    $.Field({Static:true , Public:false}, "writer", $asm07.TypeRef("System.IO.StreamWriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser */ 

(function WsdlParser$Members () {
  var $, $thisType;













































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextReader"), $.String, 
          $asm07.TypeRef("System.Collections.ArrayList"), $.String, 
          $.Boolean, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNamespace", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNewNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Atomize", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckValidIdentifier", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreatePrimedNametable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DumpWsdl", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_LOGGING"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ProxyNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ProxyNamespaceCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SchemaNamespaceString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_XMLReader", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlTextReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeString", 
      new JSIL.MethodSignature($.String, [
          $.String, $.Boolean, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitKeywords", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "IsCSharpKeyword", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsPrimitiveType", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsURTExportedType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.UrtType"), [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidCS", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidCSAttr", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidLanguageIndependentIdentifier", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidUrl", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupAttribute", 
      new JSIL.MethodSignature($.String, [
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "MapSchemaTypesToCSharpTypes", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchingNamespace", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchingSchemaNamespace", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchingSchemaStrings", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "MatchingStrings", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Parse", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseAttributeField", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseComplexType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseElementDecl", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseElementField", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseEnumeration", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseImport", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseImportedSchema", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseImportedSchemaController", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseInput", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseNamespace", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseQName", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseQName", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseQName", 
      new JSIL.MethodSignature($.String, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseReaderStreamLocation", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseRestrictionField", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseSchema", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseSchemaImportElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseSchemaImportElement", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseSchemaIncludeElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseSimpleType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdl", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlBinding", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlBindingOperation", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperation"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlBindingOperationSection", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperationSection"), [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperation"), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlBindingSuds", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlPortType", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlPortTypeOperationContent", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortType"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortTypeOperation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlService", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlServicePort", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlServicePort"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ParseWsdlTypes", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessSudsUse", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "PruneNamespaces", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Qualify", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadNextXmlElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveTypeAttribute", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveTypeNames", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdl", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlAddress", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ArrayList"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlClass", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlInterface", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlMethodInfo", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ArrayList"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlNestedType", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds"), 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSudsNestedType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ProxyNamespaceCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "SkipXmlElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "StartWsdlResolution", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "vsb", $asm07.TypeRef("System.Text.StringBuilder"));

    $.Field({Static:true , Public:false}, "cSharpKeywords", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_XMLReader", $asm2F.TypeRef("System.Xml.XmlTextReader"));

    $.Field({Static:false, Public:false}, "_URTNamespaces", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_parsingInput", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"));

    $.Field({Static:false, Public:false}, "_bWrappedProxy", $.Boolean);

    $.Field({Static:false, Public:false}, "_proxyNamespace", $.String);

    $.Field({Static:false, Public:false}, "_proxyNamespaceCount", $.Int32);

    $.Field({Static:false, Public:false}, "_readerStreamsWsdl", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"));

    $.Field({Static:false, Public:false}, "_readerStreamsXsd", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream"));

    $.Field({Static:false, Public:false}, "_outputDir", $.String);

    $.Field({Static:false, Public:false}, "_outCodeStreamList", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_writerStreams", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WriterStream"));

    $.Field({Static:false, Public:false}, "_blockDefault", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"));

    $.Field({Static:false, Public:false}, "_xsdVersion", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.XsdVersion"));

    $.Field({Static:false, Public:false}, "wsdlMessages", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "wsdlPortTypes", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "wsdlBindings", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "wsdlServices", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_currentReaderStack", $asm07.TypeRef("System.Collections.Stack"));

    $.Field({Static:false, Public:false}, "_currentSchemaReaderStack", $asm07.TypeRef("System.Collections.Stack"));

    $.Field({Static:false, Public:false}, "_primedNametable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Field({Static:true , Public:false}, "s_emptyString", $.String);

    $.Field({Static:true , Public:false}, "s_complexTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_simpleTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_elementString", $.String);

    $.Field({Static:true , Public:false}, "s_enumerationString", $.String);

    $.Field({Static:true , Public:false}, "s_encodingString", $.String);

    $.Field({Static:true , Public:false}, "s_attributeString", $.String);

    $.Field({Static:true , Public:false}, "s_attributesString", $.String);

    $.Field({Static:true , Public:false}, "s_allString", $.String);

    $.Field({Static:true , Public:false}, "s_sequenceString", $.String);

    $.Field({Static:true , Public:false}, "s_choiceString", $.String);

    $.Field({Static:true , Public:false}, "s_minOccursString", $.String);

    $.Field({Static:true , Public:false}, "s_maxOccursString", $.String);

    $.Field({Static:true , Public:false}, "s_unboundedString", $.String);

    $.Field({Static:true , Public:false}, "s_oneString", $.String);

    $.Field({Static:true , Public:false}, "s_zeroString", $.String);

    $.Field({Static:true , Public:false}, "s_nameString", $.String);

    $.Field({Static:true , Public:false}, "s_enumTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_typeString", $.String);

    $.Field({Static:true , Public:false}, "s_baseString", $.String);

    $.Field({Static:true , Public:false}, "s_valueString", $.String);

    $.Field({Static:true , Public:false}, "s_interfaceString", $.String);

    $.Field({Static:true , Public:false}, "s_serviceString", $.String);

    $.Field({Static:true , Public:false}, "s_extendsString", $.String);

    $.Field({Static:true , Public:false}, "s_addressesString", $.String);

    $.Field({Static:true , Public:false}, "s_addressString", $.String);

    $.Field({Static:true , Public:false}, "s_uriString", $.String);

    $.Field({Static:true , Public:false}, "s_implementsString", $.String);

    $.Field({Static:true , Public:false}, "s_nestedTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_requestString", $.String);

    $.Field({Static:true , Public:false}, "s_responseString", $.String);

    $.Field({Static:true , Public:false}, "s_requestResponseString", $.String);

    $.Field({Static:true , Public:false}, "s_messageString", $.String);

    $.Field({Static:true , Public:false}, "s_locationString", $.String);

    $.Field({Static:true , Public:false}, "s_schemaLocationString", $.String);

    $.Field({Static:true , Public:false}, "s_importString", $.String);

    $.Field({Static:true , Public:false}, "s_includeString", $.String);

    $.Field({Static:true , Public:false}, "s_onewayString", $.String);

    $.Field({Static:true , Public:false}, "s_refString", $.String);

    $.Field({Static:true , Public:false}, "s_refTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_referenceString", $.String);

    $.Field({Static:true , Public:false}, "s_arrayString", $.String);

    $.Field({Static:true , Public:false}, "s_objectString", $.String);

    $.Field({Static:true , Public:false}, "s_urTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_methodString", $.String);

    $.Field({Static:true , Public:false}, "s_sudsString", $.String);

    $.Field({Static:true , Public:false}, "s_useString", $.String);

    $.Field({Static:true , Public:false}, "s_rootTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_soapString", $.String);

    $.Field({Static:true , Public:false}, "s_serviceDescString", $.String);

    $.Field({Static:true , Public:false}, "s_schemaString", $.String);

    $.Field({Static:true , Public:false}, "s_targetNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_namespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_idString", $.String);

    $.Field({Static:true , Public:false}, "s_soapActionString", $.String);

    $.Field({Static:true , Public:false}, "s_instanceNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_schemaNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_instanceNamespaceString1999", $.String);

    $.Field({Static:true , Public:false}, "s_schemaNamespaceString1999", $.String);

    $.Field({Static:true , Public:false}, "s_instanceNamespaceString2000", $.String);

    $.Field({Static:true , Public:false}, "s_schemaNamespaceString2000", $.String);

    $.Field({Static:true , Public:false}, "s_soapNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_sudsNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_serviceNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_definitionsString", $.String);

    $.Field({Static:true , Public:false}, "s_wsdlNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_wsdlSoapNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_wsdlSudsNamespaceString", $.String);

    $.Field({Static:true , Public:false}, "s_typesString", $.String);

    $.Field({Static:true , Public:false}, "s_partString", $.String);

    $.Field({Static:true , Public:false}, "s_portTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_operationString", $.String);

    $.Field({Static:true , Public:false}, "s_inputString", $.String);

    $.Field({Static:true , Public:false}, "s_outputString", $.String);

    $.Field({Static:true , Public:false}, "s_bindingString", $.String);

    $.Field({Static:true , Public:false}, "s_classString", $.String);

    $.Field({Static:true , Public:false}, "s_structString", $.String);

    $.Field({Static:true , Public:false}, "s_ISerializableString", $.String);

    $.Field({Static:true , Public:false}, "s_marshalByRefString", $.String);

    $.Field({Static:true , Public:false}, "s_delegateString", $.String);

    $.Field({Static:true , Public:false}, "s_servicedComponentString", $.String);

    $.Field({Static:true , Public:false}, "s_comObjectString", $.String);

    $.Field({Static:true , Public:false}, "s_portString", $.String);

    $.Field({Static:true , Public:false}, "s_styleString", $.String);

    $.Field({Static:true , Public:false}, "s_transportString", $.String);

    $.Field({Static:true , Public:false}, "s_encodedString", $.String);

    $.Field({Static:true , Public:false}, "s_faultString", $.String);

    $.Field({Static:true , Public:false}, "s_bodyString", $.String);

    $.Field({Static:true , Public:false}, "s_partsString", $.String);

    $.Field({Static:true , Public:false}, "s_headerString", $.String);

    $.Field({Static:true , Public:false}, "s_encodingStyleString", $.String);

    $.Field({Static:true , Public:false}, "s_restrictionString", $.String);

    $.Field({Static:true , Public:false}, "s_complexContentString", $.String);

    $.Field({Static:true , Public:false}, "s_soapEncodingString", $.String);

    $.Field({Static:true , Public:false}, "s_arrayTypeString", $.String);

    $.Field({Static:true , Public:false}, "s_parameterOrderString", $.String);

    $.Property({Static:false, Public:false}, "SchemaNamespaceString", $.String);

    $.Property({Static:false, Public:false}, "ProxyNamespace", $.String);

    $.Property({Static:false, Public:false}, "ProxyNamespaceCount", $.Int32);

    $.Property({Static:false, Public:false}, "XMLReader", $asm2F.TypeRef("System.Xml.XmlTextReader"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream */ 

(function ReaderStream$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+ReaderStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InputStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.TextReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Location", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TargetNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UniqueNS", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Uri", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNextReaderStream", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetReaderStream", 
      new JSIL.MethodSignature(null, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_InputStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Location", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_TargetNS", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_UniqueNS", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Uri", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Uri"))
    );

    $.Field({Static:false, Public:false}, "_location", $.String);

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_targetNS", $.String);

    $.Field({Static:false, Public:false}, "_uniqueNS", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Field({Static:false, Public:false}, "_reader", $asm07.TypeRef("System.IO.TextReader"));

    $.Field({Static:false, Public:false}, "_next", $.Type);

    $.Field({Static:false, Public:false}, "_uri", $asm0A.TypeRef("System.Uri"));

    $.Property({Static:false, Public:false}, "Location", $.String);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "TargetNS", $.String);

    $.Property({Static:false, Public:false}, "UniqueNS", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Property({Static:false, Public:false}, "InputStream", $asm07.TypeRef("System.IO.TextReader"));

    $.Property({Static:false, Public:false}, "Uri", $asm0A.TypeRef("System.Uri"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WriterStream */ 

(function WriterStream$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WriterStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.IO.TextWriter")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Close", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "Flush", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OutputStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.TextWriter"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetWriterStream", 
      new JSIL.MethodSignature($.Type, [
          $jsilcore.TypeRef("JSIL.Reference", [$.Type]), $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetWrittenTo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetWrittenTo", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_fileName", $.String);

    $.Field({Static:false, Public:false}, "_writer", $asm07.TypeRef("System.IO.TextWriter"));

    $.Field({Static:false, Public:false}, "_next", $.Type);

    $.Field({Static:false, Public:false}, "_bWrittenTo", $.Boolean);

    $.Property({Static:false, Public:false}, "OutputStream", $asm07.TypeRef("System.IO.TextWriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    IN: 0, 
    OUT: 1, 
    REF: 2, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam */ 

(function URTParam$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType"), $.Boolean, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ParamType", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeString", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Text.StringBuilder"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ParamType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType"))
    );

    $.Field({Static:true , Public:false}, "PTypeString", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_typeName", $.String);

    $.Field({Static:false, Public:false}, "_typeNS", $.String);

    $.Field({Static:false, Public:false}, "_encodedNS", $.String);

    $.Field({Static:false, Public:false}, "_pType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType"));

    $.Field({Static:false, Public:false}, "_embeddedParam", $.Boolean);

    $.Field({Static:false, Public:false}, "_urtNamespace", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Property({Static:false, Public:false}, "ParamType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParamType"));

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "TypeName", $.String);

    $.Property({Static:false, Public:false}, "TypeNS", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    PrintBody: 1, 
    InterfaceMethods: 2, 
    InterfaceInClass: 4, 
  }
);

/* enum System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    Public: 1, 
    Protected: 2, 
    Override: 4, 
    New: 8, 
    Virtual: 16, 
    Internal: 32, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod */ 

(function URTMethod$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddParam", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindMethodAttributes", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FlagTest", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MethodFlags", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MethodType", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SoapAction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMethodFlags", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), [$asm07.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeString", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsSignature", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodBase")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MethodFlagsTest", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum"), $.Boolean, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintMethodName", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Text.StringBuilder"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintPropertyBody", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $asm07.TypeRef("System.Text.StringBuilder"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintSignature", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintSoapAction", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Text.StringBuilder")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveMethodAttributes", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveWsdlParams", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"), $.String, 
          $.String, $.Boolean, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_MethodFlags", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValueString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.Field({Static:false, Public:false}, "_methodName", $.String);

    $.Field({Static:false, Public:false}, "_soapAction", $.String);

    $.Field({Static:false, Public:false}, "_methodType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam"));

    $.Field({Static:false, Public:false}, "_complexType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"));

    $.Field({Static:false, Public:false}, "_paramNamesOrder", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_params", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_paramPosition", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_methodFlags", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"));

    $.Field({Static:false, Public:false}, "_wsdlMethodInfo", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo"));

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "SoapAction", $.String);

    $.Property({Static:false, Public:false}, "MethodFlags", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"));

    $.Property({Static:false, Public:false}, "MethodType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTParam"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+RRMethod */ 

(function RRMethod$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+RRMethod", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddRequest", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddResponse", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum"), $.Boolean, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.Field({Static:false, Public:false}, "_requestElementName", $.String);

    $.Field({Static:false, Public:false}, "_requestElementNS", $.String);

    $.Field({Static:false, Public:false}, "_responseElementName", $.String);

    $.Field({Static:false, Public:false}, "_responseElementNS", $.String);

    $.Field({Static:false, Public:false}, "_wsdlMethodInfo", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+OnewayMethod */ 

(function OnewayMethod$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+OnewayMethod", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddMessage", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodPrintEnum"), $.Boolean, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.Field({Static:false, Public:false}, "_messageElementName", $.String);

    $.Field({Static:false, Public:false}, "_messageElementNS", $.String);

    $.Field({Static:false, Public:false}, "_wsdlMethodInfo", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+BaseInterface */ 

(function BaseInterface$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+BaseInterface", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsURTInterface", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UrlNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintClassMethods", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Collections.ArrayList"), 
          $.Boolean, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_urlNS", $.String);

    $.Field({Static:false, Public:false}, "_namespace", $.String);

    $.Field({Static:false, Public:false}, "_encodedNS", $.String);

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "UrlNS", $.String);

    $.Property({Static:false, Public:false}, "Namespace", $.String);

    $.Property({Static:false, Public:false}, "IsURTInterface", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+SystemInterface */ 

(function SystemInterface$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseInterface"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+SystemInterface", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CSharpTypeString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintClassMethods", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Collections.ArrayList"), 
          $.Boolean, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTInterface */ 

(function URTInterface$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseInterface"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTInterface", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddMethod", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckIfNewNeeded", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Extends", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "NewNeeded", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintClassMethods", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Collections.ArrayList"), 
          $.Boolean, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Field({Static:false, Public:false}, "_baseIFaces", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_baseIFaceNames", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_methods", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_extendsInterface", $asm07.TypeRef("System.Collections.ArrayList"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTField */ 

(function URTField$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTField", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 11, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"), 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean, 
          $.Boolean, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsArray", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsPrimitive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeString", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_typeName", $.String);

    $.Field({Static:false, Public:false}, "_typeNS", $.String);

    $.Field({Static:false, Public:false}, "_encodedNS", $.String);

    $.Field({Static:false, Public:false}, "_primitiveField", $.Boolean);

    $.Field({Static:false, Public:false}, "_embeddedField", $.Boolean);

    $.Field({Static:false, Public:false}, "_attributeField", $.Boolean);

    $.Field({Static:false, Public:false}, "_optionalField", $.Boolean);

    $.Field({Static:false, Public:false}, "_arrayField", $.Boolean);

    $.Field({Static:false, Public:false}, "_arraySize", $.String);

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Field({Static:false, Public:false}, "_urtNamespace", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Property({Static:false, Public:false}, "TypeName", $.String);

    $.Property({Static:false, Public:false}, "TypeNS", $.String);

    $.Property({Static:false, Public:false}, "IsPrimitive", $.Boolean);

    $.Property({Static:false, Public:false}, "IsArray", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+SchemaFacet */ 

(function SchemaFacet$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+SchemaFacet", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+EnumFacet */ 

(function EnumFacet$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SchemaFacet"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+EnumFacet", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.Field({Static:false, Public:false}, "_valueString", $.String);

    $.Field({Static:false, Public:false}, "_value", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType */ 

(function BaseType$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_bNestedType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_bNestedTypePrint", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsEmittableFieldType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsURTType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NestedTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PrimitiveField", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SearchName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UrlNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMethodFlags", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_bNestedType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_bNestedTypePrint", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ElementName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ElementNS", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FullNestedTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_NestedTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OuterTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SearchName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_searchName", $.String);

    $.Field({Static:false, Public:false}, "_urlNS", $.String);

    $.Field({Static:false, Public:false}, "_namespace", $.String);

    $.Field({Static:false, Public:false}, "_elementName", $.String);

    $.Field({Static:false, Public:false}, "_elementNS", $.String);

    $.Field({Static:false, Public:false}, "_encodedNS", $.String);

    $.Field({Static:false, Public:false}, "_nestedTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_nestedTypeName", $.String);

    $.Field({Static:false, Public:false}, "_fullNestedTypeName", $.String);

    $.Field({Static:false, Public:false}, "_outerTypeName", $.String);

    $.Field({Static:false, Public:false}, "_bNestedType", $.Boolean);

    $.Field({Static:false, Public:false}, "_bNestedTypePrint", $.Boolean);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "SearchName", $.String);

    $.Property({Static:false, Public:false}, "OuterTypeName", $.String);

    $.Property({Static:false, Public:false}, "NestedTypeName", $.String);

    $.Property({Static:false, Public:false}, "FullNestedTypeName", $.String);

    $.Property({Static:false, Public:false}, "bNestedType", $.Boolean);

    $.Property({Static:false, Public:false}, "bNestedTypePrint", $.Boolean);

    $.Property({Static:false, Public:false}, "UrlNS", $.String);

    $.Property({Static:false, Public:false}, "Namespace", $.String);

    $.Property({Static:false, Public:false}, "ElementName", $.String);

    $.Property({Static:false, Public:false}, "ElementNS", $.String);

    $.Property({Static:false, Public:false}, "IsURTType", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "IsEmittableFieldType", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldNamespace", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "PrimitiveField", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+SystemType */ 

(function SystemType$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+SystemType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsEmittableFieldType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PrimitiveField", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMethodFlags", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod")])
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsEmittableFieldType", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldNamespace", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "PrimitiveField", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType */ 

(function URTSimpleType$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddFacet", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SchemaFacet"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Extends", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsEmittableFieldType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEnum", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PrimitiveField", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMethodFlags", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "MapToEnumType", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_EnumType", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsEnum", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "_baseTypeName", $.String);

    $.Field({Static:false, Public:false}, "_baseTypeXmlNS", $.String);

    $.Field({Static:false, Public:false}, "_baseType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"));

    $.Field({Static:false, Public:false}, "_fieldString", $.String);

    $.Field({Static:false, Public:false}, "_bEnum", $.Boolean);

    $.Field({Static:false, Public:false}, "_bAnonymous", $.Boolean);

    $.Field({Static:false, Public:false}, "_encoding", $.String);

    $.Field({Static:false, Public:false}, "_facets", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_enumType", $.String);

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Property({Static:false, Public:false}, "IsEnum", $.Boolean);

    $.Property({Static:false, Public:false}, "EnumType", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "IsEmittableFieldType", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldNamespace", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "PrimitiveField", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType */ 

(function URTComplexType$Members () {
  var $, $thisType;










































  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"), $.Boolean, 
          $.Boolean, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"), 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddArray", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddField", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTField"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddMethod", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNestedType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Extends", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "FilterDimensions", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_FieldNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Fields", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ArrayList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Inherit", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ArrayList"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsEmittableFieldType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsPrint", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSUDSType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PrimitiveField", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SUDSType", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SUDSType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SudsUse", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_WireType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetArray", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetArrayNS", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMethod", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMethodFlags", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+MethodFlags"), [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTMethod")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Implements", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsArray", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintClientProxy", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintISerializable", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $.String, 
          $.String, $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveArray", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveMethods", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BlockType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ConnectURLs", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ArrayList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Inherit", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ArrayList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsPrint", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsStruct", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsSUDSType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsValueType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SUDSType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SUDSType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SudsUse", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"))
    );

    $.Field({Static:false, Public:false}, "_baseTypeName", $.String);

    $.Field({Static:false, Public:false}, "_baseTypeXmlNS", $.String);

    $.Field({Static:false, Public:false}, "_baseType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"));

    $.Field({Static:false, Public:false}, "_connectURLs", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_bStruct", $.Boolean);

    $.Field({Static:false, Public:false}, "_blockType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"));

    $.Field({Static:false, Public:false}, "_bSUDSType", $.Boolean);

    $.Field({Static:false, Public:false}, "_bAnonymous", $.Boolean);

    $.Field({Static:false, Public:false}, "_wireType", $.String);

    $.Field({Static:false, Public:false}, "_inherit", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_fieldString", $.String);

    $.Field({Static:false, Public:false}, "_implIFaceNames", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_implIFaces", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_fields", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_methods", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_sudsType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SUDSType"));

    $.Field({Static:false, Public:false}, "_sudsUse", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"));

    $.Field({Static:false, Public:false}, "_bValueType", $.Boolean);

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Field({Static:false, Public:false}, "_arrayType", $.String);

    $.Field({Static:false, Public:false}, "_arrayNS", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Field({Static:false, Public:false}, "_clrarray", $.String);

    $.Field({Static:false, Public:false}, "_bprint", $.Boolean);

    $.Field({Static:false, Public:false}, "_bNameMethodConflict", $.Boolean);

    $.Property({Static:false, Public:false}, "ConnectURLs", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Property({Static:false, Public:false}, "IsStruct", $.Boolean);

    $.Property({Static:false, Public:false}, "IsSUDSType", $.Boolean);

    $.Property({Static:false, Public:false}, "SUDSType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SUDSType"));

    $.Property({Static:false, Public:false}, "SudsUse", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"));

    $.Property({Static:false, Public:false}, "IsValueType", $.Boolean);

    $.Property({Static:false, Public:false}, "BlockType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"));

    $.Property({Static:false, Public:false}, "WireType", $.String);

    $.Property({Static:false, Public:false}, "Inherit", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Property({Static:false, Public:false}, "IsPrint", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "IsEmittableFieldType", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "FieldNamespace", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "PrimitiveField", $.Boolean);

    $.Property({Static:false, Public:false}, "Fields", $asm07.TypeRef("System.Collections.ArrayList"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+ElementDecl */ 

(function ElementDecl$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+ElementDecl", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypeNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")])
    );

    $.Field({Static:false, Public:false}, "_elmName", $.String);

    $.Field({Static:false, Public:false}, "_elmNS", $.String);

    $.Field({Static:false, Public:false}, "_typeName", $.String);

    $.Field({Static:false, Public:false}, "_typeNS", $.String);

    $.Field({Static:false, Public:false}, "_bPrimitive", $.Boolean);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "Namespace", $.String);

    $.Property({Static:false, Public:false}, "TypeName", $.String);

    $.Property({Static:false, Public:false}, "TypeNS", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace */ 

(function URTNamespace$Members () {
  var $, $thisType;































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddComplexType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddElementDecl", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+ElementDecl"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddInterface", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTInterface"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddSimpleType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ComplexTypeOnlyArrayorEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "EncodeInterop", 
      new JSIL.MethodSignature($.String, [$.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AssemName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_bReferenced", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EncodedNS", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSystem", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsURTNamespace", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UrtType", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.UrtType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNextAnonymousName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupComplexType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupComplexTypeEqual", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupInterface", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTInterface"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupSimpleType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+BaseType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintCSC", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WriterStream"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveComplexType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTComplexType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveSimpleType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTSimpleType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveElements", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveMethods", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_bReferenced", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_EncodedNS", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_nsType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.UrtType"));

    $.Field({Static:false, Public:false}, "_parser", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser"));

    $.Field({Static:false, Public:false}, "_namespace", $.String);

    $.Field({Static:false, Public:false}, "_encodedNS", $.String);

    $.Field({Static:false, Public:false}, "_assemName", $.String);

    $.Field({Static:false, Public:false}, "_anonymousSeqNum", $.Int32);

    $.Field({Static:false, Public:false}, "_elmDecls", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_URTComplexTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_numURTComplexTypes", $.Int32);

    $.Field({Static:false, Public:false}, "_URTSimpleTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_numURTSimpleTypes", $.Int32);

    $.Field({Static:false, Public:false}, "_URTInterfaces", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_bReferenced", $.Boolean);

    $.Property({Static:false, Public:false}, "Namespace", $.String);

    $.Property({Static:false, Public:false}, "IsSystem", $.Boolean);

    $.Property({Static:false, Public:false}, "EncodedNS", $.String);

    $.Property({Static:false, Public:false}, "bReferenced", $.Boolean);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "AssemName", $.String);

    $.Property({Static:false, Public:false}, "UrtType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.UrtType"));

    $.Property({Static:false, Public:false}, "IsURTNamespace", $.Boolean);

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Runtime.Remoting.MetadataServices.WsdlParser+IDump */ 

JSIL.MakeInterface(
  "System.Runtime.Remoting.MetadataServices.WsdlParser+IDump", false, [], function ($) {
    $.Method({}, "Dump", JSIL.MethodSignature.Void);
  }, []);

/* interface System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces */ 

JSIL.MakeInterface(
  "System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces", false, [], function ($) {
    $.Method({}, "UsedNamespace", JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable")));
  }, []);

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMessage */ 

(function WsdlMessage$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "parts", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMessagePart */ 

(function WsdlMessagePart$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMessagePart", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "element", $.String);

    $.Field({Static:false, Public:false}, "elementNs", $.String);

    $.Field({Static:false, Public:false}, "typeName", $.String);

    $.Field({Static:false, Public:false}, "typeNameNs", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortType */ 

(function WsdlPortType$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "operations", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "sections", $asm07.TypeRef("System.Collections.Hashtable"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortTypeOperation */ 

(function WsdlPortTypeOperation$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortTypeOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "parameterOrder", $.String);

    $.Field({Static:false, Public:false}, "contents", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortTypeOperationContent */ 

(function WsdlPortTypeOperationContent$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlPortTypeOperationContent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "element", $.String);

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "message", $.String);

    $.Field({Static:false, Public:false}, "messageNs", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding */ 

(function WsdlBinding$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBinding", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "parsingNamespace", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+URTNamespace"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "type", $.String);

    $.Field({Static:false, Public:false}, "typeNs", $.String);

    $.Field({Static:false, Public:false}, "suds", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "soapBinding", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapBinding"));

    $.Field({Static:false, Public:false}, "operations", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperation */ 

(function WsdlBindingOperation$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "methodAttributes", $.String);

    $.Field({Static:false, Public:false}, "soapOperation", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapOperation"));

    $.Field({Static:false, Public:false}, "sections", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperationSection */ 

(function WsdlBindingOperationSection$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingOperationSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "elementName", $.String);

    $.Field({Static:false, Public:false}, "extensions", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapBinding */ 

(function WsdlBindingSoapBinding$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapBinding", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "style", $.String);

    $.Field({Static:false, Public:false}, "transport", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapBody */ 

(function WsdlBindingSoapBody$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapBody", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "parts", $.String);

    $.Field({Static:false, Public:false}, "use", $.String);

    $.Field({Static:false, Public:false}, "encodingStyle", $.String);

    $.Field({Static:false, Public:false}, "namespaceUri", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapHeader */ 

(function WsdlBindingSoapHeader$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapHeader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "message", $.String);

    $.Field({Static:false, Public:false}, "messageNs", $.String);

    $.Field({Static:false, Public:false}, "part", $.String);

    $.Field({Static:false, Public:false}, "use", $.String);

    $.Field({Static:false, Public:false}, "encodingStyle", $.String);

    $.Field({Static:false, Public:false}, "namespaceUri", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapOperation */ 

(function WsdlBindingSoapOperation$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "soapAction", $.String);

    $.Field({Static:false, Public:false}, "style", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapFault */ 

(function WsdlBindingSoapFault$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSoapFault", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "use", $.String);

    $.Field({Static:false, Public:false}, "encodingStyle", $.String);

    $.Field({Static:false, Public:false}, "namespaceUri", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Class: 0, 
    ISerializable: 1, 
    Struct: 2, 
    Interface: 3, 
    MarshalByRef: 4, 
    Delegate: 5, 
    ServicedComponent: 6, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds */ 

(function WsdlBindingSuds$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSuds", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "elementName", $.String);

    $.Field({Static:false, Public:false}, "typeName", $.String);

    $.Field({Static:false, Public:false}, "ns", $.String);

    $.Field({Static:false, Public:false}, "extendsTypeName", $.String);

    $.Field({Static:false, Public:false}, "extendsNs", $.String);

    $.Field({Static:false, Public:false}, "sudsUse", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+SudsUse"));

    $.Field({Static:false, Public:false}, "$implements", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "nestedTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSudsImplements */ 

(function WsdlBindingSudsImplements$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSudsImplements", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "typeName", $.String);

    $.Field({Static:false, Public:false}, "ns", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSudsNestedType */ 

(function WsdlBindingSudsNestedType$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlBindingSudsNestedType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "typeName", $.String);

    $.Field({Static:false, Public:false}, "ns", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlService */ 

(function WsdlService$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlService", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "ports", $asm07.TypeRef("System.Collections.Hashtable"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlServicePort */ 

(function WsdlServicePort$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlServicePort", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UsedNamespace", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameNs", $.String);

    $.Field({Static:false, Public:false}, "binding", $.String);

    $.Field({Static:false, Public:false}, "bindingNs", $.String);

    $.Field({Static:false, Public:false}, "locations", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump"), 
      /* 1 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+INamespaces")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo */ 

(function WsdlMethodInfo$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlParser+WsdlMethodInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dump", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "soapAction", $.String);

    $.Field({Static:false, Public:false}, "methodName", $.String);

    $.Field({Static:false, Public:false}, "methodNameNs", $.String);

    $.Field({Static:false, Public:false}, "methodAttributes", $.String);

    $.Field({Static:false, Public:false}, "paramNamesOrder", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputMethodName", $.String);

    $.Field({Static:false, Public:false}, "inputMethodNameNs", $.String);

    $.Field({Static:false, Public:false}, "outputMethodName", $.String);

    $.Field({Static:false, Public:false}, "outputMethodNameNs", $.String);

    $.Field({Static:false, Public:false}, "inputNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputNamesNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputElements", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputElementsNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputTypes", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "inputTypesNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputNamesNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputElements", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputElementsNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputTypes", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "outputTypesNs", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "propertyName", $.String);

    $.Field({Static:false, Public:false}, "bProperty", $.Boolean);

    $.Field({Static:false, Public:false}, "bGet", $.Boolean);

    $.Field({Static:false, Public:false}, "bSet", $.Boolean);

    $.Field({Static:false, Public:false}, "propertyType", $.String);

    $.Field({Static:false, Public:false}, "propertyNs", $.String);

    $.Field({Static:false, Public:false}, "soapActionGet", $.String);

    $.Field({Static:false, Public:false}, "soapActionSet", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlParser+IDump")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator */ 

(function WsdlGenerator$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm07.TypeRef("System.IO.TextWriter")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.TextWriter")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm07.TypeRef("System.IO.TextWriter"), 
          $asm07.TypeRef("System.Reflection.Assembly"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Reflection.Assembly"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.ServiceType")]), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SdlType"), 
          $asm07.TypeRef("System.IO.TextWriter")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), [$.String, $asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), [
          $.String, $asm07.TypeRef("System.Reflection.Assembly"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddType", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnqueueReachableTypes", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnqueueType", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Generate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNSAndAssembly", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Reflection.Assembly")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IndentP", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupNamespace", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), [$.String, $asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintServiceWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $asm07.TypeRef("System.Collections.ArrayList")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintTypesBeginWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintTypesEndWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintWsdl", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintWsdlNamespaces", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessMethods", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessTypeAttributes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "QualifyName", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Text.StringBuilder"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RefName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UrlEncode", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.Field({Static:false, Public:false}, "_textWriter", $asm07.TypeRef("System.IO.TextWriter"));

    $.Field({Static:false, Public:false}, "_queue", $asm07.TypeRef("System.Collections.Queue"));

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_targetNS", $.String);

    $.Field({Static:false, Public:false}, "_targetNSPrefix", $.String);

    $.Field({Static:false, Public:false}, "_namespaces", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_dynamicAssembly", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Field({Static:false, Public:false}, "_serviceEndpoint", $.String);

    $.Field({Static:false, Public:false}, "_xsdVersion", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.XsdVersion"));

    $.Field({Static:false, Public:false}, "_typeToServiceEndpoint", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_typeToInteropNS", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "s_marshalByRefType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.MarshalByRefObject.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_contextBoundType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.ContextBoundObject.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_delegateType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Delegate.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_valueType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.ValueType.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_objectType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Object.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_charType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Char.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_voidType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Void.__Type__;
      });

    $.Field({Static:true , Public:false}, "s_remotingClientProxyType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm20.System.Runtime.Remoting.Services.RemotingClientProxy.__Type__;
      });

    $.Field({Static:true , Public:false}, "blockDefault", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"), function ($pi) {
        return $asm20.System.Runtime.Remoting.MetadataServices.SchemaBlockType.SEQUENCE;
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Runtime.Remoting.MetadataServices.WsdlGenerator+IAbstractElement */ 

JSIL.MakeInterface(
  "System.Runtime.Remoting.MetadataServices.WsdlGenerator+IAbstractElement", false, [], function ($) {
    $.Method({}, "Print", new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ]));
  }, []);

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+EnumElement */ 

(function EnumElement$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+EnumElement", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Print", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "_value", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+IAbstractElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+Particle */ 

(function Particle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+Particle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Print", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+IAbstractElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction */ 

(function Restriction$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+Particle"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddArray", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaAttribute"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Print", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "_baseName", $.String);

    $.Field({Static:false, Public:false}, "_baseNS", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"));

    $.Field({Static:false, Public:false}, "_rtype", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction+RestrictionType"));

    $.Field({Static:false, Public:false}, "_attribute", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaAttribute"));

    $.Field({Static:false, Public:false}, "_abstractElms", $asm07.TypeRef("System.Collections.ArrayList"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction+RestrictionType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction+RestrictionType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Array: 1, 
    Enum: 2, 
  }
);

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaAttribute */ 

(function SchemaAttribute$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddArray", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Print", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "_wireQname", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+IAbstractElement")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaElement */ 

(function SchemaElement$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+Particle"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaElement", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $.Boolean, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Print", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_typeString", $.String);

    $.Field({Static:false, Public:false}, "_schemaType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaType"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaType */ 

(function SchemaType$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintSchemaType", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $.Boolean
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+SimpleSchemaType */ 

(function SimpleSchemaType$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+SimpleSchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BaseName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FullRefName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSimpleSchemaType", 
      new JSIL.MethodSignature($.Type, [
          $asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintSchemaType", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $.Boolean
        ])
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_baseName", $.String);

    $.Field({Static:false, Public:false}, "_xns", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"));

    $.Field({Static:false, Public:false}, "_restriction", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+Restriction"));

    $.Field({Static:false, Public:false}, "_fullRefName", $.String);

    $.Field({Static:false, Public:false}, "_abstractElms", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Property({Static:false, Public:false}, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "FullRefName", $.String);

    $.Property({Static:false, Public:false}, "BaseName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+ComplexSchemaType */ 

(function ComplexSchemaType$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SchemaType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+ComplexSchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddParticle", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+Particle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BaseName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FullRefName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSealed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Init", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintBody", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BaseName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ElementName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_fullRefName", $.String);

    $.Field({Static:false, Public:false}, "_baseName", $.String);

    $.Field({Static:false, Public:false}, "_elementName", $.String);

    $.Field({Static:false, Public:false}, "_bSealed", $.Boolean);

    $.Field({Static:false, Public:false}, "_blockType", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"));

    $.Field({Static:false, Public:false}, "_particles", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_abstractElms", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:true , Public:false}, "schemaBlockBegin", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:true , Public:false}, "schemaBlockEnd", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "FullRefName", $.String);

    $.Property({Static:false, Public:false}, "BaseName", $.String);

    $.Property({Static:false, Public:false}, "ElementName", $.String);

    $.Property({Static:false, Public:false}, "IsSealed", $.Boolean);

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+PhonySchemaType */ 

(function PhonySchemaType$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+ComplexSchemaType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+PhonySchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "OverloadedType", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintSchemaType", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $.Boolean
        ])
    );

    $.Field({Static:false, Public:false}, "_numOverloadedTypes", $.Int32);

    $.Field({Static:false, Public:false}, "_inParamTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_inParamNames", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_outParamTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_outParamNames", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_paramNamesOrder", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_returnType", $.String);

    $.Field({Static:false, Public:false}, "_returnName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+ArraySchemaType */ 

(function ArraySchemaType$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+ComplexSchemaType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+ArraySchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $.String, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.SchemaBlockType"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintSchemaType", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $.Boolean
        ])
    );

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "Type", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType */ 

(function RealSchemaType$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+ComplexSchemaType"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"), 
          $.String, $asm07.TypeRef("System.Collections.Hashtable"), 
          $.Boolean, $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindMethodAttributes", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodInfo")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])]), $asm07.TypeRef("System.Reflection.BindingFlags")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSUDSType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsUnique", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_XNS", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceFields", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.FieldInfo")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetInstanceFields", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.FieldInfo")]), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIntroducedInterfaces", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIntroducedInterfaces", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIntroducedMethods", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodInfo")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIntroducedMethods", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodInfo")]), [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsNotSystemDefinedRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParamInOut", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.ParameterInfo"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintMessageWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $asm07.TypeRef("System.Collections.ArrayList")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PrintMethodName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrintSchemaType", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintSuds", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $asm07.TypeRef("System.IO.TextWriter"), 
          $asm07.TypeRef("System.Text.StringBuilder"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessArray", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type"), $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Text.StringBuilder"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeName", 
      new JSIL.MethodSignature($.String, [
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace")
        ])
    );

    $.Field({Static:false, Public:false}, "_WsdlGenerator", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator"));

    $.Field({Static:false, Public:false}, "_type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "_serviceEndpoint", $.String);

    $.Field({Static:false, Public:false}, "_typeToServiceEndpoint", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_bUnique", $.Boolean);

    $.Field({Static:false, Public:false}, "_xns", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"));

    $.Field({Static:false, Public:false}, "_bStruct", $.Boolean);

    $.Field({Static:false, Public:false}, "_implIFaces", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_iFaces", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "_methods", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodInfo")]));

    $.Field({Static:false, Public:false}, "_methodAttributes", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_methodTypes", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "_fields", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.FieldInfo")]));

    $.Field({Static:false, Public:false}, "_phony", $jsilcore.TypeRef("System.Array", [$asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+PhonySchemaType")]));

    $.Field({Static:false, Public:false}, "_nestedTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:true , Public:false}, "emptyTypeSet", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), function ($pi) {
        return JSIL.Array.New($asm07.System.Type, 0);
      });

    $.Field({Static:true , Public:false}, "emptyMethodSet", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodInfo")]), function ($pi) {
        return JSIL.Array.New($asm07.System.Reflection.MethodInfo, 0);
      });

    $.Field({Static:true , Public:false}, "emptyFieldSet", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.FieldInfo")]), function ($pi) {
        return JSIL.Array.New($asm07.System.Reflection.FieldInfo, 0);
      });

    $.Property({Static:false, Public:false}, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "XNS", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace"));

    $.Property({Static:false, Public:false}, "IsUnique", $.Boolean);

    $.Property({Static:false, Public:false}, "IsSUDSType", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace */ 

(function XMLNamespace$Members () {
  var $, $thisType;





























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.MetadataServices.WsdlGenerator+XMLNamespace", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Reflection.Assembly"), 
          $.String, $asm07.TypeRef("System.Collections.Hashtable"), 
          $.String, $.Boolean, 
          $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddArraySchemaType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+ArraySchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPhonySchemaType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+PhonySchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddRealSchemaType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddRealSUDSType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddSimpleSchemaType", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SimpleSchemaType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForSchemaContent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "DependsOnSchemaNS", 
      new JSIL.MethodSignature(null, [$.Type, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "DependsOnSUDSNS", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Assem", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Generator", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsClassesPrinted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInteropType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Prefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupArraySchemaType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+ArraySchemaType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupPhonySchemaType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+PhonySchemaType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupRealSchemaType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+RealSchemaType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupSchemaNamespace", 
      new JSIL.MethodSignature($.Type, [$.String, $asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupSchemaType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupSimpleSchemaType", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator+SimpleSchemaType"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LookupSUDSNamespace", 
      new JSIL.MethodSignature($.Type, [$.String, $asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintDependsOnWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $asm07.TypeRef("System.Collections.Hashtable")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintMessageWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String, $asm07.TypeRef("System.Collections.ArrayList")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrintSchemaWsdl", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextWriter"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsClassesPrinted", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "_name", $.String);

    $.Field({Static:false, Public:false}, "_assem", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Field({Static:false, Public:false}, "_namespace", $.String);

    $.Field({Static:false, Public:false}, "_prefix", $.String);

    $.Field({Static:false, Public:false}, "_bUnique", $.Boolean);

    $.Field({Static:false, Public:false}, "_dependsOnSUDSNS", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_realSUDSTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_dependsOnSchemaNS", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_realSchemaTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_phonySchemaTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_simpleSchemaTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_arraySchemaTypes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_bInteropType", $.Boolean);

    $.Field({Static:false, Public:false}, "_serviceEndpoint", $.String);

    $.Field({Static:false, Public:false}, "_typeToServiceEndpoint", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_generator", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator"));

    $.Field({Static:false, Public:false}, "_xnsImports", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_bClassesPrinted", $.Boolean);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "Assem", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Property({Static:false, Public:false}, "Prefix", $.String);

    $.Property({Static:false, Public:false}, "Namespace", $.String);

    $.Property({Static:false, Public:false}, "IsInteropType", $.Boolean);

    $.Property({Static:false, Public:false}, "Generator", $asm20.TypeRef("System.Runtime.Remoting.MetadataServices.WsdlGenerator"));

    $.Property({Static:false, Public:false}, "IsClassesPrinted", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime.Remoting.Configuration");
/* class System.Runtime.Remoting.Configuration.AppSettings */ 

(function AppSettings$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Runtime.Remoting.Configuration.AppSettings", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureSettingsLoaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AllowTransparentProxyMessage", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Configuration.AppSettingsReader"), $.String, 
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "AllowTransparentProxyMessageKeyName", $.String, "microsoft:Remoting:AllowTransparentProxyMessage");

    $.Field({Static:true , Public:false, ReadOnly:true }, "AllowTransparentProxyMessageDefaultValue", $.Boolean, false);

    $.Field({Static:true , Public:false, ReadOnly:true }, "AllowTransparentProxyMessageFwLink", $.String, "http://go.microsoft.com/fwlink/?LinkId=390633");

    $.Field({Static:true , Public:false}, "allowTransparentProxyMessageValue", $.Boolean, function ($pi) {
        return $pi.AllowTransparentProxyMessageDefaultValue;
      });

    $.Field({Static:true , Public:false}, "settingsInitialized", $asm07.TypeRef("System.Boolean"), false);

    $.Field({Static:true , Public:false}, "appSettingsLock", $.Object);

    $.Property({Static:true , Public:false}, "AllowTransparentProxyMessage", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime.Remoting.Channels");
/* class System.Runtime.Remoting.Channels.BaseTransportHeaders */ 

(function BaseTransportHeaders$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BaseTransportHeaders", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ContentType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RequestUri", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOtherHeadersEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetValueFromHeaderIndex", 
      new JSIL.MethodSignature($.Object, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "MapHeaderIndexToName", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "MapHeaderNameToIndex", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectionId", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ContentType", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IPAddress", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Net.IPAddress"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RequestUri", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetValueFromHeaderIndex", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    );

    $.Constant({Static:true , Public:false}, "WellknownHeaderCount", $.Int32, 4);

    $.Field({Static:false, Public:false}, "_connectionId", $.Object);

    $.Field({Static:false, Public:false}, "_ipAddress", $.Object);

    $.Field({Static:false, Public:false}, "_requestUri", $.String);

    $.Field({Static:false, Public:false}, "_contentType", $.String);

    $.Field({Static:false, Public:false}, "_otherHeaders", $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"));

    $.Property({Static:false, Public:true }, "RequestUri", $.String);

    $.Property({Static:false, Public:true }, "ContentType", $.String);

    $.Property({Static:false, Public:true }, "ConnectionId", $.Object);

    $.Property({Static:false, Public:true }, "IPAddress", $asm0A.TypeRef("System.Net.IPAddress"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.BaseTransportHeadersEnumerator */ 

(function BaseTransportHeadersEnumerator$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BaseTransportHeadersEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_headers", $asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"));

    $.Field({Static:false, Public:false}, "_bStarted", $.Boolean);

    $.Field({Static:false, Public:false}, "_currentIndex", $.Int32);

    $.Field({Static:false, Public:false}, "_otherHeadersEnumerator", $asm07.TypeRef("System.Collections.IEnumerator"));

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.BasicAsyncResult */ 

(function BasicAsyncResult$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BasicAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CleanupOnComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncWaitHandle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.WaitHandle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CompletedSynchronously", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:false, Public:false}, "_asyncCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "_asyncState", $.Object);

    $.Field({Static:false, Public:false}, "_returnValue", $.Object);

    $.Field({Static:false, Public:false}, "_exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "_bIsComplete", $.Boolean);

    $.Field({Static:false, Public:false}, "_manualResetEvent", $asm07.TypeRef("System.Threading.ManualResetEvent"));

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncState", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncWaitHandle", $asm07.TypeRef("System.Threading.WaitHandle"));

    $.Property({Static:false, Public:true , Virtual:true }, "CompletedSynchronously", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsCompleted", $.Boolean);

    $.Property({Static:false, Public:false}, "Exception", $asm07.TypeRef("System.Exception"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IAsyncResult")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.ChunkedMemoryStream */ 

(function ChunkedMemoryStream$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.ChunkedMemoryStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.IO.IByteBufferPool"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AllocateMemoryChunk", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseMemoryChunks", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ToArray", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteByte", 
      JSIL.MethodSignature.Action($.Byte)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    );

    $.Field({Static:false, Public:false}, "_chunks", $asm20.TypeRef("System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk"));

    $.Field({Static:false, Public:false}, "_bufferPool", $asm20.TypeRef("System.IO.IByteBufferPool"));

    $.Field({Static:false, Public:false}, "_bClosed", $.Boolean);

    $.Field({Static:false, Public:false}, "_writeChunk", $asm20.TypeRef("System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk"));

    $.Field({Static:false, Public:false}, "_writeOffset", $.Int32);

    $.Field({Static:false, Public:false}, "_readChunk", $asm20.TypeRef("System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk"));

    $.Field({Static:false, Public:false}, "_readOffset", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk */ 

(function MemoryChunk$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.ChunkedMemoryStream+MemoryChunk", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Buffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:true }, "Next", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.CommonTransportKeys */ 

(function CommonTransportKeys$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.CommonTransportKeys", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:true }, "IPAddress", $.String, "__IPAddress");

    $.Constant({Static:true , Public:true }, "ConnectionId", $.String, "__ConnectionId");

    $.Constant({Static:true , Public:true }, "RequestUri", $.String, "__RequestUri");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.Channels.SinkChannelProtocol */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.SinkChannelProtocol", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Http: 0, 
    Other: 1, 
  }
);

/* class System.Runtime.Remoting.Channels.CoreChannel */ 

(function CoreChannel$Members () {
  var $, $thisType;
















































  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.CoreChannel", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AppendProviderToClientProviderChain", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CleanupUrlBashingForIisSslIfNecessary", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectChannelDataFromServerSinkProviders", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ChannelDataStore"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateBinaryFormatter", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"), [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateSoapFormatter", 
      new JSIL.MethodSignature($asm37.TypeRef("System.Runtime.Serialization.Formatters.Soap.SoapFormatter"), [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "DebugException", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "DebugMessage", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"))
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "DebugOut", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "DebugOutXMLStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "DebugStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["_DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "DecodeMachineName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeBinaryRequestMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $.String, $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean, $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeBinaryResponseMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodCallMessage"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $.String, $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean, $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $.String, $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean, $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeSoapRequestMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")]), 
          $.Boolean, $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeserializeSoapResponseMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DetermineChannelProtocol", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"), [$asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BufferPool", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.IO.IByteBufferPool"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IsClientSKUInstallation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RequestQueue", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCurrentSidString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetHostName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMachineAddress", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Net.IPAddress"), [$asm0A.TypeRef("System.Net.IPHostEntry"), $asm0A.TypeRef("System.Net.Sockets.AddressFamily")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMachineIp", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessagePropertiesAsSoapHeader", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")]), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetResourceString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSoapHeaders", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")]), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsLocalIpAddress", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Net.IPAddress")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsLocalIpAddress", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Net.IPHostEntry"), $asm0A.TypeRef("System.Net.Sockets.AddressFamily"), 
          $asm0A.TypeRef("System.Net.IPAddress")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MimeTypeToFormatter", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IRemotingFormatter"), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnNetworkAddressChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveApplicationNameFromUri", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReportUnknownProviderConfigProperty", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeBinaryMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeBinaryMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $.String, $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeMessage", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.IO.Stream"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeSoapMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SerializeSoapMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupUrlBashingForIisSslIfNecessary", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupUrlBashingForIisSslIfNecessaryWorker", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SidToString", 
      new JSIL.MethodSignature($.String, [$.IntPtr])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateCachedIPAddresses", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "VerifyNoProviderData", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.Field({Static:true , Public:false}, "_bufferPool", $asm20.TypeRef("System.IO.IByteBufferPool"));

    $.Field({Static:true , Public:false}, "_requestQueue", $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"));

    $.Constant({Static:true , Public:false}, "MaxStringLen", $.Int32, 512);

    $.Constant({Static:true , Public:false}, "SOAPMimeType", $.String, "text/xml");

    $.Constant({Static:true , Public:false}, "BinaryMimeType", $.String, "application/octet-stream");

    $.Constant({Static:true , Public:false}, "SOAPContentType", $.String, "text/xml; charset=\"utf-8\"");

    $.Field({Static:true , Public:false}, "s_hostName", $.String, null);

    $.Field({Static:true , Public:false}, "s_MachineName", $.String, null);

    $.Field({Static:true , Public:false}, "s_MachineIp", $.String, null);

    $.Field({Static:true , Public:false}, "s_CachedIPHostEntry", $asm0A.TypeRef("System.Net.IPHostEntry"), null);

    $.Constant({Static:true , Public:false}, "CLIENT_MSG_GEN", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "CLIENT_MSG_SINK_CHAIN", $.Int32, 2);

    $.Constant({Static:true , Public:false}, "CLIENT_MSG_SER", $.Int32, 3);

    $.Constant({Static:true , Public:false}, "CLIENT_MSG_SEND", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "SERVER_MSG_RECEIVE", $.Int32, 5);

    $.Constant({Static:true , Public:false}, "SERVER_MSG_DESER", $.Int32, 6);

    $.Constant({Static:true , Public:false}, "SERVER_MSG_SINK_CHAIN", $.Int32, 7);

    $.Constant({Static:true , Public:false}, "SERVER_MSG_STACK_BUILD", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "SERVER_DISPATCH", $.Int32, 9);

    $.Constant({Static:true , Public:false}, "SERVER_RET_STACK_BUILD", $.Int32, 10);

    $.Constant({Static:true , Public:false}, "SERVER_RET_SINK_CHAIN", $.Int32, 11);

    $.Constant({Static:true , Public:false}, "SERVER_RET_SER", $.Int32, 12);

    $.Constant({Static:true , Public:false}, "SERVER_RET_SEND", $.Int32, 13);

    $.Constant({Static:true , Public:false}, "SERVER_RET_END", $.Int32, 14);

    $.Constant({Static:true , Public:false}, "CLIENT_RET_RECEIVE", $.Int32, 15);

    $.Constant({Static:true , Public:false}, "CLIENT_RET_DESER", $.Int32, 16);

    $.Constant({Static:true , Public:false}, "CLIENT_RET_SINK_CHAIN", $.Int32, 17);

    $.Constant({Static:true , Public:false}, "CLIENT_RET_PROPAGATION", $.Int32, 18);

    $.Constant({Static:true , Public:false}, "CLIENT_END_CALL", $.Int32, 19);

    $.Constant({Static:true , Public:false}, "TIMING_DATA_EOF", $.Int32, 99);

    $.Field({Static:true , Public:false}, "s_isClientSKUInstallationInitialized", $.Boolean, false);

    $.Field({Static:true , Public:false}, "s_isClientSKUInstallation", $.Boolean, false);

    $.Field({Static:true , Public:false}, "SystemResMgr", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "BufferPool", $asm20.TypeRef("System.IO.IByteBufferPool"));

    $.Property({Static:true , Public:false}, "RequestQueue", $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"));

    $.Property({Static:true , Public:false}, "IsClientSKUInstallation", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.CoreChannel+UriHeaderHandler */ 

(function UriHeaderHandler$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.CoreChannel+UriHeaderHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "HeaderHandler", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")])])
    );

    $.Field({Static:false, Public:false}, "_uri", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.IisHelper */ 

(function IisHelper$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.IisHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "get_ApplicationUrl", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IsSslRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "set_ApplicationUrl", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false}, "_bIsSslRequired", $.Boolean);

    $.Field({Static:true , Public:false}, "_iisAppUrl", $.String);

    $.Property({Static:true , Public:false}, "IsSslRequired", $.Boolean);

    $.Property({Static:true , Public:false}, "ApplicationUrl", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.ExclusiveTcpListener */ 

(function ExclusiveTcpListener$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Net.Sockets.TcpListener"), 
      Name: "System.Runtime.Remoting.Channels.ExclusiveTcpListener", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Net.IPAddress"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsListening", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Start", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Property({Static:false, Public:false}, "IsListening", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.RequestQueue */ 

(function RequestQueue$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.RequestQueue", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DequeueRequest", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRequestToExecute", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsLocal", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessNextRequest", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "QueueRequest", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleMoreWorkIfNeeded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkItemCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_minExternFreeThreads", $.Int32);

    $.Field({Static:false, Public:false}, "_minLocalFreeThreads", $.Int32);

    $.Field({Static:false, Public:false}, "_queueLimit", $.Int32);

    $.Field({Static:false, Public:false}, "_localQueue", $asm07.TypeRef("System.Collections.Queue"));

    $.Field({Static:false, Public:false}, "_externQueue", $asm07.TypeRef("System.Collections.Queue"));

    $.Field({Static:false, Public:false}, "_count", $.Int32);

    $.Field({Static:false, Public:false}, "_workItemCallback", $asm07.TypeRef("System.Threading.WaitCallback"));

    $.Field({Static:false, Public:false}, "_workItemCount", $.Int32);

    $.Constant({Static:true , Public:false}, "_workItemLimit", $.Int32, 2);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Runtime.Remoting.Channels.SocketHandlerFactory */ 

JSIL.MakeDelegate("System.Runtime.Remoting.Channels.SocketHandlerFactory", false, [], 
  new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [
      $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCache"), 
      $asm07.TypeRef("System.String")
    ]));

/* class System.Runtime.Remoting.Channels.RemoteConnection */ 

(function RemoteConnection$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.RemoteConnection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCache"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateNewSocket", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateNewSocket", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$asm0A.TypeRef("System.Net.EndPoint")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateNewSocket", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$asm0A.TypeRef("System.Net.Sockets.AddressFamily")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisableNagleDelays", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Net.Sockets.Socket"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSocket", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HasIPv6Address", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Net.IPAddress")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseSocket", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TimeoutSockets", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.Field({Static:true , Public:false}, "colonSep", $jsilcore.TypeRef("System.Array", [$.Char]));

    $.Field({Static:false, Public:false}, "_cachedSocketList", $asm20.TypeRef("System.Runtime.Remoting.Channels.CachedSocketList"));

    $.Field({Static:false, Public:false}, "_socketCache", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCache"));

    $.Field({Static:false, Public:false}, "_machineAndPort", $.String);

    $.Field({Static:false, Public:false}, "_addressList", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Net.IPAddress")]));

    $.Field({Static:false, Public:false}, "_port", $.Int32);

    $.Field({Static:false, Public:false}, "_lkgIPEndPoint", $asm0A.TypeRef("System.Net.EndPoint"));

    $.Field({Static:false, Public:false}, "connectIPv6", $.Boolean);

    $.Field({Static:false, Public:false}, "_uri", $asm0A.TypeRef("System.Uri"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.CachedSocket */ 

(function CachedSocket$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.CachedSocket", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handler", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LastUsed", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Next", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Next", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.Field({Static:false, Public:false}, "_socket", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"));

    $.Field({Static:false, Public:false}, "_socketLastUsed", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_next", $.Type);

    $.Property({Static:false, Public:false}, "Handler", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"));

    $.Property({Static:false, Public:false}, "LastUsed", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "Next", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.CachedSocketList */ 

(function CachedSocketList$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.CachedSocketList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSocket", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReturnSocket", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TimeoutSockets", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.DateTime"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.Field({Static:false, Public:false}, "_socketCount", $.Int32);

    $.Field({Static:false, Public:false}, "_socketLifetime", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "_socketCachePolicy", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"));

    $.Field({Static:false, Public:false}, "_socketList", $asm20.TypeRef("System.Runtime.Remoting.Channels.CachedSocket"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.SocketCache */ 

(function SocketCache$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SocketCache", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandlerFactory"), $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateSocketHandler", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$asm0A.TypeRef("System.Net.Sockets.Socket"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CachePolicy", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ReceiveTimeout", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SocketTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSocket", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeSocketTimeoutHandler", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseSocket", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CachePolicy", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ReceiveTimeout", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SocketTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutSockets", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean])
    );

    $.Field({Static:true , Public:false}, "_connections", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_handlerFactory", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandlerFactory"));

    $.Field({Static:true , Public:false}, "_registeredWaitHandle", $asm07.TypeRef("System.Threading.RegisteredWaitHandle"));

    $.Field({Static:true , Public:false}, "_socketTimeoutDelegate", $asm07.TypeRef("System.Threading.WaitOrTimerCallback"));

    $.Field({Static:true , Public:false}, "_socketTimeoutWaitHandle", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:true , Public:false}, "_socketTimeoutPollTime", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "_socketCachePolicy", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"));

    $.Field({Static:false, Public:false}, "_socketTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "_receiveTimeout", $.Int32);


    function SocketCache__cctor () {
      $thisType._socketTimeoutPollTime = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SocketCache__cctor
    );

    $.Property({Static:false, Public:false}, "SocketTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "ReceiveTimeout", $.Int32);

    $.Property({Static:false, Public:false}, "CachePolicy", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Runtime.Remoting.Channels.ValidateByteDelegate */ 

JSIL.MakeDelegate("System.Runtime.Remoting.Channels.ValidateByteDelegate", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Boolean"), [$asm07.TypeRef("System.Byte")]));

/* class System.Runtime.Remoting.Channels.SocketHandler */ 

(function SocketHandler$Members () {
  var $, $thisType;









































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Net.Sockets.Socket"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReadMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReadMessageCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "BufferMoreData", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CloseOnFatalError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CustomErrorsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CreationTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DataArrivedCallbackState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DataBuffer", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImpersonationIdentity", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.WindowsIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsLocal", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "IsLocalhost", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnInputStreamClosed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrepareForNewMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessRequestNow", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RaceForControl", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadAndMatchFourBytes", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadFromSocket", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadInt32", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToByte", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Byte])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToByte", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Byte, $asm20.TypeRef("System.Runtime.Remoting.Channels.ValidateByteDelegate")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToChar", 
      new JSIL.MethodSignature($.String, [$.Char])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToChar", 
      new JSIL.MethodSignature($.String, [$.Char, $asm20.TypeRef("System.Runtime.Remoting.Channels.ValidateByteDelegate")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadToEndOfLine", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadUInt16", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:false, Public:false}, "RejectRequestNowSinceServerIsBusy", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseControl", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReturnBufferToPool", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SendErrorMessageIfPossible", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DataArrivedCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.WaitCallback"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DataArrivedCallbackState", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ImpersonationIdentity", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Principal.WindowsIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteByte", 
      new JSIL.MethodSignature(null, [$.Byte, $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteInt32", 
      new JSIL.MethodSignature(null, [$.Int32, $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteUInt16", 
      new JSIL.MethodSignature(null, [$.UInt16, $asm07.TypeRef("System.IO.Stream")])
    );

    $.Field({Static:false, Public:false}, "NetSocket", $asm0A.TypeRef("System.Net.Sockets.Socket"));

    $.Field({Static:false, Public:false}, "NetStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_creationTime", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_requestQueue", $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"));

    $.Field({Static:false, Public:false}, "_dataBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_dataBufferSize", $.Int32);

    $.Field({Static:false, Public:false}, "_dataOffset", $.Int32);

    $.Field({Static:false, Public:false}, "_dataCount", $.Int32);

    $.Field({Static:false, Public:false}, "_beginReadCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "_beginReadAsyncResult", $asm07.TypeRef("System.IAsyncResult"));

    $.Field({Static:false, Public:false}, "_dataArrivedCallback", $asm07.TypeRef("System.Threading.WaitCallback"));

    $.Field({Static:false, Public:false}, "_dataArrivedCallbackState", $.Object);

    $.Field({Static:false, Public:false}, "_impersonationIdentity", $asm07.TypeRef("System.Security.Principal.WindowsIdentity"));

    $.Field({Static:false, Public:false}, "_byteBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_controlCookie", $.Int32);

    $.Property({Static:false, Public:true }, "CreationTime", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "DataBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "DataArrivedCallback", $asm07.TypeRef("System.Threading.WaitCallback"));

    $.Property({Static:false, Public:true }, "DataArrivedCallbackState", $.Object);

    $.Property({Static:false, Public:true }, "ImpersonationIdentity", $asm07.TypeRef("System.Security.Principal.WindowsIdentity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.SocketStream */ 

(function SocketStream$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.SocketStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Net.Sockets.Socket"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginRead", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginWrite", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndRead", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndWrite", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Field({Static:false, Public:false}, "_socket", $asm0A.TypeRef("System.Net.Sockets.Socket"));

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Constant({Static:true , Public:false}, "maxSocketWrite", $.Int32, 65536);

    $.Constant({Static:true , Public:false}, "maxSocketRead", $.Int32, 4194304);

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.StreamHelper */ 

(function StreamHelper$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.StreamHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AsyncCopyReadHelper", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.AsyncCopyStreamResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AsyncCopyStreamReadCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AsyncCopyStreamWriteCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AsyncCopyWriteHelper", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.AsyncCopyStreamResult"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginAsyncCopyStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.IO.Stream"), 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferCopy", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CopyStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:false}, "EndAsyncCopyStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:true , Public:false}, "_asyncCopyStreamReadCallback", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AsyncCopyStreamReadCallback", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });

    $.Field({Static:true , Public:false}, "_asyncCopyStreamWriteCallback", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AsyncCopyStreamWriteCallback", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.AsyncCopyStreamResult */ 

(function AsyncCopyStreamResult$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.BasicAsyncResult"), 
      Name: "System.Runtime.Remoting.Channels.AsyncCopyStreamResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CleanupOnComplete", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "Source", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "Target", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "Buffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "AsyncRead", $.Boolean);

    $.Field({Static:false, Public:false}, "AsyncWrite", $.Boolean);

    $.Field({Static:false, Public:false}, "CloseSource", $.Boolean);

    $.Field({Static:false, Public:false}, "CloseTarget", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.StringHelper */ 

(function StringHelper$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.StringHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "StartsWithAsciiIgnoreCasePrefixLower", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartsWithDoubleUnderscore", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToLowerAscii", 
      new JSIL.MethodSignature($.Char, [$.Char])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;






  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.NativeMethods", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:false}, "GetSidIdentifierAuthority", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetSidSubAuthority", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.Int32]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetSidSubAuthorityCount", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetTokenInformation", 
      new JSIL.MethodSignature($.Boolean, [
          $.IntPtr, $.Int32, 
          $.IntPtr, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IsValidSid", 
      new JSIL.MethodSignature($.Boolean, [$.IntPtr]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.Constant({Static:true , Public:false}, "ADVAPI32", $.String, "advapi32.dll");

    $.Constant({Static:true , Public:false}, "ThreadTokenAllAccess", $.Int32, 983551);

    $.Constant({Static:true , Public:false}, "BufferTooSmall", $.Int32, 122);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.Channels.NativeMethods+TokenInformationClass */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.NativeMethods+TokenInformationClass", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    TokenUser: 1, 
    TokenGroups: 2, 
    TokenPrivileges: 3, 
    TokenOwner: 4, 
    TokenPrimaryGroup: 5, 
    TokenDefaultDacl: 6, 
    TokenSource: 7, 
    TokenType: 8, 
    TokenImpersonationLevel: 9, 
    TokenStatistics: 10, 
    TokenRestrictedSids: 11, 
    TokenSessionId: 12, 
    TokenGroupsAndPrivileges: 13, 
    TokenSessionReference: 14, 
    TokenSandBoxInert: 15, 
  }
);

/* enum System.Runtime.Remoting.Channels.SocketCachePolicy */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.SocketCachePolicy", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Default: 0, 
    AbsoluteTimeout: 1, 
  }
);

/* interface System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection */ 

JSIL.MakeInterface(
  "System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection", true, [], function ($) {
    $.Method({}, "IsConnectingEndPointAuthorized", new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Net.EndPoint")]));
    $.Method({}, "IsConnectingIdentityAuthorized", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Security.Principal.IIdentity")]));
  }, []);

/* class System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider */ 

(function BinaryClientFormatterSinkProvider$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientFormatterSinkProvider"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.BinaryClientFormatterSink */ 

(function BinaryClientFormatterSink$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BinaryClientFormatterSink", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageCtrl"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeserializeMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodCallMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ChannelProtocol", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IncludeVersioning", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StrictBinding", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SyncProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")])
    );

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_channelProtocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"));

    $.Property({Static:false, Public:false}, "IncludeVersioning", $.Boolean);

    $.Property({Static:false, Public:false}, "StrictBinding", $.Boolean);

    $.Property({Static:false, Public:false}, "ChannelProtocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextSink", $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientFormatterSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), 
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider */ 

(function BinaryServerFormatterSinkProvider$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), [$asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeFilterLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetChannelData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelDataStore"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TypeFilterLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.Field({Static:false, Public:false}, "_next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_formatterSecurityLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"));

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Property({Static:false, Public:true }, "TypeFilterLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerFormatterSinkProvider"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.BinaryServerFormatterSink */ 

(function BinaryServerFormatterSink$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.BinaryServerFormatterSink", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeFilterLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IncludeVersioning", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StrictBinding", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TypeFilterLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_protocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol"));

    $.Field({Static:false, Public:false}, "_receiver", $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_formatterSecurityLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"));

    $.Field({Static:false, Public:false}, "lastUri", $.String);

    $.Property({Static:false, Public:false}, "IncludeVersioning", $.Boolean);

    $.Property({Static:false, Public:false}, "StrictBinding", $.Boolean);

    $.Property({Static:false, Public:true }, "TypeFilterLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Http: 0, 
    Other: 1, 
  }
);

/* class System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider */ 

(function SoapClientFormatterSinkProvider$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientFormatterSinkProvider"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.SoapClientFormatterSink */ 

(function SoapClientFormatterSink$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SoapClientFormatterSink", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageCtrl"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeserializeMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodCallMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodCallMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ChannelProtocol", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IncludeVersioning", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StrictBinding", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SyncProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")])
    );

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_channelProtocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"));

    $.Property({Static:false, Public:false}, "IncludeVersioning", $.Boolean);

    $.Property({Static:false, Public:false}, "StrictBinding", $.Boolean);

    $.Property({Static:false, Public:false}, "ChannelProtocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.SinkChannelProtocol"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextSink", $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientFormatterSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), 
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider */ 

(function SoapServerFormatterSinkProvider$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), [$asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeFilterLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetChannelData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelDataStore"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TypeFilterLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.Field({Static:false, Public:false}, "_next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_formatterSecurityLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"));

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Property({Static:false, Public:true }, "TypeFilterLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerFormatterSinkProvider"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.SoapServerFormatterSink */ 

(function SoapServerFormatterSink$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.SoapServerFormatterSink", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.SoapServerFormatterSink+Protocol"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeFilterLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetChannelHeaders", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.Header")]), [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IncludeVersioning", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StrictBinding", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TypeFilterLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
    );

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_protocol", $asm20.TypeRef("System.Runtime.Remoting.Channels.SoapServerFormatterSink+Protocol"));

    $.Field({Static:false, Public:false}, "_receiver", $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"));

    $.Field({Static:false, Public:false}, "_includeVersioning", $.Boolean);

    $.Field({Static:false, Public:false}, "_strictBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "_formatterSecurityLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"));

    $.Property({Static:false, Public:false}, "IncludeVersioning", $.Boolean);

    $.Property({Static:false, Public:false}, "StrictBinding", $.Boolean);

    $.Property({Static:false, Public:true }, "TypeFilterLevel", $asm07.TypeRef("System.Runtime.Serialization.Formatters.TypeFilterLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.Channels.SoapServerFormatterSink+Protocol */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.SoapServerFormatterSink+Protocol", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Http: 0, 
    Other: 1, 
  }
);

JSIL.DeclareNamespace("System.Runtime.Remoting.Channels.Ipc");
/* class System.Runtime.Remoting.Channels.Ipc.IpcChannel */ 

(function IpcChannel$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"), $asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_clientChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcClientChannel"));

    $.Field({Static:false, Public:false}, "_serverChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"));

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcServerChannel */ 

(function IpcServerChannel$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcServerChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"), 
          $asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultServerProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChannelUri", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Listen", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_portName", $.String);

    $.Field({Static:false, Public:false}, "_channelData", $asm07.TypeRef("System.Runtime.Remoting.Channels.ChannelDataStore"));

    $.Field({Static:false, Public:false}, "_port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));

    $.Field({Static:false, Public:false}, "_bSuppressChannelData", $.Boolean);

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_impersonate", $.Boolean);

    $.Field({Static:false, Public:false}, "_authorizedGroup", $.String);

    $.Field({Static:false, Public:false}, "_securityDescriptor", $asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor"));

    $.Field({Static:false, Public:false}, "authSet", $.Boolean);

    $.Field({Static:false, Public:false}, "_bExclusiveAddressUse", $.Boolean);

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_transportSink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcServerTransportSink"));

    $.Field({Static:false, Public:false}, "_listenerThread", $asm07.TypeRef("System.Threading.Thread"));

    $.Field({Static:false, Public:false}, "_bListening", $.Boolean);

    $.Field({Static:false, Public:false}, "_startListeningException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "_waitForStartListening", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcServerTransportSink */ 

(function IpcServerTransportSink$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcServerTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ServiceRequest", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Constant({Static:true , Public:false}, "s_MaxSize", $.Int32, 33554432);

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_impersonate", $.Boolean);

    $.Property({Static:false, Public:false}, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Runtime.Remoting.Channels.Ipc.AsyncMessageDelegate */ 

JSIL.MakeDelegate("System.Runtime.Remoting.Channels.Ipc.AsyncMessageDelegate", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), [
      $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
      $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")]), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack")
    ]));

/* class System.Runtime.Remoting.Channels.Ipc.IpcClientChannel */ 

(function IpcClientChannel$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcClientChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultClientProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_prop", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSinkProvider */ 

(function IpcClientTransportSinkProvider$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSinkProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_prop", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSink */ 

(function IpcClientTransportSink$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcClientChannel")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AsyncFinishedCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AsyncProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")]), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Cache", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.ConnectionCache"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "portCache", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.ConnectionCache"));

    $.Field({Static:false, Public:false}, "_channel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcClientChannel"));

    $.Field({Static:false, Public:false}, "_portName", $.String);

    $.Constant({Static:true , Public:false}, "TokenImpersonationLevelKey", $.String, "tokenimpersonationlevel");

    $.Field({Static:false, Public:false}, "authSet", $.Boolean);

    $.Constant({Static:true , Public:false}, "ConnectionTimeoutKey", $.String, "connectiontimeout");

    $.Field({Static:false, Public:false}, "_tokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Field({Static:true , Public:false}, "s_keySet", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:false}, "Cache", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.ConnectionCache"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcChannelHelper */ 

(function IpcChannelHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Ipc.IpcChannelHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ParseURL", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartsWithIpc", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Constant({Static:true , Public:false}, "_ipc", $.String, "ipc://");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime.Remoting.Channels.Tcp");
/* class System.Runtime.Remoting.Channels.Tcp.TcpSocketHandler */ 

(function TcpSocketHandler$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpSocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Net.Sockets.Socket"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadAndMatchPreamble", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadAndVerifyHeaderFormat", 
      new JSIL.MethodSignature(null, [$.String, $.Byte])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadContentLength", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadCountedString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToEndOfHeaders", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadVersionAndOperation", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.UInt16]))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteContentTypeHeader", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteCountedString", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteCustomHeader", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteHeaders", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WritePreambleAndVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    );

    $.Field({Static:true , Public:false}, "s_protocolPreamble", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "s_protocolVersion1_0", $jsilcore.TypeRef("System.Array", [$.Byte]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcServerHandler */ 

(function IpcServerHandler$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpSocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcServerHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Port", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRequestStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrepareForNewMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadAndVerifyHeaderFormat", 
      new JSIL.MethodSignature(null, [$.String, $.Byte])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadHeaders", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToEndOfHeaders", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SendErrorMessageIfPossible", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SendResponse", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.Field({Static:false, Public:false}, "_stream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_requestStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));

    $.Field({Static:false, Public:false}, "_requestQueue", $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"));

    $.Field({Static:false, Public:false}, "_bOneWayRequest", $.Boolean);

    $.Field({Static:false, Public:false}, "_contentLength", $.Int32);

    $.Property({Static:false, Public:false}, "Port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcClientHandler */ 

(function IpcClientHandler$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcServerHandler"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcClientHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"), $asm07.TypeRef("System.IO.Stream"), 
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetResponseStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnInputStreamClosed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadHeaders", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReturnToCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SendRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.Field({Static:false, Public:false}, "_bOneWayRequest", $.Boolean);

    $.Field({Static:false, Public:false}, "_responseStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpReadingStream"));

    $.Field({Static:false, Public:false}, "_contentLength", $.Int32);

    $.Field({Static:false, Public:false}, "_bChunked", $.Boolean);

    $.Field({Static:false, Public:false}, "_sink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcClientTransportSink"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.IpcPort */ 

(function IpcPort$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.IpcPort", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AsyncFSCallback", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginRead", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Connect", 
      new JSIL.MethodSignature($.Type, [
          $.String, $.Boolean, 
          $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"), $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($.Type, [
          $.String, $asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateSecurityDescriptor", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor"), [$asm07.TypeRef("System.Security.Principal.SecurityIdentifier")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EndRead", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:false}, "get_Cacheable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessage", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "ImpersonateClient", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Cacheable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "WaitForConnect", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Field({Static:false, Public:false}, "_handle", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"));

    $.Field({Static:false, Public:false}, "_portName", $.String);

    $.Field({Static:false, Public:false}, "_cacheable", $.Boolean);

    $.Constant({Static:true , Public:false}, "prefix", $.String, "\\\\.\\pipe\\");

    $.Constant({Static:true , Public:false}, "networkSidSddlForm", $.String, "S-1-5-2");

    $.Constant({Static:true , Public:false}, "authenticatedUserSidSddlForm", $.String, "S-1-5-11");

    $.Field({Static:true , Public:false}, "s_securityDescriptor", $asm07.TypeRef("System.Security.AccessControl.CommonSecurityDescriptor"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "IOCallback", $asm07.TypeRef("System.Threading.IOCompletionCallback"), function ($pi) {
        return $asm07.System.Threading.IOCompletionCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AsyncFSCallback", new JSIL.MethodSignature(null, [
                $.UInt32, $.UInt32, 
                $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")])
              ]), true, false));
      });

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "Cacheable", $.Boolean);

    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.PipeAsyncResult */ 

(function PipeAsyncResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.PipeAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CallUserCallback", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CallUserCallbackWorker", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncWaitHandle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.WaitHandle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CompletedSynchronously", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "_overlapped", $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]));

    $.Field({Static:false, Public:false}, "_userCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "_numBytes", $.Int32);

    $.Field({Static:false, Public:false}, "_errorCode", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsCompleted", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncWaitHandle", $asm07.TypeRef("System.Threading.WaitHandle"));

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncState", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "CompletedSynchronously", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IAsyncResult")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.PipeStream */ 

(function PipeStream$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.PipeStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginRead", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginWrite", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndRead", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndWrite", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Field({Static:false, Public:false}, "_port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.PortConnection */ 

(function PortConnection$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.PortConnection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LastUsed", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Port", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"))
    );

    $.Field({Static:false, Public:false}, "_port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));

    $.Field({Static:false, Public:false}, "_socketLastUsed", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "Port", $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"));

    $.Property({Static:false, Public:false}, "LastUsed", $asm07.TypeRef("System.DateTime"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.ConnectionCache */ 

(function ConnectionCache$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.ConnectionCache", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GetConnection", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"), [
          $.String, $.Boolean, 
          $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"), $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeConnectionTimeoutHandler", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseConnection", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.IpcPort"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutConnections", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean])
    );

    $.Field({Static:true , Public:false}, "_connections", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "_registeredWaitHandle", $asm07.TypeRef("System.Threading.RegisteredWaitHandle"));

    $.Field({Static:true , Public:false}, "_socketTimeoutDelegate", $asm07.TypeRef("System.Threading.WaitOrTimerCallback"));

    $.Field({Static:true , Public:false}, "_socketTimeoutWaitHandle", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:true , Public:false}, "_socketTimeoutPollTime", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false}, "_portLifetime", $asm07.TypeRef("System.TimeSpan"));


    function ConnectionCache__cctor () {
      $thisType._socketTimeoutPollTime = new $asm07.System.TimeSpan();
      $thisType._portLifetime = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ConnectionCache__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.PipeHandle */ 

(function PipeHandle$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.PipeHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Handle", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Property({Static:false, Public:true }, "Handle", $.IntPtr);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.SECURITY_ATTRIBUTES */ 

(function SECURITY_ATTRIBUTES$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Ipc.SECURITY_ATTRIBUTES", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "nLength", $.Int32);

    $.Field({Static:false, Public:false}, "lpSecurityDescriptor", $.IntPtr);

    $.Field({Static:false, Public:false}, "bInheritHandle", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Ipc.NativePipe */ 

(function NativePipe$Members () {
  var $, $thisType;












  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Ipc.NativePipe", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:true }, "CloseHandle", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "ConnectNamedPipe", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), $asm07.TypeRef("System.Threading.Overlapped")]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "CreateFile", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), [
          $.String, $.UInt32, 
          $.UInt32, $.IntPtr, 
          $.UInt32, $.UInt32, 
          $.IntPtr
        ]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "CreateNamedPipe", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), [
          $.String, $.UInt32, 
          $.UInt32, $.UInt32, 
          $.UInt32, $.UInt32, 
          $.UInt32, $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.SECURITY_ATTRIBUTES")
        ]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "FormatMessage", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.IntPtr, 
          $.Int32, $.Int32, 
          $asm07.TypeRef("System.Text.StringBuilder"), $.Int32, 
          $.IntPtr
        ]), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "ImpersonateNamedPipeClient", 
      new JSIL.MethodSignature($.Boolean, [$asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle")]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "ReadFile", 
      new JSIL.MethodSignature($.Boolean, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), $jsilcore.TypeRef("JSIL.Pointer", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $.IntPtr
        ]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "ReadFile", 
      new JSIL.MethodSignature($.Boolean, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), $jsilcore.TypeRef("JSIL.Pointer", [$.Byte]), 
          $.Int32, $.IntPtr, 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")])
        ]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "RevertToSelf", 
      JSIL.MethodSignature.Return($.Boolean), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "WaitNamedPipe", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Int32]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "WriteFile", 
      new JSIL.MethodSignature($.Boolean, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Ipc.PipeHandle"), $jsilcore.TypeRef("JSIL.Pointer", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $.IntPtr
        ]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.Constant({Static:true , Public:false}, "Kernel32", $.String, "kernel32.dll");

    $.Constant({Static:true , Public:false}, "AdvApi32", $.String, "advapi32.dll");

    $.Field({Static:true , Public:false, ReadOnly:true }, "NULL", $.IntPtr);

    $.Constant({Static:true , Public:true }, "PIPE_ACCESS_OUTBOUND", $.UInt32, 2);

    $.Constant({Static:true , Public:true }, "PIPE_ACCESS_DUPLEX", $.UInt32, 3);

    $.Constant({Static:true , Public:true }, "PIPE_ACCESS_INBOUND", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "PIPE_WAIT", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "PIPE_NOWAIT", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "PIPE_READMODE_BYTE", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "PIPE_READMODE_MESSAGE", $.UInt32, 2);

    $.Constant({Static:true , Public:true }, "PIPE_TYPE_BYTE", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "PIPE_TYPE_MESSAGE", $.UInt32, 4);

    $.Constant({Static:true , Public:true }, "PIPE_CLIENT_END", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "PIPE_SERVER_END", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "FILE_FLAG_OVERLAPPED", $.UInt32, 1073741824);

    $.Constant({Static:true , Public:true }, "FILE_ATTRIBUTE_NORMAL", $.UInt32, 128);

    $.Constant({Static:true , Public:true }, "FILE_SHARE_READ", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "FILE_SHARE_WRITE", $.UInt32, 2);

    $.Constant({Static:true , Public:true }, "PIPE_UNLIMITED_INSTANCES", $.UInt32, 255);

    $.Constant({Static:true , Public:true }, "SECURITY_SQOS_PRESENT", $.UInt32, 1048576);

    $.Constant({Static:true , Public:true }, "SECURITY_ANONYMOUS", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "SECURITY_IDENTIFICATION", $.UInt32, 65536);

    $.Constant({Static:true , Public:true }, "SECURITY_IMPERSONATION", $.UInt32, 131072);

    $.Constant({Static:true , Public:true }, "SECURITY_DELEGATION", $.UInt32, 196608);

    $.Constant({Static:true , Public:false}, "FORMAT_MESSAGE_IGNORE_INSERTS", $.Int32, 512);

    $.Constant({Static:true , Public:false}, "FORMAT_MESSAGE_FROM_SYSTEM", $.Int32, 4096);

    $.Constant({Static:true , Public:false}, "FORMAT_MESSAGE_ARGUMENT_ARRAY", $.Int32, 8192);

    $.Constant({Static:true , Public:true }, "NMPWAIT_WAIT_FOREVER", $.UInt32, 4294967295);

    $.Constant({Static:true , Public:true }, "NMPWAIT_NOWAIT", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "NMPWAIT_USE_DEFAULT_WAIT", $.UInt32, 0);

    $.Constant({Static:true , Public:true }, "GENERIC_READ", $.UInt32, 2147483648);

    $.Constant({Static:true , Public:true }, "GENERIC_WRITE", $.UInt32, 1073741824);

    $.Constant({Static:true , Public:true }, "GENERIC_EXECUTE", $.UInt32, 536870912);

    $.Constant({Static:true , Public:true }, "GENERIC_ALL", $.UInt32, 268435456);

    $.Constant({Static:true , Public:true }, "CREATE_NEW", $.UInt32, 1);

    $.Constant({Static:true , Public:true }, "CREATE_ALWAYS", $.UInt32, 2);

    $.Constant({Static:true , Public:true }, "OPEN_EXISTING", $.UInt32, 3);

    $.Constant({Static:true , Public:true }, "OPEN_ALWAYS", $.UInt32, 4);

    $.Constant({Static:true , Public:true }, "TRUNCATE_EXISTING", $.UInt32, 5);

    $.Constant({Static:true , Public:true }, "FILE_FLAG_FIRST_PIPE_INSTANCE", $.UInt32, 524288);

    $.Constant({Static:true , Public:true }, "INVALID_HANDLE_VALUE", $.Int32, -1);

    $.Constant({Static:true , Public:true }, "ERROR_BROKEN_PIPE", $.Int64, 109);

    $.Constant({Static:true , Public:true }, "ERROR_IO_PENDING", $.Int64, 997);

    $.Constant({Static:true , Public:true }, "ERROR_PIPE_BUSY", $.Int64, 231);

    $.Constant({Static:true , Public:true }, "ERROR_NO_DATA", $.Int64, 232);

    $.Constant({Static:true , Public:true }, "ERROR_PIPE_NOT_CONNECTED", $.Int64, 233);

    $.Constant({Static:true , Public:true }, "ERROR_PIPE_CONNECTED", $.Int64, 535);

    $.Constant({Static:true , Public:true }, "ERROR_PIPE_LISTENING", $.Int64, 536);


    function NativePipe__cctor () {
      $thisType.NULL = new $asm07.System.IntPtr();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NativePipe__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpChannel */ 

(function TcpChannel$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_clientChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientChannel"));

    $.Field({Static:false, Public:false}, "_serverChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpServerChannel"));

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpChannelHelper */ 

(function TcpChannelHelper$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpChannelHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ParseURL", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.Constant({Static:true , Public:false}, "_tcp", $.String, "tcp://");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpClientChannel */ 

(function TcpClientChannel$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpClientChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultClientProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_prop", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider */ 

(function TcpClientTransportSinkProvider$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSinkProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_prop", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink */ 

(function TcpClientTransportSink$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientChannel")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAuthenticatedStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.IO.Stream"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateSocketHandler", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCache"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSid", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReceiveCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "SendRequestWithRetry", 
      new JSIL.MethodSignature($asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientSocketHandler"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "ClientSocketCache", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCache"));

    $.Field({Static:false, Public:false}, "authSet", $.Boolean);

    $.Field({Static:false, Public:false}, "m_machineName", $.String);

    $.Field({Static:false, Public:false}, "m_port", $.Int32);

    $.Field({Static:false, Public:false}, "_channel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientChannel"));

    $.Field({Static:false, Public:false}, "_machineAndPort", $.String);

    $.Constant({Static:true , Public:false}, "UserNameKey", $.String, "username");

    $.Constant({Static:true , Public:false}, "PasswordKey", $.String, "password");

    $.Constant({Static:true , Public:false}, "DomainKey", $.String, "domain");

    $.Constant({Static:true , Public:false}, "ProtectionLevelKey", $.String, "protectionlevel");

    $.Constant({Static:true , Public:false}, "ConnectionGroupNameKey", $.String, "connectiongroupname");

    $.Constant({Static:true , Public:false}, "TokenImpersonationLevelKey", $.String, "tokenimpersonationlevel");

    $.Constant({Static:true , Public:false}, "SocketCacheTimeoutKey", $.String, "socketcachetimeout");

    $.Constant({Static:true , Public:false}, "ReceiveTimeoutKey", $.String, "timeout");

    $.Constant({Static:true , Public:false}, "SocketCachePolicyKey", $.String, "socketcachepolicy");

    $.Constant({Static:true , Public:false}, "SPNKey", $.String, "serviceprincipalname");

    $.Constant({Static:true , Public:false}, "RetryCountKey", $.String, "retrycount");

    $.Field({Static:false, Public:false}, "_securityUserName", $.String);

    $.Field({Static:false, Public:false}, "_securityPassword", $.String);

    $.Field({Static:false, Public:false}, "_securityDomain", $.String);

    $.Field({Static:false, Public:false}, "_connectionGroupName", $.String);

    $.Field({Static:false, Public:false}, "_socketCacheTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "_receiveTimeout", $.Int32);

    $.Field({Static:false, Public:false}, "_socketCachePolicy", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketCachePolicy"));

    $.Field({Static:false, Public:false}, "_spn", $.String);

    $.Field({Static:false, Public:false}, "_retryCount", $.Int32);

    $.Field({Static:false, Public:false}, "_tokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.Field({Static:false, Public:false}, "_protectionLevel", $asm0A.TypeRef("System.Net.Security.ProtectionLevel"));

    $.Field({Static:true , Public:false}, "s_keySet", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpClientSocketHandler */ 

(function TcpClientSocketHandler$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpSocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpClientSocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $.String, 
          $asm07.TypeRef("System.IO.Stream"), $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OneWayRequest", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $.Int32, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetResponseStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnInputStreamClosed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrepareForNewMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadHeaders", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ReturnToCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SendRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.Field({Static:true , Public:false}, "s_endOfLineBytes", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_machinePortAndSid", $.String);

    $.Field({Static:false, Public:false}, "_bOneWayRequest", $.Boolean);

    $.Field({Static:false, Public:false}, "_bChunked", $.Boolean);

    $.Field({Static:false, Public:false}, "_contentLength", $.Int32);

    $.Field({Static:false, Public:false}, "_requestStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_responseStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpReadingStream"));

    $.Field({Static:false, Public:false}, "_sink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpClientTransportSink"));

    $.Property({Static:false, Public:true }, "OneWayRequest", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpServerChannel */ 

(function TcpServerChannel$Members () {
  var $, $thisType;























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpServerChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"), 
          $asm20.TypeRef("System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcceptSocketCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AcceptSocketCallbackAsync", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "AcceptSocketCallbackHelper", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Authenticate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Security.Principal.WindowsIdentity"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")]), $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpServerSocketHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultServerProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChannelUri", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupMachineName", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_machineName", $.String);

    $.Field({Static:false, Public:false}, "_port", $.Int32);

    $.Field({Static:false, Public:false}, "_channelData", $asm07.TypeRef("System.Runtime.Remoting.Channels.ChannelDataStore"));

    $.Field({Static:false, Public:false}, "_forcedMachineName", $.String);

    $.Field({Static:false, Public:false}, "_bUseIpAddress", $.Boolean);

    $.Field({Static:false, Public:false}, "_bindToAddr", $asm0A.TypeRef("System.Net.IPAddress"));

    $.Field({Static:false, Public:false}, "_bSuppressChannelData", $.Boolean);

    $.Field({Static:false, Public:false}, "_impersonate", $.Boolean);

    $.Field({Static:false, Public:false}, "_protectionLevel", $asm0A.TypeRef("System.Net.Security.ProtectionLevel"));

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_acceptSocketCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "_authorizeRemotingConnection", $asm20.TypeRef("System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection"));

    $.Field({Static:false, Public:false}, "authSet", $.Boolean);

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_transportSink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpServerTransportSink"));

    $.Field({Static:false, Public:false}, "_tcpListener", $asm20.TypeRef("System.Runtime.Remoting.Channels.ExclusiveTcpListener"));

    $.Field({Static:false, Public:false}, "_bExclusiveAddressUse", $.Boolean);

    $.Field({Static:false, Public:false}, "_bListening", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpServerTransportSink */ 

(function TcpServerTransportSink$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpServerTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ServiceRequest", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Constant({Static:true , Public:false}, "s_MaxSize", $.Int32, 33554432);

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_impersonate", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpReadingStream */ 

(function TcpReadingStream$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadToEnd", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpFixedLengthReadingStream */ 

(function TcpFixedLengthReadingStream$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpReadingStream"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpFixedLengthReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "_inputStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"));

    $.Field({Static:false, Public:false}, "_bytesLeft", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpChunkedReadingStream */ 

(function TcpChunkedReadingStream$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpReadingStream"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpChunkedReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadTrailer", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_inputStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"));

    $.Field({Static:false, Public:false}, "_bytesLeft", $.Int32);

    $.Field({Static:false, Public:false}, "_bFoundEnd", $.Boolean);

    $.Field({Static:false, Public:false}, "_byteBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpServerSocketHandler */ 

(function TcpServerSocketHandler$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpSocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Tcp.TcpServerSocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CanServiceAnotherRequest", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateFaultString", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRequestStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrepareForNewMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadHeaders", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SendErrorMessageIfPossible", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SendErrorResponse", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendErrorResponse", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendResponse", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.Field({Static:true , Public:false}, "s_endOfLineBytes", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "_connectionIdCounter", $.Int64, function ($pi) {
        return $asm07.System.Int64.FromNumber(0);
      });

    $.Field({Static:false, Public:false}, "_connectionId", $.Int64);

    $.Field({Static:false, Public:false}, "_bOneWayRequest", $.Boolean);

    $.Field({Static:false, Public:false}, "_bChunked", $.Boolean);

    $.Field({Static:false, Public:false}, "_contentLength", $.Int32);

    $.Field({Static:false, Public:false}, "_requestStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Tcp.TcpReadingStream"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpOperations */ 

(function TcpOperations$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpOperations", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Request", $.UInt16, 0);

    $.Constant({Static:true , Public:false}, "OneWayRequest", $.UInt16, 1);

    $.Constant({Static:true , Public:false}, "Reply", $.UInt16, 2);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpContentDelimiter */ 

(function TcpContentDelimiter$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpContentDelimiter", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "ContentLength", $.UInt16, 0);

    $.Constant({Static:true , Public:false}, "Chunked", $.UInt16, 1);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpHeaders */ 

(function TcpHeaders$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpHeaders", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EndOfHeaders", $.UInt16, 0);

    $.Constant({Static:true , Public:false}, "Custom", $.UInt16, 1);

    $.Constant({Static:true , Public:false}, "StatusCode", $.UInt16, 2);

    $.Constant({Static:true , Public:false}, "StatusPhrase", $.UInt16, 3);

    $.Constant({Static:true , Public:false}, "RequestUri", $.UInt16, 4);

    $.Constant({Static:true , Public:false}, "CloseConnection", $.UInt16, 5);

    $.Constant({Static:true , Public:false}, "ContentType", $.UInt16, 6);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpHeaderFormat */ 

(function TcpHeaderFormat$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpHeaderFormat", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Void", $.Byte, 0);

    $.Constant({Static:true , Public:false}, "CountedString", $.Byte, 1);

    $.Constant({Static:true , Public:false}, "Byte", $.Byte, 2);

    $.Constant({Static:true , Public:false}, "UInt16", $.Byte, 3);

    $.Constant({Static:true , Public:false}, "Int32", $.Byte, 4);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpStatusCode */ 

(function TcpStatusCode$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpStatusCode", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Success", $.UInt16, 0);

    $.Constant({Static:true , Public:false}, "GenericError", $.UInt16, 1);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Tcp.TcpStringFormat */ 

(function TcpStringFormat$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Tcp.TcpStringFormat", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Unicode", $.Byte, 0);

    $.Constant({Static:true , Public:false}, "UTF8", $.Byte, 1);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Runtime.Remoting.Channels.Http");
/* class System.Runtime.Remoting.Channels.Http.HttpChannel */ 

(function HttpChannel$Members () {
  var $, $thisType;























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddHookChannelUri", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelScheme", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelSinkChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_WantsToListen", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_WantsToListen", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:true , Public:false}, "s_keySet", $asm07.TypeRef("System.Collections.ICollection"));

    $.Field({Static:false, Public:false}, "_clientChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpClientChannel"));

    $.Field({Static:false, Public:false}, "_serverChannel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpServerChannel"));

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelScheme", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "WantsToListen", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelSinkChain", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 5 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 6 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiverHook"), 
      /* 7 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Http.DictionaryEnumeratorByKeys */ 

(function DictionaryEnumeratorByKeys$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.DictionaryEnumeratorByKeys", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Entry", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.DictionaryEntry"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Key", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Field({Static:false, Public:false}, "_keyEnum", $asm07.TypeRef("System.Collections.IEnumerator"));

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Entry", $asm07.TypeRef("System.Collections.DictionaryEntry"));

    $.Property({Static:false, Public:true , Virtual:true }, "Key", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IDictionaryEnumerator"), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.AggregateDictionary */ 

(function AggregateDictionary$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.AggregateDictionary", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsFixedSize", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionaryEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "_dictionaries", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "Values", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsFixedSize", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IDictionary"), 
      /* 1 */ $asm07.TypeRef("System.Collections.ICollection"), 
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpChannelHelper */ 

(function HttpChannelHelper$Members () {
  var $, $thisType;










  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Http.HttpChannelHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CharacterHexDigitToDecimal", 
      new JSIL.MethodSignature($.Int32, [$.Byte])
    );

    $.ExternalMethod({Static:true , Public:false}, "DecimalToCharacterHexDigit", 
      new JSIL.MethodSignature($.Char, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "DecodeUriInPlace", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetObjectUriFromRequestUri", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseContentType", 
      new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseURL", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReplaceChannelUriWithThisString", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReplaceMachineNameWithThisString", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartsWithHttp", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.Constant({Static:true , Public:false}, "_http", $.String, "http://");

    $.Constant({Static:true , Public:false}, "_https", $.String, "https://");

    $.Field({Static:true , Public:false}, "s_semicolonSeparator", $jsilcore.TypeRef("System.Array", [$.Char]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpEncodingHelper */ 

(function HttpEncodingHelper$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Http.HttpEncodingHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "DecodeUri", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EncodeUriAsXLinkHref", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EscapeInXLinkHref", 
      new JSIL.MethodSignature($.Boolean, [$.Byte])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpClientChannel */ 

(function HttpClientChannel$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpClientChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultClientProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateMessageSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessageSink"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ProxyObject", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Net.IWebProxy"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UseAuthenticatedConnectionSharing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UseDefaultCredentials", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateProxy", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "ProxyNameKey", $.String, "proxyname");

    $.Constant({Static:true , Public:false}, "ProxyPortKey", $.String, "proxyport");

    $.Field({Static:true , Public:false}, "s_keySet", $asm07.TypeRef("System.Collections.ICollection"));

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_proxyObject", $asm0A.TypeRef("System.Net.IWebProxy"));

    $.Field({Static:false, Public:false}, "_proxyName", $.String);

    $.Field({Static:false, Public:false}, "_proxyPort", $.Int32);

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Field({Static:false, Public:false}, "_clientConnectionLimit", $.Int32);

    $.Field({Static:false, Public:false}, "_bUseDefaultCredentials", $.Boolean);

    $.Field({Static:false, Public:false}, "_bAuthenticatedConnectionSharing", $.Boolean);

    $.Field({Static:false, Public:false}, "_secure", $.Boolean);

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:false}, "ProxyObject", $asm0A.TypeRef("System.Net.IWebProxy"));

    $.Property({Static:false, Public:false}, "UseDefaultCredentials", $.Boolean);

    $.Property({Static:false, Public:false}, "UseAuthenticatedConnectionSharing", $.Boolean);

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 5 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.ISecurableChannel")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpClientTransportSinkProvider */ 

(function HttpClientTransportSinkProvider$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpClientTransportSinkProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateSink", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSender"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"))
    );

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpClientTransportSink */ 

(function HttpClientTransportSink$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpClientTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpClientChannel"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessRequest", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectResponseHeaders", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), [$asm0A.TypeRef("System.Net.HttpWebResponse")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UserAgent", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRequestStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessAndSend", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Net.HttpWebRequest"), [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessResponseException", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Net.WebException"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Net.HttpWebResponse")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReceiveAndProcess", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.HttpWebResponse"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupWebRequest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Net.HttpWebRequest"), [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateProxy", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "s_defaultVerb", $.String, "POST");

    $.Field({Static:true , Public:false}, "s_userAgent", $.String);

    $.Constant({Static:true , Public:false}, "UserNameKey", $.String, "username");

    $.Constant({Static:true , Public:false}, "PasswordKey", $.String, "password");

    $.Constant({Static:true , Public:false}, "DomainKey", $.String, "domain");

    $.Constant({Static:true , Public:false}, "PreAuthenticateKey", $.String, "preauthenticate");

    $.Constant({Static:true , Public:false}, "CredentialsKey", $.String, "credentials");

    $.Constant({Static:true , Public:false}, "ClientCertificatesKey", $.String, "clientcertificates");

    $.Constant({Static:true , Public:false}, "ProxyNameKey", $.String, "proxyname");

    $.Constant({Static:true , Public:false}, "ProxyPortKey", $.String, "proxyport");

    $.Constant({Static:true , Public:false}, "TimeoutKey", $.String, "timeout");

    $.Constant({Static:true , Public:false}, "AllowAutoRedirectKey", $.String, "allowautoredirect");

    $.Constant({Static:true , Public:false}, "UnsafeAuthenticatedConnectionSharingKey", $.String, "unsafeauthenticatedconnectionsharing");

    $.Constant({Static:true , Public:false}, "ConnectionGroupNameKey", $.String, "connectiongroupname");

    $.Field({Static:true , Public:false}, "s_keySet", $asm07.TypeRef("System.Collections.ICollection"), null);

    $.Field({Static:false, Public:false}, "_securityUserName", $.String);

    $.Field({Static:false, Public:false}, "_securityPassword", $.String);

    $.Field({Static:false, Public:false}, "_securityDomain", $.String);

    $.Field({Static:false, Public:false}, "_bSecurityPreAuthenticate", $.Boolean);

    $.Field({Static:false, Public:false}, "_bUnsafeAuthenticatedConnectionSharing", $.Boolean);

    $.Field({Static:false, Public:false}, "_connectionGroupName", $.String);

    $.Field({Static:false, Public:false}, "_credentials", $asm0A.TypeRef("System.Net.ICredentials"));

    $.Field({Static:false, Public:false}, "_certificates", $asm0A.TypeRef("System.Security.Cryptography.X509Certificates.X509CertificateCollection"));

    $.Field({Static:false, Public:false}, "_timeout", $.Int32);

    $.Field({Static:false, Public:false}, "_bAllowAutoRedirect", $.Boolean);

    $.Field({Static:false, Public:false}, "_proxyObject", $asm0A.TypeRef("System.Net.IWebProxy"));

    $.Field({Static:false, Public:false}, "_proxyName", $.String);

    $.Field({Static:false, Public:false}, "_proxyPort", $.Int32);

    $.Field({Static:true , Public:false}, "s_requestCachePolicy", $asm0A.TypeRef("System.Net.Cache.RequestCachePolicy"));

    $.Field({Static:false, Public:false}, "_channel", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpClientChannel"));

    $.Field({Static:false, Public:false}, "_channelURI", $.String);

    $.Field({Static:false, Public:false}, "_useChunked", $.Boolean);

    $.Field({Static:false, Public:false}, "_useKeepAlive", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:true , Public:false}, "UserAgent", $.String);

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSink"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpClientTransportSink+AsyncHttpClientRequestState */ 

(function AsyncHttpClientRequestState$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpClientTransportSink+AsyncHttpClientRequestState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpClientTransportSink"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"), 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream"), $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessAsyncCopyRequestStreamCompletion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessAsyncCopyResponseStreamCompletion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessGetRequestStreamCompletion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessGetResponseCompletion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RetryOrDispatchException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "StartRequest", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "s_processGetRequestStreamCompletionCallback", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "ProcessGetRequestStreamCompletion", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });

    $.Field({Static:true , Public:false}, "s_processAsyncCopyRequestStreamCompletionCallback", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "ProcessAsyncCopyRequestStreamCompletion", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });

    $.Field({Static:true , Public:false}, "s_processGetResponseCompletionCallback", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "ProcessGetResponseCompletion", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });

    $.Field({Static:true , Public:false}, "s_processAsyncCopyRequestStreamCompletion", $asm07.TypeRef("System.AsyncCallback"), function ($pi) {
        return $asm07.System.AsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "ProcessAsyncCopyResponseStreamCompletion", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")), true, false));
      });

    $.Field({Static:false, Public:false}, "WebRequest", $asm0A.TypeRef("System.Net.HttpWebRequest"));

    $.Field({Static:false, Public:false}, "WebResponse", $asm0A.TypeRef("System.Net.HttpWebResponse"));

    $.Field({Static:false, Public:false}, "SinkStack", $asm07.TypeRef("System.Runtime.Remoting.Channels.IClientChannelSinkStack"));

    $.Field({Static:false, Public:false}, "RequestStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "ActualResponseStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_transportSink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpClientTransportSink"));

    $.Field({Static:false, Public:false}, "_retryCount", $.Int32);

    $.Field({Static:false, Public:false}, "_initialStreamPosition", $.Int64);

    $.Field({Static:false, Public:false}, "_msg", $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"));

    $.Field({Static:false, Public:false}, "_requestHeaders", $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpServerChannel */ 

(function HttpServerChannel$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Remoting.Channels.BaseChannelWithProperties"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpServerChannel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddHookChannelUri", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDefaultServerProviderChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelData", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelPriority", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelScheme", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ChannelSinkChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsSecured", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_WantsToListen", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChannelUri", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUrlsForUri", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Listen", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Parse", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsSecured", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_WantsToListen", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupChannel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupMachineName", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StartListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "StopListening", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_channelPriority", $.Int32);

    $.Field({Static:false, Public:false}, "_channelName", $.String);

    $.Field({Static:false, Public:false}, "_machineName", $.String);

    $.Field({Static:false, Public:false}, "_port", $.Int32);

    $.Field({Static:false, Public:false}, "_channelData", $asm07.TypeRef("System.Runtime.Remoting.Channels.ChannelDataStore"));

    $.Field({Static:false, Public:false}, "_forcedMachineName", $.String);

    $.Field({Static:false, Public:false}, "_bUseIpAddress", $.Boolean);

    $.Field({Static:false, Public:false}, "_bindToAddr", $asm0A.TypeRef("System.Net.IPAddress"));

    $.Field({Static:false, Public:false}, "_bSuppressChannelData", $.Boolean);

    $.Field({Static:false, Public:false}, "_sinkProvider", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkProvider"));

    $.Field({Static:false, Public:false}, "_transportSink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpServerTransportSink"));

    $.Field({Static:false, Public:false}, "_sinkChain", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Field({Static:false, Public:false}, "_wantsToListen", $.Boolean);

    $.Field({Static:false, Public:false}, "_bHooked", $.Boolean);

    $.Field({Static:false, Public:false}, "_tcpListener", $asm20.TypeRef("System.Runtime.Remoting.Channels.ExclusiveTcpListener"));

    $.Field({Static:false, Public:false}, "_bExclusiveAddressUse", $.Boolean);

    $.Field({Static:false, Public:false}, "_listenerThread", $asm07.TypeRef("System.Threading.Thread"));

    $.Field({Static:false, Public:false}, "_bListening", $.Boolean);

    $.Field({Static:false, Public:false}, "_startListeningException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "_waitForStartListening", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Property({Static:false, Public:false}, "IsSecured", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelPriority", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelData", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelScheme", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "WantsToListen", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ChannelSinkChain", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.ICollection"));

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiver"), 
      /* 4 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannel"), 
      /* 5 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelReceiverHook")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpServerTransportSink */ 

(function HttpServerTransportSink$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpServerTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ServerHeader", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ServiceRequest", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:true , Public:false}, "s_serverHeader", $.String);

    $.Field({Static:false, Public:false}, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Property({Static:true , Public:false}, "ServerHeader", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.ErrorMessage */ 

(function ErrorMessage$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.ErrorMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ArgCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Args", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasVarArgs", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InArgCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InArgs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LogicalCallContext", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Messaging.LogicalCallContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodBase", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodBase"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodSignature", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Uri", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetArg", 
      new JSIL.MethodSignature($.Object, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetArgName", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetInArg", 
      new JSIL.MethodSignature($.Object, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetInArgName", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.Field({Static:false, Public:false}, "m_URI", $.String);

    $.Field({Static:false, Public:false}, "m_MethodName", $.String);

    $.Field({Static:false, Public:false}, "m_TypeName", $.String);

    $.Field({Static:false, Public:false}, "m_MethodSignature", $.Object);

    $.Field({Static:false, Public:false}, "m_ArgCount", $.Int32);

    $.Field({Static:false, Public:false}, "m_ArgName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.Property({Static:false, Public:true , Virtual:true }, "Uri", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "MethodName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "TypeName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "MethodSignature", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "MethodBase", $asm07.TypeRef("System.Reflection.MethodBase"));

    $.Property({Static:false, Public:true , Virtual:true }, "ArgCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Args", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "HasVarArgs", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LogicalCallContext", $asm07.TypeRef("System.Runtime.Remoting.Messaging.LogicalCallContext"));

    $.Property({Static:false, Public:true , Virtual:true }, "InArgCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "InArgs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodCallMessage"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMethodMessage"), 
      /* 2 */ $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpSocketHandler */ 

(function HttpSocketHandler$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.SocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpSocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToEndOfHeaders", 
      new JSIL.MethodSignature(null, [
          $asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteHeader", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteHeaders", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteResponseFirstLine", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.Field({Static:true , Public:false}, "s_httpVersion", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "s_httpVersionAndSpace", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "s_headerSeparator", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "s_endOfLine", $jsilcore.TypeRef("System.Array", [$.Byte]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpServerResponseStream */ 

(function HttpServerResponseStream$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpServerResponseStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpFixedLengthResponseStream */ 

(function HttpFixedLengthResponseStream$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpServerResponseStream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpFixedLengthResponseStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteByte", 
      JSIL.MethodSignature.Action($.Byte)
    );

    $.Field({Static:false, Public:false}, "_outputStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:true , Public:false}, "_length", $.Int32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpChunkedResponseStream */ 

(function HttpChunkedResponseStream$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpServerResponseStream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpChunkedResponseStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushChunk", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "IntToHexChars", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteByte", 
      JSIL.MethodSignature.Action($.Byte)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteChunk", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Field({Static:true , Public:false}, "_trailer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "_endChunk", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_outputStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "_chunk", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_chunkSize", $.Int32);

    $.Field({Static:false, Public:false}, "_chunkOffset", $.Int32);

    $.Field({Static:false, Public:false}, "_byteBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpReadingStream */ 

(function HttpReadingStream$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.Stream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm07.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpFixedLengthReadingStream */ 

(function HttpFixedLengthReadingStream$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpReadingStream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpFixedLengthReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpSocketHandler"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "_inputStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpSocketHandler"));

    $.Field({Static:false, Public:false}, "_bytesLeft", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpChunkedReadingStream */ 

(function HttpChunkedReadingStream$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpReadingStream"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpChunkedReadingStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpSocketHandler"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FoundEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadByte", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:true , Public:false}, "_trailer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:true , Public:false}, "_endChunk", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_inputStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpSocketHandler"));

    $.Field({Static:false, Public:false}, "_bytesLeft", $.Int32);

    $.Field({Static:false, Public:false}, "_bFoundEnd", $.Boolean);

    $.Field({Static:false, Public:false}, "_byteBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true , Virtual:true }, "FoundEnd", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Runtime.Remoting.Channels.Http.HttpVersion */ 

JSIL.MakeEnum(
  {
    FullName: "System.Runtime.Remoting.Channels.Http.HttpVersion", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    V1_0: 0, 
    V1_1: 1, 
  }
);

/* class System.Runtime.Remoting.Channels.Http.HttpServerSocketHandler */ 

(function HttpServerSocketHandler$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpSocketHandler"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpServerSocketHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Net.Sockets.Socket"), $asm20.TypeRef("System.Runtime.Remoting.Channels.RequestQueue"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CanServiceAnotherRequest", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateFaultString", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowChunkedResponse", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRequestStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $.String, $.String, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PrepareForNewMessage", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadFirstLine", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadHeaders", 
      JSIL.MethodSignature.Return($asm20.TypeRef("System.Runtime.Remoting.Channels.BaseTransportHeaders"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SendContinue", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SendErrorMessageIfPossible", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SendResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.Stream"), $.String, 
          $.String, $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateVerbCharacter", 
      new JSIL.MethodSignature($.Boolean, [$.Byte])
    );

    $.Field({Static:true , Public:false}, "s_validateVerbDelegate", $asm20.TypeRef("System.Runtime.Remoting.Channels.ValidateByteDelegate"), function ($pi) {
        return $asm20.System.Runtime.Remoting.Channels.ValidateByteDelegate.New(null, null, new JSIL.MethodPointerInfo($thisType, "ValidateVerbCharacter", new JSIL.MethodSignature($.Boolean, [$.Byte]), true, false));
      });

    $.Field({Static:true , Public:false}, "_connectionIdCounter", $.Int64, function ($pi) {
        return $asm07.System.Int64.FromNumber(0);
      });

    $.Field({Static:true , Public:false}, "_bufferhttpContinue", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "_requestStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpReadingStream"));

    $.Field({Static:false, Public:false}, "_responseStream", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpServerResponseStream"));

    $.Field({Static:false, Public:false}, "_connectionId", $.Int64);

    $.Field({Static:false, Public:false}, "_version", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpVersion"));

    $.Field({Static:false, Public:false}, "_contentLength", $.Int32);

    $.Field({Static:false, Public:false}, "_chunkedEncoding", $.Boolean);

    $.Field({Static:false, Public:false}, "_keepAlive", $.Boolean);

    $.Property({Static:false, Public:true }, "AllowChunkedResponse", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpRemotingHandler */ 

(function HttpRemotingHandler$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpRemotingHandler", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "CanServiceRequest", 
      new JSIL.MethodSignature($.Boolean, [$asm28.TypeRef("System.Web.HttpContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ComposeContentType", 
      new JSIL.MethodSignature($.String, [$.String, $asm07.TypeRef("System.Text.Encoding")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomErrorsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm28.TypeRef("System.Web.HttpContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateFaultString", 
      new JSIL.MethodSignature($.String, [$asm28.TypeRef("System.Web.HttpContext"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReusable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRequestUriForCurrentRequest", 
      new JSIL.MethodSignature($.String, [$asm28.TypeRef("System.Web.HttpContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalProcessRequest", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.HttpContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsLocal", 
      new JSIL.MethodSignature($.Boolean, [$asm28.TypeRef("System.Web.HttpContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessRequest", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.HttpContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteException", 
      new JSIL.MethodSignature(null, [$asm28.TypeRef("System.Web.HttpContext"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false}, "ApplicationConfigurationFile", $.String, "web.config");

    $.Field({Static:true , Public:false}, "bLoadedConfiguration", $.Boolean, false);

    $.Field({Static:true , Public:false}, "s_transportSink", $asm20.TypeRef("System.Runtime.Remoting.Channels.Http.HttpHandlerTransportSink"), null);

    $.Field({Static:true , Public:false}, "s_fatalException", $asm07.TypeRef("System.Exception"), null);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReusable", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm28.TypeRef("System.Web.IHttpHandler")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory */ 

(function HttpRemotingHandlerFactory$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ConfigureAppName", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.HttpRequest"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DumpRequest", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.HttpContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_WebServicesFactory", 
      JSIL.MethodSignature.Return($asm28.TypeRef("System.Web.IHttpHandlerFactory"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WebServicesFactoryType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHandler", 
      new JSIL.MethodSignature($asm28.TypeRef("System.Web.IHttpHandler"), [
          $asm28.TypeRef("System.Web.HttpContext"), $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReleaseHandler", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.IHttpHandler"))
    );

    $.Field({Static:false, Public:false}, "_webServicesFactory", $.Object);

    $.Field({Static:true , Public:false}, "s_webServicesFactoryType", $asm07.TypeRef("System.Type"), null);

    $.Field({Static:true , Public:false}, "s_configLock", $.Object);

    $.Field({Static:true , Public:false}, "s_registeredDynamicTypeTable", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "WebServicesFactory", $asm28.TypeRef("System.Web.IHttpHandlerFactory"));

    $.Property({Static:true , Public:false}, "WebServicesFactoryType", $asm07.TypeRef("System.Type"));

    $.ImplementInterfaces(
      /* 0 */ $asm28.TypeRef("System.Web.IHttpHandlerFactory")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.RegistrationHelper */ 

(function RegistrationHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Runtime.Remoting.Channels.Http.RegistrationHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "RegisterSingleType", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "RegisterType", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $.String
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Runtime.Remoting.Channels.Http.HttpHandlerTransportSink */ 

(function HttpHandlerTransportSink$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Runtime.Remoting.Channels.Http.HttpHandlerTransportSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AsyncProcessResponse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), 
          $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NextChannelSink", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetResponseStream", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IO.Stream"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack"), $.Object, 
          $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "HandleRequest", 
      JSIL.MethodSignature.Action($asm28.TypeRef("System.Web.HttpContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProcessMessage", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.Channels.ServerProcessing"), [
          $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSinkStack"), $asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Messaging.IMessage")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IO.Stream")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendResponse", 
      new JSIL.MethodSignature(null, [
          $asm28.TypeRef("System.Web.HttpResponse"), $.Int32, 
          $asm07.TypeRef("System.Runtime.Remoting.Channels.ITransportHeaders"), $asm07.TypeRef("System.IO.Stream")
        ])
    );

    $.Constant({Static:true , Public:false}, "_defaultChunkSize", $.Int32, 2048);

    $.Field({Static:false, Public:true }, "_nextSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "NextChannelSink", $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm07.TypeRef("System.Collections.IDictionary"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IServerChannelSink"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Remoting.Channels.IChannelSinkBase")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ComputeStringHash", 
      new JSIL.MethodSignature($.UInt32, [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

