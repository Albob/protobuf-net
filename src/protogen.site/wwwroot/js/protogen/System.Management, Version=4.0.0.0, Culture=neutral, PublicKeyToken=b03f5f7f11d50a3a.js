/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm1B = JSIL.DeclareAssembly("System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Management.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Management.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Management.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2096.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Management");
/* enum System.Management.TextFormat */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.TextFormat", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Mof: 0, 
    CimDtd20: 1, 
    WmiDtd20: 2, 
  }
);

/* enum System.Management.CimType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.CimType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    SInt16: 2, 
    SInt32: 3, 
    Real32: 4, 
    Real64: 5, 
    String: 8, 
    Boolean: 11, 
    Object: 13, 
    SInt8: 16, 
    UInt8: 17, 
    UInt16: 18, 
    UInt32: 19, 
    SInt64: 20, 
    UInt64: 21, 
    DateTime: 101, 
    Reference: 102, 
    Char16: 103, 
  }
);

/* enum System.Management.ComparisonSettings */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.ComparisonSettings", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    IncludeAll: 0, 
    IgnoreQualifiers: 1, 
    IgnoreObjectSource: 2, 
    IgnoreDefaultValues: 4, 
    IgnoreClass: 8, 
    IgnoreCase: 16, 
    IgnoreFlavor: 32, 
  }
);

/* enum System.Management.QualifierType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.QualifierType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    ObjectQualifier: 0, 
    PropertyQualifier: 1, 
    MethodQualifier: 2, 
  }
);

/* class System.Management.ManagementBaseObject */ 

(function ManagementBaseObject$Members () {
  var $, $thisType;































  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Management.ManagementBaseObject", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"))
    );

    $.ExternalMethod({Static:true , Public:false}, "_IsClass", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "CompareTo", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $asm1B.TypeRef("System.Management.ComparisonSettings")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ClassPath", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsClass", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.PropertyDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Qualifiers", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.QualifierDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SystemProperties", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.PropertyDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_wbemObject", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetBaseObject", 
      new JSIL.MethodSignature($.Type, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $asm1B.TypeRef("System.Management.ManagementScope")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertyQualifierValue", 
      new JSIL.MethodSignature($.Object, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertyValue", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetQualifierValue", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetText", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.TextFormat")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Initialize", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.IntPtr, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_wbemObject", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPropertyQualifierValue", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPropertyValue", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetQualifierValue", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData");

    $.Field({Static:true , Public:false}, "lockOnFastProx", $asm1B.TypeRef("System.Management.WbemContext"));

    $.Field({Static:false, Public:false}, "_wbemObject", $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"));

    $.Field({Static:false, Public:false}, "properties", $asm1B.TypeRef("System.Management.PropertyDataCollection"));

    $.Field({Static:false, Public:false}, "systemProperties", $asm1B.TypeRef("System.Management.PropertyDataCollection"));

    $.Field({Static:false, Public:false}, "qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));

    $.Property({Static:false, Public:false}, "wbemObject", $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"));

    $.Property({Static:false, Public:true , Virtual:true }, "Properties", $asm1B.TypeRef("System.Management.PropertyDataCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "SystemProperties", $asm1B.TypeRef("System.Management.PropertyDataCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "Qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ClassPath", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:true }, "Item", $.Object);

    $.Property({Static:false, Public:false}, "ClassName", $.String);

    $.Property({Static:false, Public:false}, "IsClass", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm07.TypeRef("System.ICloneable"), 
      /* 3 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.ToolboxItemAttribute"), function () { return [false]; });

})();

/* class System.Management.ManagementObject */ 

(function ManagementObject$Members () {
  var $, $thisType;







































































  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementBaseObject"), 
      Name: "System.Management.ManagementObject", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementPath"), $asm1B.TypeRef("System.Management.ObjectGetOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm1B.TypeRef("System.Management.ObjectGetOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ManagementPath"), 
          $asm1B.TypeRef("System.Management.ObjectGetOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.ObjectGetOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$asm1B.TypeRef("System.Management.ManagementPath")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$.String, $asm1B.TypeRef("System.Management.PutOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$asm1B.TypeRef("System.Management.ManagementPath"), $asm1B.TypeRef("System.Management.PutOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.ManagementPath")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $asm1B.TypeRef("System.Management.PutOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.ManagementPath"), 
          $asm1B.TypeRef("System.Management.PutOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.DeleteOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.DeleteOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ClassPath", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsBound", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Options", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ObjectGetOptions"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Path", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PutButNotGot", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Scope", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagementObject", 
      new JSIL.MethodSignature($.Type, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagementObject", 
      new JSIL.MethodSignature($.Type, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $asm1B.TypeRef("System.Management.ManagementScope")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMethodParameters", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementBaseObject"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMethodParameters", 
      new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.ManagementBaseObject")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPath", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$asm1B.TypeRef("System.Management.IWbemCallResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean, $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelated", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationships", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $.String, $.String, 
          $.Boolean, $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleIdentifierChange", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.IdentifierChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleObjectPut", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.InternalObjectPutEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Initialize", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeMethod", 
      new JSIL.MethodSignature($.Object, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeMethod", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeMethod", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementBaseObject"), [
          $.String, $asm1B.TypeRef("System.Management.ManagementBaseObject"), 
          $asm1B.TypeRef("System.Management.InvokeMethodOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeMethod", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $asm1B.TypeRef("System.Management.ManagementBaseObject"), $asm1B.TypeRef("System.Management.InvokeMethodOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ManagementObjectCTOR", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ManagementPath"), 
          $asm1B.TypeRef("System.Management.ObjectGetOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapInParameters", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm1B.TypeRef("System.Management.ManagementBaseObject"), 
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapOutParameters", 
      new JSIL.MethodSignature($.Object, [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm1B.TypeRef("System.Management.ManagementBaseObject"), 
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Put", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Put", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementPath"), [$asm1B.TypeRef("System.Management.PutOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Put", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Put", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.PutOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Options", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectGetOptions"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Path", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_PutButNotGot", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Scope", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Constant({Static:true , Public:false}, "ID", $.String, "ID");

    $.Constant({Static:true , Public:false}, "RETURNVALUE", $.String, "RETURNVALUE");

    $.Field({Static:false, Public:false}, "wmiClass", $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"));

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:false, Public:false}, "path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Field({Static:false, Public:false}, "options", $asm1B.TypeRef("System.Management.ObjectGetOptions"));

    $.Field({Static:false, Public:false}, "putButNotGot", $.Boolean);

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "PutButNotGot", $.Boolean);

    $.Property({Static:false, Public:false}, "IsBound", $.Boolean);

    $.Property({Static:false, Public:true }, "Scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Property({Static:false, Public:true , Virtual:true }, "Path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:true }, "Options", $asm1B.TypeRef("System.Management.ObjectGetOptions"));

    $.Property({Static:false, Public:true , Virtual:true }, "ClassPath", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementClass */ 

(function ManagementClass$Members () {
  var $, $thisType;









































  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementObject"), 
      Name: "System.Management.ManagementClass", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementPath"), $asm1B.TypeRef("System.Management.ObjectGetOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm1B.TypeRef("System.Management.ObjectGetOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ManagementPath"), 
          $asm1B.TypeRef("System.Management.ObjectGetOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.ObjectGetOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObject"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Derive", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Derivation", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Methods", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.MethodDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Path", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetInstances", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetInstances", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$asm1B.TypeRef("System.Management.EnumerationOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetInstances", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetInstances", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.EnumerationOptions")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagementClass", 
      new JSIL.MethodSignature($.Type, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagementClass", 
      new JSIL.MethodSignature($.Type, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $asm1B.TypeRef("System.Management.ManagementScope")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelatedClasses", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [
          $.String, $.String, 
          $.String, $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRelationshipClasses", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.String, 
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetStronglyTypedClassCode", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"), [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetStronglyTypedClassCode", 
      new JSIL.MethodSignature($.Boolean, [
          $asm1B.TypeRef("System.Management.CodeLanguage"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubclasses", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubclasses", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementObjectCollection"), [$asm1B.TypeRef("System.Management.EnumerationOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubclasses", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubclasses", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementOperationObserver"), $asm1B.TypeRef("System.Management.EnumerationOptions")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Path", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.Field({Static:false, Public:false}, "methods", $asm1B.TypeRef("System.Management.MethodDataCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "Path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:true }, "Derivation", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Property({Static:false, Public:true }, "Methods", $asm1B.TypeRef("System.Management.MethodDataCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementDateTimeConverter */ 

(function ManagementDateTimeConverter$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementDateTimeConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "ToDateTime", 
      new JSIL.MethodSignature($asm07.TypeRef("System.DateTime"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToDmtfDateTime", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToDmtfTimeInterval", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToTimeSpan", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.String])
    );

    $.Constant({Static:true , Public:false}, "SIZEOFDMTFDATETIME", $.Int32, 25);

    $.Constant({Static:true , Public:false}, "MAXSIZE_UTC_DMTF", $.Int32, 999);

    $.Constant({Static:true , Public:false}, "MAXDATE_INTIMESPAN", $.Int64, 99999999);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.IdentifierChangedEventArgs */ 

(function IdentifierChangedEventArgs$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Management.IdentifierChangedEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.InternalObjectPutEventArgs */ 

(function InternalObjectPutEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Management.InternalObjectPutEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Path", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.Field({Static:false, Public:false}, "path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:false}, "Path", $asm1B.TypeRef("System.Management.ManagementPath"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementEventArgs */ 

(function ManagementEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Management.ManagementEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Context", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false}, "context", $.Object);

    $.Property({Static:false, Public:true }, "Context", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ObjectReadyEventArgs */ 

(function ObjectReadyEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.ObjectReadyEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.ManagementBaseObject")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NewObject", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.Field({Static:false, Public:false}, "wmiObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "NewObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.CompletedEventArgs */ 

(function CompletedEventArgs$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.CompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $asm1B.TypeRef("System.Management.ManagementBaseObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Status", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementStatus"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StatusObject", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "status", $.Int32);

    $.Field({Static:false, Public:false, ReadOnly:true }, "wmiObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "StatusObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "Status", $asm1B.TypeRef("System.Management.ManagementStatus"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ObjectPutEventArgs */ 

(function ObjectPutEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.ObjectPutEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.ManagementPath")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.Field({Static:false, Public:false}, "wmiPath", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:true }, "Path", $asm1B.TypeRef("System.Management.ManagementPath"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ProgressEventArgs */ 

(function ProgressEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.ProgressEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpperBound", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "upperBound", $.Int32);

    $.Field({Static:false, Public:false}, "current", $.Int32);

    $.Field({Static:false, Public:false}, "message", $.String);

    $.Property({Static:false, Public:true }, "UpperBound", $.Int32);

    $.Property({Static:false, Public:true }, "Current", $.Int32);

    $.Property({Static:false, Public:true }, "Message", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.EventArrivedEventArgs */ 

(function EventArrivedEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.EventArrivedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.ManagementBaseObject")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NewEvent", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.Field({Static:false, Public:false}, "eventObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "NewEvent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.StoppedEventArgs */ 

(function StoppedEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
      Name: "System.Management.StoppedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Status", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementStatus"))
    );

    $.Field({Static:false, Public:false}, "status", $.Int32);

    $.Property({Static:false, Public:true }, "Status", $asm1B.TypeRef("System.Management.ManagementStatus"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.EventArrivedEventHandler */ 

JSIL.MakeDelegate("System.Management.EventArrivedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.EventArrivedEventArgs")]));

/* delegate System.Management.StoppedEventHandler */ 

JSIL.MakeDelegate("System.Management.StoppedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.StoppedEventArgs")]));

/* class System.Management.ManagementEventWatcher */ 

(function ManagementEventWatcher$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Management.ManagementEventWatcher", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.EventQuery")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.EventWatcherOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.EventQuery"), 
          $asm1B.TypeRef("System.Management.EventWatcherOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_EventArrived", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventArrivedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_Stopped", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.StoppedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:false}, "FireEventArrived", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventArrivedEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FireStopped", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.StoppedEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Options", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.EventWatcherOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Query", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.EventQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Scope", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleIdentifierChange", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.IdentifierChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_EventArrived", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventArrivedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_Stopped", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.StoppedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Options", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventWatcherOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Query", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EventQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Scope", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Stop", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "WaitForNextEvent", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:false, Public:false}, "query", $asm1B.TypeRef("System.Management.EventQuery"));

    $.Field({Static:false, Public:false}, "options", $asm1B.TypeRef("System.Management.EventWatcherOptions"));

    $.Field({Static:false, Public:false}, "enumWbem", $asm1B.TypeRef("System.Management.IEnumWbemClassObject"));

    $.Field({Static:false, Public:false}, "cachedObjects", $jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]));

    $.Field({Static:false, Public:false}, "cachedCount", $.UInt32);

    $.Field({Static:false, Public:false}, "cacheIndex", $.UInt32);

    $.Field({Static:false, Public:false}, "sink", $asm1B.TypeRef("System.Management.SinkForEventQuery"));

    $.Field({Static:false, Public:false}, "delegateInvoker", $asm1B.TypeRef("System.Management.WmiDelegateInvoker"));

    $.Field({Static:false, Public:false}, "EventArrived", $asm1B.TypeRef("System.Management.EventArrivedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Stopped", $asm1B.TypeRef("System.Management.StoppedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Property({Static:false, Public:true }, "Query", $asm1B.TypeRef("System.Management.EventQuery"));

    $.Property({Static:false, Public:true }, "Options", $asm1B.TypeRef("System.Management.EventWatcherOptions"));

    $.Event({Static:false, Public:true }, "EventArrived", $asm1B.TypeRef("System.Management.EventArrivedEventHandler"));

    $.Event({Static:false, Public:true }, "Stopped", $asm1B.TypeRef("System.Management.StoppedEventHandler"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.ToolboxItemAttribute"), function () { return [false]; });

})();

/* class System.Management.SinkForEventQuery */ 

(function SinkForEventQuery$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SinkForEventQuery", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementEventWatcher"), $.Object, 
          $asm1B.TypeRef("System.Management.IWbemServices")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel2", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Status", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stub", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemObjectSink"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HackToCreateStubInMTA", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Indicate", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseStub", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Status", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetStatus", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $.IntPtr
        ])
    );

    $.Field({Static:false, Public:false}, "eventWatcher", $asm1B.TypeRef("System.Management.ManagementEventWatcher"));

    $.Field({Static:false, Public:false}, "context", $.Object);

    $.Field({Static:false, Public:false}, "services", $asm1B.TypeRef("System.Management.IWbemServices"));

    $.Field({Static:false, Public:false}, "stub", $asm1B.TypeRef("System.Management.IWbemObjectSink"));

    $.Field({Static:false, Public:false}, "status", $.Int32);

    $.Field({Static:false, Public:false}, "isLocal", $.Boolean);

    $.Property({Static:false, Public:true }, "Status", $.Int32);

    $.Property({Static:false, Public:false}, "Stub", $asm1B.TypeRef("System.Management.IWbemObjectSink"));

    $.ImplementInterfaces(
      /* 0 */ $asm1B.TypeRef("System.Management.IWmiEventSource")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Management.ManagementStatus */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.ManagementStatus", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Failed: -2147217407, 
    NotFound: -2147217406, 
    AccessDenied: -2147217405, 
    ProviderFailure: -2147217404, 
    TypeMismatch: -2147217403, 
    OutOfMemory: -2147217402, 
    InvalidContext: -2147217401, 
    InvalidParameter: -2147217400, 
    NotAvailable: -2147217399, 
    CriticalError: -2147217398, 
    InvalidStream: -2147217397, 
    NotSupported: -2147217396, 
    InvalidSuperclass: -2147217395, 
    InvalidNamespace: -2147217394, 
    InvalidObject: -2147217393, 
    InvalidClass: -2147217392, 
    ProviderNotFound: -2147217391, 
    InvalidProviderRegistration: -2147217390, 
    ProviderLoadFailure: -2147217389, 
    InitializationFailure: -2147217388, 
    TransportFailure: -2147217387, 
    InvalidOperation: -2147217386, 
    InvalidQuery: -2147217385, 
    InvalidQueryType: -2147217384, 
    AlreadyExists: -2147217383, 
    OverrideNotAllowed: -2147217382, 
    PropagatedQualifier: -2147217381, 
    PropagatedProperty: -2147217380, 
    Unexpected: -2147217379, 
    IllegalOperation: -2147217378, 
    CannotBeKey: -2147217377, 
    IncompleteClass: -2147217376, 
    InvalidSyntax: -2147217375, 
    NondecoratedObject: -2147217374, 
    ReadOnly: -2147217373, 
    ProviderNotCapable: -2147217372, 
    ClassHasChildren: -2147217371, 
    ClassHasInstances: -2147217370, 
    QueryNotImplemented: -2147217369, 
    IllegalNull: -2147217368, 
    InvalidQualifierType: -2147217367, 
    InvalidPropertyType: -2147217366, 
    ValueOutOfRange: -2147217365, 
    CannotBeSingleton: -2147217364, 
    InvalidCimType: -2147217363, 
    InvalidMethod: -2147217362, 
    InvalidMethodParameters: -2147217361, 
    SystemProperty: -2147217360, 
    InvalidProperty: -2147217359, 
    CallCanceled: -2147217358, 
    ShuttingDown: -2147217357, 
    PropagatedMethod: -2147217356, 
    UnsupportedParameter: -2147217355, 
    MissingParameterID: -2147217354, 
    InvalidParameterID: -2147217353, 
    NonconsecutiveParameterIDs: -2147217352, 
    ParameterIDOnRetval: -2147217351, 
    InvalidObjectPath: -2147217350, 
    OutOfDiskSpace: -2147217349, 
    BufferTooSmall: -2147217348, 
    UnsupportedPutExtension: -2147217347, 
    UnknownObjectType: -2147217346, 
    UnknownPacketType: -2147217345, 
    MarshalVersionMismatch: -2147217344, 
    MarshalInvalidSignature: -2147217343, 
    InvalidQualifier: -2147217342, 
    InvalidDuplicateParameter: -2147217341, 
    TooMuchData: -2147217340, 
    ServerTooBusy: -2147217339, 
    InvalidFlavor: -2147217338, 
    CircularReference: -2147217337, 
    UnsupportedClassUpdate: -2147217336, 
    CannotChangeKeyInheritance: -2147217335, 
    CannotChangeIndexInheritance: -2147217328, 
    TooManyProperties: -2147217327, 
    UpdateTypeMismatch: -2147217326, 
    UpdateOverrideNotAllowed: -2147217325, 
    UpdatePropagatedMethod: -2147217324, 
    MethodNotImplemented: -2147217323, 
    MethodDisabled: -2147217322, 
    RefresherBusy: -2147217321, 
    UnparsableQuery: -2147217320, 
    NotEventClass: -2147217319, 
    MissingGroupWithin: -2147217318, 
    MissingAggregationList: -2147217317, 
    PropertyNotAnObject: -2147217316, 
    AggregatingByObject: -2147217315, 
    UninterpretableProviderQuery: -2147217313, 
    BackupRestoreWinmgmtRunning: -2147217312, 
    QueueOverflow: -2147217311, 
    PrivilegeNotHeld: -2147217310, 
    InvalidOperator: -2147217309, 
    LocalCredentials: -2147217308, 
    CannotBeAbstract: -2147217307, 
    AmendedObject: -2147217306, 
    ClientTooSlow: -2147217305, 
    RegistrationTooBroad: -2147213311, 
    RegistrationTooPrecise: -2147213310, 
    NoError: 0, 
    False: 1, 
    ResetToDefault: 262146, 
    Different: 262147, 
    Timedout: 262148, 
    NoMoreData: 262149, 
    OperationCanceled: 262150, 
    Pending: 262151, 
    DuplicateObjects: 262152, 
    PartialResults: 262160, 
  }
);

/* class System.Management.ManagementException */ 

(function ManagementException$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.SystemException"), 
      Name: "System.Management.ManagementException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementStatus"), $.String, 
          $asm1B.TypeRef("System.Management.ManagementBaseObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $.String, 
          $asm1B.TypeRef("System.Management.ManagementBaseObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorCode", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementStatus"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorInformation", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessage", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessage", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.ManagementStatus")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowWithExtendedInfo", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementStatus"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowWithExtendedInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:false, Public:false}, "errorObject", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "errorCode", $asm1B.TypeRef("System.Management.ManagementStatus"));

    $.Property({Static:false, Public:true }, "ErrorInformation", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "ErrorCode", $asm1B.TypeRef("System.Management.ManagementStatus"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementNamedValueCollection */ 

(function ManagementNamedValueCollection$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Collections.Specialized.NameObjectCollectionBase"), 
      Name: "System.Management.ManagementNamedValueCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetContext", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "RemoveAll", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Item", $.Object);

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* delegate System.Management.IdentifierChangedEventHandler */ 

JSIL.MakeDelegate("System.Management.IdentifierChangedEventHandler", false, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.IdentifierChangedEventArgs")]));

/* delegate System.Management.InternalObjectPutEventHandler */ 

JSIL.MakeDelegate("System.Management.InternalObjectPutEventHandler", false, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.InternalObjectPutEventArgs")]));

/* class System.Management.ManagementObjectCollection */ 

(function ManagementObjectCollection$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementObjectCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.EnumerationOptions"), 
          $asm1B.TypeRef("System.Management.IEnumWbemClassObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.ManagementBaseObject")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection+ManagementObjectEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:true , Public:false, ReadOnly:true }, "$name", $.String);

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:false, Public:false}, "options", $asm1B.TypeRef("System.Management.EnumerationOptions"));

    $.Field({Static:false, Public:false}, "enumWbem", $asm1B.TypeRef("System.Management.IEnumWbemClassObject"));

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.ICollection"), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementObjectCollection+ManagementObjectEnumerator */ 

(function ManagementObjectEnumerator$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementObjectCollection+ManagementObjectEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementObjectCollection"), $asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:true , Public:false, ReadOnly:true }, "$name", $.String);

    $.Field({Static:false, Public:false}, "enumWbem", $asm1B.TypeRef("System.Management.IEnumWbemClassObject"));

    $.Field({Static:false, Public:false}, "collectionObject", $asm1B.TypeRef("System.Management.ManagementObjectCollection"));

    $.Field({Static:false, Public:false}, "cachedCount", $.UInt32);

    $.Field({Static:false, Public:false}, "cacheIndex", $.Int32);

    $.Field({Static:false, Public:false}, "cachedObjects", $jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]));

    $.Field({Static:false, Public:false}, "atEndOfCollection", $.Boolean);

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Property({Static:false, Public:true }, "Current", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator"), 
      /* 1 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementObjectSearcher */ 

(function ManagementObjectSearcher$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Management.ManagementObjectSearcher", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ObjectQuery")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ObjectQuery"), 
          $asm1B.TypeRef("System.Management.EnumerationOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObjectCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementOperationObserver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Options", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.EnumerationOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Query", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ObjectQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Scope", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Options", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.EnumerationOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Query", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Scope", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:false, Public:false}, "query", $asm1B.TypeRef("System.Management.ObjectQuery"));

    $.Field({Static:false, Public:false}, "options", $asm1B.TypeRef("System.Management.EnumerationOptions"));

    $.Property({Static:false, Public:true }, "Scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Property({Static:false, Public:true }, "Query", $asm1B.TypeRef("System.Management.ObjectQuery"));

    $.Property({Static:false, Public:true }, "Options", $asm1B.TypeRef("System.Management.EnumerationOptions"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.ToolboxItemAttribute"), function () { return [false]; });

})();

/* delegate System.Management.ObjectReadyEventHandler */ 

JSIL.MakeDelegate("System.Management.ObjectReadyEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.ObjectReadyEventArgs")]));

/* delegate System.Management.CompletedEventHandler */ 

JSIL.MakeDelegate("System.Management.CompletedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.CompletedEventArgs")]));

/* delegate System.Management.ProgressEventHandler */ 

JSIL.MakeDelegate("System.Management.ProgressEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.ProgressEventArgs")]));

/* delegate System.Management.ObjectPutEventHandler */ 

JSIL.MakeDelegate("System.Management.ObjectPutEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1B.TypeRef("System.Management.ObjectPutEventArgs")]));

/* class System.Management.ManagementOperationObserver */ 

(function ManagementOperationObserver$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementOperationObserver", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Completed", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.CompletedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_ObjectPut", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectPutEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_ObjectReady", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectReadyEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_Progress", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ProgressEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FireCompleted", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.CompletedEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FireObjectPut", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectPutEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FireObjectReady", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectReadyEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FireProgress", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ProgressEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HaveListenersForProgress", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNewGetSink", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.WmiGetEventSink"), [
          $asm1B.TypeRef("System.Management.ManagementScope"), $.Object, 
          $asm1B.TypeRef("System.Management.ManagementObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNewPutSink", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.WmiEventSink"), [
          $asm1B.TypeRef("System.Management.ManagementScope"), $.Object, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNewSink", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.WmiEventSink"), [$asm1B.TypeRef("System.Management.ManagementScope"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Completed", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.CompletedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_ObjectPut", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectPutEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_ObjectReady", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ObjectReadyEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_Progress", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ProgressEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveSink", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.WmiEventSink"))
    );

    $.Field({Static:false, Public:false}, "m_sinkCollection", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "delegateInvoker", $asm1B.TypeRef("System.Management.WmiDelegateInvoker"));

    $.Field({Static:false, Public:false}, "ObjectReady", $asm1B.TypeRef("System.Management.ObjectReadyEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Completed", $asm1B.TypeRef("System.Management.CompletedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Progress", $asm1B.TypeRef("System.Management.ProgressEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObjectPut", $asm1B.TypeRef("System.Management.ObjectPutEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "HaveListenersForProgress", $.Boolean);

    $.Event({Static:false, Public:true }, "ObjectReady", $asm1B.TypeRef("System.Management.ObjectReadyEventHandler"));

    $.Event({Static:false, Public:true }, "Completed", $asm1B.TypeRef("System.Management.CompletedEventHandler"));

    $.Event({Static:false, Public:true }, "Progress", $asm1B.TypeRef("System.Management.ProgressEventHandler"));

    $.Event({Static:false, Public:true }, "ObjectPut", $asm1B.TypeRef("System.Management.ObjectPutEventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WmiEventState */ 

(function WmiEventState$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WmiEventState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Delegate"), $asm1B.TypeRef("System.Management.ManagementEventArgs"), 
          $asm07.TypeRef("System.Threading.AutoResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Args", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AutoResetEvent", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.AutoResetEvent"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Delegate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Delegate"))
    );

    $.Field({Static:false, Public:false}, "d", $asm07.TypeRef("System.Delegate"));

    $.Field({Static:false, Public:false}, "args", $asm1B.TypeRef("System.Management.ManagementEventArgs"));

    $.Field({Static:false, Public:false}, "h", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Property({Static:false, Public:true }, "Delegate", $asm07.TypeRef("System.Delegate"));

    $.Property({Static:false, Public:true }, "Args", $asm1B.TypeRef("System.Management.ManagementEventArgs"));

    $.Property({Static:false, Public:true }, "AutoResetEvent", $asm07.TypeRef("System.Threading.AutoResetEvent"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WmiDelegateInvoker */ 

(function WmiDelegateInvoker$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WmiDelegateInvoker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "FireEventToDelegates", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.MulticastDelegate"), $asm1B.TypeRef("System.Management.ManagementEventArgs")])
    );

    $.Field({Static:false, Public:false}, "sender", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Management.AuthenticationLevel */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.AuthenticationLevel", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Unchanged: -1, 
    Default: 0, 
    None: 1, 
    Connect: 2, 
    Call: 3, 
    Packet: 4, 
    PacketIntegrity: 5, 
    PacketPrivacy: 6, 
  }
);

/* enum System.Management.ImpersonationLevel */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.ImpersonationLevel", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Default: 0, 
    Anonymous: 1, 
    Identify: 2, 
    Impersonate: 3, 
    Delegate: 4, 
  }
);

/* enum System.Management.PutType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.PutType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    UpdateOnly: 1, 
    CreateOnly: 2, 
    UpdateOrCreate: 3, 
  }
);

/* class System.Management.ManagementOptions */ 

(function ManagementOptions$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Context", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementNamedValueCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Flags", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SendStatus", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Timeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetContext", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleIdentifierChange", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.IdentifierChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Context", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementNamedValueCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Flags", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SendStatus", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Timeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "InfiniteTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "flags", $.Int32);

    $.Field({Static:false, Public:false}, "context", $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"));

    $.Field({Static:false, Public:false}, "timeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function ManagementOptions__cctor () {
      $thisType.InfiniteTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ManagementOptions__cctor
    );

    $.Property({Static:false, Public:false}, "Flags", $.Int32);

    $.Property({Static:false, Public:true }, "Context", $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"));

    $.Property({Static:false, Public:true }, "Timeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "SendStatus", $.Boolean);

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0A.System.ComponentModel.ExpandableObjectConverter.__Type__]; });

})();

/* class System.Management.EnumerationOptions */ 

(function EnumerationOptions$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.EnumerationOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 10, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Int32, $.Boolean, 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlockSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DirectRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnsureLocatable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnumerateDeep", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PrototypeOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReturnImmediately", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Rewindable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAmendedQualifiers", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BlockSize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DirectRead", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnsureLocatable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnumerateDeep", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PrototypeOnly", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ReturnImmediately", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Rewindable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAmendedQualifiers", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "blockSize", $.Int32);

    $.Property({Static:false, Public:true }, "ReturnImmediately", $.Boolean);

    $.Property({Static:false, Public:true }, "BlockSize", $.Int32);

    $.Property({Static:false, Public:true }, "Rewindable", $.Boolean);

    $.Property({Static:false, Public:true }, "UseAmendedQualifiers", $.Boolean);

    $.Property({Static:false, Public:true }, "EnsureLocatable", $.Boolean);

    $.Property({Static:false, Public:true }, "PrototypeOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "DirectRead", $.Boolean);

    $.Property({Static:false, Public:true }, "EnumerateDeep", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.EventWatcherOptions */ 

(function EventWatcherOptions$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.EventWatcherOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlockSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BlockSize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "blockSize", $.Int32);

    $.Property({Static:false, Public:true }, "BlockSize", $.Int32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ObjectGetOptions */ 

(function ObjectGetOptions$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.ObjectGetOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementNamedValueCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAmendedQualifiers", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAmendedQualifiers", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Property({Static:false, Public:true }, "UseAmendedQualifiers", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.PutOptions */ 

(function PutOptions$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.PutOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementNamedValueCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Boolean, $asm1B.TypeRef("System.Management.PutType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.PutType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAmendedQualifiers", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.PutType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAmendedQualifiers", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Property({Static:false, Public:true }, "UseAmendedQualifiers", $.Boolean);

    $.Property({Static:false, Public:true }, "Type", $asm1B.TypeRef("System.Management.PutType"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.DeleteOptions */ 

(function DeleteOptions$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.DeleteOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.InvokeMethodOptions */ 

(function InvokeMethodOptions$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.InvokeMethodOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ConnectionOptions */ 

(function ConnectionOptions$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementOptions"), 
      Name: "System.Management.ConnectionOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.ImpersonationLevel"), $asm1B.TypeRef("System.Management.AuthenticationLevel"), 
          $.Boolean, $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Security.SecureString"), $.String, 
          $asm1B.TypeRef("System.Management.ImpersonationLevel"), $asm1B.TypeRef("System.Management.AuthenticationLevel"), 
          $.Boolean, $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementNamedValueCollection"), $asm07.TypeRef("System.TimeSpan"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementNamedValueCollection"))
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authentication", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.AuthenticationLevel"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authority", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnablePrivileges", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Impersonation", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ImpersonationLevel"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Locale", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Username", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPassword", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSecurePassword", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.SecureString"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Authentication", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.AuthenticationLevel"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Authority", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnablePrivileges", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Impersonation", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ImpersonationLevel"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Locale", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Password", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SecurePassword", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.SecureString"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Username", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Constant({Static:true , Public:false}, "DEFAULTLOCALE", $.String, null);

    $.Constant({Static:true , Public:false}, "DEFAULTAUTHORITY", $.String, null);

    $.Constant({Static:true , Public:false}, "DEFAULTIMPERSONATION", $asm1B.TypeRef("System.Management.ImpersonationLevel"), 3);

    $.Constant({Static:true , Public:false}, "DEFAULTAUTHENTICATION", $asm1B.TypeRef("System.Management.AuthenticationLevel"), -1);

    $.Constant({Static:true , Public:false}, "DEFAULTENABLEPRIVILEGES", $.Boolean, false);

    $.Field({Static:false, Public:false}, "locale", $.String);

    $.Field({Static:false, Public:false}, "username", $.String);

    $.Field({Static:false, Public:false}, "securePassword", $asm07.TypeRef("System.Security.SecureString"));

    $.Field({Static:false, Public:false}, "authority", $.String);

    $.Field({Static:false, Public:false}, "impersonation", $asm1B.TypeRef("System.Management.ImpersonationLevel"));

    $.Field({Static:false, Public:false}, "authentication", $asm1B.TypeRef("System.Management.AuthenticationLevel"));

    $.Field({Static:false, Public:false}, "enablePrivileges", $.Boolean);

    $.Property({Static:false, Public:true }, "Locale", $.String);

    $.Property({Static:false, Public:true }, "Username", $.String);

    $.Property({Static:false, Public:true }, "Password", $.String);

    $.Property({Static:false, Public:true }, "SecurePassword", $asm07.TypeRef("System.Security.SecureString"));

    $.Property({Static:false, Public:true }, "Authority", $.String);

    $.Property({Static:false, Public:true }, "Impersonation", $asm1B.TypeRef("System.Management.ImpersonationLevel"));

    $.Property({Static:false, Public:true }, "Authentication", $asm1B.TypeRef("System.Management.AuthenticationLevel"));

    $.Property({Static:false, Public:true }, "EnablePrivileges", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementPath */ 

(function ManagementPath$Members () {
  var $, $thisType;












































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementPath", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ClearKeys", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateWbemPath", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.IWbemPath"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DefaultPath", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_internalClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsClass", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSingleton", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespacePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelativePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Server", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagementPath", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespacePath", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNamespacePath", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.IWbemPath"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetWbemPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetWbemPath", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.IWbemPath")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidNamespaceSyntax", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_ClassName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "set_DefaultPath", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_internalClassName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_NamespacePath", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelativePath", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Server", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsClass", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsSingleton", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetNamespacePath", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetRelativePath", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetWbemPath", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "SetWbemPath", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.IWbemPath"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ICloneable.Clone", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.ICloneable"), "Clone");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateRelativePath", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false}, "defaultPath", $.Type);

    $.Field({Static:false, Public:false}, "isWbemPathShared", $.Boolean);

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "wmiPath", $asm1B.TypeRef("System.Management.IWbemPath"));

    $.Property({Static:true , Public:true }, "DefaultPath", $.Type);

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "Path", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; });

    $.Property({Static:false, Public:true }, "RelativePath", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; });

    $.Property({Static:false, Public:true }, "Server", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; });

    $.Property({Static:false, Public:true }, "NamespacePath", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; });

    $.Property({Static:false, Public:true }, "ClassName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; });

    $.Property({Static:false, Public:false}, "internalClassName", $.String);

    $.Property({Static:false, Public:true }, "IsClass", $.Boolean);

    $.Property({Static:false, Public:true }, "IsInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSingleton", $.Boolean);

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1B.System.Management.ManagementPathConverter.__Type__]; });

})();

/* class System.Management.ManagementPathConverter */ 

(function ManagementPathConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.ExpandableObjectConverter"), 
      Name: "System.Management.ManagementPathConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementQuery */ 

(function ManagementQuery$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryLanguage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ParseQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseToken", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseToken", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_QueryLanguage", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_QueryString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetQueryString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Constant({Static:true , Public:false}, "DEFAULTQUERYLANGUAGE", $.String, "WQL");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenSelect", $.String, "select ");

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "queryLanguage", $.String);

    $.Field({Static:false, Public:false}, "queryString", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "QueryString", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "QueryLanguage", $.String);

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1B.System.Management.ManagementQueryConverter.__Type__]; });

})();

/* class System.Management.ObjectQuery */ 

(function ObjectQuery$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementQuery"), 
      Name: "System.Management.ObjectQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.EventQuery */ 

(function EventQuery$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ManagementQuery"), 
      Name: "System.Management.EventQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WqlObjectQuery */ 

(function WqlObjectQuery$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.ObjectQuery"), 
      Name: "System.Management.WqlObjectQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryLanguage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "QueryLanguage", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.SelectQuery */ 

(function SelectQuery$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.WqlObjectQuery"), 
      Name: "System.Management.SelectQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Boolean, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildQuery", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSchemaQuery", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SelectedProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ParseQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ClassName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsSchemaQuery", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_QueryString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SelectedProperties", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.Field({Static:false, Public:false}, "isSchemaQuery", $.Boolean);

    $.Field({Static:false, Public:false}, "className", $.String);

    $.Field({Static:false, Public:false}, "condition", $.String);

    $.Field({Static:false, Public:false}, "selectedProperties", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "QueryString", $.String);

    $.Property({Static:false, Public:true }, "IsSchemaQuery", $.Boolean);

    $.Property({Static:false, Public:true }, "ClassName", $.String);

    $.Property({Static:false, Public:true }, "Condition", $.String);

    $.Property({Static:false, Public:true }, "SelectedProperties", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.RelatedObjectQuery */ 

(function RelatedObjectQuery$Members () {
  var $, $thisType;



























  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.WqlObjectQuery"), 
      Name: "System.Management.RelatedObjectQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildQuery", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassDefinitionsOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSchemaQuery", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelatedClass", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelatedQualifier", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelatedRole", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelationshipClass", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelationshipQualifier", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceObject", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ThisRole", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ParseQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ClassDefinitionsOnly", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsSchemaQuery", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelatedClass", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelatedQualifier", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelatedRole", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelationshipClass", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelationshipQualifier", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SourceObject", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ThisRole", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenAssociators", $.String, "associators");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenOf", $.String, "of");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenWhere", $.String, "where");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenResultClass", $.String, "resultclass");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenAssocClass", $.String, "assocclass");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenResultRole", $.String, "resultrole");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenRole", $.String, "role");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenRequiredQualifier", $.String, "requiredqualifier");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenRequiredAssocQualifier", $.String, "requiredassocqualifier");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenClassDefsOnly", $.String, "classdefsonly");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenSchemaOnly", $.String, "schemaonly");

    $.Field({Static:false, Public:false}, "isSchemaQuery", $.Boolean);

    $.Field({Static:false, Public:false}, "sourceObject", $.String);

    $.Field({Static:false, Public:false}, "relatedClass", $.String);

    $.Field({Static:false, Public:false}, "relationshipClass", $.String);

    $.Field({Static:false, Public:false}, "relatedQualifier", $.String);

    $.Field({Static:false, Public:false}, "relationshipQualifier", $.String);

    $.Field({Static:false, Public:false}, "relatedRole", $.String);

    $.Field({Static:false, Public:false}, "thisRole", $.String);

    $.Field({Static:false, Public:false}, "classDefinitionsOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSchemaQuery", $.Boolean);

    $.Property({Static:false, Public:true }, "SourceObject", $.String);

    $.Property({Static:false, Public:true }, "RelatedClass", $.String);

    $.Property({Static:false, Public:true }, "RelationshipClass", $.String);

    $.Property({Static:false, Public:true }, "RelatedQualifier", $.String);

    $.Property({Static:false, Public:true }, "RelationshipQualifier", $.String);

    $.Property({Static:false, Public:true }, "RelatedRole", $.String);

    $.Property({Static:false, Public:true }, "ThisRole", $.String);

    $.Property({Static:false, Public:true }, "ClassDefinitionsOnly", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.RelationshipQuery */ 

(function RelationshipQuery$Members () {
  var $, $thisType;





















  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.WqlObjectQuery"), 
      Name: "System.Management.RelationshipQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildQuery", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassDefinitionsOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSchemaQuery", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelationshipClass", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RelationshipQualifier", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceObject", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ThisRole", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ParseQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ClassDefinitionsOnly", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsSchemaQuery", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelationshipClass", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RelationshipQualifier", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SourceObject", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ThisRole", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenReferences", $.String, "references");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenOf", $.String, "of");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenWhere", $.String, "where");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenResultClass", $.String, "resultclass");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenRole", $.String, "role");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenRequiredQualifier", $.String, "requiredqualifier");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenClassDefsOnly", $.String, "classdefsonly");

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenSchemaOnly", $.String, "schemaonly");

    $.Field({Static:false, Public:false}, "sourceObject", $.String);

    $.Field({Static:false, Public:false}, "relationshipClass", $.String);

    $.Field({Static:false, Public:false}, "relationshipQualifier", $.String);

    $.Field({Static:false, Public:false}, "thisRole", $.String);

    $.Field({Static:false, Public:false}, "classDefinitionsOnly", $.Boolean);

    $.Field({Static:false, Public:false}, "isSchemaQuery", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSchemaQuery", $.Boolean);

    $.Property({Static:false, Public:true }, "SourceObject", $.String);

    $.Property({Static:false, Public:true }, "RelationshipClass", $.String);

    $.Property({Static:false, Public:true }, "RelationshipQualifier", $.String);

    $.Property({Static:false, Public:true }, "ThisRole", $.String);

    $.Property({Static:false, Public:true }, "ClassDefinitionsOnly", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WqlEventQuery */ 

(function WqlEventQuery$Members () {
  var $, $thisType;



























  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.EventQuery"), 
      Name: "System.Management.WqlEventQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("System.Array", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $jsilcore.TypeRef("System.Array", [$.String]), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BuildQuery", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EventClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GroupByPropertyList", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GroupWithinInterval", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HavingCondition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryLanguage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QueryString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WithinInterval", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ParseQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EventClassName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_GroupByPropertyList", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_GroupWithinInterval", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HavingCondition", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_QueryString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_WithinInterval", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "tokenSelectAll", $.String, "select * ");

    $.Field({Static:false, Public:false}, "eventClassName", $.String);

    $.Field({Static:false, Public:false}, "withinInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "condition", $.String);

    $.Field({Static:false, Public:false}, "groupWithinInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "groupByPropertyList", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Field({Static:false, Public:false}, "havingCondition", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "QueryLanguage", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "QueryString", $.String);

    $.Property({Static:false, Public:true }, "EventClassName", $.String);

    $.Property({Static:false, Public:true }, "Condition", $.String);

    $.Property({Static:false, Public:true }, "WithinInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "GroupWithinInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "GroupByPropertyList", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Property({Static:false, Public:true }, "HavingCondition", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementQueryConverter */ 

(function ManagementQueryConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.ExpandableObjectConverter"), 
      Name: "System.Management.ManagementQueryConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.CompatSwitches */ 

(function CompatSwitches$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Management.CompatSwitches", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "get_AllowIManagementObjectQI", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSwitchValueFromRegistry", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Constant({Static:true , Public:false}, "DotNetVersion", $.String, "v4.0.30319");

    $.Constant({Static:true , Public:false}, "RegKeyLocation", $.String, "SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319");

    $.Field({Static:true , Public:false, ReadOnly:true }, "s_syncLock", $.Object);

    $.Field({Static:true , Public:false}, "s_allowManagementObjectQI", $.Int32);

    $.Constant({Static:true , Public:false}, "c_WMIDisableCOMSecurity", $.String, "WMIDisableCOMSecurity");

    $.Property({Static:true , Public:true }, "AllowIManagementObjectQI", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WmiNetUtilsHelper */ 

(function WmiNetUtilsHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Management.WmiNetUtilsHelper", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:false}, "GetProcAddress", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.String]), 
      {
        Module: "kernel32.dll", 
      }
    )
      .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

    $.PInvokeMethod({Static:true , Public:false}, "LoadLibrary", 
      new JSIL.MethodSignature($.IntPtr, [$.String]), 
      {
        Module: "kernel32.dll", 
      }
    )
      .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

    $.Field({Static:true , Public:false}, "myDllPath", $.String);

    $.Field({Static:true , Public:false}, "ResetSecurity_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+ResetSecurity"));

    $.Field({Static:true , Public:false}, "SetSecurity_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+SetSecurity"));

    $.Field({Static:true , Public:false}, "BlessIWbemServices_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+BlessIWbemServices"));

    $.Field({Static:true , Public:false}, "BlessIWbemServicesObject_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+BlessIWbemServicesObject"));

    $.Field({Static:true , Public:false}, "GetPropertyHandle_f27", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetPropertyHandle"));

    $.Field({Static:true , Public:false}, "WritePropertyValue_f28", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+WritePropertyValue"));

    $.Field({Static:true , Public:false}, "GetQualifierSet_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetQualifierSet"));

    $.Field({Static:true , Public:false}, "Get_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Get"));

    $.Field({Static:true , Public:false}, "Put_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Put"));

    $.Field({Static:true , Public:false}, "Delete_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Delete"));

    $.Field({Static:true , Public:false}, "GetNames_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetNames"));

    $.Field({Static:true , Public:false}, "BeginEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+BeginEnumeration"));

    $.Field({Static:true , Public:false}, "Next_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Next"));

    $.Field({Static:true , Public:false}, "EndEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+EndEnumeration"));

    $.Field({Static:true , Public:false}, "GetPropertyQualifierSet_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetPropertyQualifierSet"));

    $.Field({Static:true , Public:false}, "Clone_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Clone"));

    $.Field({Static:true , Public:false}, "GetObjectText_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetObjectText"));

    $.Field({Static:true , Public:false}, "SpawnDerivedClass_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+SpawnDerivedClass"));

    $.Field({Static:true , Public:false}, "SpawnInstance_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+SpawnInstance"));

    $.Field({Static:true , Public:false}, "CompareTo_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+CompareTo"));

    $.Field({Static:true , Public:false}, "GetPropertyOrigin_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetPropertyOrigin"));

    $.Field({Static:true , Public:false}, "InheritsFrom_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+InheritsFrom"));

    $.Field({Static:true , Public:false}, "GetMethod_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetMethod"));

    $.Field({Static:true , Public:false}, "PutMethod_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+PutMethod"));

    $.Field({Static:true , Public:false}, "DeleteMethod_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+DeleteMethod"));

    $.Field({Static:true , Public:false}, "BeginMethodEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+BeginMethodEnumeration"));

    $.Field({Static:true , Public:false}, "NextMethod_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+NextMethod"));

    $.Field({Static:true , Public:false}, "EndMethodEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+EndMethodEnumeration"));

    $.Field({Static:true , Public:false}, "GetMethodQualifierSet_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetMethodQualifierSet"));

    $.Field({Static:true , Public:false}, "GetMethodOrigin_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetMethodOrigin"));

    $.Field({Static:true , Public:false}, "QualifierGet_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_Get"));

    $.Field({Static:true , Public:false}, "QualifierPut_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_Put"));

    $.Field({Static:true , Public:false}, "QualifierDelete_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_Delete"));

    $.Field({Static:true , Public:false}, "QualifierGetNames_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_GetNames"));

    $.Field({Static:true , Public:false}, "QualifierBeginEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_BeginEnumeration"));

    $.Field({Static:true , Public:false}, "QualifierNext_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_Next"));

    $.Field({Static:true , Public:false}, "QualifierEndEnumeration_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+QualifierSet_EndEnumeration"));

    $.Field({Static:true , Public:false}, "GetCurrentApartmentType_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetCurrentApartmentType"));

    $.Field({Static:true , Public:false}, "VerifyClientKey_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+VerifyClientKey"));

    $.Field({Static:true , Public:false}, "Clone_f12", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Clone"));

    $.Field({Static:true , Public:false}, "GetDemultiplexedStub_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetDemultiplexedStub"));

    $.Field({Static:true , Public:false}, "CreateInstanceEnumWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+CreateInstanceEnumWmi"));

    $.Field({Static:true , Public:false}, "CreateClassEnumWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+CreateClassEnumWmi"));

    $.Field({Static:true , Public:false}, "ExecQueryWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+ExecQueryWmi"));

    $.Field({Static:true , Public:false}, "ExecNotificationQueryWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+ExecNotificationQueryWmi"));

    $.Field({Static:true , Public:false}, "PutInstanceWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+PutInstanceWmi"));

    $.Field({Static:true , Public:false}, "PutClassWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+PutClassWmi"));

    $.Field({Static:true , Public:false}, "CloneEnumWbemClassObject_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+CloneEnumWbemClassObject"));

    $.Field({Static:true , Public:false}, "ConnectServerWmi_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+ConnectServerWmi"));

    $.Field({Static:true , Public:false}, "GetErrorInfo_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+GetErrorInfo"));

    $.Field({Static:true , Public:false}, "Initialize_f", $asm1B.TypeRef("System.Management.WmiNetUtilsHelper+Initialize"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.WmiNetUtilsHelper+ResetSecurity */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+ResetSecurity", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$asm07.TypeRef("System.IntPtr")]));

/* delegate System.Management.WmiNetUtilsHelper+SetSecurity */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+SetSecurity", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Boolean")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])]));

/* delegate System.Management.WmiNetUtilsHelper+BlessIWbemServices */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+BlessIWbemServices", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm1B.TypeRef("System.Management.IWbemServices"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
    ]), {
    Parameters: [
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+BlessIWbemServicesObject */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+BlessIWbemServicesObject", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Object"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
    ]), {
    Parameters: [
      {
        NativeType: "IUnknown"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetPropertyHandle */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetPropertyHandle", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+WritePropertyValue */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+WritePropertyValue", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetQualifierSet */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetQualifierSet", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]));

/* delegate System.Management.WmiNetUtilsHelper+Get */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Get", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+Put */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Put", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $asm07.TypeRef("System.Int32")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+Delete */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Delete", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetNames */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetNames", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.String")])])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , 
      {
        NativeType: "SafeArray", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+BeginEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+BeginEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32")
    ]));

/* delegate System.Management.WmiNetUtilsHelper+Next */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Next", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")])
    ]), {
    Parameters: [
      {
        NativeType: "BStr", 
        Out: true
      }, null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+EndEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+EndEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr")]));

/* delegate System.Management.WmiNetUtilsHelper+GetPropertyQualifierSet */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetPropertyQualifierSet", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+Clone */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Clone", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]));

/* delegate System.Management.WmiNetUtilsHelper+GetObjectText */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetObjectText", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")])
    ]), {
    Parameters: [
      {
        NativeType: "BStr", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+SpawnDerivedClass */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+SpawnDerivedClass", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]));

/* delegate System.Management.WmiNetUtilsHelper+SpawnInstance */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+SpawnInstance", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]));

/* delegate System.Management.WmiNetUtilsHelper+CompareTo */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+CompareTo", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr")
    ]));

/* delegate System.Management.WmiNetUtilsHelper+GetPropertyOrigin */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetPropertyOrigin", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, 
      {
        NativeType: "BStr", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+InheritsFrom */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+InheritsFrom", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetMethod */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetMethod", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+PutMethod */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+PutMethod", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.IntPtr")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+DeleteMethod */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+DeleteMethod", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+BeginMethodEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+BeginMethodEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32")
    ]));

/* delegate System.Management.WmiNetUtilsHelper+NextMethod */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+NextMethod", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]), {
    Parameters: [
      {
        NativeType: "BStr", 
        Out: true
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+EndMethodEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+EndMethodEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr")]));

/* delegate System.Management.WmiNetUtilsHelper+GetMethodQualifierSet */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetMethodQualifierSet", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IntPtr")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetMethodOrigin */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetMethodOrigin", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, 
      {
        NativeType: "BStr", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_Get */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_Get", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")])
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_Put */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_Put", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), 
      $asm07.TypeRef("System.Int32")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_Delete */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_Delete", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "LPWStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_GetNames */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_GetNames", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.String")])])
    ]), {
    Parameters: [
      {
        NativeType: "SafeArray", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_BeginEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_BeginEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32")
    ]));

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_Next */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_Next", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.String")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Int32")])
    ]), {
    Parameters: [
      {
        NativeType: "BStr", 
        Out: true
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+QualifierSet_EndEnumeration */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+QualifierSet_EndEnumeration", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr")]));

/* delegate System.Management.WmiNetUtilsHelper+GetCurrentApartmentType */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetCurrentApartmentType", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.WmiNetUtilsHelper+APTTYPE")])
    ]));

/* delegate System.Management.WmiNetUtilsHelper+VerifyClientKey */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+VerifyClientKey", false, [], 
  JSIL.MethodSignature.Void);

/* delegate System.Management.WmiNetUtilsHelper+GetDemultiplexedStub */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetDemultiplexedStub", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.Object"), $asm07.TypeRef("System.Boolean"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Object")])
    ]), {
    Parameters: [
      {
        NativeType: "IUnknown"
      }, null
      , 
      {
        NativeType: "IUnknown", 
        Out: true
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+CreateInstanceEnumWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+CreateInstanceEnumWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")]), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemServices"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+CreateClassEnumWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+CreateClassEnumWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")]), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemServices"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+ExecQueryWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+ExecQueryWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Int32"), $asm1B.TypeRef("System.Management.IWbemContext"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")]), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.Int32"), $asm1B.TypeRef("System.Management.IWbemServices"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "BStr"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+ExecNotificationQueryWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+ExecNotificationQueryWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Int32"), $asm1B.TypeRef("System.Management.IWbemContext"), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")]), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.Int32"), $asm1B.TypeRef("System.Management.IWbemServices"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "BStr"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+PutInstanceWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+PutInstanceWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemContext"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemServices"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "IntF"
      }, null
      , null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+PutClassWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+PutClassWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemContext"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm1B.TypeRef("System.Management.IWbemServices"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "IntF"
      }, null
      , null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+CloneEnumWbemClassObject */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+CloneEnumWbemClassObject", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")]), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.Int32"), $asm1B.TypeRef("System.Management.IEnumWbemClassObject"), 
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.String")
    ]), {
    Parameters: [
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null
      , 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }
    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+ConnectServerWmi */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+ConnectServerWmi", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.IntPtr"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.String"), 
      $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")]), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
    ]), {
    Parameters: [
      {
        NativeType: "BStr"
      }, 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }, null
      , 
      {
        NativeType: "BStr"
      }, 
      {
        NativeType: "IntF"
      }, 
      {
        NativeType: "IntF", 
        Out: true
      }, null
      , null

    ]
  }
);

/* delegate System.Management.WmiNetUtilsHelper+GetErrorInfo */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+GetErrorInfo", false, [], 
  JSIL.MethodSignature.Return($asm07.TypeRef("System.IntPtr")));

/* delegate System.Management.WmiNetUtilsHelper+Initialize */ 

JSIL.MakeDelegate("System.Management.WmiNetUtilsHelper+Initialize", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Int32"), [$asm07.TypeRef("System.Boolean"), $asm07.TypeRef("System.Boolean")]));

/* enum System.Management.WmiNetUtilsHelper+APTTYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.WmiNetUtilsHelper+APTTYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    APTTYPE_CURRENT: -1, 
    APTTYPE_STA: 0, 
    APTTYPE_MTA: 1, 
    APTTYPE_NA: 2, 
    APTTYPE_MAINSTA: 3, 
  }
);

/* class System.Management.ManagementScope */ 

(function ManagementScope$Members () {
  var $, $thisType;
































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementPath"), $asm1B.TypeRef("System.Management.IWbemServices"), 
          $asm1B.TypeRef("System.Management.ConnectionOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementPath"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm1B.TypeRef("System.Management.ConnectionOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementPath"), $asm1B.TypeRef("System.Management.ConnectionOptions")])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "_Clone", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "Connect", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FireIdentifierChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsConnected", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Options", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ConnectionOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_prvpath", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIWbemServices", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemServices"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSecuredConnectHandler", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.SecuredConnectHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSecuredIEnumWbemClassObjectHandler", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.SecuredIEnumWbemClassObjectHandler"), [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSecuredIWbemServicesHandler", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.SecuredIWbemServicesHandler"), [$asm1B.TypeRef("System.Management.IWbemServices")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSecurityHandler", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.SecurityHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleIdentifierChange", 
      new JSIL.MethodSignature(null, [$.Object, $asm1B.TypeRef("System.Management.IdentifierChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeGuts", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_IdentifierChanged", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.PInvokeMethod({Static:true , Public:false}, "RpcMgmtEnableIdleCleanup", 
      JSIL.MethodSignature.Return($.Int32), 
      {
        Module: "rpcrt4.dll", 
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Options", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ConnectionOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_prvpath", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementPath"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ICloneable.Clone", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.ICloneable"), "Clone");

    $.Field({Static:false, Public:false}, "validatedPath", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Field({Static:false, Public:false}, "wbemServices", $asm1B.TypeRef("System.Management.IWbemServices"));

    $.Field({Static:false, Public:false}, "options", $asm1B.TypeRef("System.Management.ConnectionOptions"));

    $.Field({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IsDefaulted", $.Boolean);

    $.Property({Static:false, Public:false}, "prvpath", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Property({Static:false, Public:true }, "IsConnected", $.Boolean);

    $.Property({Static:false, Public:true }, "Options", $asm1B.TypeRef("System.Management.ConnectionOptions"));

    $.Property({Static:false, Public:true }, "Path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Event({Static:false, Public:false}, "IdentifierChanged", $asm1B.TypeRef("System.Management.IdentifierChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1B.System.Management.ManagementScopeConverter.__Type__]; });

})();

/* class System.Management.SecuredIEnumWbemClassObjectHandler */ 

(function SecuredIEnumWbemClassObjectHandler$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SecuredIEnumWbemClassObjectHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone_", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Next_", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "NextAsync_", 
      new JSIL.MethodSignature($.Int32, [$.UInt32, $asm1B.TypeRef("System.Management.IWbemObjectSink")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Reset_", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "Skip_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.UInt32])
    );

    $.Field({Static:false, Public:false}, "pEnumWbemClassObjectsecurityHelper", $asm1B.TypeRef("System.Management.IEnumWbemClassObject"));

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.SecuredConnectHandler */ 

(function SecuredConnectHandler$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SecuredConnectHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ConnectNSecureIWbemServices", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")])])
    );

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.SecuredIWbemServicesHandler */ 

(function SecuredIWbemServicesHandler$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SecuredIWbemServicesHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.IWbemServices")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelAsyncCall_", 
      new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateClassEnum_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateClassEnumAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInstanceEnum_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInstanceEnumAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteClass_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteClassAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteInstance_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteInstanceAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecMethod_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]), 
          $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecMethodAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecNotificationQuery_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecNotificationQueryAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecQuery_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecQueryAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetObject_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]), 
          $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetObjectAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OpenNamespace_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")]), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PutClass_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PutClassAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PutInstance_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PutInstanceAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "QueryObjectSink_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemObjectSink")])])
    );

    $.Field({Static:false, Public:false}, "pWbemServiecsSecurityHelper", $asm1B.TypeRef("System.Management.IWbemServices"));

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.SecurityHandler */ 

(function SecurityHandler$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SecurityHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Secure", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.IWbemServices"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SecureIUnknown", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "needToReset", $.Boolean);

    $.Field({Static:false, Public:false}, "handle", $.IntPtr);

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ManagementScopeConverter */ 

(function ManagementScopeConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.ExpandableObjectConverter"), 
      Name: "System.Management.ManagementScopeConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.RC */ 

(function RC$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.RC", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "resMgr", $asm07.TypeRef("System.Resources.ResourceManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ValueTypeSafety */ 

(function ValueTypeSafety$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ValueTypeSafety", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSafeObject", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.PropertyData */ 

(function PropertyData$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.PropertyData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementBaseObject"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsArray", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLocal", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NullEnumValue", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Origin", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Qualifiers", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.QualifierDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.CimType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "MapValueToWmiValue", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $asm1B.TypeRef("System.Management.CimType"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapValueToWmiValue", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.CimType")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapWmiValueToValue", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $asm1B.TypeRef("System.Management.CimType"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RefreshPropertyInfo", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_NullEnumValue", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "propertyName", $.String);

    $.Field({Static:false, Public:false}, "propertyValue", $.Object);

    $.Field({Static:false, Public:false}, "propertyNullEnumValue", $.Int64);

    $.Field({Static:false, Public:false}, "propertyType", $.Int32);

    $.Field({Static:false, Public:false}, "propertyFlavor", $.Int32);

    $.Field({Static:false, Public:false}, "qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "Type", $asm1B.TypeRef("System.Management.CimType"));

    $.Property({Static:false, Public:true }, "IsLocal", $.Boolean);

    $.Property({Static:false, Public:true }, "IsArray", $.Boolean);

    $.Property({Static:false, Public:true }, "Origin", $.String);

    $.Property({Static:false, Public:true }, "Qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));

    $.Property({Static:false, Public:false}, "NullEnumValue", $.Int64);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.PropertyDataCollection */ 

(function PropertyDataCollection$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.PropertyDataCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementBaseObject"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm1B.TypeRef("System.Management.CimType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $asm1B.TypeRef("System.Management.CimType"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.PropertyData")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.PropertyData"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.PropertyDataCollection+PropertyDataEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "isSystem", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $asm1B.TypeRef("System.Management.PropertyData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.ICollection"), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Management.PropertyDataCollection+PropertyDataEnumerator */ 

(function PropertyDataEnumerator$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.PropertyDataCollection+PropertyDataEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementBaseObject"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.PropertyData"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "propertyNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "index", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm1B.TypeRef("System.Management.PropertyData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.QualifierData */ 

(function QualifierData$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.QualifierData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementBaseObject"), $.String, 
          $.String, $asm1B.TypeRef("System.Management.QualifierType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsAmended", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLocal", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsOverridable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PropagatesToInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PropagatesToSubclass", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "MapQualValueToWmiValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "RefreshQualifierInfo", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsAmended", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsOverridable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PropagatesToInstance", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PropagatesToSubclass", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "propertyOrMethodName", $.String);

    $.Field({Static:false, Public:false}, "qualifierName", $.String);

    $.Field({Static:false, Public:false}, "qualifierType", $asm1B.TypeRef("System.Management.QualifierType"));

    $.Field({Static:false, Public:false}, "qualifierValue", $.Object);

    $.Field({Static:false, Public:false}, "qualifierFlavor", $.Int32);

    $.Field({Static:false, Public:false}, "qualifierSet", $asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "IsAmended", $.Boolean);

    $.Property({Static:false, Public:true }, "IsLocal", $.Boolean);

    $.Property({Static:false, Public:true }, "PropagatesToInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "PropagatesToSubclass", $.Boolean);

    $.Property({Static:false, Public:true }, "IsOverridable", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.QualifierDataCollection */ 

(function QualifierDataCollection$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.QualifierDataCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementBaseObject"), $.String, 
          $asm1B.TypeRef("System.Management.QualifierType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.QualifierData")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.QualifierData"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.QualifierDataCollection+QualifierDataEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeQualifierSet", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeQualifierSet", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded"), [$asm1B.TypeRef("System.Management.QualifierType")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "propertyOrMethodName", $.String);

    $.Field({Static:false, Public:false}, "qualifierSetType", $asm1B.TypeRef("System.Management.QualifierType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $asm1B.TypeRef("System.Management.QualifierData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.ICollection"), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Management.QualifierDataCollection+QualifierDataEnumerator */ 

(function QualifierDataEnumerator$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.QualifierDataCollection+QualifierDataEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementBaseObject"), $.String, 
          $asm1B.TypeRef("System.Management.QualifierType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.QualifierData"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Field({Static:false, Public:false}, "propertyOrMethodName", $.String);

    $.Field({Static:false, Public:false}, "qualifierType", $asm1B.TypeRef("System.Management.QualifierType"));

    $.Field({Static:false, Public:false}, "qualifierNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "index", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm1B.TypeRef("System.Management.QualifierData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.MethodData */ 

(function MethodData$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MethodData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.ManagementObject"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InParameters", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Origin", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OutParameters", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementBaseObject"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Qualifiers", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.QualifierDataCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RefreshMethodInfo", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Field({Static:false, Public:false}, "methodName", $.String);

    $.Field({Static:false, Public:false}, "wmiInParams", $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"));

    $.Field({Static:false, Public:false}, "wmiOutParams", $asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"));

    $.Field({Static:false, Public:false}, "qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "InParameters", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "OutParameters", $asm1B.TypeRef("System.Management.ManagementBaseObject"));

    $.Property({Static:false, Public:true }, "Origin", $.String);

    $.Property({Static:false, Public:true }, "Qualifiers", $asm1B.TypeRef("System.Management.QualifierDataCollection"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.MethodDataCollection */ 

(function MethodDataCollection$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MethodDataCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementObject"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $asm1B.TypeRef("System.Management.ManagementBaseObject"), 
          $asm1B.TypeRef("System.Management.ManagementBaseObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.MethodData")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.MethodData"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.MethodDataCollection+MethodDataEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $asm1B.TypeRef("System.Management.MethodData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.ICollection"), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Management.MethodDataCollection+enumLock */ 

(function enumLock$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MethodDataCollection+enumLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.MethodDataCollection+MethodDataEnumerator */ 

(function MethodDataEnumerator$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MethodDataCollection+MethodDataEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementObject"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.MethodData"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "parent", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Field({Static:false, Public:false}, "methodNames", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "en", $asm07.TypeRef("System.Collections.IEnumerator"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm1B.TypeRef("System.Management.MethodData"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WmiEventSink */ 

(function WmiEventSink$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WmiEventSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.Object, 
          $asm1B.TypeRef("System.Management.ManagementScope"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_InternalObjectPut", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.InternalObjectPutEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Stub", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemObjectSink"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetWmiEventSink", 
      new JSIL.MethodSignature($.Type, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.Object, 
          $asm1B.TypeRef("System.Management.ManagementScope"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "HackToCreateWmiEventSink", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Indicate", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseStub", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_InternalObjectPut", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.InternalObjectPutEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetStatus", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $.IntPtr
        ])
    );

    $.Field({Static:true , Public:false}, "s_hash", $.Int32);

    $.Field({Static:false, Public:false}, "hash", $.Int32);

    $.Field({Static:false, Public:false}, "watcher", $asm1B.TypeRef("System.Management.ManagementOperationObserver"));

    $.Field({Static:false, Public:false}, "context", $.Object);

    $.Field({Static:false, Public:false}, "scope", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:false, Public:false}, "stub", $.Object);

    $.Field({Static:false, Public:false}, "InternalObjectPut", $asm1B.TypeRef("System.Management.InternalObjectPutEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "path", $asm1B.TypeRef("System.Management.ManagementPath"));

    $.Field({Static:false, Public:false}, "className", $.String);

    $.Field({Static:false, Public:false}, "isLocal", $.Boolean);

    $.Field({Static:true , Public:false}, "watcherParameter", $asm1B.TypeRef("System.Management.ManagementOperationObserver"));

    $.Field({Static:true , Public:false}, "contextParameter", $.Object);

    $.Field({Static:true , Public:false}, "scopeParameter", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:true , Public:false}, "pathParameter", $.String);

    $.Field({Static:true , Public:false}, "classNameParameter", $.String);

    $.Field({Static:true , Public:false}, "wmiEventSinkNew", $.Type);

    $.Property({Static:false, Public:true }, "Stub", $asm1B.TypeRef("System.Management.IWbemObjectSink"));

    $.Event({Static:false, Public:false}, "InternalObjectPut", $asm1B.TypeRef("System.Management.InternalObjectPutEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm1B.TypeRef("System.Management.IWmiEventSource")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.WmiGetEventSink */ 

(function WmiGetEventSink$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1B.TypeRef("System.Management.WmiEventSink"), 
      Name: "System.Management.WmiGetEventSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.Object, 
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ManagementObject")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetWmiGetEventSink", 
      new JSIL.MethodSignature($.Type, [
          $asm1B.TypeRef("System.Management.ManagementOperationObserver"), $.Object, 
          $asm1B.TypeRef("System.Management.ManagementScope"), $asm1B.TypeRef("System.Management.ManagementObject")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "HackToCreateWmiGetEventSink", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Indicate", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.Field({Static:false, Public:false}, "managementObject", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Field({Static:true , Public:false}, "watcherParameter", $asm1B.TypeRef("System.Management.ManagementOperationObserver"));

    $.Field({Static:true , Public:false}, "contextParameter", $.Object);

    $.Field({Static:true , Public:false}, "scopeParameter", $asm1B.TypeRef("System.Management.ManagementScope"));

    $.Field({Static:true , Public:false}, "managementObjectParameter", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Field({Static:true , Public:false}, "wmiGetEventSinkNew", $.Type);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Management.CodeLanguage */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.CodeLanguage", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    CSharp: 0, 
    JScript: 1, 
    VB: 2, 
    VJSharp: 3, 
    Mcpp: 4, 
  }
);

/* class System.Management.ManagementClassGenerator */ 

(function ManagementClassGenerator$Members () {
  var $, $thisType;






























































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ManagementClassGenerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddClassComments", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCommentsForEmbeddedProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddGetStatementsForEnumArray", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.CodeDom.CodeIndexerExpression"), $asm0A.TypeRef("System.CodeDom.CodeMemberProperty")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPropertySet", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.CodeDom.CodeIndexerExpression"), $.Boolean, 
          $asm0A.TypeRef("System.CodeDom.CodeStatementCollection"), $.String, 
          $asm0A.TypeRef("System.CodeDom.CodeVariableReferenceExpression")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToDateTimeFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToDMTFDateTimeFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToDMTFTimeIntervalFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToTimeSpanFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckIfClassIsProperlyInitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertBitMapValueToInt32", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertCIMType", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeTypeReference"), [$asm1B.TypeRef("System.Management.CimType"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertPropertyToString", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeExpression"), [$.String, $asm0A.TypeRef("System.CodeDom.CodeExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertToNumericValueAndAddToArray", 
      new JSIL.MethodSignature($.String, [
          $asm1B.TypeRef("System.Management.CimType"), $.String, 
          $asm07.TypeRef("System.Collections.ArrayList"), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertValuesToName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateObjectForProperty", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeExpression"), [$.String, $asm0A.TypeRef("System.CodeDom.CodeExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "DateTimeConversionFunctionHelper", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.CodeDom.CodeStatementCollection"), $.String, 
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenarateConstructorWithLateBound", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenarateConstructorWithLateBoundForEmbedded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateAndWriteCode", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.CodeLanguage")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateClassNameProperty", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateCode", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"), [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateCode", 
      new JSIL.MethodSignature($.Boolean, [
          $asm1B.TypeRef("System.Management.CodeLanguage"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCodeForRefAndDateTimeTypes", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.CodeDom.CodeIndexerExpression"), $.Boolean, 
          $asm0A.TypeRef("System.CodeDom.CodeStatementCollection"), $.String, 
          $asm0A.TypeRef("System.CodeDom.CodeVariableReferenceExpression"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCollectionClass", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCommitMethod", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateConcatStrings", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMethodInvokeExpression"), [$asm0A.TypeRef("System.CodeDom.CodeExpression"), $asm0A.TypeRef("System.CodeDom.CodeExpression")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithKeys", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithOptions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithPath", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithPathOptions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithScopeKeys", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithScopeOptions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithScopePath", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructorWithScopePathOptions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateConstructPath", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCreateInstance", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDateTimeConversionFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDefaultConstructor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDeleteInstance", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateEnumeratorClass", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithCondition", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithNoParameters", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithScopeCondition", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithScopeProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithScopeWhereProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetInstancesWithWhereProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateIfClassvalidFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateIfClassvalidFuncWithAllParams", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateInitializeObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateMethods", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateMethodToInitializeVariables", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePathProperty", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePrivateMember", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePrivateMember", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0A.TypeRef("System.CodeDom.CodeExpression"), $.Boolean, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePropertyHelperEnums", 
      new JSIL.MethodSignature($.Boolean, [
          $asm1B.TypeRef("System.Management.PropertyData"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePublicProperty", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0A.TypeRef("System.CodeDom.CodeExpression"), $.Boolean, 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePublicReadOnlyProperty", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $.Boolean, 
          $.Boolean, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateScopeProperty", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSystemPropertiesClass", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateTimeSpanConversionFunction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateTypeConverterClass", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GeneratedFileName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GeneratedTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCodeTypeDeclarationForClass", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetConversionFunction", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.CimType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDateTimeType", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.PropertyData"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.CodeDom.CodeTypeReference")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetUnsignedSupport", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.CodeLanguage"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeClassObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCodeGeneration", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCodeGenerator", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.CodeLanguage")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCodeTypeDeclaration", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.CodeLanguage"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitilializePublicPrivateMembers", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitPrivateMemberVariables", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsContainedIn", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.SortedList")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsContainedInArray", 
      new JSIL.MethodSignature($.Boolean, [$.String, $asm07.TypeRef("System.Collections.ArrayList")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsDesignerSerializationVisibilityToBeSet", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDynamicClass", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsPropertyValueType", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.CimType")])
    );

    $.ExternalMethod({Static:true , Public:false}, "isTypeInt", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.CimType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessNamespaceAndClassName", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessNamingCollisions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessPropertyQualifiers", 
      new JSIL.MethodSignature($.String, [
          $asm1B.TypeRef("System.Management.PropertyData"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveCollision", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveEnumNameValues", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.ArrayList"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ArrayList")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ToDMTFDateHelper", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToTimeSpanHelper", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $asm0A.TypeRef("System.CodeDom.CodeStatementCollection")
        ])
    );

    $.Field({Static:false, Public:false}, "VSVERSION", $.String);

    $.Field({Static:false, Public:false}, "OriginalServer", $.String);

    $.Field({Static:false, Public:false}, "OriginalNamespace", $.String);

    $.Field({Static:false, Public:false}, "OriginalClassName", $.String);

    $.Field({Static:false, Public:false}, "OriginalPath", $.String);

    $.Field({Static:false, Public:false}, "bSingletonClass", $.Boolean);

    $.Field({Static:false, Public:false}, "bUnsignedSupported", $.Boolean);

    $.Field({Static:false, Public:false}, "NETNamespace", $.String);

    $.Field({Static:false, Public:false}, "arrConvFuncName", $.String);

    $.Field({Static:false, Public:false}, "enumType", $.String);

    $.Constant({Static:true , Public:false}, "DMTF_DATETIME_STR_LENGTH", $.Int32, 25);

    $.Field({Static:false, Public:false}, "bDateConversionFunctionsAdded", $.Boolean);

    $.Field({Static:false, Public:false}, "bTimeSpanConversionFunctionsAdded", $.Boolean);

    $.Field({Static:false, Public:false}, "classobj", $asm1B.TypeRef("System.Management.ManagementClass"));

    $.Field({Static:false, Public:false}, "cp", $asm0A.TypeRef("System.CodeDom.Compiler.CodeDomProvider"));

    $.Field({Static:false, Public:false}, "tw", $asm07.TypeRef("System.IO.TextWriter"));

    $.Field({Static:false, Public:false}, "genFileName", $.String);

    $.Field({Static:false, Public:false}, "cc", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Field({Static:false, Public:false}, "ccc", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Field({Static:false, Public:false}, "ecc", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Field({Static:false, Public:false}, "EnumObj", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Field({Static:false, Public:false}, "cn", $asm0A.TypeRef("System.CodeDom.CodeNamespace"));

    $.Field({Static:false, Public:false}, "cmp", $asm0A.TypeRef("System.CodeDom.CodeMemberProperty"));

    $.Field({Static:false, Public:false}, "cctor", $asm0A.TypeRef("System.CodeDom.CodeConstructor"));

    $.Field({Static:false, Public:false}, "cf", $asm0A.TypeRef("System.CodeDom.CodeMemberField"));

    $.Field({Static:false, Public:false}, "coce", $asm0A.TypeRef("System.CodeDom.CodeObjectCreateExpression"));

    $.Field({Static:false, Public:false}, "cpde", $asm0A.TypeRef("System.CodeDom.CodeParameterDeclarationExpression"));

    $.Field({Static:false, Public:false}, "cie", $asm0A.TypeRef("System.CodeDom.CodeIndexerExpression"));

    $.Field({Static:false, Public:false}, "cmf", $asm0A.TypeRef("System.CodeDom.CodeMemberField"));

    $.Field({Static:false, Public:false}, "cmm", $asm0A.TypeRef("System.CodeDom.CodeMemberMethod"));

    $.Field({Static:false, Public:false}, "cpre", $asm0A.TypeRef("System.CodeDom.CodePropertyReferenceExpression"));

    $.Field({Static:false, Public:false}, "cmie", $asm0A.TypeRef("System.CodeDom.CodeMethodInvokeExpression"));

    $.Field({Static:false, Public:false}, "cmis", $asm0A.TypeRef("System.CodeDom.CodeExpressionStatement"));

    $.Field({Static:false, Public:false}, "cis", $asm0A.TypeRef("System.CodeDom.CodeConditionStatement"));

    $.Field({Static:false, Public:false}, "cboe", $asm0A.TypeRef("System.CodeDom.CodeBinaryOperatorExpression"));

    $.Field({Static:false, Public:false}, "cfls", $asm0A.TypeRef("System.CodeDom.CodeIterationStatement"));

    $.Field({Static:false, Public:false}, "caa", $asm0A.TypeRef("System.CodeDom.CodeAttributeArgument"));

    $.Field({Static:false, Public:false}, "cad", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Field({Static:false, Public:false}, "arrKeyType", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "arrKeys", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "BitMap", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "BitValues", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "ValueMap", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "Values", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "PublicProperties", $asm07.TypeRef("System.Collections.SortedList"));

    $.Field({Static:false, Public:false}, "PublicMethods", $asm07.TypeRef("System.Collections.SortedList"));

    $.Field({Static:false, Public:false}, "PublicNamesUsed", $asm07.TypeRef("System.Collections.SortedList"));

    $.Field({Static:false, Public:false}, "PrivateNamesUsed", $asm07.TypeRef("System.Collections.SortedList"));

    $.Field({Static:false, Public:false}, "CommentsString", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "bHasEmbeddedProperties", $.Boolean);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_SHOULDSERIALIZE", $.Int32, 0);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_ISPROPNULL", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_RESETPROP", $.Int32, 2);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_ATTRIBPROP", $.Int32, 3);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_DATECONVFUNC", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_GETINSTANCES", $.Int32, 5);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_CLASSBEGIN", $.Int32, 6);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_PRIV_AUTOCOMMIT", $.Int32, 7);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_CONSTRUCTORS", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_ORIG_NAMESPACE", $.Int32, 9);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_CLASSNAME", $.Int32, 10);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_SYSOBJECT", $.Int32, 11);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_LATEBOUNDOBJ", $.Int32, 12);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_MGMTSCOPE", $.Int32, 13);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_AUTOCOMMITPROP", $.Int32, 14);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_MGMTPATH", $.Int32, 15);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_PROP_TYPECONVERTER", $.Int32, 16);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_SYSPROPCLASS", $.Int32, 17);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_ENUMIMPL", $.Int32, 18);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_LATEBOUNDPROP", $.Int32, 19);

    $.Constant({Static:true , Public:false}, "IDS_COMMENTS_CREATEDCLASS", $.Int32, 20);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_EMBEDDEDOBJ", $.Int32, 21);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_CURRENTOBJ", $.Int32, 22);

    $.Constant({Static:true , Public:false}, "IDS_COMMENT_FLAGFOREMBEDDED", $.Int32, 23);

    $.Property({Static:false, Public:true }, "GeneratedFileName", $.String);

    $.Property({Static:false, Public:true }, "GeneratedTypeName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Management.IWmiEventSource */ 

JSIL.MakeInterface(
  "System.Management.IWmiEventSource", false, [], function ($) {
    $.Method({}, "Indicate", JSIL.MethodSignature.Action($.IntPtr));
    $.Method({}, "SetStatus", new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $.IntPtr
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["87A5AD68-A38A-43ef-ACA9-EFE910E5D24C"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Management.WbemErrorInfo */ 

(function WbemErrorInfo$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemErrorInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GetErrorInfo", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Management.IErrorInfo */ 

JSIL.MakeInterface(
  "System.Management.IErrorInfo", false, [], function ($) {
    $.Method({}, "GetGUID", JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")));
    $.Method({}, "GetSource", JSIL.MethodSignature.Return($.String));
    $.Method({}, "GetDescription", JSIL.MethodSignature.Return($.String));
    $.Method({}, "GetHelpFile", JSIL.MethodSignature.Return($.String));
    $.Method({}, "GetHelpContext", JSIL.MethodSignature.Return($.UInt32));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1CF2B120-547D-101B-8E65-08002B2BD119"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Management.IWbemClassObjectFreeThreaded */ 

(function IWbemClassObjectFreeThreaded$Members () {
  var $, $thisType;








































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.IWbemClassObjectFreeThreaded", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginEnumeration_", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginMethodEnumeration_", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Clone_", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])])
    );

    $.PInvokeMethod({Static:true , Public:false}, "CoMarshalInterface", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Runtime.InteropServices.ComTypes.IStream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")]), 
          $.IntPtr, $.UInt32, 
          $.IntPtr, $.UInt32
        ]), 
      {
        Module: "ole32.dll", 
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "CompareTo_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Type])
    );

    $.PInvokeMethod({Static:true , Public:false}, "CoUnmarshalInterface", 
      new JSIL.MethodSignature($.IntPtr, [$asm07.TypeRef("System.Runtime.InteropServices.ComTypes.IStream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])]), 
      {
        Module: "ole32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "CreateStreamOnHGlobal", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.InteropServices.ComTypes.IStream"), [$.IntPtr, $.Int32]), 
      {
        Module: "ole32.dll", 
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete_", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "DeleteMethod_", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeserializeFromBlob", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose_", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "EndEnumeration_", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "EndMethodEnumeration_", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "Get_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetHGlobalFromStream", 
      new JSIL.MethodSignature($.IntPtr, [$asm07.TypeRef("System.Runtime.InteropServices.ComTypes.IStream")]), 
      {
        Module: "ole32.dll", 
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMethod_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Type]), $jsilcore.TypeRef("JSIL.Reference", [$.Type])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMethodOrigin_", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMethodQualifierSet_", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetNames_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetObjectText_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertyOrigin_", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertyQualifierSet_", 
      new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetQualifierSet_", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSetFreeThreaded")])])
    );

    $.PInvokeMethod({Static:true , Public:false}, "GlobalLock", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "GlobalUnlock", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "InheritsFrom_", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Next_", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "NextMethod_", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Type]), $jsilcore.TypeRef("JSIL.Reference", [$.Type])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.IntPtr, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "Put_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "PutMethod_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Type, $.Type
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeToBlob", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SpawnDerivedClass_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Type])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SpawnInstance_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Type])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData");

    $.Constant({Static:true , Public:false}, "SerializationBlobName", $.String, "flatWbemClassObject");

    $.Field({Static:true , Public:false, ReadOnly:true }, "$name", $.String);

    $.Field({Static:true , Public:true }, "IID_IWbemClassObject", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "pWbemClassObject", $.IntPtr);


    function IWbemClassObjectFreeThreaded__cctor () {
      $thisType.IID_IWbemClassObject = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      IWbemClassObjectFreeThreaded__cctor
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Management.IWbemClassObjectFreeThreaded+STATFLAG */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.IWbemClassObjectFreeThreaded+STATFLAG", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    STATFLAG_DEFAULT: 0, 
    STATFLAG_NONAME: 1, 
  }
);

/* enum System.Management.IWbemClassObjectFreeThreaded+MSHCTX */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.IWbemClassObjectFreeThreaded+MSHCTX", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    MSHCTX_LOCAL: 0, 
    MSHCTX_NOSHAREDMEM: 1, 
    MSHCTX_DIFFERENTMACHINE: 2, 
    MSHCTX_INPROC: 3, 
  }
);

/* enum System.Management.IWbemClassObjectFreeThreaded+MSHLFLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.IWbemClassObjectFreeThreaded+MSHLFLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    MSHLFLAGS_NORMAL: 0, 
    MSHLFLAGS_TABLESTRONG: 1, 
    MSHLFLAGS_TABLEWEAK: 2, 
    MSHLFLAGS_NOPING: 3, 
  }
);

/* class System.Management.IWbemQualifierSetFreeThreaded */ 

(function IWbemQualifierSetFreeThreaded$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.IWbemQualifierSetFreeThreaded", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginEnumeration_", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Delete_", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose_", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "EndEnumeration_", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "Get_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetNames_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Next_", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Put_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $.Int32
        ])
    );

    $.Constant({Static:true , Public:false}, "SerializationBlobName", $.String, "flatWbemClassObject");

    $.Field({Static:true , Public:false, ReadOnly:true }, "$name", $.String);

    $.Field({Static:true , Public:true }, "IID_IWbemClassObject", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "pWbemQualifierSet", $.IntPtr);


    function IWbemQualifierSetFreeThreaded__cctor () {
      $thisType.IID_IWbemClassObject = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      IWbemQualifierSetFreeThreaded__cctor
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.MarshalWbemObject */ 

(function MarshalWbemObject$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MarshalWbemObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CleanUpManagedData", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CleanUpNativeData", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.InteropServices.ICustomMarshaler"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNativeDataSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MarshalManagedToNative", 
      new JSIL.MethodSignature($.IntPtr, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MarshalNativeToManaged", 
      new JSIL.MethodSignature($.Object, [$.IntPtr])
    );

    $.Field({Static:false, Public:false}, "cookie", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.InteropServices.ICustomMarshaler")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Management.IWbemClassObject_DoNotMarshal */ 

JSIL.MakeInterface(
  "System.Management.IWbemClassObject_DoNotMarshal", false, [], function ($) {
    $.Method({}, "GetQualifierSet_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "Get_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "Put_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Int32
        ]));
    $.Method({}, "Delete_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetNames_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])
        ]));
    $.Method({}, "BeginEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Next_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "EndEnumeration_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetPropertyQualifierSet_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "Clone_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
    $.Method({}, "GetObjectText_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "SpawnDerivedClass_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
    $.Method({}, "SpawnInstance_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
    $.Method({}, "CompareTo_", new JSIL.MethodSignature($.Int32, [$.Int32, $.Type]));
    $.Method({}, "GetPropertyOrigin_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "InheritsFrom_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Type]), $jsilcore.TypeRef("JSIL.Reference", [$.Type])
        ]));
    $.Method({}, "PutMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Type, $.Type
        ]));
    $.Method({}, "DeleteMethod_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "BeginMethodEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "NextMethod_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Type]), $jsilcore.TypeRef("JSIL.Reference", [$.Type])
        ]));
    $.Method({}, "EndMethodEnumeration_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetMethodQualifierSet_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "GetMethodOrigin_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["DC12A681-737F-11CF-884D-00AA004B2E24"]; });

/* interface System.Management.IWbemQualifierSet_DoNotMarshal */ 

JSIL.MakeInterface(
  "System.Management.IWbemQualifierSet_DoNotMarshal", false, [], function ($) {
    $.Method({}, "Get_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "Put_", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $.Int32
        ]));
    $.Method({}, "Delete_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetNames_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])]));
    $.Method({}, "BeginEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Next_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "EndEnumeration_", JSIL.MethodSignature.Return($.Int32));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["DC12A680-737F-11CF-884D-00AA004B2E24"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; });

/* interface System.Management.IWbemLocator */ 

JSIL.MakeInterface(
  "System.Management.IWbemLocator", false, [], function ($) {
    $.Method({}, "ConnectServer_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.IntPtr, $.String, 
          $.Int32, $.String, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["DC12A687-737F-11CF-884D-00AA004B2E24"]; });

/* interface System.Management.IWbemContext */ 

JSIL.MakeInterface(
  "System.Management.IWbemContext", false, [], function ($) {
    $.Method({}, "Clone_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
    $.Method({}, "GetNames_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])]));
    $.Method({}, "BeginEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Next_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "EndEnumeration_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "SetValue_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "GetValue_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "DeleteValue_", new JSIL.MethodSignature($.Int32, [$.String, $.Int32]));
    $.Method({}, "DeleteAll_", JSIL.MethodSignature.Return($.Int32));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["44ACA674-E8FC-11D0-A07C-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemServices */ 

JSIL.MakeInterface(
  "System.Management.IWbemServices", false, [], function ($) {
    $.Method({}, "OpenNamespace_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$.Type]), 
          $.IntPtr
        ]));
    $.Method({}, "CancelAsyncCall_", new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink")]));
    $.Method({}, "QueryObjectSink_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemObjectSink")])]));
    $.Method({}, "GetObject_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]), 
          $.IntPtr
        ]));
    $.Method({}, "GetObjectAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "PutClass_", new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "PutClassAsync_", new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "DeleteClass_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "DeleteClassAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "CreateClassEnum_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "CreateClassEnumAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "PutInstance_", new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "PutInstanceAsync_", new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "DeleteInstance_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "DeleteInstanceAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "CreateInstanceEnum_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "CreateInstanceEnumAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecQuery_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "ExecQueryAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecNotificationQuery_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "ExecNotificationQueryAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $.IntPtr, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")]), 
          $.IntPtr
        ]));
    $.Method({}, "ExecMethodAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $.IntPtr, $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9556DC99-828C-11CF-A37E-00AA003240C7"]; });

/* interface System.Management.IWbemServices_Old */ 

JSIL.MakeInterface(
  "System.Management.IWbemServices_Old", false, [], function ($) {
    $.Method({}, "OpenNamespace_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")]), 
          $.IntPtr
        ]));
    $.Method({}, "CancelAsyncCall_", new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink")]));
    $.Method({}, "QueryObjectSink_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemObjectSink")])]));
    $.Method({}, "GetObject_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), 
          $.IntPtr
        ]));
    $.Method({}, "GetObjectAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "PutClass_", new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "PutClassAsync_", new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "DeleteClass_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "DeleteClassAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "CreateClassEnum_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "CreateClassEnumAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "PutInstance_", new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "PutInstanceAsync_", new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "DeleteInstance_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ]));
    $.Method({}, "DeleteInstanceAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "CreateInstanceEnum_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "CreateInstanceEnumAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecQuery_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "ExecQueryAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecNotificationQuery_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ]));
    $.Method({}, "ExecNotificationQueryAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
    $.Method({}, "ExecMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), 
          $.IntPtr
        ]));
    $.Method({}, "ExecMethodAsync_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9556DC99-828C-11CF-A37E-00AA003240C7"]; });

/* interface System.Management.IWbemCallResult */ 

JSIL.MakeInterface(
  "System.Management.IWbemCallResult", false, [], function ($) {
    $.Method({}, "GetResultObject_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObjectFreeThreaded")])]));
    $.Method({}, "GetResultString_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "GetResultServices_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")])]));
    $.Method({}, "GetCallStatus_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["44ACA675-E8FC-11D0-A07C-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemObjectSink */ 

JSIL.MakeInterface(
  "System.Management.IWbemObjectSink", false, [], function ($) {
    $.Method({}, "Indicate_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("System.Array", [$.IntPtr])]));
    $.Method({}, "SetStatus_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.String, $.IntPtr
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["7C857801-7381-11CF-884D-00AA004B2E24"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

/* interface System.Management.IEnumWbemClassObject */ 

JSIL.MakeInterface(
  "System.Management.IEnumWbemClassObject", false, [], function ($) {
    $.Method({}, "Reset_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Next_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "NextAsync_", new JSIL.MethodSignature($.Int32, [$.UInt32, $asm1B.TypeRef("System.Management.IWbemObjectSink")]));
    $.Method({}, "Clone_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
    $.Method({}, "Skip_", new JSIL.MethodSignature($.Int32, [$.Int32, $.UInt32]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["027947E1-D731-11CE-A357-000000000001"]; });

/* interface System.Management.IWbemShutdown */ 

JSIL.MakeInterface(
  "System.Management.IWbemShutdown", false, [], function ($) {
    $.Method({}, "Shutdown_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $asm1B.TypeRef("System.Management.IWbemContext")
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["B7B31DF9-D515-11D3-A11C-00105A1F515A"]; });

/* interface System.Management.IWbemObjectTextSrc */ 

JSIL.MakeInterface(
  "System.Management.IWbemObjectTextSrc", false, [], function ($) {
    $.Method({}, "GetText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), 
          $.UInt32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "CreateFromText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.String, 
          $.UInt32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["BFBF883A-CAD7-11D3-A11B-00105A1F515A"]; });

/* interface System.Management.IWbemObjectAccess */ 

JSIL.MakeInterface(
  "System.Management.IWbemObjectAccess", false, [], function ($) {
    $.Method({}, "GetQualifierSet_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "Get_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "Put_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Int32
        ]));
    $.Method({}, "Delete_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetNames_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])])
        ]));
    $.Method({}, "BeginEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Next_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "EndEnumeration_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetPropertyQualifierSet_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "Clone_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])]));
    $.Method({}, "GetObjectText_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "SpawnDerivedClass_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])]));
    $.Method({}, "SpawnInstance_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])]));
    $.Method({}, "CompareTo_", new JSIL.MethodSignature($.Int32, [$.Int32, $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]));
    $.Method({}, "GetPropertyOrigin_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "InheritsFrom_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])
        ]));
    $.Method({}, "PutMethod_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")
        ]));
    $.Method({}, "DeleteMethod_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "BeginMethodEnumeration_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "NextMethod_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])
        ]));
    $.Method({}, "EndMethodEnumeration_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetMethodQualifierSet_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemQualifierSet_DoNotMarshal")])]));
    $.Method({}, "GetMethodOrigin_", new JSIL.MethodSignature($.Int32, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "GetPropertyHandle_", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "WritePropertyValue_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Byte])
        ]));
    $.Method({}, "ReadPropertyValue_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Byte])
        ]));
    $.Method({}, "ReadDWORD_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "WriteDWORD_", new JSIL.MethodSignature($.Int32, [$.Int32, $.UInt32]));
    $.Method({}, "ReadQWORD_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])]));
    $.Method({}, "WriteQWORD_", new JSIL.MethodSignature($.Int32, [$.Int32, $.UInt64]));
    $.Method({}, "GetPropertyInfoByHandle_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "Lock_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Unlock_", new JSIL.MethodSignature($.Int32, [$.Int32]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["49353C9A-516B-11D1-AEA6-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IUnsecuredApartment */ 

JSIL.MakeInterface(
  "System.Management.IUnsecuredApartment", false, [], function ($) {
    $.Method({}, "CreateObjectStub_", new JSIL.MethodSignature($.Int32, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1CFABA8C-1523-11D1-AD79-00C04FD8FDFF"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemStatusCodeText */ 

JSIL.MakeInterface(
  "System.Management.IWbemStatusCodeText", false, [], function ($) {
    $.Method({}, "GetErrorCodeText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "GetFacilityCodeText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["EB87E1BC-3233-11D2-AEC9-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemUnboundObjectSink */ 

JSIL.MakeInterface(
  "System.Management.IWbemUnboundObjectSink", false, [], function ($) {
    $.Method({}, "IndicateToConsumer_", new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E246107B-B06E-11D0-AD61-00C04FD8FDFF"]; });

/* interface System.Management.IWbemPropertyProvider */ 

JSIL.MakeInterface(
  "System.Management.IWbemPropertyProvider", false, [], function ($) {
    $.Method({}, "GetProperty_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.String, 
          $.String, $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "PutProperty_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.String, 
          $.String, $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CE61E841-65BC-11D0-B6BD-00AA003240C7"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; });

/* interface System.Management.IWbemEventProvider */ 

JSIL.MakeInterface(
  "System.Management.IWbemEventProvider", false, [], function ($) {
    $.Method({}, "ProvideEvents_", new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink"), $.Int32]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E245105B-B06E-11D0-AD61-00C04FD8FDFF"]; });

/* interface System.Management.IWbemEventProviderQuerySink */ 

JSIL.MakeInterface(
  "System.Management.IWbemEventProviderQuerySink", false, [], function ($) {
    $.Method({}, "NewQuery_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "CancelQuery_", new JSIL.MethodSignature($.Int32, [$.UInt32]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["580ACAF8-FA1C-11D0-AD72-00C04FD8FDFF"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemEventProviderSecurity */ 

JSIL.MakeInterface(
  "System.Management.IWbemEventProviderSecurity", false, [], function ($) {
    $.Method({}, "AccessCheck_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Byte])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["631F7D96-D993-11D2-B339-00105A1F4AAF"]; });

/* interface System.Management.IWbemProviderIdentity */ 

JSIL.MakeInterface(
  "System.Management.IWbemProviderIdentity", false, [], function ($) {
    $.Method({}, "SetRegistrationObject_", new JSIL.MethodSignature($.Int32, [$.Int32, $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["631F7D97-D993-11D2-B339-00105A1F4AAF"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemEventConsumerProvider */ 

JSIL.MakeInterface(
  "System.Management.IWbemEventConsumerProvider", false, [], function ($) {
    $.Method({}, "FindConsumer_", new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemUnboundObjectSink")])]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E246107A-B06E-11D0-AD61-00C04FD8FDFF"]; });

/* interface System.Management.IWbemProviderInitSink */ 

JSIL.MakeInterface(
  "System.Management.IWbemProviderInitSink", false, [], function ($) {
    $.Method({}, "SetStatus_", new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1BE41571-91DD-11D1-AEB2-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemProviderInit */ 

JSIL.MakeInterface(
  "System.Management.IWbemProviderInit", false, [], function ($) {
    $.Method({}, "Initialize_", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.IWbemServices"), $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemProviderInitSink")
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1BE41572-91DD-11D1-AEB2-00C04FB68820"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemDecoupledRegistrar */ 

JSIL.MakeInterface(
  "System.Management.IWbemDecoupledRegistrar", false, [], function ($) {
    $.Method({}, "Register_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $.String, $.String, 
          $.String, $.String, 
          $.Object
        ]));
    $.Method({}, "UnRegister_", JSIL.MethodSignature.Return($.Int32));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1005CBCF-E64F-4646-BCD3-3A089D8A84B4"]; });

/* interface System.Management.IWbemEventSink */ 

JSIL.MakeInterface(
  "System.Management.IWbemEventSink", false, [], function ($) {
    $.Method({}, "Indicate_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")])]));
    $.Method({}, "SetStatus_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.String, $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")
        ]));
    $.Method({}, "IndicateWithSD_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Byte])
        ]));
    $.Method({}, "SetSinkSecurity_", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Byte])]));
    $.Method({}, "IsActive_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetRestrictedSink_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Type])
        ]));
    $.Method({}, "SetBatchingParameters_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.UInt32, 
          $.UInt32
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [512]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["3AE0080A-7E3A-4366-BF89-0FEEDC931659"]; });

/* interface System.Management.IWbemPathKeyList */ 

JSIL.MakeInterface(
  "System.Management.IWbemPathKeyList", false, [], function ($) {
    $.Method({}, "GetCount_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "SetKey_", new JSIL.MethodSignature($.Int32, [
          $.String, $.UInt32, 
          $.UInt32, $.IntPtr
        ]));
    $.Method({}, "SetKey2_", new JSIL.MethodSignature($.Int32, [
          $.String, $.UInt32, 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "GetKey_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.IntPtr, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetKey2_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "RemoveKey_", new JSIL.MethodSignature($.Int32, [$.String, $.UInt32]));
    $.Method({}, "RemoveAllKeys_", new JSIL.MethodSignature($.Int32, [$.UInt32]));
    $.Method({}, "MakeSingleton_", new JSIL.MethodSignature($.Int32, [$.SByte]));
    $.Method({}, "GetInfo_", new JSIL.MethodSignature($.Int32, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])]));
    $.Method({}, "GetText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.String
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9AE62877-7544-4BB0-AA26-A13824659ED6"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* interface System.Management.IWbemPath */ 

JSIL.MakeInterface(
  "System.Management.IWbemPath", false, [], function ($) {
    $.Method({}, "SetText_", new JSIL.MethodSignature($.Int32, [$.UInt32, $.String]));
    $.Method({}, "GetText_", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.String
        ]));
    $.Method({}, "GetInfo_", new JSIL.MethodSignature($.Int32, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])]));
    $.Method({}, "SetServer_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetServer_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.String]));
    $.Method({}, "GetNamespaceCount_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "SetNamespaceAt_", new JSIL.MethodSignature($.Int32, [$.UInt32, $.String]));
    $.Method({}, "GetNamespaceAt_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.String
        ]));
    $.Method({}, "RemoveNamespaceAt_", new JSIL.MethodSignature($.Int32, [$.UInt32]));
    $.Method({}, "RemoveAllNamespaces_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetScopeCount_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "SetScope_", new JSIL.MethodSignature($.Int32, [$.UInt32, $.String]));
    $.Method({}, "SetScopeFromText_", new JSIL.MethodSignature($.Int32, [$.UInt32, $.String]));
    $.Method({}, "GetScope_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemPathKeyList")])
        ]));
    $.Method({}, "GetScopeAsText_", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.String
        ]));
    $.Method({}, "RemoveScope_", new JSIL.MethodSignature($.Int32, [$.UInt32]));
    $.Method({}, "RemoveAllScopes_", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "SetClassName_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetClassName_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.String]));
    $.Method({}, "GetKeyList_", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemPathKeyList")])]));
    $.Method({}, "CreateClassPart_", new JSIL.MethodSignature($.Int32, [$.Int32, $.String]));
    $.Method({}, "DeleteClassPart_", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "IsRelative_", new JSIL.MethodSignature($.Int32, [$.String, $.String]));
    $.Method({}, "IsRelativeOrChild_", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32
        ]));
    $.Method({}, "IsLocal_", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "IsSameClassName_", new JSIL.MethodSignature($.Int32, [$.String]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["3BC15AF2-736C-477E-9E51-238AF8667DCC"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [1]; });

/* enum System.Management.tag_WBEM_GENUS_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_GENUS_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_GENUS_CLASS: 1, 
    WBEM_GENUS_INSTANCE: 2, 
  }
);

/* enum System.Management.tag_WBEM_CHANGE_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_CHANGE_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_CREATE_OR_UPDATE: 0, 
    WBEM_FLAG_UPDATE_COMPATIBLE: 0, 
    WBEM_FLAG_UPDATE_ONLY: 1, 
    WBEM_FLAG_CREATE_ONLY: 2, 
    WBEM_FLAG_UPDATE_SAFE_MODE: 32, 
    WBEM_FLAG_UPDATE_FORCE_MODE: 64, 
    WBEM_MASK_UPDATE_MODE: 96, 
    WBEM_FLAG_ADVISORY: 65536, 
  }
);

/* enum System.Management.tag_WBEM_GENERIC_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_GENERIC_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_RETURN_ERROR_OBJECT: 0, 
    WBEM_FLAG_DONT_SEND_STATUS: 0, 
    WBEM_RETURN_WHEN_COMPLETE: 0, 
    WBEM_FLAG_SEND_ONLY_SELECTED: 0, 
    WBEM_FLAG_RETURN_WBEM_COMPLETE: 0, 
    WBEM_FLAG_BIDIRECTIONAL: 0, 
    WBEM_FLAG_RETURN_IMMEDIATELY: 16, 
    WBEM_RETURN_IMMEDIATELY: 16, 
    WBEM_FLAG_FORWARD_ONLY: 32, 
    WBEM_FLAG_NO_ERROR_OBJECT: 64, 
    WBEM_FLAG_SEND_STATUS: 128, 
    WBEM_FLAG_ENSURE_LOCATABLE: 256, 
    WBEM_FLAG_DIRECT_READ: 512, 
    WBEM_MASK_RESERVED_FLAGS: 126976, 
    WBEM_FLAG_USE_AMENDED_QUALIFIERS: 131072, 
    WBEM_FLAG_STRONG_VALIDATION: 1048576, 
  }
);

/* enum System.Management.tag_WBEM_STATUS_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_STATUS_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_STATUS_COMPLETE: 0, 
    WBEM_STATUS_REQUIREMENTS: 1, 
    WBEM_STATUS_PROGRESS: 2, 
  }
);

/* enum System.Management.tag_WBEM_TIMEOUT_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_TIMEOUT_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_INFINITE: -1, 
    WBEM_NO_WAIT: 0, 
  }
);

/* enum System.Management.tag_WBEM_CONDITION_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_CONDITION_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_ALWAYS: 0, 
    WBEM_FLAG_ONLY_IF_TRUE: 1, 
    WBEM_FLAG_ONLY_IF_FALSE: 2, 
    WBEM_FLAG_ONLY_IF_IDENTICAL: 3, 
    WBEM_MASK_PRIMARY_CONDITION: 3, 
    WBEM_FLAG_KEYS_ONLY: 4, 
    WBEM_FLAG_REFS_ONLY: 8, 
    WBEM_FLAG_LOCAL_ONLY: 16, 
    WBEM_FLAG_PROPAGATED_ONLY: 32, 
    WBEM_FLAG_SYSTEM_ONLY: 48, 
    WBEM_FLAG_NONSYSTEM_ONLY: 64, 
    WBEM_MASK_CONDITION_ORIGIN: 112, 
    WBEM_FLAG_CLASS_OVERRIDES_ONLY: 256, 
    WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES: 512, 
    WBEM_MASK_CLASS_CONDITION: 768, 
  }
);

/* enum System.Management.tag_WBEM_FLAVOR_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_FLAVOR_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAVOR_DONT_PROPAGATE: 0, 
    WBEM_FLAVOR_NOT_AMENDED: 0, 
    WBEM_FLAVOR_OVERRIDABLE: 0, 
    WBEM_FLAVOR_ORIGIN_LOCAL: 0, 
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE: 1, 
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS: 2, 
    WBEM_FLAVOR_MASK_PROPAGATION: 15, 
    WBEM_FLAVOR_MASK_PERMISSIONS: 16, 
    WBEM_FLAVOR_NOT_OVERRIDABLE: 16, 
    WBEM_FLAVOR_ORIGIN_PROPAGATED: 32, 
    WBEM_FLAVOR_ORIGIN_SYSTEM: 64, 
    WBEM_FLAVOR_MASK_ORIGIN: 96, 
    WBEM_FLAVOR_AMENDED: 128, 
    WBEM_FLAVOR_MASK_AMENDED: 128, 
  }
);

/* enum System.Management.tag_WBEM_QUERY_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_QUERY_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_DEEP: 0, 
    WBEM_FLAG_SHALLOW: 1, 
    WBEM_FLAG_PROTOTYPE: 2, 
  }
);

/* enum System.Management.tag_WBEM_SECURITY_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_SECURITY_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_RIGHT_SUBSCRIBE: 1, 
    WBEM_RIGHT_PUBLISH: 1, 
    WBEM_ENABLE: 1, 
    WBEM_METHOD_EXECUTE: 2, 
    WBEM_FULL_WRITE_REP: 4, 
    WBEM_PARTIAL_WRITE_REP: 8, 
    WBEM_WRITE_PROVIDER: 16, 
    WBEM_REMOTE_ACCESS: 32, 
  }
);

/* enum System.Management.tag_WBEM_LIMITATION_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_LIMITATION_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_EXCLUDE_OBJECT_QUALIFIERS: 16, 
    WBEM_FLAG_EXCLUDE_PROPERTY_QUALIFIERS: 32, 
  }
);

/* enum System.Management.tag_WBEM_TEXT_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_TEXT_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_NO_FLAVORS: 1, 
  }
);

/* enum System.Management.tag_WBEM_COMPARISON_FLAG */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_COMPARISON_FLAG", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_COMPARISON_INCLUDE_ALL: 0, 
    WBEM_FLAG_IGNORE_QUALIFIERS: 1, 
    WBEM_FLAG_IGNORE_OBJECT_SOURCE: 2, 
    WBEM_FLAG_IGNORE_DEFAULT_VALUES: 4, 
    WBEM_FLAG_IGNORE_CLASS: 8, 
    WBEM_FLAG_IGNORE_CASE: 16, 
    WBEM_FLAG_IGNORE_FLAVOR: 32, 
  }
);

/* enum System.Management.tag_WBEM_LOCKING */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_LOCKING", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_ALLOW_READ: 1, 
  }
);

/* enum System.Management.tag_CIMTYPE_ENUMERATION */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_CIMTYPE_ENUMERATION", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    CIM_EMPTY: 0, 
    CIM_SINT16: 2, 
    CIM_SINT32: 3, 
    CIM_REAL32: 4, 
    CIM_REAL64: 5, 
    CIM_STRING: 8, 
    CIM_BOOLEAN: 11, 
    CIM_OBJECT: 13, 
    CIM_SINT8: 16, 
    CIM_UINT8: 17, 
    CIM_UINT16: 18, 
    CIM_UINT32: 19, 
    CIM_SINT64: 20, 
    CIM_UINT64: 21, 
    CIM_DATETIME: 101, 
    CIM_REFERENCE: 102, 
    CIM_CHAR16: 103, 
    CIM_ILLEGAL: 4095, 
    CIM_FLAG_ARRAY: 8192, 
  }
);

/* enum System.Management.tag_WBEM_BACKUP_RESTORE_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_BACKUP_RESTORE_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_BACKUP_RESTORE_DEFAULT: 0, 
    WBEM_FLAG_BACKUP_RESTORE_FORCE_SHUTDOWN: 1, 
  }
);

/* enum System.Management.tag_WBEM_REFRESHER_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_REFRESHER_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_REFRESH_AUTO_RECONNECT: 0, 
    WBEM_FLAG_REFRESH_NO_AUTO_RECONNECT: 1, 
  }
);

/* enum System.Management.tag_WBEM_SHUTDOWN_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_SHUTDOWN_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_SHUTDOWN_UNLOAD_COMPONENT: 1, 
    WBEM_SHUTDOWN_WMI: 2, 
    WBEM_SHUTDOWN_OS: 3, 
  }
);

/* enum System.Management.tag_WBEMSTATUS_FORMAT */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEMSTATUS_FORMAT", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEMSTATUS_FORMAT_NEWLINE: 0, 
    WBEMSTATUS_FORMAT_NO_NEWLINE: 1, 
  }
);

/* enum System.Management.tag_WBEMSTATUS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEMSTATUS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_E_FAILED: -2147217407, 
    WBEM_E_NOT_FOUND: -2147217406, 
    WBEM_E_ACCESS_DENIED: -2147217405, 
    WBEM_E_PROVIDER_FAILURE: -2147217404, 
    WBEM_E_TYPE_MISMATCH: -2147217403, 
    WBEM_E_OUT_OF_MEMORY: -2147217402, 
    WBEM_E_INVALID_CONTEXT: -2147217401, 
    WBEM_E_INVALID_PARAMETER: -2147217400, 
    WBEM_E_NOT_AVAILABLE: -2147217399, 
    WBEM_E_CRITICAL_ERROR: -2147217398, 
    WBEM_E_INVALID_STREAM: -2147217397, 
    WBEM_E_NOT_SUPPORTED: -2147217396, 
    WBEM_E_INVALID_SUPERCLASS: -2147217395, 
    WBEM_E_INVALID_NAMESPACE: -2147217394, 
    WBEM_E_INVALID_OBJECT: -2147217393, 
    WBEM_E_INVALID_CLASS: -2147217392, 
    WBEM_E_PROVIDER_NOT_FOUND: -2147217391, 
    WBEM_E_INVALID_PROVIDER_REGISTRATION: -2147217390, 
    WBEM_E_PROVIDER_LOAD_FAILURE: -2147217389, 
    WBEM_E_INITIALIZATION_FAILURE: -2147217388, 
    WBEM_E_TRANSPORT_FAILURE: -2147217387, 
    WBEM_E_INVALID_OPERATION: -2147217386, 
    WBEM_E_INVALID_QUERY: -2147217385, 
    WBEM_E_INVALID_QUERY_TYPE: -2147217384, 
    WBEM_E_ALREADY_EXISTS: -2147217383, 
    WBEM_E_OVERRIDE_NOT_ALLOWED: -2147217382, 
    WBEM_E_PROPAGATED_QUALIFIER: -2147217381, 
    WBEM_E_PROPAGATED_PROPERTY: -2147217380, 
    WBEM_E_UNEXPECTED: -2147217379, 
    WBEM_E_ILLEGAL_OPERATION: -2147217378, 
    WBEM_E_CANNOT_BE_KEY: -2147217377, 
    WBEM_E_INCOMPLETE_CLASS: -2147217376, 
    WBEM_E_INVALID_SYNTAX: -2147217375, 
    WBEM_E_NONDECORATED_OBJECT: -2147217374, 
    WBEM_E_READ_ONLY: -2147217373, 
    WBEM_E_PROVIDER_NOT_CAPABLE: -2147217372, 
    WBEM_E_CLASS_HAS_CHILDREN: -2147217371, 
    WBEM_E_CLASS_HAS_INSTANCES: -2147217370, 
    WBEM_E_QUERY_NOT_IMPLEMENTED: -2147217369, 
    WBEM_E_ILLEGAL_NULL: -2147217368, 
    WBEM_E_INVALID_QUALIFIER_TYPE: -2147217367, 
    WBEM_E_INVALID_PROPERTY_TYPE: -2147217366, 
    WBEM_E_VALUE_OUT_OF_RANGE: -2147217365, 
    WBEM_E_CANNOT_BE_SINGLETON: -2147217364, 
    WBEM_E_INVALID_CIM_TYPE: -2147217363, 
    WBEM_E_INVALID_METHOD: -2147217362, 
    WBEM_E_INVALID_METHOD_PARAMETERS: -2147217361, 
    WBEM_E_SYSTEM_PROPERTY: -2147217360, 
    WBEM_E_INVALID_PROPERTY: -2147217359, 
    WBEM_E_CALL_CANCELLED: -2147217358, 
    WBEM_E_SHUTTING_DOWN: -2147217357, 
    WBEM_E_PROPAGATED_METHOD: -2147217356, 
    WBEM_E_UNSUPPORTED_PARAMETER: -2147217355, 
    WBEM_E_MISSING_PARAMETER_ID: -2147217354, 
    WBEM_E_INVALID_PARAMETER_ID: -2147217353, 
    WBEM_E_NONCONSECUTIVE_PARAMETER_IDS: -2147217352, 
    WBEM_E_PARAMETER_ID_ON_RETVAL: -2147217351, 
    WBEM_E_INVALID_OBJECT_PATH: -2147217350, 
    WBEM_E_OUT_OF_DISK_SPACE: -2147217349, 
    WBEM_E_BUFFER_TOO_SMALL: -2147217348, 
    WBEM_E_UNSUPPORTED_PUT_EXTENSION: -2147217347, 
    WBEM_E_UNKNOWN_OBJECT_TYPE: -2147217346, 
    WBEM_E_UNKNOWN_PACKET_TYPE: -2147217345, 
    WBEM_E_MARSHAL_VERSION_MISMATCH: -2147217344, 
    WBEM_E_MARSHAL_INVALID_SIGNATURE: -2147217343, 
    WBEM_E_INVALID_QUALIFIER: -2147217342, 
    WBEM_E_INVALID_DUPLICATE_PARAMETER: -2147217341, 
    WBEM_E_TOO_MUCH_DATA: -2147217340, 
    WBEM_E_SERVER_TOO_BUSY: -2147217339, 
    WBEM_E_INVALID_FLAVOR: -2147217338, 
    WBEM_E_CIRCULAR_REFERENCE: -2147217337, 
    WBEM_E_UNSUPPORTED_CLASS_UPDATE: -2147217336, 
    WBEM_E_CANNOT_CHANGE_KEY_INHERITANCE: -2147217335, 
    WBEM_E_CANNOT_CHANGE_INDEX_INHERITANCE: -2147217328, 
    WBEM_E_TOO_MANY_PROPERTIES: -2147217327, 
    WBEM_E_UPDATE_TYPE_MISMATCH: -2147217326, 
    WBEM_E_UPDATE_OVERRIDE_NOT_ALLOWED: -2147217325, 
    WBEM_E_UPDATE_PROPAGATED_METHOD: -2147217324, 
    WBEM_E_METHOD_NOT_IMPLEMENTED: -2147217323, 
    WBEM_E_METHOD_DISABLED: -2147217322, 
    WBEM_E_REFRESHER_BUSY: -2147217321, 
    WBEM_E_UNPARSABLE_QUERY: -2147217320, 
    WBEM_E_NOT_EVENT_CLASS: -2147217319, 
    WBEM_E_MISSING_GROUP_WITHIN: -2147217318, 
    WBEM_E_MISSING_AGGREGATION_LIST: -2147217317, 
    WBEM_E_PROPERTY_NOT_AN_OBJECT: -2147217316, 
    WBEM_E_AGGREGATING_BY_OBJECT: -2147217315, 
    WBEM_E_UNINTERPRETABLE_PROVIDER_QUERY: -2147217313, 
    WBEM_E_BACKUP_RESTORE_WINMGMT_RUNNING: -2147217312, 
    WBEM_E_QUEUE_OVERFLOW: -2147217311, 
    WBEM_E_PRIVILEGE_NOT_HELD: -2147217310, 
    WBEM_E_INVALID_OPERATOR: -2147217309, 
    WBEM_E_LOCAL_CREDENTIALS: -2147217308, 
    WBEM_E_CANNOT_BE_ABSTRACT: -2147217307, 
    WBEM_E_AMENDED_OBJECT: -2147217306, 
    WBEM_E_CLIENT_TOO_SLOW: -2147217305, 
    WBEM_E_NULL_SECURITY_DESCRIPTOR: -2147217304, 
    WBEM_E_TIMED_OUT: -2147217303, 
    WBEM_E_INVALID_ASSOCIATION: -2147217302, 
    WBEM_E_AMBIGUOUS_OPERATION: -2147217301, 
    WBEM_E_QUOTA_VIOLATION: -2147217300, 
    WBEM_E_RESERVED_001: -2147217299, 
    WBEM_E_RESERVED_002: -2147217298, 
    WBEM_E_UNSUPPORTED_LOCALE: -2147217297, 
    WBEM_E_HANDLE_OUT_OF_DATE: -2147217296, 
    WBEM_E_CONNECTION_FAILED: -2147217295, 
    WBEM_E_INVALID_HANDLE_REQUEST: -2147217294, 
    WBEM_E_PROPERTY_NAME_TOO_WIDE: -2147217293, 
    WBEM_E_CLASS_NAME_TOO_WIDE: -2147217292, 
    WBEM_E_METHOD_NAME_TOO_WIDE: -2147217291, 
    WBEM_E_QUALIFIER_NAME_TOO_WIDE: -2147217290, 
    WBEM_E_RERUN_COMMAND: -2147217289, 
    WBEM_E_DATABASE_VER_MISMATCH: -2147217288, 
    WBEM_E_VETO_DELETE: -2147217287, 
    WBEM_E_VETO_PUT: -2147217286, 
    WBEM_E_INVALID_LOCALE: -2147217280, 
    WBEM_E_PROVIDER_SUSPENDED: -2147217279, 
    WBEM_E_SYNCHRONIZATION_REQUIRED: -2147217278, 
    WBEM_E_NO_SCHEMA: -2147217277, 
    WBEM_E_PROVIDER_ALREADY_REGISTERED: -2147217276, 
    WBEM_E_PROVIDER_NOT_REGISTERED: -2147217275, 
    WBEM_E_FATAL_TRANSPORT_ERROR: -2147217274, 
    WBEM_E_ENCRYPTED_CONNECTION_REQUIRED: -2147217273, 
    WBEM_E_PROVIDER_TIMED_OUT: -2147217272, 
    WBEM_E_NO_KEY: -2147217271, 
    WBEMESS_E_REGISTRATION_TOO_BROAD: -2147213311, 
    WBEMESS_E_REGISTRATION_TOO_PRECISE: -2147213310, 
    WBEMMOF_E_EXPECTED_QUALIFIER_NAME: -2147205119, 
    WBEMMOF_E_EXPECTED_SEMI: -2147205118, 
    WBEMMOF_E_EXPECTED_OPEN_BRACE: -2147205117, 
    WBEMMOF_E_EXPECTED_CLOSE_BRACE: -2147205116, 
    WBEMMOF_E_EXPECTED_CLOSE_BRACKET: -2147205115, 
    WBEMMOF_E_EXPECTED_CLOSE_PAREN: -2147205114, 
    WBEMMOF_E_ILLEGAL_CONSTANT_VALUE: -2147205113, 
    WBEMMOF_E_EXPECTED_TYPE_IDENTIFIER: -2147205112, 
    WBEMMOF_E_EXPECTED_OPEN_PAREN: -2147205111, 
    WBEMMOF_E_UNRECOGNIZED_TOKEN: -2147205110, 
    WBEMMOF_E_UNRECOGNIZED_TYPE: -2147205109, 
    WBEMMOF_E_EXPECTED_PROPERTY_NAME: -2147205108, 
    WBEMMOF_E_TYPEDEF_NOT_SUPPORTED: -2147205107, 
    WBEMMOF_E_UNEXPECTED_ALIAS: -2147205106, 
    WBEMMOF_E_UNEXPECTED_ARRAY_INIT: -2147205105, 
    WBEMMOF_E_INVALID_AMENDMENT_SYNTAX: -2147205104, 
    WBEMMOF_E_INVALID_DUPLICATE_AMENDMENT: -2147205103, 
    WBEMMOF_E_INVALID_PRAGMA: -2147205102, 
    WBEMMOF_E_INVALID_NAMESPACE_SYNTAX: -2147205101, 
    WBEMMOF_E_EXPECTED_CLASS_NAME: -2147205100, 
    WBEMMOF_E_TYPE_MISMATCH: -2147205099, 
    WBEMMOF_E_EXPECTED_ALIAS_NAME: -2147205098, 
    WBEMMOF_E_INVALID_CLASS_DECLARATION: -2147205097, 
    WBEMMOF_E_INVALID_INSTANCE_DECLARATION: -2147205096, 
    WBEMMOF_E_EXPECTED_DOLLAR: -2147205095, 
    WBEMMOF_E_CIMTYPE_QUALIFIER: -2147205094, 
    WBEMMOF_E_DUPLICATE_PROPERTY: -2147205093, 
    WBEMMOF_E_INVALID_NAMESPACE_SPECIFICATION: -2147205092, 
    WBEMMOF_E_OUT_OF_RANGE: -2147205091, 
    WBEMMOF_E_INVALID_FILE: -2147205090, 
    WBEMMOF_E_ALIASES_IN_EMBEDDED: -2147205089, 
    WBEMMOF_E_NULL_ARRAY_ELEM: -2147205088, 
    WBEMMOF_E_DUPLICATE_QUALIFIER: -2147205087, 
    WBEMMOF_E_EXPECTED_FLAVOR_TYPE: -2147205086, 
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES: -2147205085, 
    WBEMMOF_E_MULTIPLE_ALIASES: -2147205084, 
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES2: -2147205083, 
    WBEMMOF_E_NO_ARRAYS_RETURNED: -2147205082, 
    WBEMMOF_E_MUST_BE_IN_OR_OUT: -2147205081, 
    WBEMMOF_E_INVALID_FLAGS_SYNTAX: -2147205080, 
    WBEMMOF_E_EXPECTED_BRACE_OR_BAD_TYPE: -2147205079, 
    WBEMMOF_E_UNSUPPORTED_CIMV22_QUAL_VALUE: -2147205078, 
    WBEMMOF_E_UNSUPPORTED_CIMV22_DATA_TYPE: -2147205077, 
    WBEMMOF_E_INVALID_DELETEINSTANCE_SYNTAX: -2147205076, 
    WBEMMOF_E_INVALID_QUALIFIER_SYNTAX: -2147205075, 
    WBEMMOF_E_QUALIFIER_USED_OUTSIDE_SCOPE: -2147205074, 
    WBEMMOF_E_ERROR_CREATING_TEMP_FILE: -2147205073, 
    WBEMMOF_E_ERROR_INVALID_INCLUDE_FILE: -2147205072, 
    WBEMMOF_E_INVALID_DELETECLASS_SYNTAX: -2147205071, 
    WBEM_S_SAME: 0, 
    WBEM_NO_ERROR: 0, 
    WBEM_S_NO_ERROR: 0, 
    WBEM_S_FALSE: 1, 
    WBEM_S_ALREADY_EXISTS: 262145, 
    WBEM_S_RESET_TO_DEFAULT: 262146, 
    WBEM_S_DIFFERENT: 262147, 
    WBEM_S_TIMEDOUT: 262148, 
    WBEM_S_NO_MORE_DATA: 262149, 
    WBEM_S_OPERATION_CANCELLED: 262150, 
    WBEM_S_PENDING: 262151, 
    WBEM_S_DUPLICATE_OBJECTS: 262152, 
    WBEM_S_ACCESS_DENIED: 262153, 
    WBEM_S_PARTIAL_RESULTS: 262160, 
    WBEM_S_NO_POSTHOOK: 262161, 
    WBEM_S_POSTHOOK_WITH_BOTH: 262162, 
    WBEM_S_POSTHOOK_WITH_NEW: 262163, 
    WBEM_S_POSTHOOK_WITH_STATUS: 262164, 
    WBEM_S_POSTHOOK_WITH_OLD: 262165, 
    WBEM_S_REDO_PREHOOK_WITH_ORIGINAL_OBJECT: 262166, 
    WBEM_S_SOURCE_NOT_AVAILABLE: 262167, 
  }
);

/* enum System.Management.tag_WMI_OBJ_TEXT */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WMI_OBJ_TEXT", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMI_OBJ_TEXT_CIM_DTD_2_0: 1, 
    WMI_OBJ_TEXT_WMI_DTD_2_0: 2, 
    WMI_OBJ_TEXT_WMI_EXT1: 3, 
    WMI_OBJ_TEXT_WMI_EXT2: 4, 
    WMI_OBJ_TEXT_WMI_EXT3: 5, 
    WMI_OBJ_TEXT_WMI_EXT4: 6, 
    WMI_OBJ_TEXT_WMI_EXT5: 7, 
    WMI_OBJ_TEXT_WMI_EXT6: 8, 
    WMI_OBJ_TEXT_WMI_EXT7: 9, 
    WMI_OBJ_TEXT_WMI_EXT8: 10, 
    WMI_OBJ_TEXT_WMI_EXT9: 11, 
    WMI_OBJ_TEXT_WMI_EXT10: 12, 
    WMI_OBJ_TEXT_LAST: 13, 
  }
);

/* enum System.Management.tag_WBEM_COMPILER_OPTIONS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_COMPILER_OPTIONS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_CHECK_ONLY: 1, 
    WBEM_FLAG_AUTORECOVER: 2, 
    WBEM_FLAG_WMI_CHECK: 4, 
    WBEM_FLAG_CONSOLE_PRINT: 8, 
    WBEM_FLAG_DONT_ADD_TO_LIST: 16, 
    WBEM_FLAG_SPLIT_FILES: 32, 
    WBEM_FLAG_CONNECT_REPOSITORY_ONLY: 64, 
  }
);

/* enum System.Management.tag_WBEM_CONNECT_OPTIONS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_CONNECT_OPTIONS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_CONNECT_REPOSITORY_ONLY: 64, 
    WBEM_FLAG_CONNECT_USE_MAX_WAIT: 128, 
  }
);

/* enum System.Management.tag_WBEM_PROVIDER_REQUIREMENTS_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_PROVIDER_REQUIREMENTS_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_REQUIREMENTS_START_POSTFILTER: 0, 
    WBEM_REQUIREMENTS_STOP_POSTFILTER: 1, 
    WBEM_REQUIREMENTS_RECHECK_SUBSCRIPTIONS: 2, 
  }
);

/* enum System.Management.tag_WBEM_EXTRA_RETURN_CODES */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_EXTRA_RETURN_CODES", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_E_RETRY_LATER: -2147209215, 
    WBEM_E_RESOURCE_CONTENTION: -2147209214, 
    WBEM_S_INITIALIZED: 0, 
    WBEM_S_LIMITED_SERVICE: 274433, 
    WBEM_S_INDIRECTLY_UPDATED: 274434, 
    WBEM_S_SUBJECT_TO_SDS: 274435, 
  }
);

/* enum System.Management.tag_WBEM_PROVIDER_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_PROVIDER_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_OWNER_UPDATE: 65536, 
  }
);

/* enum System.Management.tag_WBEM_INFORMATION_FLAG_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_INFORMATION_FLAG_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_SHORT_NAME: 1, 
    WBEM_FLAG_LONG_NAME: 2, 
  }
);

/* enum System.Management.tag_WBEM_BATCH_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_BATCH_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEM_FLAG_BATCH_IF_NEEDED: 0, 
    WBEM_FLAG_MUST_BATCH: 1, 
    WBEM_FLAG_MUST_NOT_BATCH: 2, 
  }
);

/* enum System.Management.tag_WBEM_PATH_STATUS_FLAG */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_PATH_STATUS_FLAG", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEMPATH_INFO_ANON_LOCAL_MACHINE: 1, 
    WBEMPATH_INFO_HAS_MACHINE_NAME: 2, 
    WBEMPATH_INFO_IS_CLASS_REF: 4, 
    WBEMPATH_INFO_IS_INST_REF: 8, 
    WBEMPATH_INFO_HAS_SUBSCOPES: 16, 
    WBEMPATH_INFO_IS_COMPOUND: 32, 
    WBEMPATH_INFO_HAS_V2_REF_PATHS: 64, 
    WBEMPATH_INFO_HAS_IMPLIED_KEY: 128, 
    WBEMPATH_INFO_CONTAINS_SINGLETON: 256, 
    WBEMPATH_INFO_V1_COMPLIANT: 512, 
    WBEMPATH_INFO_V2_COMPLIANT: 1024, 
    WBEMPATH_INFO_CIM_COMPLIANT: 2048, 
    WBEMPATH_INFO_IS_SINGLETON: 4096, 
    WBEMPATH_INFO_IS_PARENT: 8192, 
    WBEMPATH_INFO_SERVER_NAMESPACE_ONLY: 16384, 
    WBEMPATH_INFO_NATIVE_PATH: 32768, 
    WBEMPATH_INFO_WMI_PATH: 65536, 
    WBEMPATH_INFO_PATH_HAD_SERVER: 131072, 
  }
);

/* enum System.Management.tag_WBEM_PATH_CREATE_FLAG */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_PATH_CREATE_FLAG", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEMPATH_CREATE_ACCEPT_RELATIVE: 1, 
    WBEMPATH_CREATE_ACCEPT_ABSOLUTE: 2, 
    WBEMPATH_CREATE_ACCEPT_ALL: 4, 
    WBEMPATH_TREAT_SINGLE_IDENT_AS_NS: 8, 
  }
);

/* enum System.Management.tag_WBEM_GET_TEXT_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_GET_TEXT_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEMPATH_COMPRESSED: 1, 
    WBEMPATH_GET_RELATIVE_ONLY: 2, 
    WBEMPATH_GET_SERVER_TOO: 4, 
    WBEMPATH_GET_SERVER_AND_NAMESPACE_ONLY: 8, 
    WBEMPATH_GET_NAMESPACE_ONLY: 16, 
    WBEMPATH_GET_ORIGINAL: 32, 
  }
);

/* enum System.Management.tag_WBEM_GET_KEY_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WBEM_GET_KEY_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WBEMPATH_TEXT: 1, 
    WBEMPATH_QUOTEDTEXT: 2, 
  }
);

/* enum System.Management.WMIQ_ANALYSIS_TYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.WMIQ_ANALYSIS_TYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_ANALYSIS_RPN_SEQUENCE: 1, 
    WMIQ_ANALYSIS_ASSOC_QUERY: 2, 
    WMIQ_ANALYSIS_PROP_ANALYSIS_MATRIX: 3, 
    WMIQ_ANALYSIS_QUERY_TEXT: 4, 
    WMIQ_ANALYSIS_RESERVED: 134217728, 
  }
);

/* enum System.Management.__MIDL___MIDL_itf_wmi_0000_0001 */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.__MIDL___MIDL_itf_wmi_0000_0001", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_ANALYSIS_RPN_SEQUENCE: 1, 
    WMIQ_ANALYSIS_ASSOC_QUERY: 2, 
    WMIQ_ANALYSIS_PROP_ANALYSIS_MATRIX: 3, 
    WMIQ_ANALYSIS_QUERY_TEXT: 4, 
    WMIQ_ANALYSIS_RESERVED: 134217728, 
  }
);

/* enum System.Management.WMIQ_RPN_TOKEN_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.WMIQ_RPN_TOKEN_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_RPN_OP_UNDEFINED: 0, 
    WMIQ_RPN_FROM_UNARY: 1, 
    WMIQ_RPN_TOKEN_EXPRESSION: 1, 
    WMIQ_RPN_LEFT_PROPERTY_NAME: 1, 
    WMIQ_RPN_OP_EQ: 1, 
    WMIQ_RPN_GET_TOKEN_TYPE: 1, 
    WMIQ_RPN_NEXT_TOKEN: 1, 
    WMIQ_RPN_RIGHT_PROPERTY_NAME: 2, 
    WMIQ_RPN_TOKEN_AND: 2, 
    WMIQ_RPN_FROM_PATH: 2, 
    WMIQ_RPN_GET_EXPR_SHAPE: 2, 
    WMIQ_RPN_OP_NE: 2, 
    WMIQ_RPN_OP_GE: 3, 
    WMIQ_RPN_TOKEN_OR: 3, 
    WMIQ_RPN_GET_LEFT_FUNCTION: 3, 
    WMIQ_RPN_FROM_CLASS_LIST: 4, 
    WMIQ_RPN_OP_LE: 4, 
    WMIQ_RPN_CONST2: 4, 
    WMIQ_RPN_GET_RIGHT_FUNCTION: 4, 
    WMIQ_RPN_TOKEN_NOT: 4, 
    WMIQ_RPN_GET_RELOP: 5, 
    WMIQ_RPN_OP_LT: 5, 
    WMIQ_RPN_OP_GT: 6, 
    WMIQ_RPN_OP_LIKE: 7, 
    WMIQ_RPN_OP_ISA: 8, 
    WMIQ_RPN_CONST: 8, 
    WMIQ_RPN_OP_ISNOTA: 9, 
    WMIQ_RPN_RELOP: 16, 
    WMIQ_RPN_LEFT_FUNCTION: 32, 
    WMIQ_RPN_RIGHT_FUNCTION: 64, 
  }
);

/* enum System.Management.__MIDL___MIDL_itf_wmi_0000_0002 */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.__MIDL___MIDL_itf_wmi_0000_0002", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_RPN_OP_UNDEFINED: 0, 
    WMIQ_RPN_FROM_UNARY: 1, 
    WMIQ_RPN_TOKEN_EXPRESSION: 1, 
    WMIQ_RPN_LEFT_PROPERTY_NAME: 1, 
    WMIQ_RPN_OP_EQ: 1, 
    WMIQ_RPN_GET_TOKEN_TYPE: 1, 
    WMIQ_RPN_NEXT_TOKEN: 1, 
    WMIQ_RPN_RIGHT_PROPERTY_NAME: 2, 
    WMIQ_RPN_TOKEN_AND: 2, 
    WMIQ_RPN_FROM_PATH: 2, 
    WMIQ_RPN_GET_EXPR_SHAPE: 2, 
    WMIQ_RPN_OP_NE: 2, 
    WMIQ_RPN_OP_GE: 3, 
    WMIQ_RPN_TOKEN_OR: 3, 
    WMIQ_RPN_GET_LEFT_FUNCTION: 3, 
    WMIQ_RPN_FROM_CLASS_LIST: 4, 
    WMIQ_RPN_OP_LE: 4, 
    WMIQ_RPN_CONST2: 4, 
    WMIQ_RPN_GET_RIGHT_FUNCTION: 4, 
    WMIQ_RPN_TOKEN_NOT: 4, 
    WMIQ_RPN_GET_RELOP: 5, 
    WMIQ_RPN_OP_LT: 5, 
    WMIQ_RPN_OP_GT: 6, 
    WMIQ_RPN_OP_LIKE: 7, 
    WMIQ_RPN_OP_ISA: 8, 
    WMIQ_RPN_CONST: 8, 
    WMIQ_RPN_OP_ISNOTA: 9, 
    WMIQ_RPN_RELOP: 16, 
    WMIQ_RPN_LEFT_FUNCTION: 32, 
    WMIQ_RPN_RIGHT_FUNCTION: 64, 
  }
);

/* enum System.Management.WMIQ_ASSOCQ_FLAGS */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.WMIQ_ASSOCQ_FLAGS", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_ASSOCQ_ASSOCIATORS: 1, 
    WMIQ_ASSOCQ_REFERENCES: 2, 
    WMIQ_ASSOCQ_RESULTCLASS: 4, 
    WMIQ_ASSOCQ_ASSOCCLASS: 8, 
    WMIQ_ASSOCQ_ROLE: 16, 
    WMIQ_ASSOCQ_RESULTROLE: 32, 
    WMIQ_ASSOCQ_REQUIREDQUALIFIER: 64, 
    WMIQ_ASSOCQ_REQUIREDASSOCQUALIFIER: 128, 
    WMIQ_ASSOCQ_CLASSDEFSONLY: 256, 
    WMIQ_ASSOCQ_KEYSONLY: 512, 
    WMIQ_ASSOCQ_SCHEMAONLY: 1024, 
    WMIQ_ASSOCQ_CLASSREFSONLY: 2048, 
  }
);

/* enum System.Management.__MIDL___MIDL_itf_wmi_0000_0003 */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.__MIDL___MIDL_itf_wmi_0000_0003", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_ASSOCQ_ASSOCIATORS: 1, 
    WMIQ_ASSOCQ_REFERENCES: 2, 
    WMIQ_ASSOCQ_RESULTCLASS: 4, 
    WMIQ_ASSOCQ_ASSOCCLASS: 8, 
    WMIQ_ASSOCQ_ROLE: 16, 
    WMIQ_ASSOCQ_RESULTROLE: 32, 
    WMIQ_ASSOCQ_REQUIREDQUALIFIER: 64, 
    WMIQ_ASSOCQ_REQUIREDASSOCQUALIFIER: 128, 
    WMIQ_ASSOCQ_CLASSDEFSONLY: 256, 
    WMIQ_ASSOCQ_KEYSONLY: 512, 
    WMIQ_ASSOCQ_SCHEMAONLY: 1024, 
    WMIQ_ASSOCQ_CLASSREFSONLY: 2048, 
  }
);

/* enum System.Management.tag_WMIQ_LANGUAGE_FEATURES */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WMIQ_LANGUAGE_FEATURES", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_LF1_BASIC_SELECT: 1, 
    WMIQ_LF2_CLASS_NAME_IN_QUERY: 2, 
    WMIQ_LF3_STRING_CASE_FUNCTIONS: 3, 
    WMIQ_LF4_PROP_TO_PROP_TESTS: 4, 
    WMIQ_LF5_COUNT_STAR: 5, 
    WMIQ_LF6_ORDER_BY: 6, 
    WMIQ_LF7_DISTINCT: 7, 
    WMIQ_LF8_ISA: 8, 
    WMIQ_LF9_THIS: 9, 
    WMIQ_LF10_COMPEX_SUBEXPRESSIONS: 10, 
    WMIQ_LF11_ALIASING: 11, 
    WMIQ_LF12_GROUP_BY_HAVING: 12, 
    WMIQ_LF13_WMI_WITHIN: 13, 
    WMIQ_LF14_SQL_WRITE_OPERATIONS: 14, 
    WMIQ_LF15_GO: 15, 
    WMIQ_LF16_SINGLE_LEVEL_TRANSACTIONS: 16, 
    WMIQ_LF17_QUALIFIED_NAMES: 17, 
    WMIQ_LF18_ASSOCIATONS: 18, 
    WMIQ_LF19_SYSTEM_PROPERTIES: 19, 
    WMIQ_LF20_EXTENDED_SYSTEM_PROPERTIES: 20, 
    WMIQ_LF21_SQL89_JOINS: 21, 
    WMIQ_LF22_SQL92_JOINS: 22, 
    WMIQ_LF23_SUBSELECTS: 23, 
    WMIQ_LF24_UMI_EXTENSIONS: 24, 
    WMIQ_LF25_DATEPART: 25, 
    WMIQ_LF26_LIKE: 26, 
    WMIQ_LF27_CIM_TEMPORAL_CONSTRUCTS: 27, 
    WMIQ_LF28_STANDARD_AGGREGATES: 28, 
    WMIQ_LF29_MULTI_LEVEL_ORDER_BY: 29, 
    WMIQ_LF30_WMI_PRAGMAS: 30, 
    WMIQ_LF31_QUALIFIER_TESTS: 31, 
    WMIQ_LF32_SP_EXECUTE: 32, 
    WMIQ_LF33_ARRAY_ACCESS: 33, 
    WMIQ_LF34_UNION: 34, 
    WMIQ_LF35_COMPLEX_SELECT_TARGET: 35, 
    WMIQ_LF36_REFERENCE_TESTS: 36, 
    WMIQ_LF37_SELECT_INTO: 37, 
    WMIQ_LF38_BASIC_DATETIME_TESTS: 38, 
    WMIQ_LF39_COUNT_COLUMN: 39, 
    WMIQ_LF40_BETWEEN: 40, 
    WMIQ_LF_LAST: 40, 
  }
);

/* enum System.Management.tag_WMIQ_RPNQ_FEATURE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.tag_WMIQ_RPNQ_FEATURE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WMIQ_RPNF_WHERE_CLAUSE_PRESENT: 1, 
    WMIQ_RPNF_QUERY_IS_CONJUNCTIVE: 2, 
    WMIQ_RPNF_QUERY_IS_DISJUNCTIVE: 4, 
    WMIQ_RPNF_PROJECTION: 8, 
    WMIQ_RPNF_FEATURE_SELECT_STAR: 16, 
    WMIQ_RPNF_EQUALITY_TESTS_ONLY: 32, 
    WMIQ_RPNF_COUNT_STAR: 64, 
    WMIQ_RPNF_QUALIFIED_NAMES_IN_SELECT: 128, 
    WMIQ_RPNF_QUALIFIED_NAMES_IN_WHERE: 256, 
    WMIQ_RPNF_PROP_TO_PROP_TESTS: 512, 
    WMIQ_RPNF_ORDER_BY: 1024, 
    WMIQ_RPNF_ISA_USED: 2048, 
    WMIQ_RPNF_ISNOTA_USED: 4096, 
    WMIQ_RPNF_GROUP_BY_HAVING: 8192, 
    WMIQ_RPNF_WITHIN_INTERVAL: 16384, 
    WMIQ_RPNF_WITHIN_AGGREGATE: 32768, 
    WMIQ_RPNF_SYSPROP_CLASS: 65536, 
    WMIQ_RPNF_REFERENCE_TESTS: 131072, 
    WMIQ_RPNF_DATETIME_TESTS: 262144, 
    WMIQ_RPNF_ARRAY_ACCESS: 524288, 
    WMIQ_RPNF_QUALIFIER_FILTER: 1048576, 
    WMIQ_RPNF_SELECTED_FROM_PATH: 2097152, 
  }
);

/* class System.Management.WbemLocator */ 

(function WbemLocator$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemLocator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["4590F811-1D3A-11D0-891F-00AA004B2E24"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [514]; });

})();

/* class System.Management.WbemContext */ 

(function WbemContext$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["674B6698-EE92-11D0-AD71-00C04FD8FDFF"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [514]; });

})();

/* class System.Management.UnsecuredApartment */ 

(function UnsecuredApartment$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.UnsecuredApartment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["49BD2028-1523-11D1-AD79-00C04FD8FDFF"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; });

})();

/* class System.Management.WbemClassObject */ 

(function WbemClassObject$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemClassObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9A653086-174F-11D2-B5F9-00104B703EFD"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; });

})();

/* class System.Management.MofCompiler */ 

(function MofCompiler$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MofCompiler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["6DAF9757-2E37-11D2-AEC9-00C04FB68820"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; });

})();

/* class System.Management.WbemStatusCodeText */ 

(function WbemStatusCodeText$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemStatusCodeText", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["EB87E1BD-3233-11D2-AEC9-00C04FB68820"]; });

})();

/* class System.Management.WbemBackupRestore */ 

(function WbemBackupRestore$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemBackupRestore", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["C49E32C6-BC8B-11D2-85D4-00105A1F8304"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; });

})();

/* class System.Management.WbemObjectTextSrc */ 

(function WbemObjectTextSrc$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemObjectTextSrc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [514]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8D1C559D-84F0-4BB3-A7D5-56A7435A9BA6"]; });

})();

/* class System.Management.WbemDecoupledRegistrar */ 

(function WbemDecoupledRegistrar$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemDecoupledRegistrar", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["4CFC7932-0F9D-4BEF-9C32-8EA2A6B56FCB"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; });

})();

/* class System.Management.WbemDecoupledBasicEventProvider */ 

(function WbemDecoupledBasicEventProvider$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemDecoupledBasicEventProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["F5F75737-2843-4F22-933D-C76A97CDA62F"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; });

})();

/* class System.Management.WbemDefPath */ 

(function WbemDefPath$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemDefPath", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CF4CC405-E2C5-4DDD-B3CE-5E7582D8C9FA"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [514]; });

})();

/* class System.Management.WbemQuery */ 

(function WbemQuery$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.WbemQuery", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["EAC8A024-21E2-4523-AD73-A71A0AA2F56A"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [0]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [2]; });

})();

/* class System.Management.MTAHelper */ 

(function MTAHelper$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MTAHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.PInvokeMethod({Static:true , Public:false}, "CoGetObjectContext", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")]), $jsilcore.TypeRef("JSIL.Reference", [$.IntPtr])]), 
      {
        Module: "ole32.dll", 
      }
    )
      .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "CreateInMTA", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitWorkerThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "IsNoContextMTA", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsWindows2000OrHigher", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkerThread", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "reqList", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:true , Public:false}, "critSec", $.Object);

    $.Field({Static:true , Public:false}, "evtGo", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:true , Public:false}, "workerThreadInitialized", $.Boolean, false);

    $.Field({Static:true , Public:false}, "IID_IObjectContext", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "IID_IComThreadingInfo", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "CanCallCoGetObjectContext", $.Boolean);


    function MTAHelper__cctor () {
      $thisType.IID_IObjectContext = new $asm07.System.Guid();
      $thisType.IID_IComThreadingInfo = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MTAHelper__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.MTAHelper+MTARequest */ 

(function MTARequest$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.MTAHelper+MTARequest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:true }, "evtDone", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:true }, "typeToCreate", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "createdObject", $.Object);

    $.Field({Static:false, Public:true }, "exception", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.ThreadDispatch */ 

(function ThreadDispatch$Members () {
  var $, $thisType;
























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.ThreadDispatch", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturn"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturnAndParam"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithParam"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DispatchThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApartmentType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.ApartmentState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsBackgroundThread", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parameter", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeThreadState", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturn"), 
          $asm07.TypeRef("System.Threading.ApartmentState"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeThreadState", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturnAndParam"), 
          $asm07.TypeRef("System.Threading.ApartmentState"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeThreadState", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethod"), 
          $asm07.TypeRef("System.Threading.ApartmentState"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeThreadState", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithParam"), 
          $asm07.TypeRef("System.Threading.ApartmentState"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ApartmentType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.ApartmentState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsBackgroundThread", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Parameter", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThreadEntryPoint", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThreadEntryPointMethodWithParam", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThreadEntryPointMethodWithReturn", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThreadEntryPointMethodWithReturnAndParam", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "thread", $asm07.TypeRef("System.Threading.Thread"));

    $.Field({Static:false, Public:false}, "exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "threadWorkerMethodWithReturn", $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturn"));

    $.Field({Static:false, Public:false}, "threadWorkerMethodWithReturnAndParam", $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturnAndParam"));

    $.Field({Static:false, Public:false}, "threadWorkerMethod", $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethod"));

    $.Field({Static:false, Public:false}, "threadWorkerMethodWithParam", $asm1B.TypeRef("System.Management.ThreadDispatch+ThreadWorkerMethodWithParam"));

    $.Field({Static:false, Public:false}, "threadReturn", $.Object);

    $.Field({Static:false, Public:false}, "threadParams", $.Object);

    $.Field({Static:false, Public:false}, "backgroundThread", $.Boolean);

    $.Field({Static:false, Public:false}, "apartmentType", $asm07.TypeRef("System.Threading.ApartmentState"));

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "Parameter", $.Object);

    $.Property({Static:false, Public:true }, "IsBackgroundThread", $.Boolean);

    $.Property({Static:false, Public:true }, "Result", $.Object);

    $.Property({Static:false, Public:true }, "ApartmentType", $asm07.TypeRef("System.Threading.ApartmentState"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.ThreadDispatch+ThreadWorkerMethodWithReturn */ 

JSIL.MakeDelegate("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturn", false, [], 
  JSIL.MethodSignature.Return($asm07.TypeRef("System.Object")));

/* delegate System.Management.ThreadDispatch+ThreadWorkerMethodWithReturnAndParam */ 

JSIL.MakeDelegate("System.Management.ThreadDispatch+ThreadWorkerMethodWithReturnAndParam", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Object"), [$asm07.TypeRef("System.Object")]));

/* delegate System.Management.ThreadDispatch+ThreadWorkerMethod */ 

JSIL.MakeDelegate("System.Management.ThreadDispatch+ThreadWorkerMethod", false, [], 
  JSIL.MethodSignature.Void);

/* delegate System.Management.ThreadDispatch+ThreadWorkerMethodWithParam */ 

JSIL.MakeDelegate("System.Management.ThreadDispatch+ThreadWorkerMethodWithParam", false, [], 
  JSIL.MethodSignature.Action($asm07.TypeRef("System.Object")));

/* class System.Management.SRDescriptionAttribute */ 

(function SRDescriptionAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Management.SRDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Management.SRCategoryAttribute */ 

(function SRCategoryAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Management.SRCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Management.SR */ 

(function SR$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Constant({Static:true , Public:false}, "ASSEMBLY_NOT_REGISTERED", $.String, "ASSEMBLY_NOT_REGISTERED");

    $.Constant({Static:true , Public:false}, "FAILED_TO_BUILD_GENERATED_ASSEMBLY", $.String, "FAILED_TO_BUILD_GENERATED_ASSEMBLY");

    $.Constant({Static:true , Public:false}, "COMMENT_SHOULDSERIALIZE", $.String, "COMMENT_SHOULDSERIALIZE");

    $.Constant({Static:true , Public:false}, "COMMENT_ISPROPNULL", $.String, "COMMENT_ISPROPNULL");

    $.Constant({Static:true , Public:false}, "COMMENT_RESETPROP", $.String, "COMMENT_RESETPROP");

    $.Constant({Static:true , Public:false}, "COMMENT_DATECONVFUNC", $.String, "COMMENT_DATECONVFUNC");

    $.Constant({Static:true , Public:false}, "COMMENT_TIMESPANCONVFUNC", $.String, "COMMENT_TIMESPANCONVFUNC");

    $.Constant({Static:true , Public:false}, "COMMENT_ATTRIBPROP", $.String, "COMMENT_ATTRIBPROP");

    $.Constant({Static:true , Public:false}, "COMMENT_GETINSTANCES", $.String, "COMMENT_GETINSTANCES");

    $.Constant({Static:true , Public:false}, "COMMENT_CLASSBEGIN", $.String, "COMMENT_CLASSBEGIN");

    $.Constant({Static:true , Public:false}, "COMMENT_PRIVAUTOCOMMIT", $.String, "COMMENT_PRIVAUTOCOMMIT");

    $.Constant({Static:true , Public:false}, "COMMENT_CONSTRUCTORS", $.String, "COMMENT_CONSTRUCTORS");

    $.Constant({Static:true , Public:false}, "COMMENT_ORIGNAMESPACE", $.String, "COMMENT_ORIGNAMESPACE");

    $.Constant({Static:true , Public:false}, "COMMENT_CLASSNAME", $.String, "COMMENT_CLASSNAME");

    $.Constant({Static:true , Public:false}, "COMMENT_SYSOBJECT", $.String, "COMMENT_SYSOBJECT");

    $.Constant({Static:true , Public:false}, "COMMENT_LATEBOUNDOBJ", $.String, "COMMENT_LATEBOUNDOBJ");

    $.Constant({Static:true , Public:false}, "COMMENT_MGMTSCOPE", $.String, "COMMENT_MGMTSCOPE");

    $.Constant({Static:true , Public:false}, "COMMENT_AUTOCOMMITPROP", $.String, "COMMENT_AUTOCOMMITPROP");

    $.Constant({Static:true , Public:false}, "COMMENT_MGMTPATH", $.String, "COMMENT_MGMTPATH");

    $.Constant({Static:true , Public:false}, "COMMENT_PROPTYPECONVERTER", $.String, "COMMENT_PROPTYPECONVERTER");

    $.Constant({Static:true , Public:false}, "COMMENT_SYSPROPCLASS", $.String, "COMMENT_SYSPROPCLASS");

    $.Constant({Static:true , Public:false}, "COMMENT_ENUMIMPL", $.String, "COMMENT_ENUMIMPL");

    $.Constant({Static:true , Public:false}, "COMMENT_LATEBOUNDPROP", $.String, "COMMENT_LATEBOUNDPROP");

    $.Constant({Static:true , Public:false}, "COMMENT_CREATEDCLASS", $.String, "COMMENT_CREATEDCLASS");

    $.Constant({Static:true , Public:false}, "COMMENT_CREATEDWMINAMESPACE", $.String, "COMMENT_CREATEDWMINAMESPACE");

    $.Constant({Static:true , Public:false}, "COMMENT_STATICMANAGEMENTSCOPE", $.String, "COMMENT_STATICMANAGEMENTSCOPE");

    $.Constant({Static:true , Public:false}, "COMMENT_STATICSCOPEPROPERTY", $.String, "COMMENT_STATICSCOPEPROPERTY");

    $.Constant({Static:true , Public:false}, "COMMENT_TODATETIME", $.String, "COMMENT_TODATETIME");

    $.Constant({Static:true , Public:false}, "COMMENT_TODMTFDATETIME", $.String, "COMMENT_TODMTFDATETIME");

    $.Constant({Static:true , Public:false}, "COMMENT_TODMTFTIMEINTERVAL", $.String, "COMMENT_TODMTFTIMEINTERVAL");

    $.Constant({Static:true , Public:false}, "COMMENT_TOTIMESPAN", $.String, "COMMENT_TOTIMESPAN");

    $.Constant({Static:true , Public:false}, "COMMENT_EMBEDDEDOBJ", $.String, "COMMENT_EMBEDDEDOBJ");

    $.Constant({Static:true , Public:false}, "COMMENT_CURRENTOBJ", $.String, "COMMENT_CURRENTOBJ");

    $.Constant({Static:true , Public:false}, "COMMENT_FLAGFOREMBEDDED", $.String, "COMMENT_FLAGFOREMBEDDED");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT1", $.String, "EMBEDDED_COMMENT1");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT2", $.String, "EMBEDDED_COMMENT2");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT3", $.String, "EMBEDDED_COMMENT3");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT4", $.String, "EMBEDDED_COMMENT4");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT5", $.String, "EMBEDDED_COMMENT5");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT6", $.String, "EMBEDDED_COMMENT6");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT7", $.String, "EMBEDDED_COMMENT7");

    $.Constant({Static:true , Public:false}, "EMBEDED_VB_CODESAMP4", $.String, "EMBEDED_VB_CODESAMP4");

    $.Constant({Static:true , Public:false}, "EMBEDED_VB_CODESAMP5", $.String, "EMBEDED_VB_CODESAMP5");

    $.Constant({Static:true , Public:false}, "EMBEDDED_COMMENT8", $.String, "EMBEDDED_COMMENT8");

    $.Constant({Static:true , Public:false}, "EMBEDED_CS_CODESAMP4", $.String, "EMBEDED_CS_CODESAMP4");

    $.Constant({Static:true , Public:false}, "EMBEDED_CS_CODESAMP5", $.String, "EMBEDED_CS_CODESAMP5");

    $.Constant({Static:true , Public:false}, "CLASSNOT_FOUND_EXCEPT", $.String, "CLASSNOT_FOUND_EXCEPT");

    $.Constant({Static:true , Public:false}, "NULLFILEPATH_EXCEPT", $.String, "NULLFILEPATH_EXCEPT");

    $.Constant({Static:true , Public:false}, "EMPTY_FILEPATH_EXCEPT", $.String, "EMPTY_FILEPATH_EXCEPT");

    $.Constant({Static:true , Public:false}, "NAMESPACE_NOTINIT_EXCEPT", $.String, "NAMESPACE_NOTINIT_EXCEPT");

    $.Constant({Static:true , Public:false}, "CLASSNAME_NOTINIT_EXCEPT", $.String, "CLASSNAME_NOTINIT_EXCEPT");

    $.Constant({Static:true , Public:false}, "UNABLE_TOCREATE_GEN_EXCEPT", $.String, "UNABLE_TOCREATE_GEN_EXCEPT");

    $.Constant({Static:true , Public:false}, "FORCE_UPDATE", $.String, "FORCE_UPDATE");

    $.Constant({Static:true , Public:false}, "FILETOWRITE_MOF", $.String, "FILETOWRITE_MOF");

    $.Constant({Static:true , Public:false}, "WMISCHEMA_INSTALLATIONSTART", $.String, "WMISCHEMA_INSTALLATIONSTART");

    $.Constant({Static:true , Public:false}, "REGESTRING_ASSEMBLY", $.String, "REGESTRING_ASSEMBLY");

    $.Constant({Static:true , Public:false}, "WMISCHEMA_INSTALLATIONEND", $.String, "WMISCHEMA_INSTALLATIONEND");

    $.Constant({Static:true , Public:false}, "MOFFILE_GENERATING", $.String, "MOFFILE_GENERATING");

    $.Constant({Static:true , Public:false}, "UNSUPPORTEDMEMBER_EXCEPT", $.String, "UNSUPPORTEDMEMBER_EXCEPT");

    $.Constant({Static:true , Public:false}, "CLASSINST_EXCEPT", $.String, "CLASSINST_EXCEPT");

    $.Constant({Static:true , Public:false}, "MEMBERCONFLILCT_EXCEPT", $.String, "MEMBERCONFLILCT_EXCEPT");

    $.Constant({Static:true , Public:false}, "NAMESPACE_ENSURE", $.String, "NAMESPACE_ENSURE");

    $.Constant({Static:true , Public:false}, "CLASS_ENSURE", $.String, "CLASS_ENSURE");

    $.Constant({Static:true , Public:false}, "CLASS_ENSURECREATE", $.String, "CLASS_ENSURECREATE");

    $.Constant({Static:true , Public:false}, "CLASS_NOTREPLACED_EXCEPT", $.String, "CLASS_NOTREPLACED_EXCEPT");

    $.Constant({Static:true , Public:false}, "NONCLS_COMPLIANT_EXCEPTION", $.String, "NONCLS_COMPLIANT_EXCEPTION");

    $.Constant({Static:true , Public:false}, "INVALID_QUERY", $.String, "INVALID_QUERY");

    $.Constant({Static:true , Public:false}, "INVALID_QUERY_DUP_TOKEN", $.String, "INVALID_QUERY_DUP_TOKEN");

    $.Constant({Static:true , Public:false}, "INVALID_QUERY_NULL_TOKEN", $.String, "INVALID_QUERY_NULL_TOKEN");

    $.Constant({Static:true , Public:false}, "WORKER_THREAD_WAKEUP_FAILED", $.String, "WORKER_THREAD_WAKEUP_FAILED");

    $.Field({Static:true , Public:false}, "loader", $.Type);

    $.Field({Static:false, Public:false}, "resources", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm07.TypeRef("System.Resources.ResourceManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Management.Instrumentation");
/* class System.Management.Instrumentation.AssemblyNameUtility */ 

(function AssemblyNameUtility$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.AssemblyNameUtility", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "BinToString", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:true , Public:true }, "UniqueToAssemblyBuild", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:true }, "UniqueToAssemblyFullVersion", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:true }, "UniqueToAssemblyMinorVersion", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:false}, "UniqueToAssemblyVersion", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.Assembly")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.InstrumentedAttribute */ 

(function InstrumentedAttribute$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Management.Instrumentation.InstrumentedAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SecurityDescriptor", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetInstrumentedParentTypes", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.ArrayList"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetInstrumentedTypes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsInstrumentationClass", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.Field({Static:false, Public:false}, "namespaceName", $.String);

    $.Field({Static:false, Public:false}, "securityDescriptor", $.String);

    $.Property({Static:false, Public:true }, "NamespaceName", $.String);

    $.Property({Static:false, Public:true }, "SecurityDescriptor", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Assembly]; });

})();

/* enum System.Management.Instrumentation.InstrumentationType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.Instrumentation.InstrumentationType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Instance: 0, 
    Event: 1, 
    Abstract: 2, 
  }
);

/* class System.Management.Instrumentation.InstrumentationClassAttribute */ 

(function InstrumentationClassAttribute$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Management.Instrumentation.InstrumentationClassAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstrumentationType", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ManagedBaseClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetBaseInstrumentationType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm07.TypeRef("System.Type")])
    );

    $.Field({Static:false, Public:false}, "instrumentationType", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"));

    $.Field({Static:false, Public:false}, "managedBaseClassName", $.String);

    $.Property({Static:false, Public:true }, "InstrumentationType", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"));

    $.Property({Static:false, Public:true }, "ManagedBaseClassName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.$Flags("Class", "Struct")]; });

})();

/* class System.Management.Instrumentation.ManagedNameAttribute */ 

(function ManagedNameAttribute$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Management.Instrumentation.ManagedNameAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetBaseClassName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMemberName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Reflection.MemberInfo")])
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.$Flags(
          "Class", "Field", "Method", "Property", 
          "Struct"
      )]; });

})();

/* class System.Management.Instrumentation.IgnoreMemberAttribute */ 

(function IgnoreMemberAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Management.Instrumentation.IgnoreMemberAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.$Flags("Field", "Method", "Property")]; });

})();

/* class System.Management.Instrumentation.CodeWriter */ 

(function CodeWriter$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.CodeWriter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddChild", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddChild", 
      new JSIL.MethodSignature($.Type, [$jsilcore.TypeRef("System.Array", [$.String])])
    )
      .Parameter(0, "parts", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "AddChild", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddChildNoIndent", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Line", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Line", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String]))
    )
      .Parameter(0, "parts", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "Line", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.String, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteCode", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextWriter"))
    );

    $.Field({Static:false, Public:false}, "depth", $.Int32);

    $.Field({Static:false, Public:false}, "children", $asm07.TypeRef("System.Collections.ArrayList"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.ReferencesCollection */ 

(function ReferencesCollection$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.ReferencesCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assemblies", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Namespaces", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.StringCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UsingCode", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"))
    );

    $.Field({Static:false, Public:false}, "namespaces", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Field({Static:false, Public:false}, "assemblies", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Field({Static:false, Public:false}, "usingCode", $asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"));

    $.Property({Static:false, Public:true }, "Namespaces", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Property({Static:false, Public:true }, "Assemblies", $asm0A.TypeRef("System.Collections.Specialized.StringCollection"));

    $.Property({Static:false, Public:true }, "UsingCode", $asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.ComThreadingInfo */ 

(function ComThreadingInfo$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.ComThreadingInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.PInvokeMethod({Static:true , Public:false}, "CoGetObjectContext", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])]), 
      {
        Module: "ole32.dll", 
        Result: {
          NativeType: "IUnknown"
        }
      }
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApartmentType", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+APTTYPE"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LogicalThreadId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ThreadType", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+THDTYPE"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "IID_IUnknown", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "apartmentType", $asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+APTTYPE"));

    $.Field({Static:false, Public:false}, "threadType", $asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+THDTYPE"));

    $.Field({Static:false, Public:false}, "logicalThreadId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:true , Public:true }, "Current", $.Type);

    $.Property({Static:false, Public:true }, "ApartmentType", $asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+APTTYPE"));

    $.Property({Static:false, Public:true }, "ThreadType", $asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+THDTYPE"));

    $.Property({Static:false, Public:true }, "LogicalThreadId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Management.Instrumentation.ComThreadingInfo+APTTYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.Instrumentation.ComThreadingInfo+APTTYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    APTTYPE_CURRENT: -1, 
    APTTYPE_STA: 0, 
    APTTYPE_MTA: 1, 
    APTTYPE_NA: 2, 
    APTTYPE_MAINSTA: 3, 
  }
);

/* enum System.Management.Instrumentation.ComThreadingInfo+THDTYPE */ 

JSIL.MakeEnum(
  {
    FullName: "System.Management.Instrumentation.ComThreadingInfo+THDTYPE", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    THDTYPE_BLOCKMESSAGES: 0, 
    THDTYPE_PROCESSMESSAGES: 1, 
  }
);

/* interface System.Management.Instrumentation.ComThreadingInfo+IComThreadingInfo */ 

JSIL.MakeInterface(
  "System.Management.Instrumentation.ComThreadingInfo+IComThreadingInfo", false, [], function ($) {
    $.Method({}, "GetCurrentApartmentType", JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+APTTYPE")));
    $.Method({}, "GetCurrentThreadType", JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ComThreadingInfo+THDTYPE")));
    $.Method({}, "GetCurrentLogicalThreadId", JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")));
    $.Method({}, "SetCurrentLogicalThreadId", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["000001ce-0000-0000-C000-000000000046"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Management.Instrumentation.EventSource */ 

(function EventSource$Members () {
  var $, $thisType;









































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.EventSource", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.Instrumentation.InstrumentedAssembly")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Any", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "IndicateEvents", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$.IntPtr])])
    );

    $.ExternalMethod({Static:false, Public:true }, "MTAWorkerThread2", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessExit", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RelocateNamespaceRCWToMTA", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RelocateNamespaceRCWToMTA_ThreadFuncion", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "RelocateRCWToCurrentApartment", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "RelocateSinkRCWToMTA", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RelocateSinkRCWToMTA_ThreadFuncion", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemEventProvider.ProvideEvents_", 
      new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink"), $.Int32])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemEventProvider"), "ProvideEvents_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemEventProviderQuerySink.CancelQuery_", 
      new JSIL.MethodSignature($.Int32, [$.UInt32])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemEventProviderQuerySink"), "CancelQuery_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemEventProviderQuerySink.NewQuery_", 
      new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.String, 
          $.String
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemEventProviderQuerySink"), "NewQuery_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemEventProviderSecurity.AccessCheck_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Byte])
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemEventProviderSecurity"), "AccessCheck_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemProviderInit.Initialize_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.String, $.String, 
          $asm1B.TypeRef("System.Management.IWbemServices"), $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemProviderInitSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemProviderInit"), "Initialize_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.CancelAsyncCall_", 
      new JSIL.MethodSignature($.Int32, [$asm1B.TypeRef("System.Management.IWbemObjectSink")])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "CancelAsyncCall_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.CreateClassEnum_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "CreateClassEnum_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.CreateClassEnumAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "CreateClassEnumAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.CreateInstanceEnum_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "CreateInstanceEnum_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.CreateInstanceEnumAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "CreateInstanceEnumAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.DeleteClass_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "DeleteClass_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.DeleteClassAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "DeleteClassAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.DeleteInstance_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "DeleteInstance_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.DeleteInstanceAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "DeleteInstanceAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecMethod_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), 
          $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecMethod_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecMethodAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecMethodAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecNotificationQuery_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecNotificationQuery_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecNotificationQueryAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecNotificationQueryAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecQuery_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IEnumWbemClassObject")])
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecQuery_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.ExecQueryAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.Int32, $asm1B.TypeRef("System.Management.IWbemContext"), 
          $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "ExecQueryAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.GetObject_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal")]), 
          $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "GetObject_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.GetObjectAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "GetObjectAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.OpenNamespace_", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemServices")]), 
          $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "OpenNamespace_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.PutClass_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "PutClass_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.PutClassAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "PutClassAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.PutInstance_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $.IntPtr
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "PutInstance_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.PutInstanceAsync_", 
      new JSIL.MethodSignature($.Int32, [
          $asm1B.TypeRef("System.Management.IWbemClassObject_DoNotMarshal"), $.Int32, 
          $asm1B.TypeRef("System.Management.IWbemContext"), $asm1B.TypeRef("System.Management.IWbemObjectSink")
        ])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "PutInstanceAsync_");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Management.IWbemServices_Old.QueryObjectSink_", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1B.TypeRef("System.Management.IWbemObjectSink")])])
    )
      .Overrides($asm1B.TypeRef("System.Management.IWbemServices_Old"), "QueryObjectSink_");

    $.ExternalMethod({Static:false, Public:false}, "UnRegister", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "registrar", $asm1B.TypeRef("System.Management.IWbemDecoupledRegistrar"));

    $.Field({Static:true , Public:false}, "eventSources", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "instrumentedAssembly", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentedAssembly"));

    $.Field({Static:true , Public:false}, "shutdownInProgress", $.Int32, 0);

    $.Field({Static:true , Public:false}, "preventShutdownLock", $asm07.TypeRef("System.Threading.ReaderWriterLock"));

    $.Field({Static:false, Public:false}, "pNamespaceNA", $asm1B.TypeRef("System.Management.IWbemServices"));

    $.Field({Static:false, Public:false}, "pSinkNA", $asm1B.TypeRef("System.Management.IWbemObjectSink"));

    $.Field({Static:false, Public:false}, "pNamespaceMTA", $asm1B.TypeRef("System.Management.IWbemServices"));

    $.Field({Static:false, Public:false}, "pSinkMTA", $asm1B.TypeRef("System.Management.IWbemObjectSink"));

    $.Field({Static:false, Public:false}, "reqList", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "critSec", $.Object);

    $.Field({Static:false, Public:false}, "doIndicate", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:false}, "workerThreadInitialized", $.Boolean);

    $.Field({Static:false, Public:false}, "alive", $.Boolean);

    $.Field({Static:false, Public:false}, "mapQueryIdToQuery", $asm07.TypeRef("System.Collections.Hashtable"));

    $.ImplementInterfaces(
      /* 0 */ $asm1B.TypeRef("System.Management.IWbemProviderInit"), 
      /* 1 */ $asm1B.TypeRef("System.Management.IWbemEventProvider"), 
      /* 2 */ $asm1B.TypeRef("System.Management.IWbemEventProviderQuerySink"), 
      /* 3 */ $asm1B.TypeRef("System.Management.IWbemEventProviderSecurity"), 
      /* 4 */ $asm1B.TypeRef("System.Management.IWbemServices_Old")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.EventSource+MTARequest */ 

(function MTARequest$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.EventSource+MTARequest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$.IntPtr])])
    );

    $.Field({Static:false, Public:true }, "doneIndicate", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:true }, "exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:true }, "lengthFromSTA", $.Int32);

    $.Field({Static:false, Public:true }, "objectsFromSTA", $jsilcore.TypeRef("System.Array", [$.IntPtr]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.Instrumentation.ProvisionFunction */ 

JSIL.MakeDelegate("System.Management.Instrumentation.ProvisionFunction", false, [], 
  JSIL.MethodSignature.Action($asm07.TypeRef("System.Object")));

/* class System.Management.Instrumentation.SecurityHelper */ 

(function SecurityHelper$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.SecurityHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "UnmanagedCode", $asm07.TypeRef("System.Security.Permissions.SecurityPermission"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.Instrumentation */ 

(function Instrumentation$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.Instrumentation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Fire", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ProcessIdentity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.PInvokeMethod({Static:true , Public:false}, "GetCurrentProcessId", 
      JSIL.MethodSignature.Return($.Int32), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFireFunction", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetInstrumentedAssembly", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.Instrumentation.InstrumentedAssembly"), [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPublishFunction", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRevokeFunction", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Initialize", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAssemblyRegistered", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Publish", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "RegisterAssembly", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:true , Public:true }, "Revoke", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "SetBatchSize", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Int32])
    );

    $.Field({Static:true , Public:false}, "processIdentity", $.String, null);

    $.Field({Static:true , Public:false}, "instrumentedAssemblies", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:true , Public:false}, "ProcessIdentity", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.Instrumentation.ConvertToWMI */ 

JSIL.MakeDelegate("System.Management.Instrumentation.ConvertToWMI", false, [], 
  JSIL.MethodSignature.Action($asm07.TypeRef("System.Object")));

/* class System.Management.Instrumentation.InstrumentedAssembly */ 

(function InstrumentedAssembly$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.InstrumentedAssembly", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Reflection.Assembly"), $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming")])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindReferences", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm0A.TypeRef("System.CodeDom.Compiler.CompilerParameters")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Fire", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "Fire", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeInfo", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.Instrumentation.InstrumentedAssembly+TypeInfo"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitEventSource", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "IsInstrumentedType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Publish", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "Revoke", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetBatchSize", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Int32])
    );

    $.Field({Static:false, Public:false}, "naming", $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming"));

    $.Field({Static:false, Public:true }, "source", $asm1B.TypeRef("System.Management.Instrumentation.EventSource"));

    $.Field({Static:false, Public:true }, "mapTypeToConverter", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:true }, "readerWriterLock", $asm07.TypeRef("System.Threading.ReaderWriterLock"));

    $.Field({Static:true , Public:true }, "mapIDToPublishedObject", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "mapPublishedObjectToID", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "upcountId", $.Int32, 3839);

    $.Field({Static:false, Public:false}, "mapTypeToTypeInfo", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "lastTypeInfo", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentedAssembly+TypeInfo"));

    $.Field({Static:false, Public:false}, "lastType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.InstrumentedAssembly+TypeInfo */ 

(function TypeInfo$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.InstrumentedAssembly+TypeInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.Instrumentation.EventSource"), $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming"), 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cleanup", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ExtractIntPtr", 
      new JSIL.MethodSignature($.IntPtr, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Fire", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetBatchSize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "batchSize", $.Int32);

    $.Field({Static:false, Public:false}, "batchEvents", $.Boolean);

    $.Field({Static:false, Public:false}, "convertFunctionsBatch", $jsilcore.TypeRef("System.Array", [$asm1B.TypeRef("System.Management.Instrumentation.ConvertToWMI")]));

    $.Field({Static:false, Public:false}, "convertFunctionNoBatch", $asm1B.TypeRef("System.Management.Instrumentation.ConvertToWMI"));

    $.Field({Static:false, Public:false}, "wbemObjects", $jsilcore.TypeRef("System.Array", [$.IntPtr]));

    $.Field({Static:false, Public:false}, "converterType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "currentIndex", $.Int32);

    $.Field({Static:false, Public:true }, "source", $asm1B.TypeRef("System.Management.Instrumentation.EventSource"));

    $.Field({Static:false, Public:true }, "lastFire", $.Int32);

    $.Field({Static:false, Public:true }, "cleanupThread", $asm07.TypeRef("System.Threading.Thread"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Management.Instrumentation.IEvent */ 

JSIL.MakeInterface(
  "System.Management.Instrumentation.IEvent", true, [], function ($) {
    $.Method({}, "Fire", JSIL.MethodSignature.Void);
  }, []);

/* class System.Management.Instrumentation.BaseEvent */ 

(function BaseEvent$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.BaseEvent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Fire", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FireFunction", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"))
    );

    $.Field({Static:false, Public:false}, "fireFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.Property({Static:false, Public:false}, "FireFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.ImplementInterfaces(
      /* 0 */ $asm1B.TypeRef("System.Management.Instrumentation.IEvent")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm1B.TypeRef("System.Management.Instrumentation.InstrumentationClassAttribute"), function () { return [$asm1B.System.Management.Instrumentation.InstrumentationType.Event]; });

})();

/* interface System.Management.Instrumentation.IInstance */ 

JSIL.MakeInterface(
  "System.Management.Instrumentation.IInstance", true, [], function ($) {
    $.Method({}, "get_Published", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "set_Published", JSIL.MethodSignature.Action($.Boolean));
    $.Property({}, "Published");
  }, []);

/* class System.Management.Instrumentation.Instance */ 

(function Instance$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.Instance", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Published", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PublishFunction", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RevokeFunction", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Published", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "publishFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.Field({Static:false, Public:false}, "revokeFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.Field({Static:false, Public:false}, "published", $.Boolean);

    $.Property({Static:false, Public:false}, "PublishFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.Property({Static:false, Public:false}, "RevokeFunction", $asm1B.TypeRef("System.Management.Instrumentation.ProvisionFunction"));

    $.Property({Static:false, Public:true , Virtual:true }, "Published", $.Boolean)
      .Attribute($asm1B.TypeRef("System.Management.Instrumentation.IgnoreMemberAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm1B.TypeRef("System.Management.Instrumentation.IInstance")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm1B.TypeRef("System.Management.Instrumentation.InstrumentationClassAttribute"), function () { return [$asm1B.System.Management.Instrumentation.InstrumentationType.Instance]; });

})();

/* class System.Management.Instrumentation.ManagementInstaller */ 

(function ManagementInstaller$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Configuration.Install.Installer"), 
      Name: "System.Management.Instrumentation.ManagementInstaller", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Commit", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HelpText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Install", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Rollback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Uninstall", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.Field({Static:true , Public:false}, "helpPrinted", $.Boolean);

    $.Field({Static:false, Public:false}, "mof", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "HelpText", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.DefaultManagementProjectInstaller */ 

(function DefaultManagementProjectInstaller$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Configuration.Install.Installer"), 
      Name: "System.Management.Instrumentation.DefaultManagementProjectInstaller", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.SchemaMapping */ 

(function SchemaMapping$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.SchemaMapping", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming"), 
          $asm07.TypeRef("System.Collections.Hashtable")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ClassType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Code", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CodeClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstrumentationType", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NewClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ThrowUnsupportedMember", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MemberInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ThrowUnsupportedMember", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Reflection.MemberInfo"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:false, Public:false}, "classType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "newClass", $asm1B.TypeRef("System.Management.ManagementClass"));

    $.Field({Static:false, Public:false}, "className", $.String);

    $.Field({Static:false, Public:false}, "classPath", $.String);

    $.Field({Static:false, Public:false}, "codeClassName", $.String);

    $.Field({Static:false, Public:false}, "code", $asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"));

    $.Field({Static:false, Public:false}, "instrumentationType", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"));

    $.Property({Static:false, Public:true }, "ClassType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "NewClass", $asm1B.TypeRef("System.Management.ManagementClass"));

    $.Property({Static:false, Public:true }, "ClassName", $.String);

    $.Property({Static:false, Public:true }, "ClassPath", $.String);

    $.Property({Static:false, Public:true }, "Code", $asm1B.TypeRef("System.Management.Instrumentation.CodeWriter"));

    $.Property({Static:false, Public:true }, "CodeClassName", $.String);

    $.Property({Static:false, Public:true }, "InstrumentationType", $asm1B.TypeRef("System.Management.Instrumentation.InstrumentationType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.SchemaNaming */ 

(function SchemaNaming$Members () {
  var $, $thisType;


































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.SchemaNaming", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Reflection.Assembly")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AppendProperty", 
      new JSIL.MethodSignature($.String, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoesClassExist", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoesInstanceExist", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureClassExists", 
      new JSIL.MethodSignature(null, [
          $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming+InstallLogWrapper"), $.String, 
          $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming+ClassMaker")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespace", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespace", 
      new JSIL.MethodSignature(null, [$asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming+InstallLogWrapper"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespaceInMof", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespaceInMof", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateMof", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AssemblyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AssemblyPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AssemblyUniqueIdentifier", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Code", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CodePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DataDirectory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DecoupledProviderClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DecoupledProviderInstanceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EventProviderRegistrationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EventProviderRegistrationPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_GlobalInstrumentationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_GlobalNamingClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_GlobalRegistrationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_GlobalRegistrationNamespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_GlobalRegistrationPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceProviderRegistrationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceProviderRegistrationPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstrumentationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Mof", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MofPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PrecompiledAssembly", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PrecompiledAssemblyPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ProviderClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ProviderPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RegistrationClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RegistrationInstance", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementObject"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RegistrationPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SecurityDescriptor", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Win32ProviderClassPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMofFormat", 
      new JSIL.MethodSignature($.String, [$asm1B.TypeRef("System.Management.ManagementObject")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSchemaNaming", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsAssemblyRegistered", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "IsClassAlreadyPresentInRepository", 
      new JSIL.MethodSignature($.Boolean, [$asm1B.TypeRef("System.Management.ManagementObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsSchemaToBeCompared", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "MakeClassPath", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeDecoupledProviderClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeGlobalInstrumentationClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeInstrumentationClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeNamespaceRegistrationClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeNamingClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeProviderClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeRegistrationClass", 
      JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass"))
    );

    $.ExternalMethod({Static:true , Public:false}, "PragmaNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterAssemblyAsInstrumented", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterAssemblySpecificDecoupledProviderInstance", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterAssemblySpecificSchema", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterNamespaceAsInstrumented", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterNonAssemblySpecificSchema", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Configuration.Install.InstallContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterProviderAsEventProvider", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Collections.Specialized.StringCollection")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterProviderAsInstanceProvider", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "RegisterSchemaUsingMofcomp", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "ReplaceClassIfNecessary", 
      new JSIL.MethodSignature(null, [$.String, $asm1B.TypeRef("System.Management.ManagementClass")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SafeGetClass", 
      new JSIL.MethodSignature($asm1B.TypeRef("System.Management.ManagementClass"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DecoupledProviderInstanceName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "assembly", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Constant({Static:true , Public:false}, "Win32ProviderClassName", $.String, "__Win32Provider");

    $.Constant({Static:true , Public:false}, "EventProviderRegistrationClassName", $.String, "__EventProviderRegistration");

    $.Constant({Static:true , Public:false}, "InstanceProviderRegistrationClassName", $.String, "__InstanceProviderRegistration");

    $.Constant({Static:true , Public:false}, "DecoupledProviderClassName", $.String, "MSFT_DecoupledProvider");

    $.Constant({Static:true , Public:false}, "ProviderClassName", $.String, "WMINET_ManagedAssemblyProvider");

    $.Constant({Static:true , Public:false}, "InstrumentationClassName", $.String, "WMINET_Instrumentation");

    $.Constant({Static:true , Public:false}, "InstrumentedAssembliesClassName", $.String, "WMINET_InstrumentedAssembly");

    $.Constant({Static:true , Public:false}, "DecoupledProviderCLSID", $.String, "{54D8502C-527D-43f7-A506-A9DA075E229C}");

    $.Constant({Static:true , Public:false}, "GlobalWmiNetNamespace", $.String, "root\\MicrosoftWmiNet");

    $.Constant({Static:true , Public:false}, "InstrumentedNamespacesClassName", $.String, "WMINET_InstrumentedNamespaces");

    $.Constant({Static:true , Public:false}, "NamingClassName", $.String, "WMINET_Naming");

    $.Field({Static:false, Public:false}, "assemblyInfo", $asm1B.TypeRef("System.Management.Instrumentation.SchemaNaming+AssemblySpecificNaming"));

    $.Field({Static:false, Public:false}, "registrationInstance", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Constant({Static:true , Public:false}, "iwoaDef", $.String, "class IWOA\r\n{\r\nprotected const string DllName = \"wminet_utils.dll\";\r\nprotected const string EntryPointName = \"UFunc\";\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"GetPropertyHandle\")] public static extern int GetPropertyHandle_f27(int vFunc, IntPtr pWbemClassObject, [In][MarshalAs(UnmanagedType.LPWStr)]  string   wszPropertyName, [Out] out Int32 pType, [Out] out Int32 plHandle);\r\n//[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref Byte aData);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"ReadPropertyValue\")] public static extern int ReadPropertyValue_f29(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lBufferSize, [Out] out Int32 plNumBytes, [Out] out Byte aData);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"ReadDWORD\")] public static extern int ReadDWORD_f30(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [Out] out UInt32 pdw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteDWORD\")] public static extern int WriteDWORD_f31(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] UInt32 dw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"ReadQWORD\")] public static extern int ReadQWORD_f32(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [Out] out UInt64 pqw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteQWORD\")] public static extern int WriteQWORD_f33(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] UInt64 pw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"GetPropertyInfoByHandle\")] public static extern int GetPropertyInfoByHandle_f34(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [Out][MarshalAs(UnmanagedType.BStr)]  out string   pstrName, [Out] out Int32 pType);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"Lock\")] public static extern int Lock_f35(int vFunc, IntPtr pWbemClassObject, [In] Int32 lFlags);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"Unlock\")] public static extern int Unlock_f36(int vFunc, IntPtr pWbemClassObject, [In] Int32 lFlags);\r\n\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"Put\")] public static extern int Put_f5(int vFunc, IntPtr pWbemClassObject, [In][MarshalAs(UnmanagedType.LPWStr)]  string   wszName, [In] Int32 lFlags, [In] ref object pVal, [In] Int32 Type);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In][MarshalAs(UnmanagedType.LPWStr)] string str);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref Byte n);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref SByte n);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref Int16 n);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\")] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref UInt16 n);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WritePropertyValue\", CharSet=CharSet.Unicode)] public static extern int WritePropertyValue_f28(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 lNumBytes, [In] ref Char c);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteDWORD\")] public static extern int WriteDWORD_f31(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int32 dw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteSingle\")] public static extern int WriteDWORD_f31(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Single dw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteQWORD\")] public static extern int WriteQWORD_f33(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Int64 pw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"WriteDouble\")] public static extern int WriteQWORD_f33(int vFunc, IntPtr pWbemClassObject, [In] Int32 lHandle, [In] Double pw);\r\n[SuppressUnmanagedCodeSecurity, DllImport(DllName, EntryPoint=\"Clone\")] public static extern int Clone_f(int vFunc, IntPtr pWbemClassObject, [Out] out IntPtr ppCopy);\r\n}\r\ninterface IWmiConverter\r\n{\r\n    void ToWMI(object obj);\r\n    ManagementObject GetInstance();\r\n}\r\nclass SafeAssign\r\n{\r\n    public static UInt16 boolTrue = 0xffff;\r\n    public static UInt16 boolFalse = 0;\r\n    static Hashtable validTypes = new Hashtable();\r\n    static SafeAssign()\r\n    {\r\n        validTypes.Add(typeof(SByte), null);\r\n        validTypes.Add(typeof(Byte), null);\r\n        validTypes.Add(typeof(Int16), null);\r\n        validTypes.Add(typeof(UInt16), null);\r\n        validTypes.Add(typeof(Int32), null);\r\n        validTypes.Add(typeof(UInt32), null);\r\n        validTypes.Add(typeof(Int64), null);\r\n        validTypes.Add(typeof(UInt64), null);\r\n        validTypes.Add(typeof(Single), null);\r\n        validTypes.Add(typeof(Double), null);\r\n        validTypes.Add(typeof(Boolean), null);\r\n        validTypes.Add(typeof(String), null);\r\n        validTypes.Add(typeof(Char), null);\r\n        validTypes.Add(typeof(DateTime), null);\r\n        validTypes.Add(typeof(TimeSpan), null);\r\n        validTypes.Add(typeof(ManagementObject), null);\r\n        nullClass.SystemProperties [\"__CLASS\"].Value = \"nullInstance\";\r\n    }\r\n    public static object GetInstance(object o)\r\n    {\r\n        if(o is ManagementObject)\r\n            return o;\r\n        return null;\r\n    }\r\n    static ManagementClass nullClass = new ManagementClass(");

    $.Constant({Static:true , Public:false}, "iwoaDefEnd", $.String, ");\r\n    \r\n    public static ManagementObject GetManagementObject(object o)\r\n    {\r\n        if(o != null && o is ManagementObject)\r\n            return o as ManagementObject;\r\n        // Must return empty instance\r\n        return nullClass.CreateInstance();\r\n    }\r\n    public static object GetValue(object o)\r\n    {\r\n        Type t = o.GetType();\r\n        if(t.IsArray)\r\n            t = t.GetElementType();\r\n        if(validTypes.Contains(t))\r\n            return o;\r\n        return null;\r\n    }\r\n    public static string WMITimeToString(DateTime dt)\r\n    {\r\n        TimeSpan ts = dt.Subtract(dt.ToUniversalTime());\r\n        int diffUTC = (ts.Minutes + ts.Hours * 60);\r\n        if(diffUTC >= 0)\r\n            return String.Format(\"{0:D4}{1:D2}{2:D2}{3:D2}{4:D2}{5:D2}.{6:D3}000+{7:D3}\", dt.Year, dt.Month, dt.Day, dt.Hour, dt.Minute, dt.Second, dt.Millisecond, diffUTC);\r\n        return String.Format(\"{0:D4}{1:D2}{2:D2}{3:D2}{4:D2}{5:D2}.{6:D3}000-{7:D3}\", dt.Year, dt.Month, dt.Day, dt.Hour, dt.Minute, dt.Second, dt.Millisecond, -diffUTC);\r\n    }\r\n    public static string WMITimeToString(TimeSpan ts)\r\n    {\r\n        return String.Format(\"{0:D8}{1:D2}{2:D2}{3:D2}.{4:D3}000:000\", ts.Days, ts.Hours, ts.Minutes, ts.Seconds, ts.Milliseconds);\r\n    }\r\n    public static string[] WMITimeArrayToStringArray(DateTime[] dates)\r\n    {\r\n        string[] strings = new string[dates.Length];\r\n        for(int i=0;i<dates.Length;i++)\r\n            strings[i] = WMITimeToString(dates[i]);\r\n        return strings;\r\n    }\r\n    public static string[] WMITimeArrayToStringArray(TimeSpan[] timeSpans)\r\n    {\r\n        string[] strings = new string[timeSpans.Length];\r\n        for(int i=0;i<timeSpans.Length;i++)\r\n            strings[i] = WMITimeToString(timeSpans[i]);\r\n        return strings;\r\n    }\r\n}\r\n");

    $.Property({Static:false, Public:true }, "NamespaceName", $.String);

    $.Property({Static:false, Public:true }, "SecurityDescriptor", $.String);

    $.Property({Static:false, Public:true }, "DecoupledProviderInstanceName", $.String);

    $.Property({Static:false, Public:false}, "AssemblyUniqueIdentifier", $.String);

    $.Property({Static:false, Public:false}, "AssemblyName", $.String);

    $.Property({Static:false, Public:false}, "AssemblyPath", $.String);

    $.Property({Static:false, Public:false}, "Win32ProviderClassPath", $.String);

    $.Property({Static:false, Public:false}, "DecoupledProviderClassPath", $.String);

    $.Property({Static:false, Public:false}, "InstrumentationClassPath", $.String);

    $.Property({Static:false, Public:false}, "EventProviderRegistrationClassPath", $.String);

    $.Property({Static:false, Public:false}, "EventProviderRegistrationPath", $.String);

    $.Property({Static:false, Public:false}, "InstanceProviderRegistrationClassPath", $.String);

    $.Property({Static:false, Public:false}, "InstanceProviderRegistrationPath", $.String);

    $.Property({Static:false, Public:false}, "ProviderClassPath", $.String);

    $.Property({Static:false, Public:false}, "ProviderPath", $.String);

    $.Property({Static:false, Public:false}, "RegistrationClassPath", $.String);

    $.Property({Static:false, Public:false}, "RegistrationPath", $.String);

    $.Property({Static:false, Public:false}, "GlobalRegistrationNamespace", $.String);

    $.Property({Static:false, Public:false}, "GlobalInstrumentationClassPath", $.String);

    $.Property({Static:false, Public:false}, "GlobalRegistrationClassPath", $.String);

    $.Property({Static:false, Public:false}, "GlobalRegistrationPath", $.String);

    $.Property({Static:false, Public:false}, "GlobalNamingClassPath", $.String);

    $.Property({Static:false, Public:false}, "DataDirectory", $.String);

    $.Property({Static:false, Public:false}, "MofPath", $.String);

    $.Property({Static:false, Public:false}, "CodePath", $.String);

    $.Property({Static:false, Public:false}, "PrecompiledAssemblyPath", $.String);

    $.Property({Static:false, Public:false}, "RegistrationInstance", $asm1B.TypeRef("System.Management.ManagementObject"));

    $.Property({Static:false, Public:true }, "Code", $.String);

    $.Property({Static:false, Public:true }, "Mof", $.String);

    $.Property({Static:false, Public:true }, "PrecompiledAssembly", $asm07.TypeRef("System.Reflection.Assembly"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.SchemaNaming+InstallLogWrapper */ 

(function InstallLogWrapper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.SchemaNaming+InstallLogWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Configuration.Install.InstallContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "LogMessage", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "context", $asm0F.TypeRef("System.Configuration.Install.InstallContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.SchemaNaming+AssemblySpecificNaming */ 

(function AssemblySpecificNaming$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.SchemaNaming+AssemblySpecificNaming", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Reflection.Assembly")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AssemblyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AssemblyPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AssemblyUniqueIdentifier", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DecoupledProviderInstanceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SecurityDescriptor", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DecoupledProviderInstanceName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "namespaceName", $.String);

    $.Field({Static:false, Public:false}, "securityDescriptor", $.String);

    $.Field({Static:false, Public:false}, "decoupledProviderInstanceName", $.String);

    $.Field({Static:false, Public:false}, "assemblyUniqueIdentifier", $.String);

    $.Field({Static:false, Public:false}, "assemblyName", $.String);

    $.Field({Static:false, Public:false}, "assemblyPath", $.String);

    $.Property({Static:false, Public:true }, "NamespaceName", $.String);

    $.Property({Static:false, Public:true }, "SecurityDescriptor", $.String);

    $.Property({Static:false, Public:true }, "DecoupledProviderInstanceName", $.String);

    $.Property({Static:false, Public:true }, "AssemblyUniqueIdentifier", $.String);

    $.Property({Static:false, Public:true }, "AssemblyName", $.String);

    $.Property({Static:false, Public:true }, "AssemblyPath", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Management.Instrumentation.SchemaNaming+ClassMaker */ 

JSIL.MakeDelegate("System.Management.Instrumentation.SchemaNaming+ClassMaker", false, [], 
  JSIL.MethodSignature.Return($asm1B.TypeRef("System.Management.ManagementClass")));

/* class System.Management.Instrumentation.WMICapabilities */ 

(function WMICapabilities$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.WMICapabilities", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "AddAutorecoverMof", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_FrameworkDirectory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_InstallationDirectory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_MultiIndicateSupported", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNovaFile", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Diagnostics.FileVersionInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsUserAdmin", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "IsWindowsXPOrHigher", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "MultiIndicatePossible", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Constant({Static:true , Public:false}, "WMIKeyPath", $.String, "Software\\Microsoft\\WBEM");

    $.Constant({Static:true , Public:false}, "WMINetKeyPath", $.String, "Software\\Microsoft\\WBEM\\.NET");

    $.Constant({Static:true , Public:false}, "WMICIMOMKeyPath", $.String, "Software\\Microsoft\\WBEM\\CIMOM");

    $.Constant({Static:true , Public:false}, "MultiIndicateSupportedValueNameVal", $.String, "MultiIndicateSupported");

    $.Constant({Static:true , Public:false}, "AutoRecoverMofsVal", $.String, "Autorecover MOFs");

    $.Constant({Static:true , Public:false}, "AutoRecoverMofsTimestampVal", $.String, "Autorecover MOFs timestamp");

    $.Constant({Static:true , Public:false}, "InstallationDirectoryVal", $.String, "Installation Directory");

    $.Constant({Static:true , Public:false}, "FrameworkSubDirectory", $.String, "Framework");

    $.Field({Static:true , Public:false}, "wmiNetKey", $asm07.TypeRef("Microsoft.Win32.RegistryKey"));

    $.Field({Static:true , Public:false}, "wmiKey", $asm07.TypeRef("Microsoft.Win32.RegistryKey"));

    $.Field({Static:true , Public:false}, "multiIndicateSupported", $.Int32, -1);

    $.Field({Static:true , Public:false}, "installationDirectory", $.String, null);

    $.Property({Static:true , Public:true }, "MultiIndicateSupported", $.Boolean);

    $.Property({Static:true , Public:true }, "InstallationDirectory", $.String);

    $.Property({Static:true , Public:true }, "FrameworkDirectory", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Management.Instrumentation.CorMetaDataDispenser */ 

(function CorMetaDataDispenser$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.CorMetaDataDispenser", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E5CB7A31-7512-11d2-89CE-0080C792E5D8"]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate]; })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ClassInterfaceType.None]; });

})();

/* interface System.Management.Instrumentation.IMetaDataDispenser */ 

JSIL.MakeInterface(
  "System.Management.Instrumentation.IMetaDataDispenser", false, [], function ($) {
    $.Method({}, "DefineScope", new JSIL.MethodSignature($.Object, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")]), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])
        ]));
    $.Method({}, "OpenScope", new JSIL.MethodSignature($.Object, [
          $.String, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])
        ]));
    $.Method({}, "OpenScopeOnMemory", new JSIL.MethodSignature($.Object, [
          $.IntPtr, $.UInt32, 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["809c652e-7396-11d2-9771-00a0c9b4d50c"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted]; });

/* interface System.Management.Instrumentation.IMetaDataImportInternalOnly */ 

JSIL.MakeInterface(
  "System.Management.Instrumentation.IMetaDataImportInternalOnly", false, [], function ($) {
    $.Method({}, "f1", JSIL.MethodSignature.Void);
    $.Method({}, "f2", JSIL.MethodSignature.Void);
    $.Method({}, "f3", JSIL.MethodSignature.Void);
    $.Method({}, "f4", JSIL.MethodSignature.Void);
    $.Method({}, "f5", JSIL.MethodSignature.Void);
    $.Method({}, "f6", JSIL.MethodSignature.Void);
    $.Method({}, "f7", JSIL.MethodSignature.Void);
    $.Method({}, "GetScopeProps", new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Text.StringBuilder"), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])
        ]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["7DAC8207-D3AE-4c75-9B67-92801A497D44"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted]; });

/* class System.Management.Instrumentation.MetaDataInfo */ 

(function MetaDataInfo$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Management.Instrumentation.MetaDataInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "get_Mvid", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetMvid", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitNameAndMvid", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "importInterface", $asm1B.TypeRef("System.Management.Instrumentation.IMetaDataImportInternalOnly"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "mvid", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Mvid", $asm07.TypeRef("System.Guid"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

