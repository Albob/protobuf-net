/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm18 = JSIL.DeclareAssembly("System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Drawing.Design.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Drawing.Design.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Drawing.Design.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2046.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
/* class System.ExternDll */ 

(function ExternDll$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ExternDll", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Activeds", $.String, "activeds.dll");

    $.Constant({Static:true , Public:true }, "Advapi32", $.String, "advapi32.dll");

    $.Constant({Static:true , Public:true }, "Comctl32", $.String, "comctl32.dll");

    $.Constant({Static:true , Public:true }, "Comdlg32", $.String, "comdlg32.dll");

    $.Constant({Static:true , Public:true }, "Gdi32", $.String, "gdi32.dll");

    $.Constant({Static:true , Public:true }, "Gdiplus", $.String, "gdiplus.dll");

    $.Constant({Static:true , Public:true }, "Hhctrl", $.String, "hhctrl.ocx");

    $.Constant({Static:true , Public:true }, "Imm32", $.String, "imm32.dll");

    $.Constant({Static:true , Public:true }, "Kernel32", $.String, "kernel32.dll");

    $.Constant({Static:true , Public:true }, "Loadperf", $.String, "Loadperf.dll");

    $.Constant({Static:true , Public:true }, "Mscoree", $.String, "mscoree.dll");

    $.Constant({Static:true , Public:true }, "Clr", $.String, "clr.dll");

    $.Constant({Static:true , Public:true }, "Msi", $.String, "msi.dll");

    $.Constant({Static:true , Public:true }, "Mqrt", $.String, "mqrt.dll");

    $.Constant({Static:true , Public:true }, "Ntdll", $.String, "ntdll.dll");

    $.Constant({Static:true , Public:true }, "Ole32", $.String, "ole32.dll");

    $.Constant({Static:true , Public:true }, "Oleacc", $.String, "oleacc.dll");

    $.Constant({Static:true , Public:true }, "Oleaut32", $.String, "oleaut32.dll");

    $.Constant({Static:true , Public:true }, "Olepro32", $.String, "olepro32.dll");

    $.Constant({Static:true , Public:true }, "PerfCounter", $.String, "perfcounter.dll");

    $.Constant({Static:true , Public:true }, "Powrprof", $.String, "Powrprof.dll");

    $.Constant({Static:true , Public:true }, "Psapi", $.String, "psapi.dll");

    $.Constant({Static:true , Public:true }, "Shell32", $.String, "shell32.dll");

    $.Constant({Static:true , Public:true }, "User32", $.String, "user32.dll");

    $.Constant({Static:true , Public:true }, "Uxtheme", $.String, "uxtheme.dll");

    $.Constant({Static:true , Public:true }, "WinMM", $.String, "winmm.dll");

    $.Constant({Static:true , Public:true }, "Winspool", $.String, "winspool.drv");

    $.Constant({Static:true , Public:true }, "Wtsapi32", $.String, "wtsapi32.dll");

    $.Constant({Static:true , Public:true }, "Version", $.String, "version.dll");

    $.Constant({Static:true , Public:true }, "Vsassert", $.String, "vsassert.dll");

    $.Constant({Static:true , Public:true }, "Fxassert", $.String, "Fxassert.dll");

    $.Constant({Static:true , Public:true }, "Shlwapi", $.String, "shlwapi.dll");

    $.Constant({Static:true , Public:true }, "Crypt32", $.String, "crypt32.dll");

    $.Constant({Static:true , Public:true }, "ShCore", $.String, "SHCore.dll");

    $.Constant({Static:true , Public:false}, "Odbc32", $.String, "odbc32.dll");

    $.Constant({Static:true , Public:false}, "SNI", $.String, "System.Data.dll");

    $.Constant({Static:true , Public:false}, "OciDll", $.String, "oci.dll");

    $.Constant({Static:true , Public:false}, "OraMtsDll", $.String, "oramts.dll");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Drawing");
JSIL.DeclareNamespace("System.Drawing.Design");
/* class System.Drawing.Design.ImageEditor */ 

(function ImageEditor$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.ImageEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateExtensionsString", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.String]), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFilterEntry", 
      new JSIL.MethodSignature($.String, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExtensions", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFileDialogDescription", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetImageExtenders", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPaintValueSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "LoadFromStream", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Image"), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PaintValue", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.PaintValueEventArgs"))
    );

    $.Field({Static:true , Public:false}, "imageExtenders", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "fileDialog", $asm2C.TypeRef("System.Windows.Forms.FileDialog"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.BitmapEditor */ 

(function BitmapEditor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm18.TypeRef("System.Drawing.Design.ImageEditor"), 
      Name: "System.Drawing.Design.BitmapEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExtensions", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFileDialogDescription", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "LoadFromStream", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Image"), [$asm07.TypeRef("System.IO.Stream")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.ColorEditor */ 

(function ColorEditor$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.ColorEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPaintValueSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PaintValue", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.PaintValueEventArgs"))
    );

    $.Field({Static:false, Public:false}, "colorUI", $asm18.TypeRef("System.Drawing.Design.ColorEditor+ColorUI"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+ColorPalette */ 

(function ColorPalette$Members () {
  var $, $thisType;
































  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.Control"), 
      Name: "System.Drawing.Design.ColorEditor+ColorPalette", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm18.TypeRef("System.Drawing.Design.ColorEditor+ColorUI"), $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Picked", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler"))
    );

    $.ExternalMethod({Static:true , Public:false}, "FillRectWithCellBounds", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm17.TypeRef("System.Drawing.Rectangle")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CustomColors", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FocusedCell", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SelectedColor", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Color"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Get1DFrom2D", 
      new JSIL.MethodSignature($.Int32, [$asm17.TypeRef("System.Drawing.Point")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Get1DFrom2D", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "Get2DFrom1D", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Point"), [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCell2DFromLocationMouse", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Point"), [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCellFromColor", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Point"), [$asm17.TypeRef("System.Drawing.Color")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCellFromLocationMouse", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetColorFromCell", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Color"), [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetColorFromCell", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Color"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "InvalidateFocus", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InvalidateSelection", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsInputKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "LaunchDialog", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGotFocus", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnKeyDown", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.KeyEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnLostFocus", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnMouseDown", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.MouseEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnMouseMove", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.MouseEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnMouseUp", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.MouseEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnPaint", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.PaintEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPicked", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:true , Public:false}, "PaintValue", 
      new JSIL.MethodSignature(null, [
          $asm17.TypeRef("System.Drawing.Color"), $asm17.TypeRef("System.Drawing.Graphics"), 
          $asm17.TypeRef("System.Drawing.Rectangle")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessDialogKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Picked", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SelectedColor", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Color"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetFocus", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Point"))
    );

    $.Constant({Static:true , Public:true }, "CELLS_ACROSS", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "CELLS_DOWN", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "CELLS_CUSTOM", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "CELLS", $.Int32, 64);

    $.Constant({Static:true , Public:true }, "CELL_SIZE", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "MARGIN", $.Int32, 8);

    $.Field({Static:true , Public:false}, "isScalingInitialized", $.Boolean, false);

    $.Field({Static:true , Public:false}, "cellSizeX", $.Int32, 16);

    $.Field({Static:true , Public:false}, "cellSizeY", $.Int32, 16);

    $.Field({Static:true , Public:false}, "marginX", $.Int32, 8);

    $.Field({Static:true , Public:false}, "marginY", $.Int32, 8);

    $.Field({Static:true , Public:false, ReadOnly:true }, "staticCells", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:false}, "staticColors", $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]));

    $.Field({Static:false, Public:false}, "selectedColor", $asm17.TypeRef("System.Drawing.Color"));

    $.Field({Static:false, Public:false}, "focus", $asm17.TypeRef("System.Drawing.Point"));

    $.Field({Static:false, Public:false}, "customColors", $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]));

    $.Field({Static:false, Public:false}, "onPicked", $asm07.TypeRef("System.EventHandler"));

    $.Field({Static:false, Public:false}, "colorUI", $asm18.TypeRef("System.Drawing.Design.ColorEditor+ColorUI"));

    $.Property({Static:false, Public:true }, "CustomColors", $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]));

    $.Property({Static:false, Public:false}, "FocusedCell", $.Int32);

    $.Property({Static:false, Public:true }, "SelectedColor", $asm17.TypeRef("System.Drawing.Color"));

    $.Event({Static:false, Public:true }, "Picked", $asm07.TypeRef("System.EventHandler"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+ColorUI */ 

(function ColorUI$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.Control"), 
      Name: "System.Drawing.Design.ColorEditor+ColorUI", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Drawing.Design.ColorEditor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AdjustColorUIHeight", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AdjustListBoxItemHeight", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "End", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ColorValues", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CustomColors", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EditorService", 
      JSIL.MethodSignature.Return($asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SystemColorValues", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetBestColor", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Color"), [$asm17.TypeRef("System.Drawing.Color")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetConstants", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFontChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnFontChanged", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGotFocus", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnListClick", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnListDrawItem", 
      new JSIL.MethodSignature(null, [$.Object, $asm2C.TypeRef("System.Windows.Forms.DrawItemEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnListKeyDown", 
      new JSIL.MethodSignature(null, [$.Object, $asm2C.TypeRef("System.Windows.Forms.KeyEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPalettePick", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTabControlResize", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTabControlSelChange", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessDialogKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CustomColors", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      new JSIL.MethodSignature(null, [$asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"), $.Object])
    );

    $.Field({Static:false, Public:false}, "editor", $asm18.TypeRef("System.Drawing.Design.ColorEditor"));

    $.Field({Static:false, Public:false}, "edSvc", $asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"));

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "tabControl", $asm18.TypeRef("System.Drawing.Design.ColorEditor+ColorUI+ColorEditorTabControl"));

    $.Field({Static:false, Public:false}, "systemTabPage", $asm2C.TypeRef("System.Windows.Forms.TabPage"));

    $.Field({Static:false, Public:false}, "commonTabPage", $asm2C.TypeRef("System.Windows.Forms.TabPage"));

    $.Field({Static:false, Public:false}, "paletteTabPage", $asm2C.TypeRef("System.Windows.Forms.TabPage"));

    $.Field({Static:false, Public:false}, "lbSystem", $asm2C.TypeRef("System.Windows.Forms.ListBox"));

    $.Field({Static:false, Public:false}, "lbCommon", $asm2C.TypeRef("System.Windows.Forms.ListBox"));

    $.Field({Static:false, Public:false}, "pal", $asm18.TypeRef("System.Drawing.Design.ColorEditor+ColorPalette"));

    $.Field({Static:false, Public:false}, "systemColorConstants", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "colorConstants", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "customColors", $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]));

    $.Field({Static:false, Public:false}, "commonHeightSet", $.Boolean);

    $.Field({Static:false, Public:false}, "systemHeightSet", $.Boolean);

    $.Property({Static:false, Public:false}, "ColorValues", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:false}, "CustomColors", $jsilcore.TypeRef("System.Array", [$asm17.TypeRef("System.Drawing.Color")]));

    $.Property({Static:false, Public:true }, "EditorService", $asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"));

    $.Property({Static:false, Public:false}, "SystemColorValues", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+ColorUI+ColorEditorListBox */ 

(function ColorEditorListBox$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.ListBox"), 
      Name: "System.Drawing.Design.ColorEditor+ColorUI+ColorEditorListBox", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsInputKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+ColorUI+ColorEditorTabControl */ 

(function ColorEditorTabControl$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.TabControl"), 
      Name: "System.Drawing.Design.ColorEditor+ColorUI+ColorEditorTabControl", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGotFocus", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+CustomColorDialog */ 

(function CustomColorDialog$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.ColorDialog"), 
      Name: "System.Drawing.Design.ColorEditor+CustomColorDialog", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Instance", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Options", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HookProc", 
      new JSIL.MethodSignature($.IntPtr, [
          $.IntPtr, $.Int32, 
          $.IntPtr, $.IntPtr
        ])
    );

    $.Constant({Static:true , Public:false}, "COLOR_HUE", $.Int32, 703);

    $.Constant({Static:true , Public:false}, "COLOR_SAT", $.Int32, 704);

    $.Constant({Static:true , Public:false}, "COLOR_LUM", $.Int32, 705);

    $.Constant({Static:true , Public:false}, "COLOR_RED", $.Int32, 706);

    $.Constant({Static:true , Public:false}, "COLOR_GREEN", $.Int32, 707);

    $.Constant({Static:true , Public:false}, "COLOR_BLUE", $.Int32, 708);

    $.Constant({Static:true , Public:false}, "COLOR_ADD", $.Int32, 712);

    $.Constant({Static:true , Public:false}, "COLOR_MIX", $.Int32, 719);

    $.Field({Static:false, Public:false}, "hInstance", $.IntPtr);

    $.Property({Static:false, Public:false, Virtual:true }, "Instance", $.IntPtr);

    $.Property({Static:false, Public:false, Virtual:true }, "Options", $.Int32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+SystemColorComparer */ 

(function SystemColorComparer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ColorEditor+SystemColorComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IComparer")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ColorEditor+StandardColorComparer */ 

(function StandardColorComparer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ColorEditor+StandardColorComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IComparer")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ContentAlignmentEditor */ 

(function ContentAlignmentEditor$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.ContentAlignmentEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "contentUI", $asm18.TypeRef("System.Drawing.Design.ContentAlignmentEditor+ContentUI"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.ContentAlignmentEditor+ContentUI */ 

(function ContentUI$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.Control"), 
      Name: "System.Drawing.Design.ContentAlignmentEditor+ContentUI", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "End", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Align", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.ContentAlignment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CheckedControl", 
      JSIL.MethodSignature.Return($asm2C.TypeRef("System.Windows.Forms.RadioButton"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ShowFocusCues", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsInputKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OptionClick", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessDialogKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Align", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.ContentAlignment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CheckedControl", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.RadioButton"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      new JSIL.MethodSignature(null, [$asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"), $.Object])
    );

    $.Field({Static:false, Public:false}, "edSvc", $asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"));

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "topLeft", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "topCenter", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "topRight", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "middleLeft", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "middleCenter", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "middleRight", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "bottomLeft", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "bottomCenter", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Field({Static:false, Public:false}, "bottomRight", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.Property({Static:false, Public:false}, "Align", $asm17.TypeRef("System.Drawing.ContentAlignment"));

    $.Property({Static:false, Public:false, Virtual:true }, "ShowFocusCues", $.Boolean);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:false}, "CheckedControl", $asm2C.TypeRef("System.Windows.Forms.RadioButton"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.CursorEditor */ 

(function CursorEditor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.CursorEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDropDownResizable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "cursorUI", $asm18.TypeRef("System.Drawing.Design.CursorEditor+CursorUI"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsDropDownResizable", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.CursorEditor+CursorUI */ 

(function CursorUI$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.ListBox"), 
      Name: "System.Drawing.Design.CursorEditor+CursorUI", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.UITypeEditor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "End", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClick", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnDrawItem", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.DrawItemEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessDialogKey", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.Keys")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      new JSIL.MethodSignature(null, [$asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"), $.Object])
    );

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "edSvc", $asm2C.TypeRef("System.Windows.Forms.Design.IWindowsFormsEditorService"));

    $.Field({Static:false, Public:false}, "cursorConverter", $asm0A.TypeRef("System.ComponentModel.TypeConverter"));

    $.Field({Static:false, Public:false}, "editor", $asm17.TypeRef("System.Drawing.Design.UITypeEditor"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.DesignerToolboxInfo */ 

(function DesignerToolboxInfo$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.DesignerToolboxInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm18.TypeRef("System.Drawing.Design.ToolboxService"), $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DesignerHost", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Filter", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ToolboxUser", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.IToolboxUser"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDesignerAttributes", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.AttributeCollection"), [$asm0A.TypeRef("System.ComponentModel.Design.IDesigner")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDesignerDisposed", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSelectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTypeDescriptorRefresh", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.RefreshEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RecurseDesignerTree", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.ComponentModel.Design.IDesigner"), $asm07.TypeRef("System.Collections.Hashtable")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose");

    $.ExternalMethod({Static:false, Public:false}, "Update", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "_toolboxService", $asm18.TypeRef("System.Drawing.Design.ToolboxService"));

    $.Field({Static:false, Public:false}, "_host", $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost"));

    $.Field({Static:false, Public:false}, "_selectionService", $asm0A.TypeRef("System.ComponentModel.Design.ISelectionService"));

    $.Field({Static:false, Public:false}, "_filter", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_filterDesigner", $asm0A.TypeRef("System.ComponentModel.Design.IDesigner"));

    $.Field({Static:false, Public:false}, "_toolboxUser", $asm17.TypeRef("System.Drawing.Design.IToolboxUser"));

    $.Field({Static:false, Public:false}, "_attributeHash", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "DesignerHost", $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost"));

    $.Property({Static:false, Public:false}, "Filter", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:false}, "ToolboxUser", $asm17.TypeRef("System.Drawing.Design.IToolboxUser"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.FontEditor */ 

(function FontEditor$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.FontEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "fontDialog", $asm2C.TypeRef("System.Windows.Forms.FontDialog"));

    $.Field({Static:false, Public:false}, "value", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.FontNameEditor */ 

(function FontNameEditor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.FontNameEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "DrawFontSample", 
      new JSIL.MethodSignature(null, [
          $asm17.TypeRef("System.Drawing.Design.PaintValueEventArgs"), $asm17.TypeRef("System.Drawing.FontFamily"), 
          $asm17.TypeRef("System.Drawing.FontStyle")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPaintValueSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PaintValue", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.PaintValueEventArgs"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.IconEditor */ 

(function IconEditor$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Drawing.Design.IconEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateExtensionsString", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.String]), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFilterEntry", 
      new JSIL.MethodSignature($.String, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExtensions", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFileDialogDescription", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPaintValueSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "LoadFromStream", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Icon"), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PaintValue", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.PaintValueEventArgs"))
    );

    $.Field({Static:true , Public:false}, "imageExtenders", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), function ($pi) {
        return JSIL.Array.New($asm07.System.Type, 0);
      });

    $.Field({Static:false, Public:false}, "fileDialog", $asm2C.TypeRef("System.Windows.Forms.FileDialog"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.MetafileEditor */ 

(function MetafileEditor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm18.TypeRef("System.Drawing.Design.ImageEditor"), 
      Name: "System.Drawing.Design.MetafileEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetExtensions", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFileDialogDescription", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "LoadFromStream", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Image"), [$asm07.TypeRef("System.IO.Stream")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.NativeMethods", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.PInvokeMethod({Static:true , Public:true }, "EnableWindow", 
      new JSIL.MethodSignature($.Boolean, [$.IntPtr, $.Boolean]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetDlgItem", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.Int32]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetDlgItemInt", 
      new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Boolean]), $.Boolean
        ]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "PostMessage", 
      new JSIL.MethodSignature($.IntPtr, [
          $.IntPtr, $.Int32, 
          $.IntPtr, $.IntPtr
        ]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "SendDlgItemMessage", 
      new JSIL.MethodSignature($.IntPtr, [
          $.IntPtr, $.Int32, 
          $.Int32, $.IntPtr, 
          $.IntPtr
        ]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "SetWindowPos", 
      new JSIL.MethodSignature($.Boolean, [
          $.IntPtr, $.IntPtr, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.Field({Static:true , Public:true }, "InvalidIntPtr", $.IntPtr);

    $.Field({Static:true , Public:true }, "NullHandleRef", $asm07.TypeRef("System.Runtime.InteropServices.HandleRef"));

    $.Constant({Static:true , Public:true }, "LOGPIXELSX", $.Int32, 88);

    $.Constant({Static:true , Public:true }, "LOGPIXELSY", $.Int32, 90);

    $.Constant({Static:true , Public:true }, "EM_GETSEL", $.Int32, 176);

    $.Constant({Static:true , Public:true }, "EM_SETSEL", $.Int32, 177);

    $.Constant({Static:true , Public:true }, "EM_GETRECT", $.Int32, 178);

    $.Constant({Static:true , Public:true }, "EM_SETRECT", $.Int32, 179);

    $.Constant({Static:true , Public:true }, "EM_SETRECTNP", $.Int32, 180);

    $.Constant({Static:true , Public:true }, "EM_SCROLL", $.Int32, 181);

    $.Constant({Static:true , Public:true }, "EM_LINESCROLL", $.Int32, 182);

    $.Constant({Static:true , Public:true }, "EM_SCROLLCARET", $.Int32, 183);

    $.Constant({Static:true , Public:true }, "EM_GETMODIFY", $.Int32, 184);

    $.Constant({Static:true , Public:true }, "EM_SETMODIFY", $.Int32, 185);

    $.Constant({Static:true , Public:true }, "EM_GETLINECOUNT", $.Int32, 186);

    $.Constant({Static:true , Public:true }, "EM_LINEINDEX", $.Int32, 187);

    $.Constant({Static:true , Public:true }, "EM_SETHANDLE", $.Int32, 188);

    $.Constant({Static:true , Public:true }, "EM_GETHANDLE", $.Int32, 189);

    $.Constant({Static:true , Public:true }, "EM_GETTHUMB", $.Int32, 190);

    $.Constant({Static:true , Public:true }, "EM_LINELENGTH", $.Int32, 193);

    $.Constant({Static:true , Public:true }, "EM_REPLACESEL", $.Int32, 194);

    $.Constant({Static:true , Public:true }, "EM_GETLINE", $.Int32, 196);

    $.Constant({Static:true , Public:true }, "EM_LIMITTEXT", $.Int32, 197);

    $.Constant({Static:true , Public:true }, "EM_CANUNDO", $.Int32, 198);

    $.Constant({Static:true , Public:true }, "EM_UNDO", $.Int32, 199);

    $.Constant({Static:true , Public:true }, "EM_FMTLINES", $.Int32, 200);

    $.Constant({Static:true , Public:true }, "EM_LINEFROMCHAR", $.Int32, 201);

    $.Constant({Static:true , Public:true }, "EM_SETTABSTOPS", $.Int32, 203);

    $.Constant({Static:true , Public:true }, "EM_SETPASSWORDCHAR", $.Int32, 204);

    $.Constant({Static:true , Public:true }, "EM_EMPTYUNDOBUFFER", $.Int32, 205);

    $.Constant({Static:true , Public:true }, "EM_GETFIRSTVISIBLELINE", $.Int32, 206);

    $.Constant({Static:true , Public:true }, "EM_SETREADONLY", $.Int32, 207);

    $.Constant({Static:true , Public:true }, "EM_SETWORDBREAKPROC", $.Int32, 208);

    $.Constant({Static:true , Public:true }, "EM_GETWORDBREAKPROC", $.Int32, 209);

    $.Constant({Static:true , Public:true }, "EM_GETPASSWORDCHAR", $.Int32, 210);

    $.Constant({Static:true , Public:true }, "EM_SETMARGINS", $.Int32, 211);

    $.Constant({Static:true , Public:true }, "EM_GETMARGINS", $.Int32, 212);

    $.Constant({Static:true , Public:true }, "EM_SETLIMITTEXT", $.Int32, 197);

    $.Constant({Static:true , Public:true }, "EM_GETLIMITTEXT", $.Int32, 213);

    $.Constant({Static:true , Public:true }, "EM_POSFROMCHAR", $.Int32, 214);

    $.Constant({Static:true , Public:true }, "EM_CHARFROMPOS", $.Int32, 215);

    $.Constant({Static:true , Public:true }, "EC_LEFTMARGIN", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "EC_RIGHTMARGIN", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "EC_USEFONTINFO", $.Int32, 65535);

    $.Constant({Static:true , Public:true }, "IDOK", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "IDCANCEL", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "IDABORT", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "IDRETRY", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "IDIGNORE", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "IDYES", $.Int32, 6);

    $.Constant({Static:true , Public:true }, "IDNO", $.Int32, 7);

    $.Constant({Static:true , Public:true }, "IDCLOSE", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "IDHELP", $.Int32, 9);

    $.Constant({Static:true , Public:true }, "WM_INITDIALOG", $.Int32, 272);

    $.Constant({Static:true , Public:true }, "SWP_NOSIZE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "SWP_NOMOVE", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "SWP_NOZORDER", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "SWP_NOREDRAW", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "SWP_NOACTIVATE", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "SWP_FRAMECHANGED", $.Int32, 32);

    $.Constant({Static:true , Public:true }, "SWP_SHOWWINDOW", $.Int32, 64);

    $.Constant({Static:true , Public:true }, "SWP_HIDEWINDOW", $.Int32, 128);

    $.Constant({Static:true , Public:true }, "SWP_NOCOPYBITS", $.Int32, 256);

    $.Constant({Static:true , Public:true }, "SWP_NOOWNERZORDER", $.Int32, 512);

    $.Constant({Static:true , Public:true }, "SWP_NOSENDCHANGING", $.Int32, 1024);

    $.Constant({Static:true , Public:true }, "SWP_DRAWFRAME", $.Int32, 32);

    $.Constant({Static:true , Public:true }, "SWP_NOREPOSITION", $.Int32, 512);

    $.Constant({Static:true , Public:true }, "SWP_DEFERERASE", $.Int32, 8192);

    $.Constant({Static:true , Public:true }, "SWP_ASYNCWINDOWPOS", $.Int32, 16384);

    $.Constant({Static:true , Public:true }, "WM_COMMAND", $.Int32, 273);

    $.Constant({Static:true , Public:true }, "CC_FULLOPEN", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "CC_PREVENTFULLOPEN", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "CC_SHOWHELP", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "CC_ENABLEHOOK", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "CC_ENABLETEMPLATE", $.Int32, 32);

    $.Constant({Static:true , Public:true }, "CC_ENABLETEMPLATEHANDLE", $.Int32, 64);

    $.Constant({Static:true , Public:true }, "CC_SOLIDCOLOR", $.Int32, 128);

    $.Constant({Static:true , Public:true }, "CC_ANYCOLOR", $.Int32, 256);


    function NativeMethods__cctor () {
      $thisType.InvalidIntPtr = new $asm07.System.IntPtr();
      $thisType.NullHandleRef = new $asm07.System.Runtime.InteropServices.HandleRef();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NativeMethods__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.NativeMethods+Util */ 

(function Util$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.NativeMethods+Util", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "HIWORD", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "LOWORD", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.PInvokeMethod({Static:true , Public:false}, "lstrlen", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MAKELONG", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "MAKELPARAM", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.PInvokeMethod({Static:true , Public:false}, "RegisterWindowMessage", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "SignedHIWORD", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "SignedLOWORD", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.NativeMethods+POINT */ 

(function POINT$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.NativeMethods+POINT", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.Field({Static:false, Public:true }, "x", $.Int32);

    $.Field({Static:false, Public:true }, "y", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.NativeMethods+CommonHandles */ 

(function CommonHandles$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.NativeMethods+CommonHandles", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "HDC", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ToolboxService */ 

(function ToolboxService$Members () {
  var $, $thisType;


























































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ToolboxService", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateItemContainer", 
      new JSIL.MethodSignature($asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"), [$asm17.TypeRef("System.Drawing.Design.ToolboxItem"), $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateItemContainer", 
      new JSIL.MethodSignature($asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"), [$asm2C.TypeRef("System.Windows.Forms.IDataObject")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "FilterChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CategoryNames", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.CategoryNameCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_SelectedCategory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_SelectedItemContainer", 
      JSIL.MethodSignature.Return($asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCreatorCollection", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFilterSupport", 
      new JSIL.MethodSignature($asm18.TypeRef("System.Drawing.Design.ToolboxService+FilterSupport"), [$asm07.TypeRef("System.Collections.ICollection"), $asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetItemContainers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IList"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetItemContainers", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.IList"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$asm07.TypeRef("System.Type"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm07.TypeRef("System.Reflection.Assembly"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [
          $asm07.TypeRef("System.Reflection.Assembly"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetToolboxItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm07.TypeRef("System.Reflection.AssemblyName"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsItemContainer", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.IDataObject"), $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsItemContainerSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"), $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDesignerInfoChanged", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Drawing.Design.DesignerToolboxInfo"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Refresh", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SelectedItemContainerUsed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_SelectedCategory", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_SelectedItemContainer", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetCursor", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost"), $asm07.TypeRef("System.Type")])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.Design.IComponentDiscoveryService"), "GetComponentTypes");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddCreator", 
      new JSIL.MethodSignature(null, [$asm17.TypeRef("System.Drawing.Design.ToolboxItemCreatorCallback"), $.String])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddCreator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddCreator", 
      new JSIL.MethodSignature(null, [
          $asm17.TypeRef("System.Drawing.Design.ToolboxItemCreatorCallback"), $.String, 
          $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")
        ])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddCreator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddLinkedToolboxItem", 
      new JSIL.MethodSignature(null, [$asm17.TypeRef("System.Drawing.Design.ToolboxItem"), $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddLinkedToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddLinkedToolboxItem", 
      new JSIL.MethodSignature(null, [
          $asm17.TypeRef("System.Drawing.Design.ToolboxItem"), $.String, 
          $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")
        ])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddLinkedToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddToolboxItem", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.AddToolboxItem", 
      new JSIL.MethodSignature(null, [$asm17.TypeRef("System.Drawing.Design.ToolboxItem"), $.String])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "AddToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.DeserializeToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$.Object])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "DeserializeToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.DeserializeToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$.Object, $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "DeserializeToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.get_CategoryNames", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.CategoryNameCollection"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "get_CategoryNames");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.get_SelectedCategory", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "get_SelectedCategory");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetSelectedToolboxItem", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetSelectedToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetSelectedToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetSelectedToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetToolboxItems", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.ToolboxItemCollection"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetToolboxItems");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetToolboxItems", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItemCollection"), [$asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetToolboxItems");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetToolboxItems", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItemCollection"), [$.String])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetToolboxItems");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.GetToolboxItems", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItemCollection"), [$.String, $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "GetToolboxItems");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.IsSupported", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "IsSupported");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.IsSupported", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm07.TypeRef("System.Collections.ICollection")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "IsSupported");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.IsToolboxItem", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "IsToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.IsToolboxItem", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "IsToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.Refresh", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "Refresh");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.RemoveCreator", 
      JSIL.MethodSignature.Action($.String)
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "RemoveCreator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.RemoveCreator", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "RemoveCreator");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.RemoveToolboxItem", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "RemoveToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.RemoveToolboxItem", 
      new JSIL.MethodSignature(null, [$asm17.TypeRef("System.Drawing.Design.ToolboxItem"), $.String])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "RemoveToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "SelectedToolboxItemUsed");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.SerializeToolboxItem", 
      new JSIL.MethodSignature($.Object, [$asm17.TypeRef("System.Drawing.Design.ToolboxItem")])
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "SerializeToolboxItem");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.set_SelectedCategory", 
      JSIL.MethodSignature.Action($.String)
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "set_SelectedCategory");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.SetCursor", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "SetCursor");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.SetSelectedToolboxItem", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    )
      .Overrides($asm17.TypeRef("System.Drawing.Design.IToolboxService"), "SetSelectedToolboxItem");

    $.ExternalMethod({Static:true , Public:true }, "UnloadToolboxItems", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_designerEventService", $asm0A.TypeRef("System.ComponentModel.Design.IDesignerEventService"));

    $.Field({Static:false, Public:false}, "_globalCreators", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_designerCreators", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_lastMergedHost", $asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost"));

    $.Field({Static:false, Public:false}, "_lastMergedCreators", $asm07.TypeRef("System.Collections.ICollection"));

    $.Field({Static:false, Public:false}, "_lastState", $asm18.TypeRef("System.Drawing.Design.DesignerToolboxInfo"));

    $.Field({Static:true , Public:false}, "_domainObject", $asm18.TypeRef("System.Drawing.Design.ToolboxService+DomainProxyObject"));

    $.Field({Static:true , Public:false}, "_domain", $asm07.TypeRef("System.AppDomain"));

    $.Field({Static:true , Public:false}, "_domainObjectSponsor", $asm07.TypeRef("System.Runtime.Remoting.Lifetime.ClientSponsor"));

    $.Property({Static:false, Public:false, Virtual:true }, "CategoryNames", $asm17.TypeRef("System.Drawing.Design.CategoryNameCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "SelectedCategory", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "SelectedItemContainer", $asm18.TypeRef("System.Drawing.Design.ToolboxItemContainer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.CategoryNames", $asm17.TypeRef("System.Drawing.Design.CategoryNameCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Drawing.Design.IToolboxService.SelectedCategory", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm17.TypeRef("System.Drawing.Design.IToolboxService"), 
      /* 1 */ $asm0A.TypeRef("System.ComponentModel.Design.IComponentDiscoveryService")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Drawing.Design.ToolboxService+DomainProxyObject */ 

(function DomainProxyObject$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.MarshalByRefObject"), 
      Name: "System.Drawing.Design.ToolboxService+DomainProxyObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetToolboxItems", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$asm07.TypeRef("System.Reflection.AssemblyName"), $.Boolean])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Drawing.Design.ToolboxService+FilterSupport */ 

JSIL.MakeEnum(
  {
    FullName: "System.Drawing.Design.ToolboxService+FilterSupport", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    NotSupported: 0, 
    Supported: 1, 
    Custom: 2, 
  }
);

/* class System.Drawing.Design.ToolboxItemCreator */ 

(function ToolboxItemCreator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ToolboxItemCreator", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm17.TypeRef("System.Drawing.Design.ToolboxItemCreatorCallback"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Create", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$asm2C.TypeRef("System.Windows.Forms.IDataObject")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Format", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_callback", $asm17.TypeRef("System.Drawing.Design.ToolboxItemCreatorCallback"));

    $.Field({Static:false, Public:false}, "_format", $.String);

    $.Property({Static:false, Public:true }, "Format", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ToolboxItemContainer */ 

(function ToolboxItemContainer$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ToolboxItemContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.IDataObject"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ContainsFormat", 
      new JSIL.MethodSignature($.Boolean, [$asm2C.TypeRef("System.Windows.Forms.IDataObject")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCreated", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsTransient", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ToolboxData", 
      JSIL.MethodSignature.Return($asm2C.TypeRef("System.Windows.Forms.IDataObject"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetFilter", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetToolboxItem", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.ToolboxItem"), [$asm07.TypeRef("System.Collections.ICollection")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MergeFilter", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ICollection"), [$asm17.TypeRef("System.Drawing.Design.ToolboxItem")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData")
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "UpdateFilter", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    );

    $.Constant({Static:true , Public:false}, "_localClipboardFormat", $.String, "CF_TOOLBOXITEMCONTAINER");

    $.Constant({Static:true , Public:false}, "_itemClipboardFormat", $.String, "CF_TOOLBOXITEMCONTAINER_CONTENTS");

    $.Constant({Static:true , Public:false}, "_hashClipboardFormat", $.String, "CF_TOOLBOXITEMCONTAINER_HASH");

    $.Constant({Static:true , Public:false}, "_serializationFormats", $.String, "TbxIC_DataObjectFormats");

    $.Constant({Static:true , Public:false}, "_serializationValues", $.String, "TbxIC_DataObjectValues");

    $.Constant({Static:true , Public:false}, "_clipboardVersion", $.Int16, 1);

    $.Field({Static:false, Public:false}, "_hashCode", $.Int32);

    $.Field({Static:false, Public:false}, "_toolboxItem", $asm17.TypeRef("System.Drawing.Design.ToolboxItem"));

    $.Field({Static:false, Public:false}, "_dataObject", $asm2C.TypeRef("System.Windows.Forms.IDataObject"));

    $.Field({Static:false, Public:false}, "_filter", $asm07.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true }, "IsCreated", $.Boolean);

    $.Property({Static:false, Public:true }, "IsTransient", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ToolboxData", $asm2C.TypeRef("System.Windows.Forms.IDataObject"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ToolboxItemContainer+BrokenToolboxItem */ 

(function BrokenToolboxItem$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.ToolboxItem"), 
      Name: "System.Drawing.Design.ToolboxItemContainer+BrokenToolboxItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateComponentsCore", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.ComponentModel.IComponent")]), [$asm0A.TypeRef("System.ComponentModel.Design.IDesignerHost")])
    );

    $.Field({Static:false, Public:false}, "_exceptionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ToolboxItemContainer+ToolboxItemSerializer */ 

(function ToolboxItemSerializer$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.ToolboxItemContainer+ToolboxItemSerializer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ToolboxItem", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Design.ToolboxItem"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData");

    $.Constant({Static:true , Public:false}, "_assemblyNameKey", $.String, "AssemblyName");

    $.Constant({Static:true , Public:false}, "_streamKey", $.String, "Stream");

    $.Field({Static:true , Public:false}, "_formatter", $asm07.TypeRef("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"));

    $.Field({Static:false, Public:false}, "_toolboxItem", $asm17.TypeRef("System.Drawing.Design.ToolboxItem"));

    $.Property({Static:false, Public:false}, "ToolboxItem", $asm17.TypeRef("System.Drawing.Design.ToolboxItem"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.ToolboxItemContainer+ToolboxSerializationBinder */ 

(function ToolboxSerializationBinder$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.Serialization.SerializationBinder"), 
      Name: "System.Drawing.Design.ToolboxItemContainer+ToolboxSerializationBinder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.AssemblyName"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindToType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$.String, $.String])
    );

    $.Field({Static:false, Public:false}, "_assemblies", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_name", $asm07.TypeRef("System.Reflection.AssemblyName"));

    $.Field({Static:false, Public:false}, "_namePart", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Drawing.Design.UnsafeNativeMethods */ 

(function UnsafeNativeMethods$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.UnsafeNativeMethods", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.PInvokeMethod({Static:true , Public:true }, "ClientToScreen", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), $asm18.TypeRef("System.Drawing.Design.NativeMethods+POINT")]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDC", 
      new JSIL.MethodSignature($.IntPtr, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef")])
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetDeviceCaps", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), $.Int32]), 
      {
        Module: "gdi32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetFocus", 
      JSIL.MethodSignature.Return($.IntPtr), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntGetDC", 
      new JSIL.MethodSignature($.IntPtr, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef")]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
        EntryPoint: "GetDC", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntReleaseDC", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), $asm07.TypeRef("System.Runtime.InteropServices.HandleRef")]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
        EntryPoint: "ReleaseDC", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "NotifyWinEvent", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), 
          $.Int32, $.Int32
        ]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "ReleaseDC", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), $asm07.TypeRef("System.Runtime.InteropServices.HandleRef")])
    );

    $.PInvokeMethod({Static:true , Public:true }, "ScreenToClient", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef"), $asm18.TypeRef("System.Drawing.Design.NativeMethods+POINT")]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "SetFocus", 
      new JSIL.MethodSignature($.IntPtr, [$asm07.TypeRef("System.Runtime.InteropServices.HandleRef")]), 
      {
        Module: "user32.dll", 
        CharSet: 'auto',
      }
    );

    $.Constant({Static:true , Public:true }, "OBJID_CLIENT", $.Int32, -4);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

})();

/* class System.Drawing.Design.SRDescriptionAttribute */ 

(function SRDescriptionAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Drawing.Design.SRDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Drawing.Design.SRCategoryAttribute */ 

(function SRCategoryAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Drawing.Design.SRCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Drawing.Design.SR */ 

(function SR$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Drawing.Design.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Constant({Static:true , Public:false}, "imageFileDescription", $.String, "imageFileDescription");

    $.Constant({Static:true , Public:false}, "ColorEditorSystemTab", $.String, "ColorEditorSystemTab");

    $.Constant({Static:true , Public:false}, "ColorEditorStandardTab", $.String, "ColorEditorStandardTab");

    $.Constant({Static:true , Public:false}, "bitmapFileDescription", $.String, "bitmapFileDescription");

    $.Constant({Static:true , Public:false}, "ColorEditorPaletteTab", $.String, "ColorEditorPaletteTab");

    $.Constant({Static:true , Public:false}, "iconFileDescription", $.String, "iconFileDescription");

    $.Constant({Static:true , Public:false}, "metafileFileDescription", $.String, "metafileFileDescription");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorAccName", $.String, "ContentAlignmentEditorAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorTopLeftAccName", $.String, "ContentAlignmentEditorTopLeftAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorTopCenterAccName", $.String, "ContentAlignmentEditorTopCenterAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorTopRightAccName", $.String, "ContentAlignmentEditorTopRightAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorMiddleLeftAccName", $.String, "ContentAlignmentEditorMiddleLeftAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorMiddleCenterAccName", $.String, "ContentAlignmentEditorMiddleCenterAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorMiddleRightAccName", $.String, "ContentAlignmentEditorMiddleRightAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorBottomLeftAccName", $.String, "ContentAlignmentEditorBottomLeftAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorBottomCenterAccName", $.String, "ContentAlignmentEditorBottomCenterAccName");

    $.Constant({Static:true , Public:false}, "ContentAlignmentEditorBottomRightAccName", $.String, "ContentAlignmentEditorBottomRightAccName");

    $.Constant({Static:true , Public:false}, "ColorEditorAccName", $.String, "ColorEditorAccName");

    $.Constant({Static:true , Public:false}, "ToolboxServiceBadToolboxItem", $.String, "ToolboxServiceBadToolboxItem");

    $.Constant({Static:true , Public:false}, "ToolboxServiceBadToolboxItemWithException", $.String, "ToolboxServiceBadToolboxItemWithException");

    $.Constant({Static:true , Public:false}, "ToolboxServiceToolboxItemSerializerNotFound", $.String, "ToolboxServiceToolboxItemSerializerNotFound");

    $.Constant({Static:true , Public:false}, "ToolboxServiceAssemblyNotFound", $.String, "ToolboxServiceAssemblyNotFound");

    $.Field({Static:true , Public:false}, "loader", $.Type);

    $.Field({Static:false, Public:false}, "resources", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm07.TypeRef("System.Resources.ResourceManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Internal");
/* class System.Internal.HandleCollector */ 

(function HandleCollector$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Internal.HandleCollector", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "Add", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "add_HandleAdded", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "add_HandleRemoved", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "RegisterType", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Remove", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "remove_HandleAdded", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "remove_HandleRemoved", 
      JSIL.MethodSignature.Action($asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ResumeCollect", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "SuspendCollect", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "handleTypes", $jsilcore.TypeRef("System.Array", [$asm18.TypeRef("System.Internal.HandleCollector+HandleType")]));

    $.Field({Static:true , Public:false}, "handleTypeCount", $.Int32);

    $.Field({Static:true , Public:false}, "suspendCount", $.Int32);

    $.Field({Static:true , Public:false}, "HandleAdded", $asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "HandleRemoved", $asm18.TypeRef("System.Internal.HandleChangeEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "internalSyncObject", $.Object);

    $.Event({Static:true , Public:false}, "HandleAdded", $asm18.TypeRef("System.Internal.HandleChangeEventHandler"));

    $.Event({Static:true , Public:false}, "HandleRemoved", $asm18.TypeRef("System.Internal.HandleChangeEventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Internal.HandleCollector+HandleType */ 

(function HandleType$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Internal.HandleCollector+HandleType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetHandleCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "NeedCollection", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "$name", $.String);

    $.Field({Static:false, Public:false}, "initialThreshHold", $.Int32);

    $.Field({Static:false, Public:false}, "threshHold", $.Int32);

    $.Field({Static:false, Public:false}, "handleCount", $.Int32);

    $.Field({Static:false, Public:false, ReadOnly:true }, "deltaPercent", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Internal.HandleChangeEventHandler */ 

JSIL.MakeDelegate("System.Internal.HandleChangeEventHandler", false, [], 
  new JSIL.MethodSignature(null, [
      $asm07.TypeRef("System.String"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32")
    ]));

JSIL.DeclareNamespace("System.Configuration");
/* class System.Configuration.ConfigurationStringConstants */ 

(function ConfigurationStringConstants$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Configuration.ConfigurationStringConstants", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "WinformsApplicationConfigurationSectionName", $.String, "System.Windows.Forms.ApplicationConfigurationSection");

    $.Constant({Static:true , Public:false}, "DpiAwarenessKeyName", $.String, "DpiAwareness");

    $.Constant({Static:true , Public:false}, "EnableWindowsFormsHighDpiAutoResizingKeyName", $.String, "EnableWindowsFormsHighDpiAutoResizing");

    $.Constant({Static:true , Public:false}, "ToolStripDisableHighDpiImprovementsKeyName", $.String, "ToolStrip.DisableHighDpiImprovements");

    $.Constant({Static:true , Public:false}, "CheckedListBoxDisableHighDpiImprovementsKeyName", $.String, "CheckedListBox.DisableHighDpiImprovements");

    $.Constant({Static:true , Public:false}, "DataGridViewControlDisableHighDpiImprovements", $.String, "DataGridView.DisableHighDpiImprovements");

    $.Constant({Static:true , Public:false}, "FormDisableSinglePassScalingOfDpiFormsKeyName", $.String, "Form.DisableSinglePassScalingOfDpiForms");

    $.Constant({Static:true , Public:false}, "DisableDpiChangedMessageHandlingKeyName", $.String, "DisableDpiChangedMessageHandling");

    $.Constant({Static:true , Public:false}, "AnchorLayoutDisableHighDpiImprovementsKeyName", $.String, "AnchorLayout.DisableHighDpiImprovements");

    $.Constant({Static:true , Public:false}, "MonthCalendarDisableHighDpiImprovementsKeyName", $.String, "MonthCalendar.DisableHighDpiImprovements");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Windows");
JSIL.DeclareNamespace("System.Windows.Forms");
/* class System.Windows.Forms.ConfigurationOptions */ 

(function ConfigurationOptions$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Windows.Forms.ConfigurationOptions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "get_NetFrameworkVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetConfigSettingValue", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "PopulateWinformsSection", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "applicationConfigOptions", $asm0A.TypeRef("System.Collections.Specialized.NameValueCollection"), null);

    $.Field({Static:true , Public:false}, "netFrameworkVersion", $asm07.TypeRef("System.Version"), null);

    $.Field({Static:true , Public:false, ReadOnly:true }, "featureSupportedMinimumFrameworkVersion", $asm07.TypeRef("System.Version"));

    $.Field({Static:true , Public:false}, "OSVersion", $asm07.TypeRef("System.Version"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "RS2Version", $asm07.TypeRef("System.Version"));

    $.Property({Static:true , Public:true }, "NetFrameworkVersion", $asm07.TypeRef("System.Version"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Forms.DpiHelper */ 

(function DpiHelper$Members () {
  var $, $thisType;















  JSIL.MakeStaticClass("System.Windows.Forms.DpiHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateResizedBitmap", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Bitmap"), [$asm17.TypeRef("System.Drawing.Bitmap"), $asm17.TypeRef("System.Drawing.Size")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateScaledBitmap", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Bitmap"), [$asm17.TypeRef("System.Drawing.Bitmap"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DeviceDpi", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InterpolationMode", 
      JSIL.MethodSignature.Return($asm17.TypeRef("System.Drawing.Drawing2D.InterpolationMode"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsScalingRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LogicalToDeviceUnitsScalingFactor", 
      JSIL.MethodSignature.Return($.Double)
    );

    $.ExternalMethod({Static:true , Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "IsDpiAwarenessValueSet", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "LogicalToDeviceUnits", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "LogicalToDeviceUnits", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Size"), [$asm17.TypeRef("System.Drawing.Size"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "LogicalToDeviceUnitsX", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "LogicalToDeviceUnitsY", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "ScaleBitmapLogicalToDevice", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm17.TypeRef("System.Drawing.Bitmap")]), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScaleBitmapToSize", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Bitmap"), [$asm17.TypeRef("System.Drawing.Bitmap"), $asm17.TypeRef("System.Drawing.Size")])
    );

    $.Constant({Static:true , Public:false}, "LogicalDpi", $.Double, 96);

    $.Field({Static:true , Public:false}, "isInitialized", $.Boolean, false);

    $.Field({Static:true , Public:false}, "deviceDpi", $.Double, 96);

    $.Field({Static:true , Public:false}, "logicalToDeviceUnitsScalingFactor", $.Double, 0);

    $.Field({Static:true , Public:false}, "enableHighDpi", $.Boolean, false);

    $.Field({Static:true , Public:false}, "dpiAwarenessValue", $.String, null);

    $.Field({Static:true , Public:false}, "interpolationMode", $asm17.TypeRef("System.Drawing.Drawing2D.InterpolationMode"), function ($pi) {
        return $asm17.System.Drawing.Drawing2D.InterpolationMode.Invalid;
      });

    $.Property({Static:true , Public:false}, "DeviceDpi", $.Int32);

    $.Property({Static:true , Public:false}, "LogicalToDeviceUnitsScalingFactor", $.Double);

    $.Property({Static:true , Public:false}, "InterpolationMode", $asm17.TypeRef("System.Drawing.Drawing2D.InterpolationMode"));

    $.Property({Static:true , Public:true }, "IsScalingRequired", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

