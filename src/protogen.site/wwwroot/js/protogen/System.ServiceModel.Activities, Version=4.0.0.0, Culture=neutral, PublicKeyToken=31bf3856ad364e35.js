/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm24 = JSIL.DeclareAssembly("System.ServiceModel.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.ServiceModel");
/* class System.ServiceModel.XD2 */ 

(function XD2$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2", false, [], function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XD2+WorkflowServices */ 

(function WorkflowServices$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2+WorkflowServices", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Namespace", $.String, "http://schemas.datacontract.org/2008/10/WorkflowServices");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XD2+DurableInstancing */ 

(function DurableInstancing$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2+DurableInstancing", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Namespace", $.String, "http://schemas.datacontract.org/2004/07/System.Runtime.DurableInstancing");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XD2+ContextHeader */ 

(function ContextHeader$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2+ContextHeader", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "DurableInstanceContext", $.String, "InstanceId");

    $.Constant({Static:true , Public:true }, "Namespace", $.String, "http://schemas.microsoft.com/ws/2006/05/context");

    $.Constant({Static:true , Public:true }, "MissingContextHeader", $.String, "MissingContext");

    $.Constant({Static:true , Public:true }, "IsNewInstance", $.String, "IsNewInstance");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XD2+WorkflowInstanceManagementService */ 

(function WorkflowInstanceManagementService$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2+WorkflowInstanceManagementService", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "ConfigurationName", $.String, "System.ServiceModel.Activities.IWorkflowInstanceManagement");

    $.Constant({Static:true , Public:true }, "ContractName", $.String, "IWorkflowInstanceManagement");

    $.Constant({Static:true , Public:true }, "Abandon", $.String, "Abandon");

    $.Constant({Static:true , Public:true }, "Cancel", $.String, "Cancel");

    $.Constant({Static:true , Public:true }, "Run", $.String, "Run");

    $.Constant({Static:true , Public:true }, "Suspend", $.String, "Suspend");

    $.Constant({Static:true , Public:true }, "Terminate", $.String, "Terminate");

    $.Constant({Static:true , Public:true }, "Unsuspend", $.String, "Unsuspend");

    $.Constant({Static:true , Public:true }, "Update", $.String, "Update");

    $.Constant({Static:true , Public:true }, "TransactedCancel", $.String, "TransactedCancel");

    $.Constant({Static:true , Public:true }, "TransactedRun", $.String, "TransactedRun");

    $.Constant({Static:true , Public:true }, "TransactedSuspend", $.String, "TransactedSuspend");

    $.Constant({Static:true , Public:true }, "TransactedTerminate", $.String, "TransactedTerminate");

    $.Constant({Static:true , Public:true }, "TransactedUnsuspend", $.String, "TransactedUnsuspend");

    $.Constant({Static:true , Public:true }, "TransactedUpdate", $.String, "TransactedUpdate");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XD2+WorkflowControlServiceFaults */ 

(function WorkflowControlServiceFaults$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.XD2+WorkflowControlServiceFaults", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "InstanceNotFound", $.String, "InstanceNotFound");

    $.Constant({Static:true , Public:true }, "InstanceUnloaded", $.String, "InstanceUnloaded");

    $.Constant({Static:true , Public:true }, "InstanceSuspended", $.String, "InstanceSuspended");

    $.Constant({Static:true , Public:true }, "InstanceLockedUnderTransaction", $.String, "InstanceLockedUnderTransaction");

    $.Constant({Static:true , Public:true }, "OperationNotAvailable", $.String, "OperationNotAvailable");

    $.Constant({Static:true , Public:true }, "InstanceNotSuspended", $.String, "InstanceNotSuspended");

    $.Constant({Static:true , Public:true }, "InstanceCompleted", $.String, "InstanceCompleted");

    $.Constant({Static:true , Public:true }, "InstanceTerminated", $.String, "InstanceTerminated");

    $.Constant({Static:true , Public:true }, "InstanceAborted", $.String, "InstanceAborted");

    $.Constant({Static:true , Public:true }, "UpdateFailed", $.String, "UpdateFailed");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Endpoint */ 

(function Endpoint$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0A.System.Uri)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.Channels.Binding)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm22.System.ServiceModel.EndpointIdentity)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };



  function Endpoint_get_AddressUri () {
    return this.Endpoint$AddressUri$value;
  }; 

  function Endpoint_get_BehaviorConfigurationName () {
    return this.Endpoint$BehaviorConfigurationName$value;
  }; 

  function Endpoint_get_Binding () {
    return this.Endpoint$Binding$value;
  }; 


  function Endpoint_get_Identity () {
    return this.Endpoint$Identity$value;
  }; 

  function Endpoint_get_ListenUri () {
    return this.Endpoint$ListenUri$value;
  }; 

  function Endpoint_get_Name () {
    return this.Endpoint$Name$value;
  }; 

  function Endpoint_get_ServiceContractName () {
    return this.Endpoint$ServiceContractName$value;
  }; 



  function Endpoint_set_AddressUri (value) {
    this.Endpoint$AddressUri$value = value;
  }; 

  function Endpoint_set_BehaviorConfigurationName (value) {
    this.Endpoint$BehaviorConfigurationName$value = value;
  }; 

  function Endpoint_set_Binding (value) {
    this.Endpoint$Binding$value = value;
  }; 

  function Endpoint_set_Identity (value) {
    this.Endpoint$Identity$value = value;
  }; 

  function Endpoint_set_ListenUri (value) {
    this.Endpoint$ListenUri$value = value;
  }; 

  function Endpoint_set_Name (value) {
    this.Endpoint$Name$value = value;
  }; 

  function Endpoint_set_ServiceContractName (value) {
    this.Endpoint$ServiceContractName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Endpoint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_AddressUri", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri")), 
      Endpoint_get_AddressUri
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BehaviorConfigurationName", 
      JSIL.MethodSignature.Return($.String), 
      Endpoint_get_BehaviorConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Binding", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Binding")), 
      Endpoint_get_Binding
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Headers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Channels.AddressHeader")]))
    );

    $.Method({Static:false, Public:true }, "get_Identity", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.EndpointIdentity")), 
      Endpoint_get_Identity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ListenUri", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri")), 
      Endpoint_get_ListenUri
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      Endpoint_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      Endpoint_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetAddress", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.EndpointAddress"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAddress", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.EndpointAddress"), [$asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Method({Static:false, Public:true }, "set_AddressUri", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Uri")), 
      Endpoint_set_AddressUri
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BehaviorConfigurationName", 
      JSIL.MethodSignature.Action($.String), 
      Endpoint_set_BehaviorConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Binding", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Binding")), 
      Endpoint_set_Binding
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Identity", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.EndpointIdentity")), 
      Endpoint_set_Identity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ListenUri", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Uri")), 
      Endpoint_set_ListenUri
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      Endpoint_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      Endpoint_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "headers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Channels.AddressHeader")]));

    $.Field({Static:false, Public:false}, "Endpoint$BehaviorConfigurationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$Binding$value", $asm22.TypeRef("System.ServiceModel.Channels.Binding"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$Identity$value", $asm22.TypeRef("System.ServiceModel.EndpointIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$ListenUri$value", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Endpoint$AddressUri$value", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "BehaviorConfigurationName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Binding", $asm22.TypeRef("System.ServiceModel.Channels.Binding"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm24.System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "Headers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Channels.AddressHeader")]));

    $.Property({Static:false, Public:true }, "Identity", $asm22.TypeRef("System.ServiceModel.EndpointIdentity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm24.System.ServiceModel.XamlIntegration.EndpointIdentityConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "ListenUri", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "AddressUri", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.EndpointIdentityExtension */ 

(function EndpointIdentityExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };




  function EndpointIdentityExtension_get_ClaimResource () {
    return this.EndpointIdentityExtension$ClaimResource$value;
  }; 

  function EndpointIdentityExtension_get_ClaimRight () {
    return this.EndpointIdentityExtension$ClaimRight$value;
  }; 

  function EndpointIdentityExtension_get_ClaimType () {
    return this.EndpointIdentityExtension$ClaimType$value;
  }; 


  function EndpointIdentityExtension_set_ClaimResource (value) {
    this.EndpointIdentityExtension$ClaimResource$value = value;
  }; 

  function EndpointIdentityExtension_set_ClaimRight (value) {
    this.EndpointIdentityExtension$ClaimRight$value = value;
  }; 

  function EndpointIdentityExtension_set_ClaimType (value) {
    this.EndpointIdentityExtension$ClaimType$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.ServiceModel.EndpointIdentityExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.EndpointIdentity"))
    );

    $.Method({Static:false, Public:true }, "get_ClaimResource", 
      JSIL.MethodSignature.Return($.Object), 
      EndpointIdentityExtension_get_ClaimResource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ClaimRight", 
      JSIL.MethodSignature.Return($.String), 
      EndpointIdentityExtension_get_ClaimRight
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ClaimType", 
      JSIL.MethodSignature.Return($.String), 
      EndpointIdentityExtension_get_ClaimType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.Method({Static:false, Public:true }, "set_ClaimResource", 
      JSIL.MethodSignature.Action($.Object), 
      EndpointIdentityExtension_set_ClaimResource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ClaimRight", 
      JSIL.MethodSignature.Action($.String), 
      EndpointIdentityExtension_set_ClaimRight
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ClaimType", 
      JSIL.MethodSignature.Action($.String), 
      EndpointIdentityExtension_set_ClaimType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EndpointIdentityExtension$ClaimType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EndpointIdentityExtension$ClaimRight$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EndpointIdentityExtension$ClaimResource$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ClaimType", $.String);

    $.Property({Static:false, Public:true }, "ClaimRight", $.String);

    $.Property({Static:false, Public:true }, "ClaimResource", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.MarkupExtensionReturnTypeAttribute"), function () { return [$asm22.System.ServiceModel.EndpointIdentity.__Type__]; });

})();

/* class System.ServiceModel.MessageQuerySet */ 

(function MessageQuerySet$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };




  function MessageQuerySet_get_Name () {
    return this.MessageQuerySet$Name$value;
  }; 



  function MessageQuerySet_set_Name (value) {
    this.MessageQuerySet$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.String"), $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery")]), 
      Name: "System.ServiceModel.MessageQuerySet", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]))
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      MessageQuerySet_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetMessageQueryTable", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]))
    );

    $.ExternalMethod({Static:true , Public:false}, "InvertDictionary", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", ["!!0", "!!1"]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", ["!!1", "!!0"])], ["TKey", "TValue"])
    );

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      MessageQuerySet_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MessageQuerySet$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.CorrelationActionMessageFilter */ 

(function CorrelationActionMessageFilter$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };




  function CorrelationActionMessageFilter_get_Action () {
    return this.CorrelationActionMessageFilter$Action$value;
  }; 





  function CorrelationActionMessageFilter_set_Action (value) {
    this.CorrelationActionMessageFilter$Action$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter"), 
      Name: "System.ServiceModel.CorrelationActionMessageFilter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      CorrelationActionMessageFilter_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInnerFilter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.ActionMessageFilter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Match", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Channels.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Match", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      CorrelationActionMessageFilter_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "innerFilter", $asm22.TypeRef("System.ServiceModel.Dispatcher.ActionMessageFilter"));

    $.Field({Static:false, Public:false}, "CorrelationActionMessageFilter$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.CorrelationQuery */ 

(function CorrelationQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.MessageQuerySet)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.MessageFilter)) ();
  };






  function CorrelationQuery_get_IsDefaultContextQuery () {
    return this.CorrelationQuery$IsDefaultContextQuery$value;
  }; 

  function CorrelationQuery_get_Select () {
    return this.CorrelationQuery$Select$value;
  }; 


  function CorrelationQuery_get_Where () {
    return this.CorrelationQuery$Where$value;
  }; 



  function CorrelationQuery_set_IsDefaultContextQuery (value) {
    this.CorrelationQuery$IsDefaultContextQuery$value = value;
  }; 

  function CorrelationQuery_set_Select (value) {
    this.CorrelationQuery$Select$value = value;
  }; 

  function CorrelationQuery_set_Where (value) {
    this.CorrelationQuery$Where$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.CorrelationQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindCorrelationQueryForAction", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), $.String])
    );

    $.Method({Static:false, Public:false}, "get_IsDefaultContextQuery", 
      JSIL.MethodSignature.Return($.Boolean), 
      CorrelationQuery_get_IsDefaultContextQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Select", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.MessageQuerySet")), 
      CorrelationQuery_get_Select
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_SelectAdditional", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.MessageQuerySet")]))
    );

    $.Method({Static:false, Public:true }, "get_Where", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter")), 
      CorrelationQuery_get_Where
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsQueryCollectionSearchable", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])])
    );

    $.Method({Static:false, Public:false}, "set_IsDefaultContextQuery", 
      JSIL.MethodSignature.Action($.Boolean), 
      CorrelationQuery_set_IsDefaultContextQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Select", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.MessageQuerySet")), 
      CorrelationQuery_set_Select
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Where", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter")), 
      CorrelationQuery_set_Where
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "selectAdditional", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.MessageQuerySet")]));

    $.Field({Static:false, Public:false}, "CorrelationQuery$Select$value", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationQuery$Where$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationQuery$IsDefaultContextQuery$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Select", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "SelectAdditional", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.MessageQuerySet")]));

    $.Property({Static:false, Public:true }, "Where", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "IsDefaultContextQuery", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.CorrelationQuery+QueryCollection */ 

(function QueryCollection$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.MessageQuerySet")]), 
      Name: "System.ServiceModel.CorrelationQuery+QueryCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm24.TypeRef("System.ServiceModel.MessageQuerySet")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm24.TypeRef("System.ServiceModel.MessageQuerySet")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ServiceModel.XamlIntegration");
/* class System.ServiceModel.XamlIntegration.EndpointIdentityConverter */ 

(function EndpointIdentityConverter$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.ServiceModel.XamlIntegration.EndpointIdentityConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter */ 

(function ServiceXNameTypeConverter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsQualifiedName", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension */ 

(function SpnEndpointIdentityExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };




  function SpnEndpointIdentityExtension_get_SpnName () {
    return this.SpnEndpointIdentityExtension$SpnName$value;
  }; 


  function SpnEndpointIdentityExtension_set_SpnName (value) {
    this.SpnEndpointIdentityExtension$SpnName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.SpnEndpointIdentity"))
    );

    $.Method({Static:false, Public:true }, "get_SpnName", 
      JSIL.MethodSignature.Return($.String), 
      SpnEndpointIdentityExtension_get_SpnName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.Method({Static:false, Public:true }, "set_SpnName", 
      JSIL.MethodSignature.Action($.String), 
      SpnEndpointIdentityExtension_set_SpnName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SpnEndpointIdentityExtension$SpnName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "SpnName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.MarkupExtensionReturnTypeAttribute"), function () { return [$asm22.System.ServiceModel.SpnEndpointIdentity.__Type__]; });

})();

/* class System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension */ 

(function UpnEndpointIdentityExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };




  function UpnEndpointIdentityExtension_get_UpnName () {
    return this.UpnEndpointIdentityExtension$UpnName$value;
  }; 


  function UpnEndpointIdentityExtension_set_UpnName (value) {
    this.UpnEndpointIdentityExtension$UpnName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.UpnEndpointIdentity"))
    );

    $.Method({Static:false, Public:true }, "get_UpnName", 
      JSIL.MethodSignature.Return($.String), 
      UpnEndpointIdentityExtension_get_UpnName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.Method({Static:false, Public:true }, "set_UpnName", 
      JSIL.MethodSignature.Action($.String), 
      UpnEndpointIdentityExtension_set_UpnName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UpnEndpointIdentityExtension$UpnName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "UpnName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.MarkupExtensionReturnTypeAttribute"), function () { return [$asm22.System.ServiceModel.UpnEndpointIdentity.__Type__]; });

})();

/* class System.ServiceModel.XamlIntegration.XNameTypeConverterHelper */ 

(function XNameTypeConverterHelper$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.ServiceModel.XamlIntegration.XNameTypeConverterHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertFromHelper", 
      new JSIL.MethodSignature($.Object, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $.Object, 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertToHelper", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $.Object, 
          $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities");
/* class System.ServiceModel.Activities.AppSettings */ 

(function AppSettings$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.ServiceModel.Activities.AppSettings", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureSettingsLoaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultAutomaticInstanceKeyDisassociation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FilterResumeTimeoutInSeconds", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:true , Public:false}, "settingsInitialized", $asm07.TypeRef("System.Boolean"), false);

    $.Field({Static:true , Public:false}, "appSettingsLock", $.Object);

    $.Field({Static:true , Public:false}, "defaultAutomaticInstanceKeyDisassociation", $.Boolean);

    $.Field({Static:true , Public:false}, "filterResumeTimeoutInSeconds", $.Int32);

    $.Property({Static:true , Public:false}, "DefaultAutomaticInstanceKeyDisassociation", $.Boolean);

    $.Property({Static:true , Public:false}, "FilterResumeTimeoutInSeconds", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService */ 

(function WorkflowService$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Collections.Generic.Dictionary$b2.Of($asm24.System.ServiceModel.Activities.OperationIdentifier, $asm24.System.ServiceModel.Activities.OperationProperty))) ();
  };












  function WorkflowService_get_AllowBufferedReceive () {
    return this.WorkflowService$AllowBufferedReceive$value;
  }; 

  function WorkflowService_get_Body () {
    return this.WorkflowService$Body$value;
  }; 

  function WorkflowService_get_ConfigurationName () {
    return this.WorkflowService$ConfigurationName$value;
  }; 


  function WorkflowService_get_DefinitionIdentity () {
    return this.WorkflowService$DefinitionIdentity$value;
  }; 





  function WorkflowService_get_Name () {
    return this.WorkflowService$Name$value;
  }; 

  function WorkflowService_get_OperationProperties () {
    return this.WorkflowService$OperationProperties$value;
  }; 











  function WorkflowService_set_AllowBufferedReceive (value) {
    this.WorkflowService$AllowBufferedReceive$value = value;
  }; 

  function WorkflowService_set_Body (value) {
    this.WorkflowService$Body$value = value;
  }; 

  function WorkflowService_set_ConfigurationName (value) {
    this.WorkflowService$ConfigurationName$value = value;
  }; 

  function WorkflowService_set_DefinitionIdentity (value) {
    this.WorkflowService$DefinitionIdentity$value = value;
  }; 

  function WorkflowService_set_Name (value) {
    this.WorkflowService$Name$value = value;
  }; 

  function WorkflowService_set_OperationProperties (value) {
    this.WorkflowService$OperationProperties$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowService", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AddAdditionalConstraint", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Validation.ValidationSettings"), $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.Validation.Constraint")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterValidation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectCorrelationQuery", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm24.TypeRef("System.ServiceModel.CorrelationQuery")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectCorrelationQueryFromReply", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyValidationSettions", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationSettings"), [$asm0B.TypeRef("System.Activities.Validation.ValidationSettings")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CorrectOutMessageForOperationWithFault", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+OperationInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateOperationProperties", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.OperationIdentifier"), $asm24.TypeRef("System.ServiceModel.Activities.OperationProperty")]), [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "DetachFromVersioning", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "FixServiceContractName", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XName"), [$asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.Method({Static:false, Public:true }, "get_AllowBufferedReceive", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowService_get_AllowBufferedReceive
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowService_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ConfigurationName", 
      JSIL.MethodSignature.Return($.String), 
      WorkflowService_get_ConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_CorrelationQueries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]))
    );

    $.Method({Static:false, Public:true }, "get_DefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowService_get_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Endpoints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Endpoint")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasImplementedContracts", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementedContracts", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName"))
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      WorkflowService_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OperationProperties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.OperationIdentifier"), $asm24.TypeRef("System.ServiceModel.Activities.OperationProperty")])), 
      WorkflowService_get_OperationProperties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_OperationsInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+ContractAndOperationNameTuple"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+OperationInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateMaps", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetContractDescriptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetContractFirstValidationReceiveConstraints", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetContractFirstValidationSendReplyConstraints", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetEmptyServiceDescription", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetWorkflowRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsContractValid", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsFirstTransactedReceive", 
      new JSIL.MethodSignature($.Boolean, [
          $asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetServiceDescription", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_AllowBufferedReceive", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowService_set_AllowBufferedReceive
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowService_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ConfigurationName", 
      JSIL.MethodSignature.Action($.String), 
      WorkflowService_set_ConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowService_set_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      WorkflowService_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OperationProperties", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.OperationIdentifier"), $asm24.TypeRef("System.ServiceModel.Activities.OperationProperty")])), 
      WorkflowService_set_OperationProperties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Validate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationResults"), [$asm0B.TypeRef("System.Activities.Validation.ValidationSettings")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateForVersioning", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "WalkActivityTree", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "endpoints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Endpoint")]));

    $.Field({Static:false, Public:false}, "implementedContracts", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "updateMaps", $asm25.TypeRef("System.Runtime.Collections.NullableKeyDictionary`2", [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]));

    $.Field({Static:false, Public:false}, "cachedInferredContracts", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")]));

    $.Field({Static:false, Public:false}, "correlationQueryByContract", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]));

    $.Field({Static:false, Public:false}, "keyedByNameOperationInfo", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+ContractAndOperationNameTuple"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+OperationInfo")]));

    $.Field({Static:false, Public:false}, "knownServiceActivities", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Field({Static:false, Public:false}, "receiveAndReplyPairs", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+ReceiveAndReplyTuple")]));

    $.Field({Static:false, Public:false}, "serviceDescription", $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"));

    $.Field({Static:false, Public:false}, "inferedServiceName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "WorkflowService$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowService$Name$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowService$ConfigurationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowService$AllowBufferedReceive$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowService$DefinitionIdentity$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowService$OperationProperties$value", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.OperationIdentifier"), $asm24.TypeRef("System.ServiceModel.Activities.OperationProperty")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Name", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm24.System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "ConfigurationName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "AllowBufferedReceive", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "Endpoints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Endpoint")]));

    $.Property({Static:false, Public:true }, "DefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "ImplementedContracts", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:true }, "UpdateMaps", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]));

    $.Property({Static:false, Public:false}, "HasImplementedContracts", $.Boolean);

    $.Property({Static:false, Public:false}, "OperationProperties", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.OperationIdentifier"), $asm24.TypeRef("System.ServiceModel.Activities.OperationProperty")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "OperationsInfo", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+ContractAndOperationNameTuple"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService+OperationInfo")]));

    $.Property({Static:false, Public:false}, "InternalName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false}, "CorrelationQueries", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Debugger.IDebuggableWorkflowTree")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* struct System.ServiceModel.Activities.WorkflowService+ContractAndOperationNameTuple */ 

(function ContractAndOperationNameTuple$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.ServiceModel.Activities.WorkflowService+ContractAndOperationNameTuple", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "serviceContractXName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "operationName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.ServiceModel.Activities.WorkflowService+ReceiveAndReplyTuple */ 

(function ReceiveAndReplyTuple$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.ServiceModel.Activities.WorkflowService+ReceiveAndReplyTuple", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm24.TypeRef("System.ServiceModel.Activities.SendReply")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "receive", $asm24.TypeRef("System.ServiceModel.Activities.Receive"));

    $.Field({Static:false, Public:false}, "reply", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService+OperationInfo */ 

(function OperationInfo$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowService+OperationInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OperationDescription", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Receive", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Receive"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Receive", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Receive"))
    );

    $.Field({Static:false, Public:false}, "receive", $asm24.TypeRef("System.ServiceModel.Activities.Receive"));

    $.Field({Static:false, Public:false}, "operationDescription", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"));

    $.Property({Static:false, Public:true }, "Receive", $asm24.TypeRef("System.ServiceModel.Activities.Receive"));

    $.Property({Static:false, Public:true }, "OperationDescription", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService+QueueItem */ 

(function QueueItem$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowService+QueueItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParentReceiveScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RootTransactedReceiveScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "rootTransactedReceiveScope", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ParentReceiveScope", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "RootTransactedReceiveScope", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService+GetWorkflowSerivce */ 

(function GetWorkflowSerivce$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]), 
      Name: "System.ServiceModel.Activities.WorkflowService+GetWorkflowSerivce", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Field({Static:false, Public:false}, "workflowService", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService+ValidateReceiveContract */ 

(function ValidateReceiveContract$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Collections.Generic.IEnumerable$b1.Of($asm0B.System.Activities.Activity)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.Receive))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.WorkflowService))) ();
  };





  function ValidateReceiveContract_get_ParentChain () {
    return this.ValidateReceiveContract$ParentChain$value;
  }; 

  function ValidateReceiveContract_get_ReceiveActivity () {
    return this.ValidateReceiveContract$ReceiveActivity$value;
  }; 

  function ValidateReceiveContract_get_WorkflowService () {
    return this.ValidateReceiveContract$WorkflowService$value;
  }; 

  function ValidateReceiveContract_set_ParentChain (value) {
    this.ValidateReceiveContract$ParentChain$value = value;
  }; 

  function ValidateReceiveContract_set_ReceiveActivity (value) {
    this.ValidateReceiveContract$ReceiveActivity$value = value;
  }; 

  function ValidateReceiveContract_set_WorkflowService (value) {
    this.ValidateReceiveContract$WorkflowService$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.WorkflowService+ValidateReceiveContract", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_ParentChain", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      ValidateReceiveContract_get_ParentChain
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ReceiveActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")])), 
      ValidateReceiveContract_get_ReceiveActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowService", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])), 
      ValidateReceiveContract_get_WorkflowService
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentChain", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      ValidateReceiveContract_set_ParentChain
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReceiveActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")])), 
      ValidateReceiveContract_set_ReceiveActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowService", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])), 
      ValidateReceiveContract_set_WorkflowService
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.Receive"), 
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateTransactionBehavior", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.Receive"), 
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")
        ])
    );

    $.Field({Static:false, Public:false}, "ValidateReceiveContract$ReceiveActivity$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidateReceiveContract$ParentChain$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidateReceiveContract$WorkflowService$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ReceiveActivity", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Property({Static:false, Public:true }, "ParentChain", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]));

    $.Property({Static:false, Public:true }, "WorkflowService", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowService+ValidateSendReplyContract */ 

(function ValidateSendReplyContract$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.SendReply))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Validation.ValidationContext))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.WorkflowService))) ();
  };





  function ValidateSendReplyContract_get_ReceiveActivity () {
    return this.ValidateSendReplyContract$ReceiveActivity$value;
  }; 

  function ValidateSendReplyContract_get_ValidationContext () {
    return this.ValidateSendReplyContract$ValidationContext$value;
  }; 

  function ValidateSendReplyContract_get_WorkflowSerivce () {
    return this.ValidateSendReplyContract$WorkflowSerivce$value;
  }; 

  function ValidateSendReplyContract_set_ReceiveActivity (value) {
    this.ValidateSendReplyContract$ReceiveActivity$value = value;
  }; 

  function ValidateSendReplyContract_set_ValidationContext (value) {
    this.ValidateSendReplyContract$ValidationContext$value = value;
  }; 

  function ValidateSendReplyContract_set_WorkflowSerivce (value) {
    this.ValidateSendReplyContract$WorkflowSerivce$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.WorkflowService+ValidateSendReplyContract", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_ReceiveActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")])), 
      ValidateSendReplyContract_get_ReceiveActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ValidationContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      ValidateSendReplyContract_get_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowSerivce", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])), 
      ValidateSendReplyContract_get_WorkflowSerivce
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReceiveActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")])), 
      ValidateSendReplyContract_set_ReceiveActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValidationContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      ValidateSendReplyContract_set_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowSerivce", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])), 
      ValidateSendReplyContract_set_WorkflowSerivce
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.SendReply"), 
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")
        ])
    );

    $.Field({Static:false, Public:false}, "ValidateSendReplyContract$ReceiveActivity$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidateSendReplyContract$ValidationContext$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidateSendReplyContract$WorkflowSerivce$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ReceiveActivity", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]));

    $.Property({Static:false, Public:true }, "ValidationContext", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]));

    $.Property({Static:false, Public:true }, "WorkflowSerivce", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.MessagingActivityHelper */ 

(function MessagingActivityHelper$Members () {
  var $, $thisType;












  JSIL.MakeStaticClass("System.ServiceModel.Activities.MessagingActivityHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AddRuntimeArgument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Argument"), $.String, 
          $asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $asm0B.TypeRef("System.Activities.ActivityMetadata")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CompareContextEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCorrelationCallbackContext", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"), [$asm22.TypeRef("System.ServiceModel.Channels.MessageProperties")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCorrelationContext", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"), [$asm22.TypeRef("System.ServiceModel.Channels.MessageProperties")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReplyCorrelatesWith", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]), [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "FixMessageArgument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Argument"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $asm0B.TypeRef("System.Activities.ActivityMetadata")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetCallbacks", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), [$asm0B.TypeRef("System.Activities.ExecutionProperties")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "InitializeCorrelationHandles", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.Message"), [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), 
          $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"), $asm22.TypeRef("System.ServiceModel.Channels.Message")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "InitializeCorrelationHandles", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), 
          $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $asm22.TypeRef("System.ServiceModel.Channels.MessageProperties")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeCorrelationHandles", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), 
          $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateCorrelationInitializer", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $.Boolean, $.String, 
          $.String
        ])
    );

    $.Field({Static:true , Public:false}, "faultExceptionType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm22.System.ServiceModel.FaultException.__Type__;
      });

    $.Field({Static:true , Public:false}, "faultExceptionGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm22.System.ServiceModel.FaultException$b1.__Type__;
      });

    $.Constant({Static:true , Public:true }, "ActivityInstanceId", $.String, "ActivityInstanceId");

    $.Constant({Static:true , Public:true }, "ActivityName", $.String, "ActivityName");

    $.Constant({Static:true , Public:true }, "ActivityType", $.String, "ActivityType");

    $.Constant({Static:true , Public:true }, "ActivityTypeExecuteUserCode", $.String, "ExecuteUserCode");

    $.Constant({Static:true , Public:true }, "MessagingActivityTypeActivityExecution", $.String, "MessagingActivityExecution");

    $.Constant({Static:true , Public:true }, "E2EActivityId", $.String, "E2EActivityId");

    $.Constant({Static:true , Public:true }, "MessageId", $.String, "MessageId");

    $.Constant({Static:true , Public:true }, "ActivityNameWorkflowOperationInvoke", $.String, "WorkflowOperationInvoke");

    $.Constant({Static:true , Public:true }, "MessageCorrelationReceiveRecord", $.String, "MessageCorrelationReceiveRecord");

    $.Constant({Static:true , Public:true }, "MessageCorrelationSendRecord", $.String, "MessageCorrelationSendRecord");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.BookmarkNameHelper */ 

(function BookmarkNameHelper$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.ServiceModel.Activities.BookmarkNameHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateBookmarkName", 
      new JSIL.MethodSignature($.String, [$.String, $asm30.TypeRef("System.Xml.Linq.XName")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.DurableInstancingOptions */ 

(function DurableInstancingOptions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };






  function DurableInstancingOptions_get_ScopeName () {
    return this.DurableInstancingOptions$ScopeName$value;
  }; 


  function DurableInstancingOptions_set_ScopeName (value) {
    this.DurableInstancingOptions$ScopeName$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.DurableInstancingOptions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInitialInstanceValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInstanceOwnerValues", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Method({Static:false, Public:false}, "get_ScopeName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      DurableInstancingOptions_get_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceStore", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Method({Static:false, Public:false}, "set_ScopeName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      DurableInstancingOptions_set_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.DurableInstancing.IDurableInstancingOptions.SetScopeName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Overrides($asm35.TypeRef("System.Runtime.DurableInstancing.IDurableInstancingOptions"), "SetScopeName");

    $.Field({Static:false, Public:false}, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "DurableInstancingOptions$ScopeName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Property({Static:false, Public:false}, "ScopeName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.ImplementInterfaces(
      /* 0 */ $asm35.TypeRef("System.Runtime.DurableInstancing.IDurableInstancingOptions")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.ServiceModel.Activities.IWorkflowInstanceManagement */ 

JSIL.MakeInterface(
  "System.ServiceModel.Activities.IWorkflowInstanceManagement", true, [], function ($) {
    $.Method({}, "Abandon", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String]));
    $.Method({}, "BeginAbandon", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndAbandon", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "Cancel", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginCancel", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndCancel", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "Run", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginRun", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndRun", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "Suspend", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String]));
    $.Method({}, "BeginSuspend", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndSuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "Terminate", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String]));
    $.Method({}, "BeginTerminate", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndTerminate", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "Unsuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginUnsuspend", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndUnsuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedCancel", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginTransactedCancel", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndTransactedCancel", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedRun", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginTransactedRun", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndTransactedRun", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedSuspend", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String]));
    $.Method({}, "BeginTransactedSuspend", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndTransactedSuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedTerminate", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String]));
    $.Method({}, "BeginTransactedTerminate", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndTransactedTerminate", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedUnsuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")));
    $.Method({}, "BeginTransactedUnsuspend", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ]));
    $.Method({}, "EndTransactedUnsuspend", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
  }, [])
  .Attribute($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute"))
  .Attribute($asm22.TypeRef("System.ServiceModel.ServiceContractAttribute"));

/* interface System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement */ 

JSIL.MakeInterface(
  "System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement", true, [], function ($) {
    $.Method({}, "Update", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")]));
    $.Method({}, "BeginUpdate", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndUpdate", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
    $.Method({}, "TransactedUpdate", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")]));
    $.Method({}, "BeginTransactedUpdate", new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ]));
    $.Method({}, "EndTransactedUpdate", JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult")));
  }, [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")])
  .Attribute($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute"))
  .Attribute($asm22.TypeRef("System.ServiceModel.ServiceContractAttribute"));

/* enum System.ServiceModel.Activities.SerializerOption */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.SerializerOption", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    DataContractSerializer: 0, 
    XmlSerializer: 1, 
  }
);

/* class System.ServiceModel.Activities.WorkflowControlClient */ 

(function WorkflowControlClient$Members () {
  var $, $thisType;

















































































  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.ClientBase`1", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Channels.Binding"), $asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowControlEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_AbandonCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_CancelCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_RunCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_SuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_TerminateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_UnsuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnsuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAbandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndCancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndRun", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndSuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTerminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUnsuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsTransactedInvoke", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SupportsTransactedInvoke", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbandonCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginUnsuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCancelCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndAbandon", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndCancel", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndRun", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndSuspend", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndTerminate", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndUnsuspend", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRunCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSuspendCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTerminateCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnUnsuspendCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_AbandonCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_CancelCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_RunCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_SuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_TerminateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_UnsuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RunAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RunAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Suspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Suspend", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Unsuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UnsuspendAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UnsuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.Field({Static:false, Public:false}, "onBeginAbandonDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndAbandonDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onAbandonCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginCancelDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndCancelDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onCancelCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginRunDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndRunDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onRunCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginSuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndSuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onSuspendCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginUnsuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndUnsuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onUnsuspendCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginTerminateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndTerminateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onTerminateCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "checkedBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "supportsTransactedInvoke", $.Boolean);

    $.Field({Static:false, Public:false}, "AbandonCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CancelCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RunCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnsuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TerminateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SupportsTransactedInvoke", $.Boolean);

    $.Property({Static:false, Public:false}, "IsTransactedInvoke", $.Boolean);

    $.Event({Static:false, Public:true }, "AbandonCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "CancelCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "RunCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "SuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "UnsuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "TerminateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlClient+CancelAsyncResult */ 

(function CancelAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient+CancelAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndCancel", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleEndCancel", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndCancel", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlClient+RunAsyncResult */ 

(function RunAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient+RunAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndRun", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.Field({Static:true , Public:false}, "handleEndResume", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndRun", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlClient+SuspendAsyncResult */ 

(function SuspendAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient+SuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndSuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Suspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.Field({Static:true , Public:false}, "handleEndSuspend", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndSuspend", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlClient+UnsuspendAsyncResult */ 

(function UnsuspendAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient+UnsuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndUnsuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Unsuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.Field({Static:true , Public:false}, "handleEndUnsuspend", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndUnsuspend", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlClient+TerminateAsyncResult */ 

(function TerminateAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowControlClient+TerminateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndTerminate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Terminate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.Field({Static:true , Public:false}, "handleEndTerminate", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndTerminate", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient */ 

(function WorkflowUpdateableControlClient$Members () {
  var $, $thisType;



























































































  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.ClientBase`1", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Channels.Binding"), $asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowControlEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_AbandonCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_CancelCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_RunCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_SuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_TerminateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_UnsuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_UpdateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnsuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAbandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndCancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndRun", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndSuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTerminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUnsuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUpdate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsTransactedInvoke", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SupportsTransactedInvoke", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbandonCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginUnsuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBeginUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCancelCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndAbandon", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndCancel", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndRun", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndSuspend", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndTerminate", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndUnsuspend", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndUpdate", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRunCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSuspendCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTerminateCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnUnsuspendCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnUpdateCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_AbandonCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_CancelCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_RunCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_SuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_TerminateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_UnsuspendCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_UpdateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RunAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RunAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Suspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Suspend", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SuspendAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Unsuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UnsuspendAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UnsuspendAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Update", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $.Object
        ])
    );

    $.Field({Static:false, Public:false}, "onBeginAbandonDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndAbandonDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onAbandonCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginCancelDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndCancelDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onCancelCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginRunDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndRunDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onRunCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginSuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndSuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onSuspendCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginUnsuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndUnsuspendDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onUnsuspendCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginTerminateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndTerminateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onTerminateCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "onBeginUpdateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+BeginOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onEndUpdateDelegate", $asm22.TypeRef("System.ServiceModel.ClientBase`1+EndOperationDelegate", [$asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement")]));

    $.Field({Static:false, Public:false}, "onUpdateCompleteDelegate", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "checkedBinding", $.Boolean);

    $.Field({Static:false, Public:false}, "supportsTransactedInvoke", $.Boolean);

    $.Field({Static:false, Public:false}, "AbandonCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CancelCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RunCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnsuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TerminateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UpdateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SupportsTransactedInvoke", $.Boolean);

    $.Property({Static:false, Public:false}, "IsTransactedInvoke", $.Boolean);

    $.Event({Static:false, Public:true }, "AbandonCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "CancelCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "RunCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "SuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "UnsuspendCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "TerminateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "UpdateCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+CancelAsyncResult */ 

(function CancelAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+CancelAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndCancel", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleEndCancel", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndCancel", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+RunAsyncResult */ 

(function RunAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+RunAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndRun", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.Field({Static:true , Public:false}, "handleEndResume", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndRun", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+SuspendAsyncResult */ 

(function SuspendAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+SuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndSuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Suspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.Field({Static:true , Public:false}, "handleEndSuspend", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndSuspend", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+UnsuspendAsyncResult */ 

(function UnsuspendAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+UnsuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndUnsuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Unsuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid")])
    );

    $.Field({Static:true , Public:false}, "handleEndUnsuspend", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndUnsuspend", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+TerminateAsyncResult */ 

(function TerminateAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+TerminateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndTerminate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Terminate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.Field({Static:true , Public:false}, "handleEndTerminate", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndTerminate", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowUpdateableControlClient+UpdateAsyncResult */ 

(function UpdateAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowUpdateableControlClient+UpdateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement"), $.Boolean, 
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndUpdate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Update", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.Field({Static:true , Public:false}, "handleEndUpdate", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndUpdate", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "isTransacted", $.Boolean);

    $.Field({Static:false, Public:false}, "channel", $asm24.TypeRef("System.ServiceModel.Activities.IWorkflowUpdateableInstanceManagement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowControlEndpoint */ 

(function WorkflowControlEndpoint$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
      Name: "System.ServiceModel.Activities.WorkflowControlEndpoint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Channels.Binding"), $asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ApplyOperationBehaviors", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureDispatch", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureTransactedInvoke", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultBaseUri", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowControlServiceBaseContract", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowControlServiceContract", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDefaultBinding", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Binding"))
    );

    $.ExternalMethod({Static:true , Public:false}, "RetrieveProcessIdAndAppDomainId", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "defaultBaseUri", $asm0A.TypeRef("System.Uri"));

    $.Field({Static:true , Public:false}, "workflowControlServiceBaseContract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Field({Static:true , Public:false}, "workflowControlServiceContract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Field({Static:true , Public:false}, "workflowContractDescriptionLock", $.Object);

    $.Property({Static:true , Public:false}, "WorkflowControlServiceBaseContract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Property({Static:true , Public:false}, "WorkflowControlServiceContract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Property({Static:true , Public:false}, "DefaultBaseUri", $asm0A.TypeRef("System.Uri"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowOperationContext */ 

(function WorkflowOperationContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowOperationContext_State)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm27.System.Transactions.Transaction)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.OperationContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm22.System.ServiceModel.Description.ServiceEndpoint)) ();
  };









  function WorkflowOperationContext_get_CurrentState () {
    return this.WorkflowOperationContext$CurrentState$value;
  }; 

  function WorkflowOperationContext_get_CurrentTransaction () {
    return this.WorkflowOperationContext$CurrentTransaction$value;
  }; 




  function WorkflowOperationContext_get_OperationContext () {
    return this.WorkflowOperationContext$OperationContext$value;
  }; 

  function WorkflowOperationContext_get_ServiceEndpoint () {
    return this.WorkflowOperationContext$ServiceEndpoint$value;
  }; 
















  function WorkflowOperationContext_set_CurrentState (value) {
    this.WorkflowOperationContext$CurrentState$value = value;
  }; 

  function WorkflowOperationContext_set_CurrentTransaction (value) {
    this.WorkflowOperationContext$CurrentTransaction$value = value;
  }; 

  function WorkflowOperationContext_set_OperationContext (value) {
    this.WorkflowOperationContext$OperationContext$value = value;
  }; 

  function WorkflowOperationContext_set_ServiceEndpoint (value) {
    this.WorkflowOperationContext$ServiceEndpoint$value = value;
  }; 







  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowOperationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 13, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $.String, $.Boolean, 
          $.Boolean, $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowOperationBehavior"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginProcessRequest", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $.String, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Boolean, $.Boolean, 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowOperationBehavior"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EmitTransferFromInstanceId", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "EndProcessRequest", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Method({Static:false, Public:false}, "get_CurrentState", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext+State")), 
      WorkflowOperationContext_get_CurrentState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CurrentTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      WorkflowOperationContext_get_CurrentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_E2EActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasResponse", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Inputs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.Method({Static:false, Public:true }, "get_OperationContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      WorkflowOperationContext_get_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ServiceEndpoint", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")), 
      WorkflowOperationContext_get_ServiceEndpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetDuration", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "HandleEndProcessReceiveContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndResumeBookmark", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndWaitForPendingOperations", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnResumeBookmark", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessFinalizationTraces", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessInitializationTraces", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReceiveContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReply", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessRequest", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "RemovePendingOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SendFault", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SendReply", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SendReply", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.Method({Static:false, Public:false}, "set_CurrentState", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext+State")), 
      WorkflowOperationContext_set_CurrentState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CurrentTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      WorkflowOperationContext_set_CurrentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OperationContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      WorkflowOperationContext_set_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ServiceEndpoint", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")), 
      WorkflowOperationContext_set_ServiceEndpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetOperationCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackMethodCalled", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "TrackMethodCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackMethodFailed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackMethodFaulted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackMethodSucceeded", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyDictionary", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.String]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyObjectArray", $jsilcore.TypeRef("System.Array", [$.Object]), function ($pi) {
        return JSIL.Array.New($asm07.System.Object, 0);
      });

    $.Field({Static:true , Public:false}, "handleEndResumeBookmark", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndResumeBookmark", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndWaitForPendingOperations", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndWaitForPendingOperations", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndProcessReceiveContext", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "inputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "operationName", $.String);

    $.Field({Static:false, Public:false}, "outputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "operationReturnValue", $.Object);

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "workflowInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "bookmarkValue", $.Object);

    $.Field({Static:false, Public:false}, "bookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Field({Static:false, Public:false}, "notification", $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"));

    $.Field({Static:false, Public:false}, "pendingAsyncResult", $asm07.TypeRef("System.IAsyncResult"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "pendingException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "receiveContext", $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"));

    $.Field({Static:false, Public:false}, "performanceCountersEnabled", $.Boolean);

    $.Field({Static:false, Public:false}, "beginTime", $.Int64);

    $.Field({Static:false, Public:false}, "propagateActivity", $.Boolean);

    $.Field({Static:false, Public:false}, "ambientActivityId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "e2eActivityId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "eventTraceActivity", $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"));

    $.Field({Static:false, Public:false}, "beginOperation", $.Int64);

    $.Field({Static:false, Public:false}, "hasDecrementedBusyCount", $.Boolean);

    $.Field({Static:false, Public:false}, "WorkflowOperationContext$OperationContext$value", $asm22.TypeRef("System.ServiceModel.OperationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowOperationContext$ServiceEndpoint$value", $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowOperationContext$CurrentTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowOperationContext$CurrentState$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext+State"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Inputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true }, "OperationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Property({Static:false, Public:true }, "ServiceEndpoint", $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"));

    $.Property({Static:false, Public:true }, "CurrentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "BookmarkValue", $.Object);

    $.Property({Static:false, Public:true }, "HasResponse", $.Boolean);

    $.Property({Static:false, Public:false}, "CurrentState", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext+State"));

    $.Property({Static:false, Public:true }, "E2EActivityId", $asm07.TypeRef("System.Guid"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.WorkflowOperationContext+State */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.WorkflowOperationContext+State", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    BookmarkResumption: 0, 
    WaitForResult: 1, 
    ResultReceived: 2, 
    Completed: 3, 
  }
);

/* class System.ServiceModel.Activities.WorkflowOperationContext+OperationContextScopeHelper */ 

(function OperationContextScopeHelper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowOperationContext+OperationContextScopeHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "currentOperationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowOperationContext+ReceiveContextAsyncResult */ 

(function ReceiveContextAsyncResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowOperationContext+ReceiveContextAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"), $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginProcessReceiveContext", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"), $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndProcessReceiveContext", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTransactionComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm27.TypeRef("System.Transactions.TransactionEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReceiveContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "handleEndComplete", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"));

    $.Field({Static:false, Public:false}, "receiveContext", $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowServiceHost */ 

(function WorkflowServiceHost$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.TimeSpan)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };



























  function WorkflowServiceHost_get_FilterResumeTimeout () {
    return this.WorkflowServiceHost$FilterResumeTimeout$value;
  }; 




  function WorkflowServiceHost_get_IsLoadTransactionRequired () {
    return this.WorkflowServiceHost$IsLoadTransactionRequired$value;
  }; 

  function WorkflowServiceHost_get_OverrideSiteName () {
    return this.WorkflowServiceHost$OverrideSiteName$value;
  }; 

  function WorkflowServiceHost_get_PersistTimeout () {
    return this.WorkflowServiceHost$PersistTimeout$value;
  }; 

  function WorkflowServiceHost_get_ServiceName () {
    return this.WorkflowServiceHost$ServiceName$value;
  }; 


  function WorkflowServiceHost_get_TrackTimeout () {
    return this.WorkflowServiceHost$TrackTimeout$value;
  }; 












  function WorkflowServiceHost_set_FilterResumeTimeout (value) {
    this.WorkflowServiceHost$FilterResumeTimeout$value = value.MemberwiseClone();
  }; 



  function WorkflowServiceHost_set_IsLoadTransactionRequired (value) {
    this.WorkflowServiceHost$IsLoadTransactionRequired$value = value;
  }; 

  function WorkflowServiceHost_set_OverrideSiteName (value) {
    this.WorkflowServiceHost$OverrideSiteName$value = value;
  }; 

  function WorkflowServiceHost_set_PersistTimeout (value) {
    this.WorkflowServiceHost$PersistTimeout$value = value.MemberwiseClone();
  }; 

  function WorkflowServiceHost_set_ServiceName (value) {
    this.WorkflowServiceHost$ServiceName$value = value;
  }; 

  function WorkflowServiceHost_set_TrackTimeout (value) {
    this.WorkflowServiceHost$TrackTimeout$value = value.MemberwiseClone();
  }; 





  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
      Name: "System.ServiceModel.Activities.WorkflowServiceHost", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Uri")])])
    )
      .Parameter(1, "baseAddresses", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Uri")])])
    )
      .Parameter(1, "baseAddresses", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Uri")])])
    )
      .Parameter(1, "baseAddresses", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCorrelationQueryBehaviorToServiceEndpoint", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddDefaultEndpoints", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Channels.Binding"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $.String, $asm0A.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $asm0A.TypeRef("System.Uri"), $asm0A.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $.String, $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $.String, $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $asm0A.TypeRef("System.Uri")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $.String, $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $.String, $asm0A.TypeRef("System.Uri")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $.String, $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $asm0A.TypeRef("System.Uri"), $asm0A.TypeRef("System.Uri")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddServiceEndpoint", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddServiceEndpointCore", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [
          $asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $asm22.TypeRef("System.ServiceModel.EndpointAddress"), $asm0A.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AfterInitializeRuntime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginAfterInitializeRuntime", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginHostClose", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndAfterInitializeRuntime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndHostClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FaultServiceHostIfNecessary", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FixupEndpoints", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DurableInstanceManager", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DurableInstancingOptions", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions"))
    );

    $.Method({Static:false, Public:false}, "get_FilterResumeTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_get_FilterResumeTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IdleTimeToPersist", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IdleTimeToUnload", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsConfigurable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_IsLoadTransactionRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowServiceHost_get_IsLoadTransactionRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OverrideSiteName", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowServiceHost_get_OverrideSiteName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_PersistTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_get_PersistTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ServiceName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      WorkflowServiceHost_get_ServiceName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_SupportedVersions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]))
    );

    $.Method({Static:false, Public:false}, "get_TrackTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_get_TrackTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_UnhandledExceptionAction", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowExtensions", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_WorkflowServiceHostPerformanceCounters", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDescription", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"), $asm22.TypeRef("System.ServiceModel.UriSchemeKeyedCollection")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeFromConstructor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Uri")])])
    )
      .Parameter(1, "baseAddresses", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, "InitializeFromConstructor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Uri")])])
    )
      .Parameter(1, "baseAddresses", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InitializeRuntime", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnAbort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginClose", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:false}, "set_FilterResumeTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_set_FilterResumeTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_IdleTimeToPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IdleTimeToUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "set_IsLoadTransactionRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowServiceHost_set_IsLoadTransactionRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OverrideSiteName", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowServiceHost_set_OverrideSiteName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PersistTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_set_PersistTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ServiceName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      WorkflowServiceHost_set_ServiceName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan")), 
      WorkflowServiceHost_set_TrackTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_UnhandledExceptionAction", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetScopeName", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupReceiveContextEnabledAttribute", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateBufferedReceiveProperty", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "mexContractXName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "mexBehaviorType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm22.System.ServiceModel.Description.ServiceMetadataBehavior.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultPersistTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultTrackTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "baseActivityType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Activity.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "correlationQueryBehaviorType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.Description.CorrelationQueryBehavior.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "bufferedReceiveServiceBehaviorType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.__Type__;
      });

    $.Field({Static:false, Public:false}, "workflowExtensions", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost+WorkflowServiceHostExtensions"));

    $.Field({Static:false, Public:false}, "durableInstanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "workflowDefinitionProvider", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"));

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "serviceDefinition", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"));

    $.Field({Static:false, Public:false}, "inferredContracts", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")]));

    $.Field({Static:false, Public:false}, "correlationQueries", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])]));

    $.Field({Static:false, Public:false}, "unhandledExceptionAction", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"));

    $.Field({Static:false, Public:false}, "idleTimeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "idleTimeToUnload", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "workflowServiceHostPerformanceCounters", $asm24.TypeRef("System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$ServiceName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$PersistTimeout$value", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$TrackTimeout$value", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$FilterResumeTimeout$value", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$IsLoadTransactionRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceHost$OverrideSiteName$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function WorkflowServiceHost__cctor () {
      $thisType.defaultPersistTimeout = new $asm07.System.TimeSpan();
      $thisType.defaultTrackTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WorkflowServiceHost__cctor
    );

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "WorkflowExtensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Property({Static:false, Public:true }, "DurableInstancingOptions", $asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions"));

    $.Property({Static:false, Public:true }, "SupportedVersions", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]));

    $.Property({Static:false, Public:false}, "ServiceName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false}, "PersistTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "TrackTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "FilterResumeTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "DurableInstanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Property({Static:false, Public:false}, "IsLoadTransactionRequired", $.Boolean);

    $.Property({Static:false, Public:false}, "UnhandledExceptionAction", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"));

    $.Property({Static:false, Public:false}, "IdleTimeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "IdleTimeToUnload", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "IsConfigurable", $.Boolean);

    $.Property({Static:false, Public:false}, "WorkflowServiceHostPerformanceCounters", $asm24.TypeRef("System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters"));

    $.Property({Static:false, Public:false}, "OverrideSiteName", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowServiceHost+WorkflowServiceHostExtensions */ 

(function WorkflowServiceHostExtensions$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), 
      Name: "System.ServiceModel.Activities.WorkflowServiceHost+WorkflowServiceHostExtensions", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "EnsureChannelCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotSupported", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.Field({Static:true , Public:false}, "SendReceiveExtensionType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.SendReceiveExtension.__Type__;
      });

    $.Field({Static:false, Public:false}, "hasChannelCache", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowServiceHost+CloseAsyncResult */ 

(function CloseAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowServiceHost+CloseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CloseDurableInstanceManager", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CloseHost", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleDurableInstanceManagerEndClose", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndHostClose", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleDurableInstanceManagerEndClose", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleDurableInstanceManagerEndClose", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndHostClose", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndHostClose", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "host", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ContractValidationHelper */ 

(function ContractValidationHelper$Members () {
  var $, $thisType;














  JSIL.MakeStaticClass("System.ServiceModel.Activities.ContractValidationHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetErrorMessageEndpointName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetErrorMessageEndpointServiceContractName", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetErrorMessageOperationName", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsReceiveParameterContent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsSendParameterContent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), 
          $.String, $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateFault", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.String, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateMessageContent", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), 
          $asm07.TypeRef("System.Type"), $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption"), 
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateParametersContent", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), 
          $asm07.TypeRef("System.Collections.IDictionary"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateReceiveParametersWithReceiveParameters", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.ReceiveParametersContent"), $asm24.TypeRef("System.ServiceModel.Activities.ReceiveParametersContent"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateReceiveWithReceive", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm24.TypeRef("System.ServiceModel.Activities.Receive")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateReceiveWithReceive", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.ReceiveMessageContent"), $asm24.TypeRef("System.ServiceModel.Activities.ReceiveMessageContent"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateSendReplyWithSendReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.SendReply"), $asm24.TypeRef("System.ServiceModel.Activities.SendReply")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ContractInferenceHelper */ 

(function ContractInferenceHelper$Members () {
  var $, $thisType;




































  JSIL.MakeStaticClass("System.ServiceModel.Activities.ContractInferenceHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AddDataContractSerializerFormat", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:true }, "AddFaultDescription", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddInputMessage", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.String, 
          $asm07.TypeRef("System.Type"), $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddInputMessage", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddKnownTypesToOperation", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddKnownTypesToOperation", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddOutputMessage", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.String, 
          $asm07.TypeRef("System.Type"), $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddOutputMessage", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddReceiveToFormatterBehavior", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddSerializerProvider", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddWorkflowOperationBehaviors", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddXmlSerializerFormat", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:true }, "CheckForDisposableParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CheckForDisposableParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CorrectOutMessageForOperation", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateClientCorrelationQueries", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]), [
          $asm24.TypeRef("System.ServiceModel.MessageQuerySet"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $.String, $asm30.TypeRef("System.Xml.Linq.XName"), 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateContractFromOperation", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCorrelationQueryCore", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.CorrelationQuery"), [$asm24.TypeRef("System.ServiceModel.MessageQuerySet"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateOneWayOperationDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), [$asm24.TypeRef("System.ServiceModel.Activities.Send")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateOperationDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateOperationDescriptionCore", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), [$asm24.TypeRef("System.ServiceModel.Activities.Send"), $asm24.TypeRef("System.ServiceModel.Activities.ReceiveReply")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateOutputChannelContractDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateRequestChannelContractDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateServerCorrelationQuery", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.CorrelationQuery"), [
          $asm24.TypeRef("System.ServiceModel.MessageQuerySet"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateTwoWayOperationDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), [$asm24.TypeRef("System.ServiceModel.Activities.Send"), $asm24.TypeRef("System.ServiceModel.Activities.ReceiveReply")])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnableTransactionBehavior", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EnsureTransactionFlowOnContract", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $.String, $.String, 
          $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DataContractFormatAttribute", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.DataContractFormatAttribute"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ExceptionType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_FaultExceptionType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_XmlSerializerFormatAttribute", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.XmlSerializerFormatAttribute"))
    );

    $.ExternalMethod({Static:true , Public:false}, "PostProcessOperation", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ProvideDefaultNamespace", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm30.TypeRef("System.Xml.Linq.XName")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "RemoveReceiveFromFormatterBehavior", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "UpdateIsOneWayFlag", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Receive"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.Field({Static:true , Public:false}, "dataContractFormatAttribute", $asm22.TypeRef("System.ServiceModel.DataContractFormatAttribute"));

    $.Field({Static:true , Public:false}, "xmlSerializerFormatAttribute", $asm22.TypeRef("System.ServiceModel.XmlSerializerFormatAttribute"));

    $.Field({Static:true , Public:false}, "exceptionType", $asm07.TypeRef("System.Type"));

    $.Field({Static:true , Public:false}, "faultExceptionType", $asm07.TypeRef("System.Type"));

    $.Property({Static:true , Public:true }, "DataContractFormatAttribute", $asm22.TypeRef("System.ServiceModel.DataContractFormatAttribute"));

    $.Property({Static:true , Public:true }, "XmlSerializerFormatAttribute", $asm22.TypeRef("System.ServiceModel.XmlSerializerFormatAttribute"));

    $.Property({Static:true , Public:true }, "ExceptionType", $asm07.TypeRef("System.Type"));

    $.Property({Static:true , Public:true }, "FaultExceptionType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.MessageBuilder */ 

(function MessageBuilder$Members () {
  var $, $thisType;















  JSIL.MakeStaticClass("System.ServiceModel.Activities.MessageBuilder", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AddMessagePartDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $asm07.TypeRef("System.Type"), 
          $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddMessagePartDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ClearWrapperNames", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateEmptyMessageDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFaultDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.FaultDescription"), [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm07.TypeRef("System.Type"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFromMessageContract", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection"), $.String, 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateMessageDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection"), $.String, 
          $asm07.TypeRef("System.Type"), $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateMessageDescription", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_MessageContractAttributeType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_XmlReflectionImporter", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Serialization.XmlReflectionImporter"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_XsdDataContractExporter", 
      JSIL.MethodSignature.Return($asm21.TypeRef("System.Runtime.Serialization.XsdDataContractExporter"))
    );

    $.ExternalMethod({Static:true , Public:true }, "IsMessageContract", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetReturnValue", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetWrapperName", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Boolean, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDescription")
        ])
    );

    $.Field({Static:true , Public:false}, "messageContractAttributeType", $asm07.TypeRef("System.Type"));

    $.Field({Static:true , Public:false}, "xsdDataContractExporter", $asm21.TypeRef("System.Runtime.Serialization.XsdDataContractExporter"));

    $.Field({Static:true , Public:false}, "xmlReflectionImporter", $asm2F.TypeRef("System.Xml.Serialization.XmlReflectionImporter"));

    $.Property({Static:true , Public:true }, "MessageContractAttributeType", $asm07.TypeRef("System.Type"));

    $.Property({Static:true , Public:true }, "XsdDataContractExporter", $asm21.TypeRef("System.Runtime.Serialization.XsdDataContractExporter"));

    $.Property({Static:true , Public:true }, "XmlReflectionImporter", $asm2F.TypeRef("System.Xml.Serialization.XmlReflectionImporter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ClientOperationFormatterProvider */ 

(function ClientOperationFormatterProvider$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.ServiceModel.Activities.ClientOperationFormatterProvider", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "get_DummyClientRuntime", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.ClientRuntime"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DummyDispatchRuntime", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFormatterFromRuntime", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"), [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.Field({Static:true , Public:false}, "dummyDispatchRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"));

    $.Property({Static:true , Public:false}, "DummyClientRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientRuntime"));

    $.Property({Static:true , Public:false}, "DummyDispatchRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.CorrelationHandle */ 

(function CorrelationHandle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationRequestContext)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationResponseContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.BookmarkScope)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm35.System.Runtime.DurableInstancing.InstanceKey)) ();
  };






  function CorrelationHandle_get_E2ETraceId () {
    return this.CorrelationHandle$E2ETraceId$value;
  }; 


  function CorrelationHandle_get_RequestContext () {
    return this.CorrelationHandle$RequestContext$value;
  }; 

  function CorrelationHandle_get_ResponseContext () {
    return this.CorrelationHandle$ResponseContext$value;
  }; 

  function CorrelationHandle_get_Scope () {
    return this.CorrelationHandle$Scope$value;
  }; 




  function CorrelationHandle_get_TransientInstanceKey () {
    return this.CorrelationHandle$TransientInstanceKey$value;
  }; 












  function CorrelationHandle_set_E2ETraceId (value) {
    this.CorrelationHandle$E2ETraceId$value = value.MemberwiseClone();
  }; 


  function CorrelationHandle_set_RequestContext (value) {
    this.CorrelationHandle$RequestContext$value = value;
  }; 

  function CorrelationHandle_set_ResponseContext (value) {
    this.CorrelationHandle$ResponseContext$value = value;
  }; 

  function CorrelationHandle_set_Scope (value) {
    this.CorrelationHandle$Scope$value = value;
  }; 




  function CorrelationHandle_set_TransientInstanceKey (value) {
    this.CorrelationHandle$TransientInstanceKey$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Handle"), 
      Name: "System.ServiceModel.Activities.CorrelationHandle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureBookmarkScope", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CallbackContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Context", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"))
    );

    $.Method({Static:false, Public:false}, "get_E2ETraceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      CorrelationHandle_get_E2ETraceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceKey", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.Method({Static:false, Public:false}, "get_RequestContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      CorrelationHandle_get_RequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ResponseContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      CorrelationHandle_get_ResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Scope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope")), 
      CorrelationHandle_get_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializableInstanceKey", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceKey"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScopeHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNoPersistHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.NoPersistHandle"))
    );

    $.Method({Static:false, Public:false}, "get_TransientInstanceKey", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")), 
      CorrelationHandle_get_TransientInstanceKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetAmbientCorrelation", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExplicitCallbackCorrelation", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExplicitContextCorrelation", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExplicitRequestReplyCorrelation", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypedCorrelationHandle", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeBookmarkScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsInitalized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnUninitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CallbackContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Context", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"))
    );

    $.Method({Static:false, Public:false}, "set_E2ETraceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      CorrelationHandle_set_E2ETraceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_InstanceKey", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.Method({Static:false, Public:false}, "set_RequestContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      CorrelationHandle_set_RequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ResponseContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      CorrelationHandle_set_ResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Scope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope")), 
      CorrelationHandle_set_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializableInstanceKey", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceKey"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScopeHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNoPersistHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NoPersistHandle"))
    );

    $.Method({Static:false, Public:false}, "set_TransientInstanceKey", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")), 
      CorrelationHandle_set_TransientInstanceKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "TryAcquireRequestContext", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAcquireResponseContext", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryRegisterRequestContext", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryRegisterResponseContext", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "StaticExecutionPropertyName", $.String);

    $.Field({Static:true , Public:false, ReadOnly:true }, "requestReplyCorrelationInitializerType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.RequestReplyCorrelationInitializer.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackCorrelationInitializerType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.CallbackCorrelationInitializer.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "contextCorrelationInitializerType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.ContextCorrelationInitializer.__Type__;
      });

    $.Field({Static:false, Public:false}, "callbackContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"));

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"));

    $.Field({Static:false, Public:false}, "instanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Field({Static:false, Public:false}, "noPersistHandle", $asm0B.TypeRef("System.Activities.NoPersistHandle"));

    $.Field({Static:false, Public:false}, "bookmarkScopeHandle", $asm0B.TypeRef("System.Activities.BookmarkScopeHandle"));

    $.Field({Static:false, Public:false}, "CorrelationHandle$E2ETraceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationHandle$TransientInstanceKey$value", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationHandle$RequestContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationHandle$ResponseContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationHandle$Scope$value", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNoPersistHandle", $asm0B.TypeRef("System.Activities.NoPersistHandle"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScopeHandle", $asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "E2ETraceId", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "InstanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Property({Static:false, Public:false}, "TransientInstanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Property({Static:false, Public:false}, "SerializableInstanceKey", $asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceKey"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "RequestContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"));

    $.Property({Static:false, Public:false}, "ResponseContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"));

    $.Property({Static:false, Public:false}, "CallbackContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Context", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Scope", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.CorrelationRequestContext */ 

(function CorrelationRequestContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.OperationContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm22.System.ServiceModel.Channels.Message)) ();
  };





  function CorrelationRequestContext_get_CorrelationKeyCalculator () {
    return this.CorrelationRequestContext$CorrelationKeyCalculator$value;
  }; 

  function CorrelationRequestContext_get_Exception () {
    return this.CorrelationRequestContext$Exception$value;
  }; 

  function CorrelationRequestContext_get_OperationContext () {
    return this.CorrelationRequestContext$OperationContext$value;
  }; 

  function CorrelationRequestContext_get_Reply () {
    return this.CorrelationRequestContext$Reply$value;
  }; 



  function CorrelationRequestContext_set_CorrelationKeyCalculator (value) {
    this.CorrelationRequestContext$CorrelationKeyCalculator$value = value;
  }; 

  function CorrelationRequestContext_set_Exception (value) {
    this.CorrelationRequestContext$Exception$value = value;
  }; 

  function CorrelationRequestContext_set_OperationContext (value) {
    this.CorrelationRequestContext$OperationContext$value = value;
  }; 

  function CorrelationRequestContext_set_Reply (value) {
    this.CorrelationRequestContext$Reply$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationRequestContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EnsureAsyncWaitHandle", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CorrelationKeyCalculator", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator")), 
      CorrelationRequestContext_get_CorrelationKeyCalculator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      CorrelationRequestContext_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperationContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      CorrelationRequestContext_get_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Reply", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      CorrelationRequestContext_get_Reply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReceiveAsyncReply", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.OperationContext"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveReply", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.OperationContext"), $asm22.TypeRef("System.ServiceModel.Channels.Message")])
    );

    $.Method({Static:false, Public:true }, "set_CorrelationKeyCalculator", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator")), 
      CorrelationRequestContext_set_CorrelationKeyCalculator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      CorrelationRequestContext_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      CorrelationRequestContext_set_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Reply", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      CorrelationRequestContext_set_Reply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "TryGetReply", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "WaitForReplyAsync", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), $.Object])
    );

    $.Field({Static:false, Public:false}, "receivedReplyEvent", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "exceptionOnReply", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "CorrelationRequestContext$OperationContext$value", $asm22.TypeRef("System.ServiceModel.OperationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationRequestContext$Reply$value", $asm22.TypeRef("System.ServiceModel.Channels.Message"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationRequestContext$Exception$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationRequestContext$CorrelationKeyCalculator$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "OperationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Property({Static:false, Public:true }, "Reply", $asm22.TypeRef("System.ServiceModel.Channels.Message"));

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "CorrelationKeyCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.CorrelationResponseContext */ 

(function CorrelationResponseContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.Channels.MessageVersion)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowOperationContext)) ();
  };



  function CorrelationResponseContext_get_Exception () {
    return this.CorrelationResponseContext$Exception$value;
  }; 

  function CorrelationResponseContext_get_MessageVersion () {
    return this.CorrelationResponseContext$MessageVersion$value;
  }; 

  function CorrelationResponseContext_get_WorkflowOperationContext () {
    return this.CorrelationResponseContext$WorkflowOperationContext$value;
  }; 

  function CorrelationResponseContext_set_Exception (value) {
    this.CorrelationResponseContext$Exception$value = value;
  }; 

  function CorrelationResponseContext_set_MessageVersion (value) {
    this.CorrelationResponseContext$MessageVersion$value = value;
  }; 

  function CorrelationResponseContext_set_WorkflowOperationContext (value) {
    this.CorrelationResponseContext$WorkflowOperationContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationResponseContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      CorrelationResponseContext_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_MessageVersion", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.MessageVersion")), 
      CorrelationResponseContext_get_MessageVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_WorkflowOperationContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext")), 
      CorrelationResponseContext_get_WorkflowOperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      CorrelationResponseContext_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_MessageVersion", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.MessageVersion")), 
      CorrelationResponseContext_set_MessageVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_WorkflowOperationContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext")), 
      CorrelationResponseContext_set_WorkflowOperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationResponseContext$WorkflowOperationContext$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationResponseContext$Exception$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationResponseContext$MessageVersion$value", $asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "WorkflowOperationContext", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"));

    $.Property({Static:false, Public:false}, "Exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:false}, "MessageVersion", $asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.CorrelationScope */ 

(function CorrelationScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };





  function CorrelationScope_get_Body () {
    return this.CorrelationScope$Body$value;
  }; 

  function CorrelationScope_get_CorrelatesWith () {
    return this.CorrelationScope$CorrelatesWith$value;
  }; 

  function CorrelationScope_set_Body (value) {
    this.CorrelationScope$Body$value = value;
  }; 

  function CorrelationScope_set_CorrelatesWith (value) {
    this.CorrelationScope$CorrelatesWith$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.CorrelationScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CorrelationScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      CorrelationScope_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CorrelationScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      CorrelationScope_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeCorrelatesWith", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "declaredHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]));

    $.Field({Static:false, Public:false}, "CorrelationScope$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InitializeCorrelation */ 

(function InitializeCorrelation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm0B.System.Activities.InArgument$b1.Of($asm07.System.String)))) ();
  };




  function InitializeCorrelation_get_Correlation () {
    return this.InitializeCorrelation$Correlation$value;
  }; 

  function InitializeCorrelation_get_CorrelationData () {
    return this.InitializeCorrelation$CorrelationData$value;
  }; 

  function InitializeCorrelation_set_Correlation (value) {
    this.InitializeCorrelation$Correlation$value = value;
  }; 

  function InitializeCorrelation_set_CorrelationData (value) {
    this.InitializeCorrelation$CorrelationData$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.InitializeCorrelation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Correlation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InitializeCorrelation_get_Correlation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationData", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument`1", [$.String])])), 
      InitializeCorrelation_get_CorrelationData
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Correlation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InitializeCorrelation_set_Correlation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument`1", [$.String])])), 
      InitializeCorrelation_set_CorrelationData
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InitializeCorrelation$Correlation$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InitializeCorrelation$CorrelationData$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument`1", [$.String])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Correlation", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CorrelationData", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument`1", [$.String])]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["CorrelationData"]; });

})();

/* interface System.ServiceModel.Activities.IReceiveMessageCallback */ 

JSIL.MakeInterface(
  "System.ServiceModel.Activities.IReceiveMessageCallback", true, [], function ($) {
    $.Method({}, "OnReceiveMessage", new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.OperationContext"), $asm0B.TypeRef("System.Activities.ExecutionProperties")]));
  }, []);

/* interface System.ServiceModel.Activities.ISendMessageCallback */ 

JSIL.MakeInterface(
  "System.ServiceModel.Activities.ISendMessageCallback", true, [], function ($) {
    $.Method({}, "OnSendMessage", JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext")));
  }, []);

/* class System.ServiceModel.Activities.TransactedReceiveScope */ 

(function TransactedReceiveScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Receive)) ();
  };





  function TransactedReceiveScope_get_Body () {
    return this.TransactedReceiveScope$Body$value;
  }; 

  function TransactedReceiveScope_get_Request () {
    return this.TransactedReceiveScope$Request$value;
  }; 






  function TransactedReceiveScope_set_Body (value) {
    this.TransactedReceiveScope$Body$value = value;
  }; 

  function TransactedReceiveScope_set_Request (value) {
    this.TransactedReceiveScope$Request$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.TransactedReceiveScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TransactedReceiveScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Request", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Receive")), 
      TransactedReceiveScope_get_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_TransactionCommitAsyncCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBodyCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnReceiveCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessChildSubtreeConstraints", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TransactedReceiveScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Request", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Receive")), 
      TransactedReceiveScope_set_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "TransactionCommitCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:false, Public:false}, "transactionHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.RuntimeTransactionHandle")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Constant({Static:true , Public:false}, "AbortInstanceOnTransactionFailurePropertyName", $.String, "AbortInstanceOnTransactionFailure");

    $.Constant({Static:true , Public:false}, "RequestPropertyName", $.String, "Request");

    $.Constant({Static:true , Public:false}, "BodyPropertyName", $.String, "Body");

    $.Field({Static:false, Public:false}, "isNested", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:true , Public:false}, "transactionCommitCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "TransactedReceiveScope$Request$value", $asm24.TypeRef("System.ServiceModel.Activities.Receive"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TransactedReceiveScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Request", $asm24.TypeRef("System.ServiceModel.Activities.Receive"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:true , Public:false}, "TransactionCommitAsyncCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.ServiceModel.Activities.TransactedReceiveScope+ObtainType */ 

(function ObtainType$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };





  function ObtainType_get_Input () {
    return this.ObtainType$Input$value;
  }; 

  function ObtainType_set_Input (value) {
    this.ObtainType$Input$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Type")]), 
      Name: "System.ServiceModel.Activities.TransactedReceiveScope+ObtainType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Input", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      ObtainType_get_Input
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Input", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      ObtainType_set_Input
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObtainType$Input$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Input", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.TransactedReceiveScope+NestedChildTransactionScopeActivityAbortInstanceFlagValidator */ 

(function NestedChildTransactionScopeActivityAbortInstanceFlagValidator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };





  function NestedChildTransactionScopeActivityAbortInstanceFlagValidator_get_Child () {
    return this.NestedChildTransactionScopeActivityAbortInstanceFlagValidator$Child$value;
  }; 

  function NestedChildTransactionScopeActivityAbortInstanceFlagValidator_set_Child (value) {
    this.NestedChildTransactionScopeActivityAbortInstanceFlagValidator$Child$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.ServiceModel.Activities.TransactedReceiveScope+NestedChildTransactionScopeActivityAbortInstanceFlagValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Child", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidator_get_Child
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Child", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidator_set_Child
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NestedChildTransactionScopeActivityAbortInstanceFlagValidator$Child$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Child", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.TransactedReceiveScope+NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage */ 

(function NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.String))) ();
  };





  function NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_get_Child () {
    return this.NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$Child$value;
  }; 

  function NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_get_ParentDisplayName () {
    return this.NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$ParentDisplayName$value;
  }; 

  function NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_set_Child (value) {
    this.NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$Child$value = value;
  }; 

  function NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_set_ParentDisplayName (value) {
    this.NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$ParentDisplayName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.String")]), 
      Name: "System.ServiceModel.Activities.TransactedReceiveScope+NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Child", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_get_Child
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ParentDisplayName", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_get_ParentDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Child", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_set_Child
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentDisplayName", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage_set_ParentDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$Child$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NestedChildTransactionScopeActivityAbortInstanceFlagValidatorMessage$ParentDisplayName$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Child", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:true }, "ParentDisplayName", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.TransactedReceiveScope+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.TransactedReceiveScope+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__17_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__17_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.TransactedReceiveData */ 

(function TransactedReceiveData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm27.System.Transactions.Transaction)) ();
  };



  function TransactedReceiveData_get_InitiatingTransaction () {
    return this.TransactedReceiveData$InitiatingTransaction$value;
  }; 


  function TransactedReceiveData_set_InitiatingTransaction (value) {
    this.TransactedReceiveData$InitiatingTransaction$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.TransactedReceiveData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_InitiatingTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      TransactedReceiveData_get_InitiatingTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_TransactedReceiveDataExecutionPropertyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "set_InitiatingTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      TransactedReceiveData_set_InitiatingTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Constant({Static:true , Public:false}, "propertyName", $.String, "System.ServiceModel.Activities.TransactedReceiveDataExecutionPropertyName");

    $.Field({Static:false, Public:false}, "TransactedReceiveData$InitiatingTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:true }, "TransactedReceiveDataExecutionPropertyName", $.String);

    $.Property({Static:false, Public:true }, "InitiatingTransaction", $asm27.TypeRef("System.Transactions.Transaction"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.FromReply */ 

(function FromReply$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.IClientFaultFormatter)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.IClientMessageFormatter)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.OutArgument)) ();
  };






  function FromReply_get_FaultFormatter () {
    return this.FromReply$FaultFormatter$value;
  }; 

  function FromReply_get_Formatter () {
    return this.FromReply$Formatter$value;
  }; 

  function FromReply_get_Message () {
    return this.FromReply$Message$value;
  }; 


  function FromReply_get_Result () {
    return this.FromReply$Result$value;
  }; 

  function FromReply_set_FaultFormatter (value) {
    this.FromReply$FaultFormatter$value = value;
  }; 

  function FromReply_set_Formatter (value) {
    this.FromReply$Formatter$value = value;
  }; 

  function FromReply_set_Message (value) {
    this.FromReply$Message$value = value;
  }; 

  function FromReply_set_Result (value) {
    this.FromReply$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.ServiceModel.Activities.FromReply", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DeserializeFault", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm22.TypeRef("System.ServiceModel.Channels.FaultConverter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_FaultFormatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientFaultFormatter")), 
      FromReply_get_FaultFormatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter")), 
      FromReply_get_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      FromReply_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]))
    );

    $.Method({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument")), 
      FromReply_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FaultFormatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientFaultFormatter")), 
      FromReply_set_FaultFormatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter")), 
      FromReply_set_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      FromReply_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument")), 
      FromReply_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]));

    $.Field({Static:false, Public:false}, "FromReply$Message$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromReply$Formatter$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromReply$FaultFormatter$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientFaultFormatter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromReply$Result$value", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:true }, "Formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"));

    $.Property({Static:false, Public:true }, "FaultFormatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientFaultFormatter"));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.OutArgument"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.FromRequest */ 

(function FromRequest$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.IDispatchMessageFormatter)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InOutArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.NoPersistHandle))) ();
  };





  function FromRequest_get_CloseMessage () {
    return this.FromRequest$CloseMessage$value;
  }; 

  function FromRequest_get_Formatter () {
    return this.FromRequest$Formatter$value;
  }; 

  function FromRequest_get_Message () {
    return this.FromRequest$Message$value;
  }; 

  function FromRequest_get_NoPersistHandle () {
    return this.FromRequest$NoPersistHandle$value;
  }; 


  function FromRequest_set_CloseMessage (value) {
    this.FromRequest$CloseMessage$value = value;
  }; 

  function FromRequest_set_Formatter (value) {
    this.FromRequest$Formatter$value = value;
  }; 

  function FromRequest_set_Message (value) {
    this.FromRequest$Message$value = value;
  }; 

  function FromRequest_set_NoPersistHandle (value) {
    this.FromRequest$NoPersistHandle$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.FromRequest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:false}, "get_CloseMessage", 
      JSIL.MethodSignature.Return($.Boolean), 
      FromRequest_get_CloseMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter")), 
      FromRequest_get_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InOutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      FromRequest_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NoPersistHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")])), 
      FromRequest_get_NoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]))
    );

    $.Method({Static:false, Public:false}, "set_CloseMessage", 
      JSIL.MethodSignature.Action($.Boolean), 
      FromRequest_set_CloseMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter")), 
      FromRequest_set_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InOutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      FromRequest_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NoPersistHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")])), 
      FromRequest_set_NoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "UseNoPersistHandle", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]));

    $.Field({Static:false, Public:false}, "FromRequest$Message$value", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromRequest$Formatter$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromRequest$NoPersistHandle$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FromRequest$CloseMessage$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:true }, "Formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.OutArgument")]));

    $.Property({Static:false, Public:true }, "NoPersistHandle", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Property({Static:false, Public:false}, "CloseMessage", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ToReply */ 

(function ToReply$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.OutArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };





  function ToReply_get_CorrelatesWith () {
    return this.ToReply$CorrelatesWith$value;
  }; 



  function ToReply_get_IncludeExceptionDetailInFaults () {
    return this.ToReply$IncludeExceptionDetailInFaults$value;
  }; 

  function ToReply_get_Message () {
    return this.ToReply$Message$value;
  }; 


  function ToReply_get_Result () {
    return this.ToReply$Result$value;
  }; 

  function ToReply_set_CorrelatesWith (value) {
    this.ToReply$CorrelatesWith$value = value;
  }; 



  function ToReply_set_IncludeExceptionDetailInFaults (value) {
    this.ToReply$IncludeExceptionDetailInFaults$value = value;
  }; 

  function ToReply_set_Message (value) {
    this.ToReply$Message$value = value;
  }; 

  function ToReply_set_Result (value) {
    this.ToReply$Result$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.ToReply", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      ToReply_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_FaultFormatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"))
    );

    $.Method({Static:false, Public:true }, "get_IncludeExceptionDetailInFaults", 
      JSIL.MethodSignature.Return($.Boolean), 
      ToReply_get_IncludeExceptionDetailInFaults
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      ToReply_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
    );

    $.Method({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      ToReply_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      ToReply_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_FaultFormatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"))
    );

    $.Method({Static:false, Public:true }, "set_IncludeExceptionDetailInFaults", 
      JSIL.MethodSignature.Action($.Boolean), 
      ToReply_set_IncludeExceptionDetailInFaults
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      ToReply_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      ToReply_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "TryGetMessageVersion", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Channels.MessageVersion")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateFormatters", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"));

    $.Field({Static:false, Public:false}, "faultFormatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Field({Static:false, Public:false}, "ToReply$IncludeExceptionDetailInFaults$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ToReply$Result$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ToReply$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ToReply$Message$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"));

    $.Property({Static:false, Public:true }, "FaultFormatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"));

    $.Property({Static:false, Public:true }, "IncludeExceptionDetailInFaults", $.Boolean);

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.InArgument"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ToRequest */ 

(function ToRequest$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.IClientMessageFormatter)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.OutArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Send)) ();
  };





  function ToRequest_get_Formatter () {
    return this.ToRequest$Formatter$value;
  }; 

  function ToRequest_get_Message () {
    return this.ToRequest$Message$value;
  }; 



  function ToRequest_get_Send () {
    return this.ToRequest$Send$value;
  }; 

  function ToRequest_set_Formatter (value) {
    this.ToRequest$Formatter$value = value;
  }; 

  function ToRequest_set_Message (value) {
    this.ToRequest$Message$value = value;
  }; 

  function ToRequest_set_Send (value) {
    this.ToRequest$Send$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.ServiceModel.Activities.ToRequest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter")), 
      ToRequest_get_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      ToRequest_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_MessageVersion", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
    );

    $.Method({Static:false, Public:true }, "get_Send", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      ToRequest_get_Send
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter")), 
      ToRequest_set_Formatter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      ToRequest_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Send", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      ToRequest_set_Send
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "messageVersion", $asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Field({Static:false, Public:false}, "ToRequest$Send$value", $asm24.TypeRef("System.ServiceModel.Activities.Send"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ToRequest$Formatter$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ToRequest$Message$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Send", $asm24.TypeRef("System.ServiceModel.Activities.Send"));

    $.Property({Static:false, Public:true }, "Formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:false}, "MessageVersion", $asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage */ 

(function InternalReceiveMessage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.OutArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.NoPersistHandle))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };













  function InternalReceiveMessage_get_Action () {
    return this.InternalReceiveMessage$Action$value;
  }; 


  function InternalReceiveMessage_get_CanCreateInstance () {
    return this.InternalReceiveMessage$CanCreateInstance$value;
  }; 


  function InternalReceiveMessage_get_CorrelatesWith () {
    return this.InternalReceiveMessage$CorrelatesWith$value;
  }; 


  function InternalReceiveMessage_get_IsOneWay () {
    return this.InternalReceiveMessage$IsOneWay$value;
  }; 

  function InternalReceiveMessage_get_IsReceiveReply () {
    return this.InternalReceiveMessage$IsReceiveReply$value;
  }; 

  function InternalReceiveMessage_get_Message () {
    return this.InternalReceiveMessage$Message$value;
  }; 

  function InternalReceiveMessage_get_NoPersistHandle () {
    return this.InternalReceiveMessage$NoPersistHandle$value;
  }; 


  function InternalReceiveMessage_get_OperationName () {
    return this.InternalReceiveMessage$OperationName$value;
  }; 

  function InternalReceiveMessage_get_OwnerDisplayName () {
    return this.InternalReceiveMessage$OwnerDisplayName$value;
  }; 

  function InternalReceiveMessage_get_ServiceContractName () {
    return this.InternalReceiveMessage$ServiceContractName$value;
  }; 













  function InternalReceiveMessage_set_Action (value) {
    this.InternalReceiveMessage$Action$value = value;
  }; 

  function InternalReceiveMessage_set_CanCreateInstance (value) {
    this.InternalReceiveMessage$CanCreateInstance$value = value;
  }; 

  function InternalReceiveMessage_set_CorrelatesWith (value) {
    this.InternalReceiveMessage$CorrelatesWith$value = value;
  }; 

  function InternalReceiveMessage_set_IsOneWay (value) {
    this.InternalReceiveMessage$IsOneWay$value = value;
  }; 

  function InternalReceiveMessage_set_IsReceiveReply (value) {
    this.InternalReceiveMessage$IsReceiveReply$value = value;
  }; 

  function InternalReceiveMessage_set_Message (value) {
    this.InternalReceiveMessage$Message$value = value;
  }; 

  function InternalReceiveMessage_set_NoPersistHandle (value) {
    this.InternalReceiveMessage$NoPersistHandle$value = value;
  }; 

  function InternalReceiveMessage_set_OperationName (value) {
    this.InternalReceiveMessage$OperationName$value = value;
  }; 

  function InternalReceiveMessage_set_OwnerDisplayName (value) {
    this.InternalReceiveMessage$OwnerDisplayName$value = value;
  }; 

  function InternalReceiveMessage_set_ServiceContractName (value) {
    this.InternalReceiveMessage$ServiceContractName$value = value;
  }; 








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ClientScheduleOnReceivedMessage", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClientScheduleOnReceiveMessageCallback", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClientScheduleOnReceiveMessageCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteUsingExtension", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.SendReceiveExtension"), $asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalizeReceiveMessageCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalizeScheduleOnReceivedMessage", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      InternalReceiveMessage_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_AdditionalData", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.ServiceDescriptionData"))
    );

    $.Method({Static:false, Public:true }, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalReceiveMessage_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InternalReceiveMessage_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.Method({Static:false, Public:false}, "get_IsOneWay", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalReceiveMessage_get_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsReceiveReply", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalReceiveMessage_get_IsReceiveReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalReceiveMessage_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NoPersistHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")])), 
      InternalReceiveMessage_get_NoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_OperationBookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_OperationName", 
      JSIL.MethodSignature.Return($.String), 
      InternalReceiveMessage_get_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String), 
      InternalReceiveMessage_get_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      InternalReceiveMessage_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_TraceCorrelationActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetReceiveSettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ReceiveSettings"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCorrelationHandles", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Channels.MessageProperties"), 
          $asm07.TypeRef("System.Guid")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnMessage", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnReceiveMessageFromExtension", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReceiveMessageTrace", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessReceiveMessageTrace", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RequireContextCallback", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetTrace", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetTrace", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ServerScheduleOnReceivedMessage", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      InternalReceiveMessage_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalReceiveMessage_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InternalReceiveMessage_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsOneWay", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalReceiveMessage_set_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsReceiveReply", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalReceiveMessage_set_IsReceiveReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalReceiveMessage_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NoPersistHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")])), 
      InternalReceiveMessage_set_NoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationName", 
      JSIL.MethodSignature.Action($.String), 
      InternalReceiveMessage_set_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String), 
      InternalReceiveMessage_set_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      InternalReceiveMessage_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetupTransaction", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCallbackContextCorrelationInstanceKey", 
      new JSIL.MethodSignature($.Boolean, [
          $asm24.TypeRef("System.ServiceModel.Activities.HostSettings"), $asm22.TypeRef("System.ServiceModel.Channels.MessageProperties"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetContextCorrelationInstanceKey", 
      new JSIL.MethodSignature($.Boolean, [
          $asm24.TypeRef("System.ServiceModel.Activities.HostSettings"), $asm22.TypeRef("System.ServiceModel.Channels.MessageProperties"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCorrelatesWithHandle", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetRequestReplyCorrelationInstanceKey", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Channels.MessageProperties"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateE2ETracingId", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), 
          $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Constant({Static:true , Public:false}, "OperationNamePropertyName", $.String, "OperationName");

    $.Constant({Static:true , Public:false}, "ServiceContractNamePropertyName", $.String, "ServiceContractName");

    $.Constant({Static:true , Public:false}, "WSContextInstanceIdName", $.String, "wsc-instanceId");

    $.Constant({Static:true , Public:false}, "InstanceIdKey", $.String, "instanceId");

    $.Field({Static:true , Public:false}, "runtimeTransactionHandlePropertyName", $.String);

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "onMessageBookmarkCallback", $asm0B.TypeRef("System.Activities.BookmarkCallback"));

    $.Field({Static:false, Public:false}, "additionalData", $asm24.TypeRef("System.ServiceModel.Activities.Description.ServiceDescriptionData"));

    $.Field({Static:false, Public:false}, "operationBookmarkName", $.String);

    $.Field({Static:false, Public:false}, "receiveMessageInstance", $asm0B.TypeRef("System.Activities.Variable`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance")]));

    $.Field({Static:false, Public:false}, "waitForReply", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+WaitForReply"));

    $.Field({Static:false, Public:false}, "onClientReceiveMessageComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "extensionReceiveBookmark", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$Message$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$NoPersistHandle$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$OperationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$IsOneWay$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$IsReceiveReply$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalReceiveMessage$OwnerDisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $.String);

    $.Property({Static:false, Public:true }, "CanCreateInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:true }, "NoPersistHandle", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Property({Static:false, Public:true }, "OperationName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "IsOneWay", $.Boolean);

    $.Property({Static:false, Public:false}, "IsReceiveReply", $.Boolean);

    $.Property({Static:false, Public:false}, "AdditionalData", $asm24.TypeRef("System.ServiceModel.Activities.Description.ServiceDescriptionData"));

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false}, "OperationBookmarkName", $.String);

    $.Property({Static:false, Public:false}, "OwnerDisplayName", $.String);

    $.Property({Static:true , Public:false}, "TraceCorrelationActivityId", $asm07.TypeRef("System.Guid"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance */ 

(function VolatileReceiveMessageInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalReceiveMessage_ReceiveMessageInstanceData)) ();
  };



  function VolatileReceiveMessageInstance_get_Instance () {
    return this.VolatileReceiveMessageInstance$Instance$value;
  }; 

  function VolatileReceiveMessageInstance_set_Instance (value) {
    this.VolatileReceiveMessageInstance$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")), 
      VolatileReceiveMessageInstance_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")), 
      VolatileReceiveMessageInstance_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VolatileReceiveMessageInstance$Instance$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData */ 

(function ReceiveMessageInstanceData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationCallbackContext)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationRequestContext)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationResponseContext)) ();
  };




  function ReceiveMessageInstanceData_get_AmbientActivityId () {
    return this.ReceiveMessageInstanceData$AmbientActivityId$value;
  }; 

  function ReceiveMessageInstanceData_get_CorrelationCallbackContext () {
    return this.ReceiveMessageInstanceData$CorrelationCallbackContext$value;
  }; 

  function ReceiveMessageInstanceData_get_CorrelationContext () {
    return this.ReceiveMessageInstanceData$CorrelationContext$value;
  }; 

  function ReceiveMessageInstanceData_get_CorrelationRequestContext () {
    return this.ReceiveMessageInstanceData$CorrelationRequestContext$value;
  }; 

  function ReceiveMessageInstanceData_get_CorrelationResponseContext () {
    return this.ReceiveMessageInstanceData$CorrelationResponseContext$value;
  }; 




  function ReceiveMessageInstanceData_set_AmbientActivityId (value) {
    this.ReceiveMessageInstanceData$AmbientActivityId$value = value.MemberwiseClone();
  }; 

  function ReceiveMessageInstanceData_set_CorrelationCallbackContext (value) {
    this.ReceiveMessageInstanceData$CorrelationCallbackContext$value = value;
  }; 

  function ReceiveMessageInstanceData_set_CorrelationContext (value) {
    this.ReceiveMessageInstanceData$CorrelationContext$value = value;
  }; 

  function ReceiveMessageInstanceData_set_CorrelationRequestContext (value) {
    this.ReceiveMessageInstanceData$CorrelationRequestContext$value = value;
  }; 

  function ReceiveMessageInstanceData_set_CorrelationResponseContext (value) {
    this.ReceiveMessageInstanceData$CorrelationResponseContext$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"))
    );

    $.Method({Static:false, Public:true }, "get_AmbientActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      ReceiveMessageInstanceData_get_AmbientActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationCallbackContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext")), 
      ReceiveMessageInstanceData_get_CorrelationCallbackContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext")), 
      ReceiveMessageInstanceData_get_CorrelationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationRequestContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      ReceiveMessageInstanceData_get_CorrelationRequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationResponseContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      ReceiveMessageInstanceData_get_CorrelationResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetAmbientCorrelation", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOperationContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.OperationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "InitializeContextAndCallbackContext", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_AmbientActivityId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      ReceiveMessageInstanceData_set_AmbientActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationCallbackContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext")), 
      ReceiveMessageInstanceData_set_CorrelationCallbackContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext")), 
      ReceiveMessageInstanceData_set_CorrelationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationRequestContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      ReceiveMessageInstanceData_set_CorrelationRequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationResponseContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      ReceiveMessageInstanceData_set_CorrelationResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAmbientCorrelation", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"))
    );

    $.Field({Static:false, Public:false}, "triedAmbientCorrelation", $.Boolean);

    $.Field({Static:false, Public:false}, "ambientCorrelation", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"));

    $.Field({Static:false, Public:false}, "ReceiveMessageInstanceData$CorrelationRequestContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageInstanceData$CorrelationResponseContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageInstanceData$CorrelationCallbackContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageInstanceData$CorrelationContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageInstanceData$AmbientActivityId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CorrelationRequestContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"));

    $.Property({Static:false, Public:true }, "CorrelationResponseContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"));

    $.Property({Static:false, Public:true }, "CorrelationCallbackContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"));

    $.Property({Static:false, Public:true }, "CorrelationContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"));

    $.Property({Static:false, Public:true }, "AmbientActivityId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageState */ 

(function ReceiveMessageState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm27.System.Transactions.Transaction)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalReceiveMessage_ReceiveMessageInstanceData)) ();
  };



  function ReceiveMessageState_get_CurrentTransaction () {
    return this.ReceiveMessageState$CurrentTransaction$value;
  }; 

  function ReceiveMessageState_get_Instance () {
    return this.ReceiveMessageState$Instance$value;
  }; 

  function ReceiveMessageState_set_CurrentTransaction (value) {
    this.ReceiveMessageState$CurrentTransaction$value = value;
  }; 

  function ReceiveMessageState_set_Instance (value) {
    this.ReceiveMessageState$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CurrentTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      ReceiveMessageState_get_CurrentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")), 
      ReceiveMessageState_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CurrentTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      ReceiveMessageState_set_CurrentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData")), 
      ReceiveMessageState_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageState$CurrentTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageState$Instance$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CurrentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage+WaitForReply */ 

(function WaitForReply$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.InternalReceiveMessage_VolatileReceiveMessageInstance))) ();
  };







  function WaitForReply_get_Instance () {
    return this.WaitForReply$Instance$value;
  }; 

  function WaitForReply_set_Instance (value) {
    this.WaitForReply$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage+WaitForReply", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance")])), 
      WaitForReply_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance")])), 
      WaitForReply_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitForReply$Instance$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+VolatileReceiveMessageInstance")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalReceiveMessage+WaitForReply+WaitForReplyAsyncResult */ 

(function WaitForReplyAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.InternalReceiveMessage+WaitForReply+WaitForReplyAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage+ReceiveMessageInstanceData"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnReceiveReply", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.Field({Static:true , Public:false}, "onReceiveReply", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage */ 

(function InternalSendMessage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.CorrelationQuery)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Endpoint)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0A.System.Uri))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.System.Activities.OutArgument$b1.Of($asm22.System.ServiceModel.Channels.Message))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Send)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.System.Security.Principal.TokenImpersonationLevel)) ();
  };



















  function InternalSendMessage_get_Action () {
    return this.InternalSendMessage$Action$value;
  }; 


  function InternalSendMessage_get_CorrelatesWith () {
    return this.InternalSendMessage$CorrelatesWith$value;
  }; 


  function InternalSendMessage_get_CorrelationQuery () {
    return this.InternalSendMessage$CorrelationQuery$value;
  }; 

  function InternalSendMessage_get_Endpoint () {
    return this.InternalSendMessage$Endpoint$value;
  }; 

  function InternalSendMessage_get_EndpointAddress () {
    return this.InternalSendMessage$EndpointAddress$value;
  }; 

  function InternalSendMessage_get_EndpointConfigurationName () {
    return this.InternalSendMessage$EndpointConfigurationName$value;
  }; 

  function InternalSendMessage_get_IsOneWay () {
    return this.InternalSendMessage$IsOneWay$value;
  }; 

  function InternalSendMessage_get_IsSendReply () {
    return this.InternalSendMessage$IsSendReply$value;
  }; 

  function InternalSendMessage_get_Message () {
    return this.InternalSendMessage$Message$value;
  }; 

  function InternalSendMessage_get_MessageOut () {
    return this.InternalSendMessage$MessageOut$value;
  }; 

  function InternalSendMessage_get_OperationName () {
    return this.InternalSendMessage$OperationName$value;
  }; 

  function InternalSendMessage_get_OwnerDisplayName () {
    return this.InternalSendMessage$OwnerDisplayName$value;
  }; 

  function InternalSendMessage_get_Parent$00 () {
    return this.InternalSendMessage$Parent$value;
  }; 


  function InternalSendMessage_get_ServiceContractName () {
    return this.InternalSendMessage$ServiceContractName$value;
  }; 

  function InternalSendMessage_get_ShouldPersistBeforeSend () {
    return this.InternalSendMessage$ShouldPersistBeforeSend$value;
  }; 

  function InternalSendMessage_get_TokenImpersonationLevel () {
    return this.InternalSendMessage$TokenImpersonationLevel$value;
  }; 

























  function InternalSendMessage_set_Action (value) {
    this.InternalSendMessage$Action$value = value;
  }; 

  function InternalSendMessage_set_CorrelatesWith (value) {
    this.InternalSendMessage$CorrelatesWith$value = value;
  }; 

  function InternalSendMessage_set_CorrelationQuery (value) {
    this.InternalSendMessage$CorrelationQuery$value = value;
  }; 

  function InternalSendMessage_set_Endpoint (value) {
    this.InternalSendMessage$Endpoint$value = value;
  }; 

  function InternalSendMessage_set_EndpointAddress (value) {
    this.InternalSendMessage$EndpointAddress$value = value;
  }; 

  function InternalSendMessage_set_EndpointConfigurationName (value) {
    this.InternalSendMessage$EndpointConfigurationName$value = value;
  }; 

  function InternalSendMessage_set_IsOneWay (value) {
    this.InternalSendMessage$IsOneWay$value = value;
  }; 

  function InternalSendMessage_set_IsSendReply (value) {
    this.InternalSendMessage$IsSendReply$value = value;
  }; 

  function InternalSendMessage_set_Message (value) {
    this.InternalSendMessage$Message$value = value;
  }; 

  function InternalSendMessage_set_MessageOut (value) {
    this.InternalSendMessage$MessageOut$value = value;
  }; 

  function InternalSendMessage_set_OperationName (value) {
    this.InternalSendMessage$OperationName$value = value;
  }; 

  function InternalSendMessage_set_OwnerDisplayName (value) {
    this.InternalSendMessage$OwnerDisplayName$value = value;
  }; 

  function InternalSendMessage_set_Parent$01 (value) {
    this.InternalSendMessage$Parent$value = value;
  }; 

  function InternalSendMessage_set_ServiceContractName (value) {
    this.InternalSendMessage$ServiceContractName$value = value;
  }; 

  function InternalSendMessage_set_ShouldPersistBeforeSend (value) {
    this.InternalSendMessage$ShouldPersistBeforeSend$value = value;
  }; 

  function InternalSendMessage_set_TokenImpersonationLevel (value) {
    this.InternalSendMessage$TokenImpersonationLevel$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupResources", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteCorrelationCallback", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateEndpointAddress", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.EndpointAddress"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateEndpointAddressFromCallback", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.EndpointAddress"), [$asm22.TypeRef("System.ServiceModel.EndpointAddress")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateServiceEndpoint", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureCorrelationBehaviorScopeName", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.Description.CorrelationQueryBehavior")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCorrelationQueryBehavior", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureTransactionFlowOnContract", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteClientRequest", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteServerResponse", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteUsingExtension", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.SendReceiveExtension"), $asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalizeSendMessageCore", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      InternalSendMessage_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InternalSendMessage_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.Method({Static:false, Public:true }, "get_CorrelationQuery", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.CorrelationQuery")), 
      InternalSendMessage_get_CorrelationQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Endpoint", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      InternalSendMessage_get_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointAddress", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")])), 
      InternalSendMessage_get_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointConfigurationName", 
      JSIL.MethodSignature.Return($.String), 
      InternalSendMessage_get_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsOneWay", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalSendMessage_get_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsSendReply", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalSendMessage_get_IsSendReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalSendMessage_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_MessageOut", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalSendMessage_get_MessageOut
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperationName", 
      JSIL.MethodSignature.Return($.String), 
      InternalSendMessage_get_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String), 
      InternalSendMessage_get_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Parent", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      InternalSendMessage_get_Parent$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ReplyCorrelationQueries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]))
    );

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      InternalSendMessage_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ShouldPersistBeforeSend", 
      JSIL.MethodSignature.Return($.Boolean), 
      InternalSendMessage_get_ShouldPersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TokenImpersonationLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      InternalSendMessage_get_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_TraceCorrelationActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetCachedEndpointHeaders", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.AddressHeaderCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCachedServiceEndpoint", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetContractDescription", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.ContractDescription"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMessageVersion", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSendMessageInstance", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSettingsForSend", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.SendSettings"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSettingsForSendReply", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendSettings"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCorrelationHandles", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Channels.CorrelationMessageProperty")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCorrelations", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.Message"), [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeEndpoint", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsEndpointSettingsSafeForCache", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChannelCorrelationComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChannelCorrelationCompleteCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChannelFactoryOpened", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChannelFactoryOpenedCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnClientSendComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPersistCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSendFailure", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessSendMessageCompleteTrace", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessSendMessageTrace", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessSendMessageTrace", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendCompleteOnExtension", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendToExtension", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.SendReceiveExtension"), $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
          $asm24.TypeRef("System.ServiceModel.Activities.SendSettings"), $asm07.TypeRef("System.Guid"), 
          $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      InternalSendMessage_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      InternalSendMessage_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelationQuery", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.CorrelationQuery")), 
      InternalSendMessage_set_CorrelationQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Endpoint", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      InternalSendMessage_set_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointAddress", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")])), 
      InternalSendMessage_set_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointConfigurationName", 
      JSIL.MethodSignature.Action($.String), 
      InternalSendMessage_set_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsOneWay", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalSendMessage_set_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsSendReply", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalSendMessage_set_IsSendReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalSendMessage_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_MessageOut", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")])), 
      InternalSendMessage_set_MessageOut
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationName", 
      JSIL.MethodSignature.Action($.String), 
      InternalSendMessage_set_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String), 
      InternalSendMessage_set_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      InternalSendMessage_set_Parent$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      InternalSendMessage_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldPersistBeforeSend", 
      JSIL.MethodSignature.Action($.Boolean), 
      InternalSendMessage_set_ShouldPersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TokenImpersonationLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      InternalSendMessage_set_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetSendMessageInstance", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCorrelatesWithHandle", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetRequestReplyCorrelationInstanceKey", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Channels.CorrelationMessageProperty"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
    );

    $.Field({Static:true , Public:false}, "runtimeTransactionHandlePropertyName", $.String);

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "replyCorrelationQueries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Field({Static:false, Public:false}, "correlationQueries", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Field({Static:false, Public:false}, "messageVersion", $asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"));

    $.Field({Static:false, Public:false}, "cachedContract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Field({Static:false, Public:false}, "cachedServiceEndpoint", $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"));

    $.Field({Static:false, Public:false}, "cachedEndpointHeaderCollection", $asm22.TypeRef("System.ServiceModel.Channels.AddressHeaderCollection"));

    $.Field({Static:false, Public:false}, "cachedFactoryCacheKey", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"));

    $.Field({Static:false, Public:false}, "isConfigSettingsSecure", $.Boolean);

    $.Field({Static:false, Public:false}, "configVerified", $.Boolean);

    $.Field({Static:false, Public:false}, "lastUsedFactoryCacheItem", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]), $asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache")]));

    $.Field({Static:false, Public:false}, "persist", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "channelCorrelationCompletionWaiter", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+WaitOnChannelCorrelation"));

    $.Field({Static:false, Public:false}, "sendMessageInstance", $asm0B.TypeRef("System.Activities.Variable`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]));

    $.Field({Static:false, Public:false}, "noPersistHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Field({Static:false, Public:false}, "extensionSendCompleteBookmark", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "e2eActivityId", $asm0B.TypeRef("System.Activities.Variable`1", [$asm07.TypeRef("System.Guid")]));

    $.Field({Static:false, Public:false}, "openChannelFactory", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+OpenChannelFactory"));

    $.Field({Static:false, Public:false}, "openChannelAndSendMessage", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+OpenChannelAndSendMessage"));

    $.Field({Static:false, Public:false}, "onSendFailure", $asm0B.TypeRef("System.Activities.FaultCallback"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$TokenImpersonationLevel$value", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$Endpoint$value", $asm24.TypeRef("System.ServiceModel.Endpoint"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$EndpointConfigurationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$EndpointAddress$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$OperationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$IsOneWay$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$IsSendReply$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$MessageOut$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$ShouldPersistBeforeSend$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$OwnerDisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$CorrelationQuery$value", $asm24.TypeRef("System.ServiceModel.CorrelationQuery"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$Message$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalSendMessage$Parent$value", $asm24.TypeRef("System.ServiceModel.Activities.Send"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "TokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.Property({Static:false, Public:true }, "Endpoint", $asm24.TypeRef("System.ServiceModel.Endpoint"));

    $.Property({Static:false, Public:true }, "EndpointConfigurationName", $.String);

    $.Property({Static:false, Public:true }, "EndpointAddress", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")]));

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]));

    $.Property({Static:false, Public:true }, "OperationName", $.String);

    $.Property({Static:false, Public:true }, "Action", $.String);

    $.Property({Static:false, Public:true }, "IsOneWay", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "IsSendReply", $.Boolean);

    $.Property({Static:false, Public:false}, "MessageOut", $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:false}, "ShouldPersistBeforeSend", $.Boolean);

    $.Property({Static:false, Public:false}, "OwnerDisplayName", $.String);

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Property({Static:false, Public:true }, "CorrelationQuery", $asm24.TypeRef("System.ServiceModel.CorrelationQuery"));

    $.Property({Static:false, Public:false}, "ReplyCorrelationQueries", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Property({Static:false, Public:false}, "Parent", $asm24.TypeRef("System.ServiceModel.Activities.Send"));

    $.Property({Static:true , Public:false}, "TraceCorrelationActivityId", $asm07.TypeRef("System.Guid"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+OpenChannelFactory */ 

(function OpenChannelFactory$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.InternalSendMessage_VolatileSendMessageInstance))) ();
  };






  function OpenChannelFactory_get_Instance () {
    return this.OpenChannelFactory$Instance$value;
  }; 

  function OpenChannelFactory_set_Instance (value) {
    this.OpenChannelFactory$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+OpenChannelFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      OpenChannelFactory_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      OpenChannelFactory_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OpenChannelFactory$Instance$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+OpenChannelFactory+OpenChannelFactoryAsyncResult */ 

(function OpenChannelFactoryAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+OpenChannelFactory+OpenChannelFactoryAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ChannelFactoryOpenCompletion", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnNewChannelFactoryOpened", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "channelFactoryOpenCompletion", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "ChannelFactoryOpenCompletion", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+OpenChannelAndSendMessage */ 

(function OpenChannelAndSendMessage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.InternalSendMessage_VolatileSendMessageInstance))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalSendMessage)) ();
  };






  function OpenChannelAndSendMessage_get_Instance () {
    return this.OpenChannelAndSendMessage$Instance$value;
  }; 

  function OpenChannelAndSendMessage_get_InternalSendMessage () {
    return this.OpenChannelAndSendMessage$InternalSendMessage$value;
  }; 

  function OpenChannelAndSendMessage_set_Instance (value) {
    this.OpenChannelAndSendMessage$Instance$value = value;
  }; 

  function OpenChannelAndSendMessage_set_InternalSendMessage (value) {
    this.OpenChannelAndSendMessage$InternalSendMessage$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+OpenChannelAndSendMessage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      OpenChannelAndSendMessage_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InternalSendMessage", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage")), 
      OpenChannelAndSendMessage_get_InternalSendMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      OpenChannelAndSendMessage_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InternalSendMessage", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage")), 
      OpenChannelAndSendMessage_set_InternalSendMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OpenChannelAndSendMessage$Instance$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OpenChannelAndSendMessage$InternalSendMessage$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]));

    $.Property({Static:false, Public:true }, "InternalSendMessage", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+OpenChannelAndSendMessage+OpenChannelAndSendMessageAsyncResult */ 

(function OpenChannelAndSendMessageAsyncResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+OpenChannelAndSendMessage+OpenChannelAndSendMessageAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginSendMessage", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnChannelOpened", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnChannelReceiveReplyComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnChannelSendComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceActivityData", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "onChannelOpened", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnChannelOpened", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onChannelSendComplete", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnChannelSendComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onChannelReceiveReplyCompleted", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"));

    $.Field({Static:false, Public:false}, "internalSendMessage", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.Field({Static:false, Public:false}, "channel", $asm22.TypeRef("System.ServiceModel.Channels.IChannel"));

    $.Field({Static:false, Public:false}, "currentTransactionContext", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "ambientActivityId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "dependentClone", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+WaitOnChannelCorrelation */ 

(function WaitOnChannelCorrelation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.InternalSendMessage_VolatileSendMessageInstance))) ();
  };






  function WaitOnChannelCorrelation_get_Instance () {
    return this.WaitOnChannelCorrelation$Instance$value;
  }; 

  function WaitOnChannelCorrelation_set_Instance (value) {
    this.WaitOnChannelCorrelation$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+WaitOnChannelCorrelation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      WaitOnChannelCorrelation_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")])), 
      WaitOnChannelCorrelation_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitOnChannelCorrelation$Instance$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+WaitOnChannelCorrelation+WaitOnChannelCorrelationAsyncResult */ 

(function WaitOnChannelCorrelationAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+WaitOnChannelCorrelation+WaitOnChannelCorrelationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnChannelCorrelationComplete", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "synchronizer", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer */ 

(function CorrelationSynchronizer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.Channels.Message)) ();
  };



  function CorrelationSynchronizer_get_IsChannelWorkComplete () {
    return this.CorrelationSynchronizer$IsChannelWorkComplete$value;
  }; 

  function CorrelationSynchronizer_get_UpdatedMessage () {
    return this.CorrelationSynchronizer$UpdatedMessage$value;
  }; 





  function CorrelationSynchronizer_set_IsChannelWorkComplete (value) {
    this.CorrelationSynchronizer$IsChannelWorkComplete$value = value;
  }; 

  function CorrelationSynchronizer_set_UpdatedMessage (value) {
    this.CorrelationSynchronizer$UpdatedMessage$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_IsChannelWorkComplete", 
      JSIL.MethodSignature.Return($.Boolean), 
      CorrelationSynchronizer_get_IsChannelWorkComplete
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UpdatedMessage", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      CorrelationSynchronizer_get_UpdatedMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "NotifyMessageUpdatedByWorkflow", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "NotifyRequestSetByChannel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "NotifySendComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "NotifyWorkflowCorrelationProcessingComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_IsChannelWorkComplete", 
      JSIL.MethodSignature.Action($.Boolean), 
      CorrelationSynchronizer_set_IsChannelWorkComplete
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_UpdatedMessage", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      CorrelationSynchronizer_set_UpdatedMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetWorkflowNotificationCallback", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Action")])
    );

    $.Field({Static:false, Public:false}, "onRequestSetByChannel", $asm07.TypeRef("System.Action"));

    $.Field({Static:false, Public:false}, "onWorkflowCorrelationProcessingComplete", $asm07.TypeRef("System.Action`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "completion", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer+Completion"));

    $.Field({Static:false, Public:false}, "CorrelationSynchronizer$IsChannelWorkComplete$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationSynchronizer$UpdatedMessage$value", $asm22.TypeRef("System.ServiceModel.Channels.Message"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IsChannelWorkComplete", $.Boolean);

    $.Property({Static:false, Public:true }, "UpdatedMessage", $asm22.TypeRef("System.ServiceModel.Channels.Message"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer+Completion */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer+Completion", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    SendComplete: 1, 
    CorrelationComplete: 2, 
  }
);

/* class System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance */ 

(function SendMessageInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationHandle)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Activities.SendMessageChannelCache)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm22.System.ServiceModel.Channels.IChannel)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationCallbackContext)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationContext)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm07.System.Collections.Generic.ICollection$b1.Of($asm07.System.String))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalSendMessage_CorrelationSynchronizer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm22.System.ServiceModel.EndpointAddress)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm22.System.ServiceModel.OperationContext)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationRequestContext)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm22.System.ServiceModel.Channels.Message)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm24.System.ServiceModel.Activities.CorrelationResponseContext)) ();
  };





  function SendMessageInstance_get_ActivityInstanceId () {
    return this.SendMessageInstance$ActivityInstanceId$value;
  }; 

  function SendMessageInstance_get_AmbientActivityId () {
    return this.SendMessageInstance$AmbientActivityId$value;
  }; 

  function SendMessageInstance_get_AmbientHandle () {
    return this.SendMessageInstance$AmbientHandle$value;
  }; 

  function SendMessageInstance_get_CacheExtension () {
    return this.SendMessageInstance$CacheExtension$value;
  }; 

  function SendMessageInstance_get_ClientSendChannel () {
    return this.SendMessageInstance$ClientSendChannel$value;
  }; 

  function SendMessageInstance_get_ContextBasedCorrelationHandle () {
    return this.SendMessageInstance$ContextBasedCorrelationHandle$value;
  }; 

  function SendMessageInstance_get_CorrelatesWith () {
    return this.SendMessageInstance$CorrelatesWith$value;
  }; 

  function SendMessageInstance_get_CorrelationCallbackContext () {
    return this.SendMessageInstance$CorrelationCallbackContext$value;
  }; 

  function SendMessageInstance_get_CorrelationContext () {
    return this.SendMessageInstance$CorrelationContext$value;
  }; 

  function SendMessageInstance_get_CorrelationKeyCalculator () {
    return this.SendMessageInstance$CorrelationKeyCalculator$value;
  }; 

  function SendMessageInstance_get_CorrelationSendNames () {
    return this.SendMessageInstance$CorrelationSendNames$value;
  }; 

  function SendMessageInstance_get_CorrelationSynchronizer () {
    return this.SendMessageInstance$CorrelationSynchronizer$value;
  }; 

  function SendMessageInstance_get_E2EActivityId () {
    return this.SendMessageInstance$E2EActivityId$value;
  }; 

  function SendMessageInstance_get_EndpointAddress () {
    return this.SendMessageInstance$EndpointAddress$value;
  }; 



  function SendMessageInstance_get_IsCorrelationInitialized () {
    return this.SendMessageInstance$IsCorrelationInitialized$value;
  }; 

  function SendMessageInstance_get_OperationContext () {
    return this.SendMessageInstance$OperationContext$value;
  }; 

  function SendMessageInstance_get_RequestContext () {
    return this.SendMessageInstance$RequestContext$value;
  }; 

  function SendMessageInstance_get_RequestOrReply () {
    return this.SendMessageInstance$RequestOrReply$value;
  }; 

  function SendMessageInstance_get_ResponseContext () {
    return this.SendMessageInstance$ResponseContext$value;
  }; 







  function SendMessageInstance_set_ActivityInstanceId (value) {
    this.SendMessageInstance$ActivityInstanceId$value = value;
  }; 

  function SendMessageInstance_set_AmbientActivityId (value) {
    this.SendMessageInstance$AmbientActivityId$value = value.MemberwiseClone();
  }; 

  function SendMessageInstance_set_AmbientHandle (value) {
    this.SendMessageInstance$AmbientHandle$value = value;
  }; 

  function SendMessageInstance_set_CacheExtension (value) {
    this.SendMessageInstance$CacheExtension$value = value;
  }; 

  function SendMessageInstance_set_ClientSendChannel (value) {
    this.SendMessageInstance$ClientSendChannel$value = value;
  }; 

  function SendMessageInstance_set_ContextBasedCorrelationHandle (value) {
    this.SendMessageInstance$ContextBasedCorrelationHandle$value = value;
  }; 

  function SendMessageInstance_set_CorrelatesWith (value) {
    this.SendMessageInstance$CorrelatesWith$value = value;
  }; 

  function SendMessageInstance_set_CorrelationCallbackContext (value) {
    this.SendMessageInstance$CorrelationCallbackContext$value = value;
  }; 

  function SendMessageInstance_set_CorrelationContext (value) {
    this.SendMessageInstance$CorrelationContext$value = value;
  }; 

  function SendMessageInstance_set_CorrelationKeyCalculator (value) {
    this.SendMessageInstance$CorrelationKeyCalculator$value = value;
  }; 

  function SendMessageInstance_set_CorrelationSendNames (value) {
    this.SendMessageInstance$CorrelationSendNames$value = value;
  }; 

  function SendMessageInstance_set_CorrelationSynchronizer (value) {
    this.SendMessageInstance$CorrelationSynchronizer$value = value;
  }; 

  function SendMessageInstance_set_E2EActivityId (value) {
    this.SendMessageInstance$E2EActivityId$value = value.MemberwiseClone();
  }; 

  function SendMessageInstance_set_EndpointAddress (value) {
    this.SendMessageInstance$EndpointAddress$value = value;
  }; 

  function SendMessageInstance_set_IsCorrelationInitialized (value) {
    this.SendMessageInstance$IsCorrelationInitialized$value = value;
  }; 

  function SendMessageInstance_set_OperationContext (value) {
    this.SendMessageInstance$OperationContext$value = value;
  }; 

  function SendMessageInstance_set_RequestContext (value) {
    this.SendMessageInstance$RequestContext$value = value;
  }; 

  function SendMessageInstance_set_RequestOrReply (value) {
    this.SendMessageInstance$RequestOrReply$value = value;
  }; 

  function SendMessageInstance_set_ResponseContext (value) {
    this.SendMessageInstance$ResponseContext$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"))
    );

    $.Method({Static:false, Public:true }, "get_ActivityInstanceId", 
      JSIL.MethodSignature.Return($.String), 
      SendMessageInstance_get_ActivityInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_AmbientActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      SendMessageInstance_get_AmbientActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_AmbientHandle", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_get_AmbientHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CacheExtension", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache")), 
      SendMessageInstance_get_CacheExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ClientSendChannel", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.IChannel")), 
      SendMessageInstance_get_ClientSendChannel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ContextBasedCorrelationHandle", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_get_ContextBasedCorrelationHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationCallbackContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext")), 
      SendMessageInstance_get_CorrelationCallbackContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext")), 
      SendMessageInstance_get_CorrelationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationKeyCalculator", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator")), 
      SendMessageInstance_get_CorrelationKeyCalculator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationSendNames", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String])), 
      SendMessageInstance_get_CorrelationSendNames
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationSynchronizer", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer")), 
      SendMessageInstance_get_CorrelationSynchronizer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_E2EActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      SendMessageInstance_get_E2EActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointAddress", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.EndpointAddress")), 
      SendMessageInstance_get_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_FactoryCache", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FactoryReference", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference"))
    );

    $.Method({Static:false, Public:true }, "get_IsCorrelationInitialized", 
      JSIL.MethodSignature.Return($.Boolean), 
      SendMessageInstance_get_IsCorrelationInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperationContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      SendMessageInstance_get_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RequestContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      SendMessageInstance_get_RequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RequestOrReply", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      SendMessageInstance_get_RequestOrReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ResponseContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      SendMessageInstance_get_ResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetCompletionException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExplicitRequestReplyCorrelationHandle", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"), [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "PopulateClientChannel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ProcessMessagePropertyCallbacks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterCorrelationBehavior", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Description.CorrelationQueryBehavior"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterNewCacheItem", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]))
    );

    $.Method({Static:false, Public:false}, "set_ActivityInstanceId", 
      JSIL.MethodSignature.Action($.String), 
      SendMessageInstance_set_ActivityInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AmbientActivityId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      SendMessageInstance_set_AmbientActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_AmbientHandle", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_set_AmbientHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CacheExtension", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache")), 
      SendMessageInstance_set_CacheExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ClientSendChannel", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.IChannel")), 
      SendMessageInstance_set_ClientSendChannel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ContextBasedCorrelationHandle", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_set_ContextBasedCorrelationHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")), 
      SendMessageInstance_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelationCallbackContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext")), 
      SendMessageInstance_set_CorrelationCallbackContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelationContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext")), 
      SendMessageInstance_set_CorrelationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationKeyCalculator", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator")), 
      SendMessageInstance_set_CorrelationKeyCalculator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CorrelationSendNames", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String])), 
      SendMessageInstance_set_CorrelationSendNames
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelationSynchronizer", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer")), 
      SendMessageInstance_set_CorrelationSynchronizer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_E2EActivityId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      SendMessageInstance_set_E2EActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointAddress", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.EndpointAddress")), 
      SendMessageInstance_set_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsCorrelationInitialized", 
      JSIL.MethodSignature.Action($.Boolean), 
      SendMessageInstance_set_IsCorrelationInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      SendMessageInstance_set_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_RequestContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext")), 
      SendMessageInstance_set_RequestContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RequestOrReply", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message")), 
      SendMessageInstance_set_RequestOrReply
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ResponseContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext")), 
      SendMessageInstance_set_ResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetupFactoryReference", 
      new JSIL.MethodSignature(null, [
          $asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference"), 
          $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")])
        ])
    );

    $.Field({Static:false, Public:false}, "explicitChannelCorrelationHandle", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"));

    $.Field({Static:false, Public:false}, "sendMessageCallbacks", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.ISendMessageCallback")]));

    $.Field({Static:false, Public:false}, "factoryReference", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference"));

    $.Field({Static:false, Public:false}, "cacheItem", $asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]));

    $.Field({Static:false, Public:false}, "factoryCache", $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "parent", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.Field({Static:false, Public:false}, "isUsingCacheFromExtension", $.Boolean);

    $.Field({Static:false, Public:false}, "clientChannelPool", $asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])]));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelatesWith$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$AmbientHandle$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$ContextBasedCorrelationHandle$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$EndpointAddress$value", $asm22.TypeRef("System.ServiceModel.EndpointAddress"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$ClientSendChannel$value", $asm22.TypeRef("System.ServiceModel.Channels.IChannel"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelationSynchronizer$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$RequestOrReply$value", $asm22.TypeRef("System.ServiceModel.Channels.Message"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$OperationContext$value", $asm22.TypeRef("System.ServiceModel.OperationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$RequestContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CacheExtension$value", $asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$ResponseContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelationKeyCalculator$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelationCallbackContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelationContext$value", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$AmbientActivityId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$CorrelationSendNames$value", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$E2EActivityId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$ActivityInstanceId$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageInstance$IsCorrelationInitialized$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Activity", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"));

    $.Property({Static:false, Public:true }, "AmbientHandle", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"));

    $.Property({Static:false, Public:true }, "ContextBasedCorrelationHandle", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle"));

    $.Property({Static:false, Public:true }, "EndpointAddress", $asm22.TypeRef("System.ServiceModel.EndpointAddress"));

    $.Property({Static:false, Public:true }, "ClientSendChannel", $asm22.TypeRef("System.ServiceModel.Channels.IChannel"));

    $.Property({Static:false, Public:true }, "CorrelationSynchronizer", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+CorrelationSynchronizer"));

    $.Property({Static:false, Public:true }, "RequestOrReply", $asm22.TypeRef("System.ServiceModel.Channels.Message"));

    $.Property({Static:false, Public:true }, "OperationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Property({Static:false, Public:true }, "RequestContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationRequestContext"));

    $.Property({Static:false, Public:true }, "FactoryCache", $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]));

    $.Property({Static:false, Public:true }, "CacheExtension", $asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache"));

    $.Property({Static:false, Public:true }, "FactoryReference", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference"));

    $.Property({Static:false, Public:true }, "ResponseContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationResponseContext"));

    $.Property({Static:false, Public:true }, "CorrelationKeyCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"));

    $.Property({Static:false, Public:true }, "CorrelationCallbackContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationCallbackContext"));

    $.Property({Static:false, Public:true }, "CorrelationContext", $asm24.TypeRef("System.ServiceModel.Activities.CorrelationContext"));

    $.Property({Static:false, Public:true }, "AmbientActivityId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "CorrelationSendNames", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:true }, "E2EActivityId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "ActivityInstanceId", $.String);

    $.Property({Static:false, Public:true }, "IsCorrelationInitialized", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty */ 

(function MessageCorrelationCallbackMessageProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalSendMessage_SendMessageInstance)) ();
  };





  function MessageCorrelationCallbackMessageProperty_get_Instance () {
    return this.MessageCorrelationCallbackMessageProperty$Instance$value;
  }; 




  function MessageCorrelationCallbackMessageProperty_set_Instance (value) {
    this.MessageCorrelationCallbackMessageProperty$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Channels.CorrelationCallbackMessageProperty"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateCopy", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.IMessageProperty"))
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")), 
      MessageCorrelationCallbackMessageProperty_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginFinalizeCorrelation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndFinalizeCorrelation", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.Message"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnFinalizeCorrelation", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.Message"), [$asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")), 
      MessageCorrelationCallbackMessageProperty_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MessageCorrelationCallbackMessageProperty$Instance$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty+FinalizeCorrelationAsyncResult */ 

(function FinalizeCorrelationAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty+FinalizeCorrelationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.Message"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnWorkflowCorrelationProcessingComplete", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.Field({Static:false, Public:false}, "message", $asm22.TypeRef("System.ServiceModel.Channels.Message"));

    $.Field({Static:false, Public:false}, "completion", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty+FinalizeCorrelationAsyncResult+Completion"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty+FinalizeCorrelationAsyncResult+Completion */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.InternalSendMessage+MessageCorrelationCallbackMessageProperty+FinalizeCorrelationAsyncResult+Completion", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    ConstructorComplete: 1, 
    WorkflowCorrelationProcessingComplete: 2, 
  }
);

/* class System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance */ 

(function VolatileSendMessageInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.InternalSendMessage_SendMessageInstance)) ();
  };



  function VolatileSendMessageInstance_get_Instance () {
    return this.VolatileSendMessageInstance$Instance$value;
  }; 

  function VolatileSendMessageInstance_set_Instance (value) {
    this.VolatileSendMessageInstance$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+VolatileSendMessageInstance", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")), 
      VolatileSendMessageInstance_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Instance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance")), 
      VolatileSendMessageInstance_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VolatileSendMessageInstance$Instance$value", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference */ 

(function ChannelFactoryReference$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginOpen", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DisposeChannelPool", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "DisposeCommunicationObject", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.ICommunicationObject"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndOpen", 
      new JSIL.MethodSignature($asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$.Type]), [$asm07.TypeRef("System.IAsyncResult"), $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $.Type])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationQueryBehavior", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.CorrelationQueryBehavior"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NeedsOpen", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnDisposeCommunicationObject", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ReturnChannel", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Channels.IChannel"), $asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "TakeChannel", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.IChannel"), [$asm22.TypeRef("System.ServiceModel.EndpointAddress"), $jsilcore.TypeRef("JSIL.Reference", [$asm25.TypeRef("System.Runtime.Collections.ObjectCacheItem`1", [$asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])])])])
    );

    $.Field({Static:true , Public:false}, "onDisposeCommunicationObject", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "disposeChannelPool", $asm07.TypeRef("System.Action`1", [$asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "factoryKey", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "targetEndpoint", $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"));

    $.Field({Static:false, Public:false}, "channelFactory", $asm22.TypeRef("System.ServiceModel.ChannelFactory"));

    $.Field({Static:false, Public:false}, "channelCache", $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm22.TypeRef("System.ServiceModel.EndpointAddress"), $asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])]));

    $.Field({Static:false, Public:false}, "correlationQueryBehavior", $asm24.TypeRef("System.ServiceModel.Activities.Description.CorrelationQueryBehavior"));

    $.Field({Static:false, Public:false}, "createChannelCacheItem", $asm07.TypeRef("System.Func`1", [$asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")])]));

    $.Field({Static:false, Public:false}, "disposeLock", $.Object);

    $.Property({Static:false, Public:true }, "CorrelationQueryBehavior", $asm24.TypeRef("System.ServiceModel.Activities.Description.CorrelationQueryBehavior"));

    $.Property({Static:false, Public:true }, "NeedsOpen", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference+<>c__DisplayClass9_0 */ 

(function $l$gc__DisplayClass9_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference+<>c__DisplayClass9_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Pool`1", [$asm22.TypeRef("System.ServiceModel.Channels.IChannel")]))
    );

    $.Field({Static:false, Public:true }, "channelCacheSettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey */ 

(function FactoryCacheKey$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Endpoint"), $.String, 
          $.Boolean, $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"), 
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsOperationContractOneWay", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TokenImpersonationLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "endpoint", $asm24.TypeRef("System.ServiceModel.Endpoint"));

    $.Field({Static:false, Public:false}, "isOperationContractOneWay", $.Boolean);

    $.Field({Static:false, Public:false}, "tokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.Field({Static:false, Public:false}, "contract", $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"));

    $.Field({Static:false, Public:false}, "correlationQueries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Field({Static:false, Public:false}, "endpointConfigurationName", $.String);

    $.Property({Static:false, Public:true }, "IsOperationContractOneWay", $.Boolean);

    $.Property({Static:false, Public:true }, "TokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper */ 

(function ContractDescriptionComparerHelper$Members () {
  var $, $thisType;








  JSIL.MakeStaticClass("System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EqualsOrdered", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), 
          $asm07.TypeRef("System.Func`3", [
              "!!0", "!!0", 
              $.Boolean
            ])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "EqualsUnordered", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"]), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "EqualsUnordered", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"]), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"]), 
          $asm07.TypeRef("System.Func`3", [
              "!!0", "!!0", 
              $.Boolean
            ])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsContractDescriptionEquivalent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ContractDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsMessageDescriptionEquivalent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsOperationDescriptionEquivalent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsTransactionBehaviorEquivalent", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__0`1 */ 

(function $l$gc__0$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEqualsUnordered$gb__0_0", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T"), $.GenericParameter("T")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__0`1", [$.GenericParameter("T")]));

    $.Field({Static:true , Public:true }, "$l$g9__0_0", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("T"), $.GenericParameter("T"), 
          $.Boolean
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsContractDescriptionEquivalent$gb__1_0", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsOperationDescriptionEquivalent$gb__4_0", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__1_0", $asm07.TypeRef("System.Func`3", [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Boolean
        ]));

    $.Field({Static:true , Public:true }, "$l$g9__4_0", $asm07.TypeRef("System.Func`3", [
          $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), $asm22.TypeRef("System.ServiceModel.Description.MessageDescription"), 
          $.Boolean
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_0`1 */ 

(function $l$gc__DisplayClass3_0$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_0`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEqualsUnordered$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEqualsUnordered$gb__2", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:true }, "right", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "equals", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("T"), $.GenericParameter("T"), 
          $.Boolean
        ]));

    $.Field({Static:false, Public:true }, "left", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.GenericParameter("T")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_1`1 */ 

(function $l$gc__DisplayClass3_1$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_1`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEqualsUnordered$gb__1", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:true }, "leftItem", $.GenericParameter("T"));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_0`1", [$.GenericParameter("T")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_2`1 */ 

(function $l$gc__DisplayClass3_2$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_2`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lEqualsUnordered$gb__3", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:true }, "rightItem", $.GenericParameter("T"));

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals2", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ContractDescriptionComparerHelper+<>c__DisplayClass3_0`1", [$.GenericParameter("T")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.InternalSendMessage+<>c__DisplayClass121_0 */ 

(function $l$gc__DisplayClass121_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.InternalSendMessage+<>c__DisplayClass121_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lExecuteServerResponse$gb__0", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:true }, "instance", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+SendMessageInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.ReceiveContent */ 

(function ReceiveContent$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.ReceiveContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceive", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceiveReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromReply")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.ReceiveMessageContent"), [$asm0B.TypeRef("System.Activities.OutArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.ReceiveMessageContent"), [$asm0B.TypeRef("System.Activities.OutArgument"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.ReceiveParametersContent"), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultReceiveContent", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:true , Public:false}, "defaultReceiveContent", $.Type);

    $.Property({Static:true , Public:false}, "DefaultReceiveContent", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ReceiveMessageContent */ 

(function ReceiveMessageContent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.OutArgument)) ();
  };








  function ReceiveMessageContent_get_DeclaredMessageType () {
    return this.ReceiveMessageContent$DeclaredMessageType$value;
  }; 


  function ReceiveMessageContent_get_Message () {
    return this.ReceiveMessageContent$Message$value;
  }; 


  function ReceiveMessageContent_set_DeclaredMessageType (value) {
    this.ReceiveMessageContent$DeclaredMessageType$value = value;
  }; 

  function ReceiveMessageContent_set_Message (value) {
    this.ReceiveMessageContent$Message$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"), 
      Name: "System.ServiceModel.Activities.ReceiveMessageContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.OutArgument"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceive", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceiveReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromReply")])])
    );

    $.Method({Static:false, Public:true }, "get_DeclaredMessageType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      ReceiveMessageContent_get_DeclaredMessageType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InternalDeclaredMessageType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument")), 
      ReceiveMessageContent_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Method({Static:false, Public:true }, "set_DeclaredMessageType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      ReceiveMessageContent_set_DeclaredMessageType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument")), 
      ReceiveMessageContent_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeDeclaredMessageType", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:false, Public:false}, "ReceiveMessageContent$Message$value", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveMessageContent$DeclaredMessageType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "DeclaredMessageType", $asm07.TypeRef("System.Type"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalDeclaredMessageType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Message"]; });

})();

/* class System.ServiceModel.Activities.ReceiveParametersContent */ 

(function ReceiveParametersContent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm0B.System.Activities.OutArgument))) ();
  };









  function ReceiveParametersContent_get_Parameters () {
    return this.ReceiveParametersContent$Parameters$value;
  }; 


  function ReceiveParametersContent_set_Parameters (value) {
    this.ReceiveParametersContent$Parameters$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"), 
      Name: "System.ServiceModel.Activities.ReceiveParametersContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceive", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalReceiveReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.FromReply")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ArgumentNames", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ArgumentTypes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.Method({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")])), 
      ReceiveParametersContent_get_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Method({Static:false, Public:false}, "set_Parameters", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")])), 
      ReceiveParametersContent_set_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ShredParameters", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:false, Public:false}, "argumentNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "argumentTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "ReceiveParametersContent$Parameters$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.OutArgument")]));

    $.Property({Static:false, Public:false}, "ArgumentNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Property({Static:false, Public:false}, "ArgumentTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Parameters"]; });

})();

/* class System.ServiceModel.Activities.SendContent */ 

(function SendContent$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SendContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSend", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSendReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToReply")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.SendMessageContent"), [$asm0B.TypeRef("System.Activities.InArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.SendMessageContent"), [$asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.SendParametersContent"), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultSendContent", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsFault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:true , Public:false}, "defaultSendContent", $.Type);

    $.Property({Static:true , Public:false}, "DefaultSendContent", $.Type);

    $.Property({Static:false, Public:false, Virtual:true }, "IsFault", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.SendMessageContent */ 

(function SendMessageContent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };








  function SendMessageContent_get_DeclaredMessageType () {
    return this.SendMessageContent$DeclaredMessageType$value;
  }; 



  function SendMessageContent_get_Message () {
    return this.SendMessageContent$Message$value;
  }; 


  function SendMessageContent_set_DeclaredMessageType (value) {
    this.SendMessageContent$DeclaredMessageType$value = value;
  }; 

  function SendMessageContent_set_Message (value) {
    this.SendMessageContent$Message$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.SendContent"), 
      Name: "System.ServiceModel.Activities.SendMessageContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSend", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSendReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToReply")])])
    );

    $.Method({Static:false, Public:true }, "get_DeclaredMessageType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      SendMessageContent_get_DeclaredMessageType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InternalDeclaredMessageType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsFault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      SendMessageContent_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Method({Static:false, Public:true }, "set_DeclaredMessageType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      SendMessageContent_set_DeclaredMessageType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      SendMessageContent_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeDeclaredMessageType", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:false, Public:false}, "SendMessageContent$Message$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageContent$DeclaredMessageType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "DeclaredMessageType", $asm07.TypeRef("System.Type"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalDeclaredMessageType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsFault", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Message"]; });

})();

/* class System.ServiceModel.Activities.SendParametersContent */ 

(function SendParametersContent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm0B.System.Activities.InArgument))) ();
  };










  function SendParametersContent_get_Parameters () {
    return this.SendParametersContent$Parameters$value;
  }; 


  function SendParametersContent_set_Parameters (value) {
    this.SendParametersContent$Parameters$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.SendContent"), 
      Name: "System.ServiceModel.Activities.SendParametersContent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSend", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToRequest")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ConfigureInternalSendReply", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.ToReply")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ArgumentNames", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ArgumentTypes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsFault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")])), 
      SendParametersContent_get_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InferMessageDescription", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $.Object, 
          $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Method({Static:false, Public:false}, "set_Parameters", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")])), 
      SendParametersContent_set_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ShredParameters", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateContract", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), 
          $.Object, $asm22.TypeRef("System.ServiceModel.Description.MessageDirection")
        ])
    );

    $.Field({Static:false, Public:false}, "argumentNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "argumentTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "SendParametersContent$Parameters$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.InArgument")]));

    $.Property({Static:false, Public:false}, "ArgumentNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Property({Static:false, Public:false}, "ArgumentTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:false, Virtual:true }, "IsFault", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Parameters"]; });

})();

/* class System.ServiceModel.Activities.Receive */ 

(function Receive$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.ReceiveContent)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm24.System.ServiceModel.Activities.SerializerOption)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };







  function Receive_get_Action () {
    return this.Receive$Action$value;
  }; 

  function Receive_get_CanCreateInstance () {
    return this.Receive$CanCreateInstance$value;
  }; 

  function Receive_get_Content () {
    return this.Receive$Content$value;
  }; 


  function Receive_get_CorrelatesWith () {
    return this.Receive$CorrelatesWith$value;
  }; 













  function Receive_get_OperationName () {
    return this.Receive$OperationName$value;
  }; 

  function Receive_get_ProtectionLevel () {
    return this.Receive$ProtectionLevel$value;
  }; 

  function Receive_get_SerializerOption () {
    return this.Receive$SerializerOption$value;
  }; 

  function Receive_get_ServiceContractName () {
    return this.Receive$ServiceContractName$value;
  }; 






  function Receive_set_Action (value) {
    this.Receive$Action$value = value;
  }; 

  function Receive_set_CanCreateInstance (value) {
    this.Receive$CanCreateInstance$value = value;
  }; 

  function Receive_set_Content (value) {
    this.Receive$Content$value = value;
  }; 


  function Receive_set_CorrelatesWith (value) {
    this.Receive$CorrelatesWith$value = value;
  }; 

  function Receive_set_OperationName (value) {
    this.Receive$OperationName$value = value;
  }; 

  function Receive_set_ProtectionLevel (value) {
    this.Receive$ProtectionLevel$value = value;
  }; 

  function Receive_set_SerializerOption (value) {
    this.Receive$SerializerOption$value = value;
  }; 

  function Receive_set_ServiceContractName (value) {
    this.Receive$ServiceContractName$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.ServiceModel.Activities.Receive", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__7_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInternalReceive", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"))
    );

    $.ExternalMethod({Static:true , Public:true }, "FromOperationDescription", 
      new JSIL.MethodSignature($.Type, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      Receive_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      Receive_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent")), 
      Receive_get_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelatesOn", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
    );

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      Receive_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FollowingFaults", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FollowingReplies", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasCorrelatesOn", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasCorrelationInitializers", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasFault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasReply", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalContent", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalKnownTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalReceive", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_KnownTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OperationBookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_OperationName", 
      JSIL.MethodSignature.Return($.String), 
      Receive_get_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ProtectionLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      Receive_get_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SerializerOption", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")), 
      Receive_get_SerializerOption
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      Receive_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultFaultFormatter", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultMessageFormatter", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"), [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HasCorrelationsChanged", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsInvalidContentChangeFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      Receive_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      Receive_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent")), 
      Receive_set_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_CorrelatesOn", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
    );

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      Receive_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationName", 
      JSIL.MethodSignature.Action($.String), 
      Receive_set_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ProtectionLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      Receive_set_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SerializerOption", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")), 
      Receive_set_SerializerOption
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      Receive_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetDefaultFormatters", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetFormatter", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetIsOneWay", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeCorrelatesOn", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "correlatesOn", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"));

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "knownTypes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "followingReplies", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]));

    $.Field({Static:false, Public:false}, "followingFaults", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]));

    $.Field({Static:false, Public:false}, "internalReceive", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"));

    $.Field({Static:false, Public:false}, "requestFormatter", $asm24.TypeRef("System.ServiceModel.Activities.FromRequest"));

    $.Field({Static:false, Public:false}, "Receive$Content$value", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$OperationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$ProtectionLevel$value", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$SerializerOption$value", $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Receive$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CorrelatesOn", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"));

    $.Property({Static:false, Public:true }, "Content", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalContent", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"));

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Property({Static:false, Public:true }, "Action", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CanCreateInstance", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "OperationName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "ProtectionLevel", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "SerializerOption", $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm24.System.ServiceModel.Activities.SerializerOption.DataContractSerializer]; });

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm24.System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "KnownTypes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:false}, "OperationBookmarkName", $.String);

    $.Property({Static:false, Public:false}, "InternalKnownTypes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:false}, "HasCorrelatesOn", $.Boolean);

    $.Property({Static:false, Public:false}, "HasCorrelationInitializers", $.Boolean);

    $.Property({Static:false, Public:false}, "FollowingReplies", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]));

    $.Property({Static:false, Public:false}, "FollowingFaults", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.Activities.SendReply")]));

    $.Property({Static:false, Public:false}, "HasReply", $.Boolean);

    $.Property({Static:false, Public:false}, "HasFault", $.Boolean);

    $.Property({Static:false, Public:false}, "InternalReceive", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class System.ServiceModel.Activities.ReceiveReply */ 

(function ReceiveReply$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.ReceiveContent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Send)) ();
  };






  function ReceiveReply_get_Action () {
    return this.ReceiveReply$Action$value;
  }; 

  function ReceiveReply_get_Content () {
    return this.ReceiveReply$Content$value;
  }; 



  function ReceiveReply_get_Request () {
    return this.ReceiveReply$Request$value;
  }; 


  function ReceiveReply_set_Action (value) {
    this.ReceiveReply$Action$value = value;
  }; 

  function ReceiveReply_set_Content (value) {
    this.ReceiveReply$Content$value = value;
  }; 

  function ReceiveReply_set_Request (value) {
    this.ReceiveReply$Request$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.ServiceModel.Activities.ReceiveReply", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__3_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInternalReceive", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      ReceiveReply_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent")), 
      ReceiveReply_get_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalContent", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
    );

    $.Method({Static:false, Public:true }, "get_Request", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      ReceiveReply_get_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetReplyHandleFromSend", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      ReceiveReply_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent")), 
      ReceiveReply_set_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Request", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Send")), 
      ReceiveReply_set_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "responseFormatter", $asm24.TypeRef("System.ServiceModel.Activities.FromReply"));

    $.Field({Static:false, Public:false}, "internalReceive", $asm24.TypeRef("System.ServiceModel.Activities.InternalReceiveMessage"));

    $.Field({Static:false, Public:false}, "ReceiveReply$Content$value", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveReply$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveReply$Request$value", $asm24.TypeRef("System.ServiceModel.Activities.Send"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Content", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalContent", $asm24.TypeRef("System.ServiceModel.Activities.ReceiveContent"));

    $.Property({Static:false, Public:true }, "Action", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Request", $asm24.TypeRef("System.ServiceModel.Activities.Send"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class System.ServiceModel.Activities.Send */ 

(function Send$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.SendContent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Endpoint)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0A.System.Uri))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm22.System.ServiceModel.Description.OperationDescription)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm24.System.ServiceModel.Activities.SerializerOption)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm07.System.Security.Principal.TokenImpersonationLevel)) ();
  };






  function Send_get_Action () {
    return this.Send$Action$value;
  }; 


  function Send_get_Content () {
    return this.Send$Content$value;
  }; 

  function Send_get_CorrelatesWith () {
    return this.Send$CorrelatesWith$value;
  }; 


  function Send_get_Endpoint () {
    return this.Send$Endpoint$value;
  }; 

  function Send_get_EndpointAddress () {
    return this.Send$EndpointAddress$value;
  }; 

  function Send_get_EndpointConfigurationName () {
    return this.Send$EndpointConfigurationName$value;
  }; 



  function Send_get_OperationDescription () {
    return this.Send$OperationDescription$value;
  }; 

  function Send_get_OperationName () {
    return this.Send$OperationName$value;
  }; 

  function Send_get_OperationUsesMessageContract () {
    return this.Send$OperationUsesMessageContract$value;
  }; 

  function Send_get_ProtectionLevel () {
    return this.Send$ProtectionLevel$value;
  }; 

  function Send_get_SerializerOption () {
    return this.Send$SerializerOption$value;
  }; 

  function Send_get_ServiceContractName () {
    return this.Send$ServiceContractName$value;
  }; 

  function Send_get_TokenImpersonationLevel () {
    return this.Send$TokenImpersonationLevel$value;
  }; 




  function Send_set_Action (value) {
    this.Send$Action$value = value;
  }; 

  function Send_set_Content (value) {
    this.Send$Content$value = value;
  }; 

  function Send_set_CorrelatesWith (value) {
    this.Send$CorrelatesWith$value = value;
  }; 

  function Send_set_Endpoint (value) {
    this.Send$Endpoint$value = value;
  }; 

  function Send_set_EndpointAddress (value) {
    this.Send$EndpointAddress$value = value;
  }; 

  function Send_set_EndpointConfigurationName (value) {
    this.Send$EndpointConfigurationName$value = value;
  }; 

  function Send_set_OperationDescription (value) {
    this.Send$OperationDescription$value = value;
  }; 

  function Send_set_OperationName (value) {
    this.Send$OperationName$value = value;
  }; 

  function Send_set_OperationUsesMessageContract (value) {
    this.Send$OperationUsesMessageContract$value = value;
  }; 

  function Send_set_ProtectionLevel (value) {
    this.Send$ProtectionLevel$value = value;
  }; 

  function Send_set_SerializerOption (value) {
    this.Send$SerializerOption$value = value;
  }; 

  function Send_set_ServiceContractName (value) {
    this.Send$ServiceContractName$value = value;
  }; 

  function Send_set_TokenImpersonationLevel (value) {
    this.Send$TokenImpersonationLevel$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.ServiceModel.Activities.Send", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__8_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInternalSend", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      Send_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ChannelCacheEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendContent")), 
      Send_get_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelatesWith", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      Send_get_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.Method({Static:false, Public:true }, "get_Endpoint", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      Send_get_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointAddress", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")])), 
      Send_get_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointConfigurationName", 
      JSIL.MethodSignature.Return($.String), 
      Send_get_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InternalContent", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_KnownTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.Method({Static:false, Public:false}, "get_OperationDescription", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.OperationDescription")), 
      Send_get_OperationDescription
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperationName", 
      JSIL.MethodSignature.Return($.String), 
      Send_get_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OperationUsesMessageContract", 
      JSIL.MethodSignature.Return($.Boolean), 
      Send_get_OperationUsesMessageContract
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ProtectionLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      Send_get_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SerializerOption", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")), 
      Send_get_SerializerOption
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      Send_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TokenImpersonationLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      Send_get_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetMessageVersion", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.MessageVersion"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeChannelCacheEnabledSetting", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeChannelCacheEnabledSetting", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SendMessageChannelCache"))
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      Send_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SendContent")), 
      Send_set_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelatesWith", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      Send_set_CorrelatesWith
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Endpoint", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      Send_set_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointAddress", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")])), 
      Send_set_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointConfigurationName", 
      JSIL.MethodSignature.Action($.String), 
      Send_set_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OperationDescription", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription")), 
      Send_set_OperationDescription
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationName", 
      JSIL.MethodSignature.Action($.String), 
      Send_set_OperationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OperationUsesMessageContract", 
      JSIL.MethodSignature.Action($.Boolean), 
      Send_set_OperationUsesMessageContract
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ProtectionLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      Send_set_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SerializerOption", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SerializerOption")), 
      Send_set_SerializerOption
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      Send_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TokenImpersonationLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      Send_set_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetFormatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetIsOneWay", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetReplyCorrelationQuery", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.CorrelationQuery"))
    );

    $.Field({Static:false, Public:false}, "requestFormatter", $asm24.TypeRef("System.ServiceModel.Activities.ToRequest"));

    $.Field({Static:false, Public:false}, "internalSend", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.Field({Static:false, Public:false}, "knownTypes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "isOneWay", $.Boolean);

    $.Field({Static:false, Public:false}, "lazyFormatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IClientMessageFormatter"));

    $.Field({Static:false, Public:false}, "lazyCorrelationQueries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Field({Static:false, Public:false}, "channelCacheEnabled", $asm07.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "Send$Content$value", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$CorrelatesWith$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$Endpoint$value", $asm24.TypeRef("System.ServiceModel.Endpoint"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$EndpointConfigurationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$EndpointAddress$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$OperationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$ProtectionLevel$value", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$SerializerOption$value", $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$TokenImpersonationLevel$value", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$OperationUsesMessageContract$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Send$OperationDescription$value", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Content", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalContent", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"));

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Property({Static:false, Public:true }, "Action", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CorrelatesWith", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Endpoint", $asm24.TypeRef("System.ServiceModel.Endpoint"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "EndpointConfigurationName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "EndpointAddress", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0A.TypeRef("System.Uri")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "KnownTypes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:true }, "OperationName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "ProtectionLevel", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "SerializerOption", $asm24.TypeRef("System.ServiceModel.Activities.SerializerOption"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm24.System.ServiceModel.Activities.SerializerOption.DataContractSerializer]; });

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm24.System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "TokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm07.System.Security.Principal.TokenImpersonationLevel.Identification]; });

    $.Property({Static:false, Public:false}, "ChannelCacheEnabled", $.Boolean);

    $.Property({Static:false, Public:false}, "OperationUsesMessageContract", $.Boolean);

    $.Property({Static:false, Public:false}, "OperationDescription", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class System.ServiceModel.Activities.SendReply */ 

(function SendReply$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.SendContent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Receive)) ();
  };








  function SendReply_get_Action () {
    return this.SendReply$Action$value;
  }; 

  function SendReply_get_Content () {
    return this.SendReply$Content$value;
  }; 



  function SendReply_get_PersistBeforeSend () {
    return this.SendReply$PersistBeforeSend$value;
  }; 

  function SendReply_get_Request () {
    return this.SendReply$Request$value;
  }; 


  function SendReply_set_Action (value) {
    this.SendReply$Action$value = value;
  }; 

  function SendReply_set_Content (value) {
    this.SendReply$Content$value = value;
  }; 

  function SendReply_set_PersistBeforeSend (value) {
    this.SendReply$PersistBeforeSend$value = value;
  }; 

  function SendReply_set_Request (value) {
    this.SendReply$Request$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.ServiceModel.Activities.SendReply", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__3_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "BuildFaultReplies", 
      new JSIL.MethodSignature($.Type, [$asm22.TypeRef("System.ServiceModel.Description.FaultDescription"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInternalSend", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"))
    );

    $.ExternalMethod({Static:true , Public:true }, "FromOperationDescription", 
      new JSIL.MethodSignature($.Type, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])])])
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      SendReply_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendContent")), 
      SendReply_get_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationInitializers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalContent", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
    );

    $.Method({Static:false, Public:true }, "get_PersistBeforeSend", 
      JSIL.MethodSignature.Return($.Boolean), 
      SendReply_get_PersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Request", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Receive")), 
      SendReply_get_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetReplyHandleFromReceive", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      SendReply_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.SendContent")), 
      SendReply_set_Content
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PersistBeforeSend", 
      JSIL.MethodSignature.Action($.Boolean), 
      SendReply_set_PersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Request", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Receive")), 
      SendReply_set_Request
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetFaultFormatter", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetFormatter", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"))
    );

    $.Field({Static:false, Public:false}, "correlationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]));

    $.Field({Static:false, Public:false}, "responseFormatter", $asm24.TypeRef("System.ServiceModel.Activities.ToReply"));

    $.Field({Static:false, Public:false}, "internalSend", $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage"));

    $.Field({Static:false, Public:false}, "SendReply$Content$value", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendReply$Request$value", $asm24.TypeRef("System.ServiceModel.Activities.Receive"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendReply$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendReply$PersistBeforeSend$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Content", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "InternalContent", $asm24.TypeRef("System.ServiceModel.Activities.SendContent"));

    $.Property({Static:false, Public:true }, "Request", $asm24.TypeRef("System.ServiceModel.Activities.Receive"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Action", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CorrelationInitializers", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "PersistBeforeSend", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class System.ServiceModel.Activities.Constants */ 

(function Constants$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.Activities.Constants", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "CorrelatesWith", $.String, "CorrelatesWith");

    $.Constant({Static:true , Public:true }, "EndpointAddress", $.String, "EndpointAddress");

    $.Constant({Static:true , Public:true }, "Message", $.String, "Message");

    $.Constant({Static:true , Public:true }, "Parameter", $.String, "Parameter");

    $.Constant({Static:true , Public:true }, "RequestMessage", $.String, "RequestMessage");

    $.Constant({Static:true , Public:true }, "Result", $.String, "Result");

    $.Constant({Static:true , Public:true }, "TransactionHandle", $.String, "TransactionHandle");

    $.Constant({Static:true , Public:true }, "NoPersistHandle", $.String, "noPersistHandle");

    $.Field({Static:true , Public:true , ReadOnly:true }, "MessageType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm22.System.ServiceModel.Channels.Message.__Type__;
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "CorrelationHandleType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm24.System.ServiceModel.Activities.CorrelationHandle.__Type__;
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "UriType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0A.System.Uri.__Type__;
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "NoPersistHandleType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.NoPersistHandle.__Type__;
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "EmptyArray", $jsilcore.TypeRef("System.Array", [$.Object]), function ($pi) {
        return JSIL.Array.New($asm07.System.Object, 0);
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "EmptyStringArray", $jsilcore.TypeRef("System.Array", [$.String]), function ($pi) {
        return JSIL.Array.New($asm07.System.String, 0);
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "EmptyTypeArray", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), function ($pi) {
        return JSIL.Array.New($asm07.System.Type, 0);
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.SendMessageChannelCache */ 

(function SendMessageChannelCache$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SendMessageChannelCache", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"), $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"), $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateDefaultExtension", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowUnsafeCaching", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ChannelSettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultExtensionProvider", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FactorySettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFactoryCache", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AllowUnsafeCaching", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ChannelSettings", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FactorySettings", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.ICancelable.Cancel", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm35.TypeRef("System.Runtime.ICancelable"), "Cancel");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "defaultExtensionProvider", $asm07.TypeRef("System.Func`1", [$.Type]), function ($pi) {
        return $asm07.System.Func$b1.Of($thisType).New(null, null, new JSIL.MethodPointerInfo($thisType, "CreateDefaultExtension", JSIL.MethodSignature.Return($.Type), true, false));
      });

    $.Field({Static:false, Public:false}, "channelCacheSettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.Field({Static:false, Public:false}, "factoryCacheSettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.Field({Static:false, Public:false}, "isReadOnly", $.Boolean);

    $.Field({Static:false, Public:false}, "allowUnsafeCaching", $.Boolean);

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "factoryCache", $asm25.TypeRef("System.Runtime.Collections.ObjectCache`2", [$asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+FactoryCacheKey"), $asm24.TypeRef("System.ServiceModel.Activities.InternalSendMessage+ChannelFactoryReference")]));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Property({Static:true , Public:false}, "DefaultExtensionProvider", $asm07.TypeRef("System.Func`1", [$.Type]));

    $.Property({Static:false, Public:true }, "AllowUnsafeCaching", $.Boolean);

    $.Property({Static:false, Public:true }, "ChannelSettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.Property({Static:false, Public:true }, "FactorySettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable"), 
      /* 1 */ $asm35.TypeRef("System.Runtime.ICancelable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ChannelCacheSettings */ 

(function ChannelCacheSettings$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.ChannelCacheSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IdleTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LeaseTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxItemsInCache", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IdleTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_LeaseTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxItemsInCache", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "idleTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "leaseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "maxItemsInCache", $.Int32);

    $.Field({Static:true , Public:false}, "EmptyCacheSettings", $.Type);

    $.Property({Static:false, Public:true }, "IdleTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "LeaseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "MaxItemsInCache", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ChannelCacheDefaults */ 

(function ChannelCacheDefaults$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.Activities.ChannelCacheDefaults", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "DefaultIdleTimeoutString", $.String, "00:02:00");

    $.Field({Static:true , Public:false}, "DefaultIdleTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "DefaultMaxItemsPerCacheString", $.String, "16");

    $.Field({Static:true , Public:false}, "DefaultMaxItemsPerCache", $.Int32);

    $.Constant({Static:true , Public:false}, "DefaultLeaseTimeoutString", $.String, "00:10:00");

    $.Field({Static:true , Public:false}, "DefaultLeaseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "DefaultFactoryLeaseTimeoutString", $.String, "Infinite");

    $.Field({Static:true , Public:false}, "DefaultFactoryLeaseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "DefaultChannelLeaseTimeoutString", $.String, "00:05:00");

    $.Field({Static:true , Public:false}, "DefaultChannelLeaseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "DefaultAllowUnsafeSharing", $.Boolean, false);


    function ChannelCacheDefaults__cctor () {
      $thisType.DefaultIdleTimeout = new $asm07.System.TimeSpan();
      $thisType.DefaultLeaseTimeout = new $asm07.System.TimeSpan();
      $thisType.DefaultFactoryLeaseTimeout = new $asm07.System.TimeSpan();
      $thisType.DefaultChannelLeaseTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ChannelCacheDefaults__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.CorrelationCallbackContext */ 

(function CorrelationCallbackContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm07.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.EndpointAddress10)) ();
  };



  function CorrelationCallbackContext_get_Context () {
    return this.CorrelationCallbackContext$Context$value;
  }; 

  function CorrelationCallbackContext_get_ListenAddress () {
    return this.CorrelationCallbackContext$ListenAddress$value;
  }; 

  function CorrelationCallbackContext_set_Context (value) {
    this.CorrelationCallbackContext$Context$value = value;
  }; 

  function CorrelationCallbackContext_set_ListenAddress (value) {
    this.CorrelationCallbackContext$ListenAddress$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationCallbackContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Context", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])), 
      CorrelationCallbackContext_get_Context
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ListenAddress", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.EndpointAddress10")), 
      CorrelationCallbackContext_get_ListenAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Context", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])), 
      CorrelationCallbackContext_set_Context
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ListenAddress", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.EndpointAddress10")), 
      CorrelationCallbackContext_set_ListenAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationCallbackContext$ListenAddress$value", $asm22.TypeRef("System.ServiceModel.EndpointAddress10"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationCallbackContext$Context$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ListenAddress", $asm22.TypeRef("System.ServiceModel.EndpointAddress10"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "Context", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.CorrelationInitializerCollectionExtensions */ 

(function CorrelationInitializerCollectionExtensions$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.ServiceModel.Activities.CorrelationInitializerCollectionExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "TryGetCallbackCorrelationHandle", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryGetContextCorrelationHandle", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryGetRequestReplyCorrelationHandle", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer")]), $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.ServiceModel.Activities.CorrelationContext */ 

(function CorrelationContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm07.System.String))) ();
  };



  function CorrelationContext_get_Context () {
    return this.CorrelationContext$Context$value;
  }; 

  function CorrelationContext_set_Context (value) {
    this.CorrelationContext$Context$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Context", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])), 
      CorrelationContext_get_Context
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Context", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])), 
      CorrelationContext_set_Context
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationContext$Context$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Context", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.CorrelationExtension */ 

(function CorrelationExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };




  function CorrelationExtension_get_ScopeName () {
    return this.CorrelationExtension$ScopeName$value;
  }; 

  function CorrelationExtension_set_ScopeName (value) {
    this.CorrelationExtension$ScopeName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationExtension", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateKey", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])])
    );

    $.Method({Static:false, Public:true }, "get_ScopeName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationExtension_get_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ScopeName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationExtension_set_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationExtension$ScopeName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ScopeName", $asm30.TypeRef("System.Xml.Linq.XName"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.CorrelationInitializer */ 

(function CorrelationInitializer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm24.System.ServiceModel.Activities.CorrelationHandle))) ();
  };





  function CorrelationInitializer_get_ArgumentName () {
    return this.CorrelationInitializer$ArgumentName$value;
  }; 

  function CorrelationInitializer_get_CorrelationHandle () {
    return this.CorrelationInitializer$CorrelationHandle$value;
  }; 

  function CorrelationInitializer_set_ArgumentName (value) {
    this.CorrelationInitializer$ArgumentName$value = value;
  }; 

  function CorrelationInitializer_set_CorrelationHandle (value) {
    this.CorrelationInitializer$CorrelationHandle$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.CorrelationInitializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneCore", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:false}, "get_ArgumentName", 
      JSIL.MethodSignature.Return($.String), 
      CorrelationInitializer_get_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CorrelationHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      CorrelationInitializer_get_CorrelationHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ArgumentName", 
      JSIL.MethodSignature.Action($.String), 
      CorrelationInitializer_set_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CorrelationHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")])), 
      CorrelationInitializer_set_CorrelationHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationInitializer$CorrelationHandle$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationInitializer$ArgumentName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CorrelationHandle", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm24.TypeRef("System.ServiceModel.Activities.CorrelationHandle")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "ArgumentName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.RequestReplyCorrelationInitializer */ 

(function RequestReplyCorrelationInitializer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"), 
      Name: "System.ServiceModel.Activities.RequestReplyCorrelationInitializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneCore", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.QueryCorrelationInitializer */ 

(function QueryCorrelationInitializer$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"), 
      Name: "System.ServiceModel.Activities.QueryCorrelationInitializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneCore", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageQuerySet", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MessageQuerySet", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.MessageQuerySet"))
    );

    $.Field({Static:false, Public:false}, "messageQuerySet", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"));

    $.Property({Static:false, Public:true }, "MessageQuerySet", $asm24.TypeRef("System.ServiceModel.MessageQuerySet"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["MessageQuerySet"]; });

})();

/* class System.ServiceModel.Activities.CallbackCorrelationInitializer */ 

(function CallbackCorrelationInitializer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"), 
      Name: "System.ServiceModel.Activities.CallbackCorrelationInitializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneCore", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ContextCorrelationInitializer */ 

(function ContextCorrelationInitializer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"), 
      Name: "System.ServiceModel.Activities.ContextCorrelationInitializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneCore", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.CorrelationInitializer"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.NoPersistScope */ 

(function NoPersistScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };





  function NoPersistScope_get_Body () {
    return this.NoPersistScope$Body$value;
  }; 

  function NoPersistScope_set_Body (value) {
    this.NoPersistScope$Body$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.NoPersistScope", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      NoPersistScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      NoPersistScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "noPersistHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Field({Static:false, Public:false}, "NoPersistScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.ServiceModel.Activities.WorkflowCreationContext */ 

(function WorkflowCreationContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function WorkflowCreationContext_get_CreateOnly () {
    return this.WorkflowCreationContext$CreateOnly$value;
  }; 

  function WorkflowCreationContext_get_IsCompletionTransactionRequired () {
    return this.WorkflowCreationContext$IsCompletionTransactionRequired$value;
  }; 






  function WorkflowCreationContext_set_CreateOnly (value) {
    this.WorkflowCreationContext$CreateOnly$value = value;
  }; 

  function WorkflowCreationContext_set_IsCompletionTransactionRequired (value) {
    this.WorkflowCreationContext$IsCompletionTransactionRequired$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowCreationContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CreateOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowCreationContext_get_CreateOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsCompletionTransactionRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowCreationContext_get_IsCompletionTransactionRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_RawWorkflowArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnAbort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginWorkflowCompleted", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.ActivityInstanceState"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndWorkflowCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true }, "set_CreateOnly", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowCreationContext_set_CreateOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsCompletionTransactionRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowCreationContext_set_IsCompletionTransactionRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "workflowArguments", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "WorkflowCreationContext$CreateOnly$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowCreationContext$IsCompletionTransactionRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "WorkflowArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "RawWorkflowArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "CreateOnly", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "IsCompletionTransactionRequired", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.WorkflowGetInstanceContext */ 

(function WorkflowGetInstanceContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize(System.Array.Of($asm07.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.OperationContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowCreationContext)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowHostingEndpoint)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowHostingResponseContext)) ();
  };



  function WorkflowGetInstanceContext_get_CanCreateInstance () {
    return this.WorkflowGetInstanceContext$CanCreateInstance$value;
  }; 

  function WorkflowGetInstanceContext_get_Inputs () {
    return this.WorkflowGetInstanceContext$Inputs$value;
  }; 

  function WorkflowGetInstanceContext_get_OperationContext () {
    return this.WorkflowGetInstanceContext$OperationContext$value;
  }; 

  function WorkflowGetInstanceContext_get_WorkflowCreationContext () {
    return this.WorkflowGetInstanceContext$WorkflowCreationContext$value;
  }; 

  function WorkflowGetInstanceContext_get_WorkflowHostingEndpoint () {
    return this.WorkflowGetInstanceContext$WorkflowHostingEndpoint$value;
  }; 

  function WorkflowGetInstanceContext_get_WorkflowHostingResponseContext () {
    return this.WorkflowGetInstanceContext$WorkflowHostingResponseContext$value;
  }; 

  function WorkflowGetInstanceContext_set_CanCreateInstance (value) {
    this.WorkflowGetInstanceContext$CanCreateInstance$value = value;
  }; 

  function WorkflowGetInstanceContext_set_Inputs (value) {
    this.WorkflowGetInstanceContext$Inputs$value = value;
  }; 

  function WorkflowGetInstanceContext_set_OperationContext (value) {
    this.WorkflowGetInstanceContext$OperationContext$value = value;
  }; 

  function WorkflowGetInstanceContext_set_WorkflowCreationContext (value) {
    this.WorkflowGetInstanceContext$WorkflowCreationContext$value = value;
  }; 

  function WorkflowGetInstanceContext_set_WorkflowHostingEndpoint (value) {
    this.WorkflowGetInstanceContext$WorkflowHostingEndpoint$value = value;
  }; 

  function WorkflowGetInstanceContext_set_WorkflowHostingResponseContext (value) {
    this.WorkflowGetInstanceContext$WorkflowHostingResponseContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowGetInstanceContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowGetInstanceContext_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Inputs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object])), 
      WorkflowGetInstanceContext_get_Inputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperationContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      WorkflowGetInstanceContext_get_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowCreationContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext")), 
      WorkflowGetInstanceContext_get_WorkflowCreationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowHostingEndpoint", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingEndpoint")), 
      WorkflowGetInstanceContext_get_WorkflowHostingEndpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowHostingResponseContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext")), 
      WorkflowGetInstanceContext_get_WorkflowHostingResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowGetInstanceContext_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Inputs", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object])), 
      WorkflowGetInstanceContext_set_Inputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperationContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext")), 
      WorkflowGetInstanceContext_set_OperationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowCreationContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext")), 
      WorkflowGetInstanceContext_set_WorkflowCreationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowHostingEndpoint", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingEndpoint")), 
      WorkflowGetInstanceContext_set_WorkflowHostingEndpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowHostingResponseContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext")), 
      WorkflowGetInstanceContext_set_WorkflowHostingResponseContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$WorkflowHostingEndpoint$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingEndpoint"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$Inputs$value", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$OperationContext$value", $asm22.TypeRef("System.ServiceModel.OperationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$WorkflowCreationContext$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowGetInstanceContext$WorkflowHostingResponseContext$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "WorkflowHostingEndpoint", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingEndpoint"));

    $.Property({Static:false, Public:true }, "CanCreateInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "Inputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true }, "OperationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Property({Static:false, Public:true }, "WorkflowCreationContext", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext"));

    $.Property({Static:false, Public:true }, "WorkflowHostingResponseContext", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowHostingEndpoint */ 

(function WorkflowHostingEndpoint$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
      Name: "System.ServiceModel.Activities.WorkflowHostingEndpoint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $asm22.TypeRef("System.ServiceModel.Channels.Binding"), 
          $asm22.TypeRef("System.ServiceModel.EndpointAddress")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateDispatchFaultException", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.FaultException"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationQueries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGetCreationContext", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGetInstanceId", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$jsilcore.TypeRef("System.Array", [$.Object]), $asm22.TypeRef("System.ServiceModel.OperationContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnResolveBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.Field({Static:false, Public:false}, "correlationQueries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Property({Static:false, Public:true }, "CorrelationQueries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowHostingEndpoint+WorkflowHostingContractBehavior */ 

(function WorkflowHostingContractBehavior$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowHostingEndpoint+WorkflowHostingContractBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientRuntime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IContractBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities.Description");
/* class System.ServiceModel.Activities.Description.WorkflowOperationBehavior */ 

(function WorkflowOperationBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };







  function WorkflowOperationBehavior_get_CanCreateInstance () {
    return this.WorkflowOperationBehavior$CanCreateInstance$value;
  }; 


  function WorkflowOperationBehavior_set_CanCreateInstance (value) {
    this.WorkflowOperationBehavior$CanCreateInstance$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowOperationBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientOperation")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchOperation")])
    );

    $.Method({Static:false, Public:false}, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowOperationBehavior_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnResolveBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.BookmarkScope")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.Method({Static:false, Public:false}, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowOperationBehavior_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "WorkflowOperationBehavior$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "CanCreateInstance", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IOperationBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities.Dispatcher");
/* class System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker */ 

(function ControlOperationInvoker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };






  function ControlOperationInvoker_get_CanCreateInstance () {
    return this.ControlOperationInvoker$CanCreateInstance$value;
  }; 




  function ControlOperationInvoker_get_StaticBookmarkName () {
    return this.ControlOperationInvoker$StaticBookmarkName$value;
  }; 









  function ControlOperationInvoker_set_CanCreateInstance (value) {
    this.ControlOperationInvoker$CanCreateInstance$value = value;
  }; 

  function ControlOperationInvoker_set_StaticBookmarkName (value) {
    this.ControlOperationInvoker$StaticBookmarkName$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker"), 
          $asm22.TypeRef("System.ServiceModel.ServiceHostBase")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AllocateInputs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BufferedReceiveManager", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"))
    );

    $.Method({Static:false, Public:false}, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      ControlOperationInvoker_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceManager", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronous", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OperationName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_StaticBookmarkName", 
      JSIL.MethodSignature.Return($.String), 
      ControlOperationInvoker_get_StaticBookmarkName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceKeys", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.OperationContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Invoke", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Invoke", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InvokeBegin", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InvokeBegin", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InvokeEnd", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), 
          $asm07.TypeRef("System.IAsyncResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginServiceOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndServiceOperation", 
      new JSIL.MethodSignature($.Object, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), 
          $asm07.TypeRef("System.IAsyncResult")
        ])
    );

    $.Method({Static:false, Public:false}, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      ControlOperationInvoker_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StaticBookmarkName", 
      JSIL.MethodSignature.Action($.String), 
      ControlOperationInvoker_set_StaticBookmarkName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.Dispatcher.IManualConcurrencyOperationInvoker.get_OwnsFormatter", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.Dispatcher.IManualConcurrencyOperationInvoker"), "get_OwnsFormatter");

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyObjectArray", $jsilcore.TypeRef("System.Array", [$.Object]), function ($pi) {
        return JSIL.Array.New($asm07.System.Object, 0);
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "operationName", $.String);

    $.Field({Static:false, Public:false, ReadOnly:true }, "isOneWay", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "endpoint", $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "inputParameterCount", $.Int32);

    $.Field({Static:false, Public:false, ReadOnly:true }, "innerInvoker", $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "isControlOperation", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "keyCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "host", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "bufferedReceiveManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "ControlOperationInvoker$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ControlOperationInvoker$StaticBookmarkName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronous", $.Boolean);

    $.Property({Static:false, Public:false}, "CanCreateInstance", $.Boolean);

    $.Property({Static:false, Public:false}, "StaticBookmarkName", $.String);

    $.Property({Static:false, Public:false}, "OperationName", $.String);

    $.Property({Static:false, Public:true }, "BufferedReceiveManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"));

    $.Property({Static:false, Public:true }, "InstanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.ServiceModel.Dispatcher.IManualConcurrencyOperationInvoker.OwnsFormatter", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IManualConcurrencyOperationInvoker"), 
      /* 1 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult */ 

(function ControlOperationAsyncResult$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker"), $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbandonReceiveContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginRunAndGetResponse", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm25.TypeRef("System.Runtime.TimeoutHelper"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BufferReceiveHelper", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFaultException", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.FaultException"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceException")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndRunAndGetResponse", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureInstanceIdAndIdentity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIdentityForControlOperation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowIdentity"), [$jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceIdForControlOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndAbandonReceiveContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndGetInstance", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndOperation", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Process", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldAbandonReceiveContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryCreateRedirectionException", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceLockedException"), $jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Channels.RedirectionException")])])
    );

    $.Field({Static:true , Public:false}, "handleEndGetInstance", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndGetInstance", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndOperation", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndOperation", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndAbandonReceiveContext", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:true , Public:false}, "emptyKeyCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "inputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "updatedIdentity", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"));

    $.Field({Static:false, Public:false}, "instanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Field({Static:false, Public:false}, "additionalKeys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false}, "workflowServiceInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "transaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "receiveContext", $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"));

    $.Field({Static:false, Public:false}, "operationException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "returnValue", $.Object);

    $.Field({Static:false, Public:false}, "operationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Field({Static:false, Public:false}, "invoker", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker"));

    $.Field({Static:false, Public:false}, "notification", $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"));

    $.Field({Static:false, Public:false}, "outputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "getInstanceContext", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult+RunAndGetResponseAsyncResult */ 

(function RunAndGetResponseAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult+RunAndGetResponseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult"), $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult"), $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetResponse", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndGetResponse", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndRun", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndSuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Suspend", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "handleEndRun", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndRun", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndSuspend", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndSuspend", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndGetResponse", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndGetResponse", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "control", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ControlOperationAsyncResult"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "returnValue", $.Object);

    $.Field({Static:false, Public:false}, "outputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ServiceOperationAsyncResult */ 

(function ServiceOperationAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ServiceOperationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), 
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndInvoke", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleEndInvoke", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndInvoke", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "innerInvoker", $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker"));

    $.Field({Static:false, Public:false}, "durableInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "inputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "operationContext", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.Field({Static:false, Public:false}, "returnValue", $.Object);

    $.Field({Static:false, Public:false}, "outputs", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "currentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "notification", $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ServiceOperationAsyncResult+OperationContextScopeHelper */ 

(function OperationContextScopeHelper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker+ServiceOperationAsyncResult+OperationContextScopeHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.OperationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "current", $asm22.TypeRef("System.ServiceModel.OperationContext"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowOperationBehavior+WorkflowOperationInvoker */ 

(function WorkflowOperationInvoker$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.ControlOperationInvoker"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowOperationBehavior+WorkflowOperationInvoker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"), $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowOperationBehavior"), 
          $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AllocateInputs", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetTransactionForInstance", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm22.TypeRef("System.ServiceModel.OperationContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginServiceOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm22.TypeRef("System.ServiceModel.OperationContext"), 
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.IInvokeReceivedNotification"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndServiceOperation", 
      new JSIL.MethodSignature($.Object, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), 
          $asm07.TypeRef("System.IAsyncResult")
        ])
    );

    $.Field({Static:false, Public:false}, "performanceCountersEnabled", $.Boolean);

    $.Field({Static:false, Public:false}, "propagateActivity", $.Boolean);

    $.Field({Static:false, Public:false}, "isHostingEndpoint", $.Boolean);

    $.Field({Static:false, Public:false}, "innerInvoker", $asm22.TypeRef("System.ServiceModel.Dispatcher.IOperationInvoker"));

    $.Field({Static:false, Public:false}, "behavior", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowOperationBehavior"));

    $.Field({Static:false, Public:false}, "isFirstReceiveOfTransactedReceiveScopeTree", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IInstanceTransaction")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowHostingEndpoint+WorkflowHostingContractBehavior+WorkflowHostingOperationBehavior */ 

(function WorkflowHostingOperationBehavior$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowOperationBehavior"), 
      Name: "System.ServiceModel.Activities.WorkflowHostingEndpoint+WorkflowHostingContractBehavior+WorkflowHostingOperationBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnResolveBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.BookmarkScope")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowHostingResponseContext */ 

(function WorkflowHostingResponseContext$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowHostingResponseContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginGetResponse", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndGetResponse", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetResponse", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SendResponse", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.Field({Static:false, Public:false}, "responseWaitHandle", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"));

    $.Field({Static:false, Public:false}, "returnValue", $.Object);

    $.Field({Static:false, Public:false}, "outputs", $jsilcore.TypeRef("System.Array", [$.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowHostingResponseContext+GetResponseAsyncResult */ 

(function GetResponseAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.WorkflowHostingResponseContext+GetResponseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])])])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndWait", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.Field({Static:true , Public:false}, "handleEndWait", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndWait", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowHostingResponseContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.ServiceModel.Activities.OperationIdentifier */ 

(function OperationIdentifier$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.ServiceModel.Activities.OperationIdentifier", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.Field({Static:false, Public:true }, "ContractName", $.String);

    $.Field({Static:false, Public:true }, "ContractNamespace", $.String);

    $.Field({Static:false, Public:true }, "OperationName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.OperationProperty */ 

(function OperationProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm22.System.ServiceModel.Description.OperationDescription)) ();
  };





  function OperationProperty_get_Operation () {
    return this.OperationProperty$Operation$value;
  }; 

  function OperationProperty_set_Operation (value) {
    this.OperationProperty$Operation$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.OperationProperty", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementingReceives", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementingSendRepliesRequests", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]))
    );

    $.Method({Static:false, Public:true }, "get_Operation", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Description.OperationDescription")), 
      OperationProperty_get_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Operation", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription")), 
      OperationProperty_set_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "implementingReceives", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Field({Static:false, Public:false}, "implementingSendRepliesRequests", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Field({Static:false, Public:false}, "OperationProperty$Operation$value", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operation", $asm22.TypeRef("System.ServiceModel.Description.OperationDescription"));

    $.Property({Static:false, Public:true }, "ImplementingReceives", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Property({Static:false, Public:true }, "ImplementingSendRepliesRequests", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowDefinitionProvider */ 

(function WorkflowDefinitionProvider$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowDefinitionProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddDefinition", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultDefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SupportedVersions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDefinitionIdentityMetadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotConfigurable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetDefinitionAndMap", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
        ])
    );

    $.Field({Static:false, Public:false}, "definitionCollection", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]));

    $.Field({Static:false, Public:false}, "defaultWorkflowService", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"));

    $.Field({Static:false, Public:false}, "supportedVersions", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider+WorkflowServiceVersionsCollection"));

    $.Field({Static:false, Public:false}, "wfsh", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Property({Static:false, Public:true }, "SupportedVersions", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]));

    $.Property({Static:false, Public:true }, "DefaultDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowDefinitionProvider+WorkflowServiceVersionsCollection */ 

(function WorkflowServiceVersionsCollection$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowDefinitionProvider+WorkflowServiceVersionsCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowService"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "workflowDefinitionProvider", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowService")]), 
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.WorkflowIdentityKey */ 

(function WorkflowIdentityKey$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };





  function WorkflowIdentityKey_get_Identity () {
    return this.WorkflowIdentityKey$Identity$value;
  }; 


  function WorkflowIdentityKey_set_Identity (value) {
    this.WorkflowIdentityKey$Identity$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.WorkflowIdentityKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.Method({Static:false, Public:true }, "get_Identity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowIdentityKey_get_Identity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Method({Static:false, Public:false}, "set_Identity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowIdentityKey_set_Identity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowIdentityKey$Identity$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Identity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.HostSettings */ 

(function HostSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };



  function HostSettings_get_IncludeExceptionDetailInFaults () {
    return this.HostSettings$IncludeExceptionDetailInFaults$value;
  }; 

  function HostSettings_get_ScopeName () {
    return this.HostSettings$ScopeName$value;
  }; 

  function HostSettings_get_UseNoPersistHandle () {
    return this.HostSettings$UseNoPersistHandle$value;
  }; 

  function HostSettings_set_IncludeExceptionDetailInFaults (value) {
    this.HostSettings$IncludeExceptionDetailInFaults$value = value;
  }; 

  function HostSettings_set_ScopeName (value) {
    this.HostSettings$ScopeName$value = value;
  }; 

  function HostSettings_set_UseNoPersistHandle (value) {
    this.HostSettings$UseNoPersistHandle$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.HostSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_IncludeExceptionDetailInFaults", 
      JSIL.MethodSignature.Return($.Boolean), 
      HostSettings_get_IncludeExceptionDetailInFaults
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ScopeName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      HostSettings_get_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UseNoPersistHandle", 
      JSIL.MethodSignature.Return($.Boolean), 
      HostSettings_get_UseNoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IncludeExceptionDetailInFaults", 
      JSIL.MethodSignature.Action($.Boolean), 
      HostSettings_set_IncludeExceptionDetailInFaults
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ScopeName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      HostSettings_set_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UseNoPersistHandle", 
      JSIL.MethodSignature.Action($.Boolean), 
      HostSettings_set_UseNoPersistHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "HostSettings$IncludeExceptionDetailInFaults$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "HostSettings$UseNoPersistHandle$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "HostSettings$ScopeName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IncludeExceptionDetailInFaults", $.Boolean);

    $.Property({Static:false, Public:true }, "UseNoPersistHandle", $.Boolean);

    $.Property({Static:false, Public:true }, "ScopeName", $asm30.TypeRef("System.Xml.Linq.XName"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.MessageContext */ 

(function MessageContext$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.MessageContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EndToEndTracingId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_EndToEndTracingId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.Message"))
    );

    $.Field({Static:false, Public:false}, "message", $asm22.TypeRef("System.ServiceModel.Channels.Message"));

    $.Field({Static:false, Public:false}, "traceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $asm22.TypeRef("System.ServiceModel.Channels.Message"));

    $.Property({Static:false, Public:true , Virtual:true }, "EndToEndTracingId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.MessagingNoPersistScope */ 

(function MessagingNoPersistScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };






  function MessagingNoPersistScope_get_Body () {
    return this.MessagingNoPersistScope$Body$value;
  }; 

  function MessagingNoPersistScope_set_Body (value) {
    this.MessagingNoPersistScope$Body$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.ServiceModel.Activities.MessagingNoPersistScope", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DisallowPersistence", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      MessagingNoPersistScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      MessagingNoPersistScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "noPersistHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Field({Static:false, Public:false}, "MessagingNoPersistScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.ServiceModel.Activities.ReceiveSettings */ 

(function ReceiveSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function ReceiveSettings_get_Action () {
    return this.ReceiveSettings$Action$value;
  }; 

  function ReceiveSettings_get_CanCreateInstance () {
    return this.ReceiveSettings$CanCreateInstance$value;
  }; 

  function ReceiveSettings_get_OwnerDisplayName () {
    return this.ReceiveSettings$OwnerDisplayName$value;
  }; 

  function ReceiveSettings_set_Action (value) {
    this.ReceiveSettings$Action$value = value;
  }; 

  function ReceiveSettings_set_CanCreateInstance (value) {
    this.ReceiveSettings$CanCreateInstance$value = value;
  }; 

  function ReceiveSettings_set_OwnerDisplayName (value) {
    this.ReceiveSettings$OwnerDisplayName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.ReceiveSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($.String), 
      ReceiveSettings_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CanCreateInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      ReceiveSettings_get_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String), 
      ReceiveSettings_get_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($.String), 
      ReceiveSettings_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CanCreateInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      ReceiveSettings_set_CanCreateInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String), 
      ReceiveSettings_set_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveSettings$Action$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveSettings$CanCreateInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ReceiveSettings$OwnerDisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $.String);

    $.Property({Static:false, Public:true }, "CanCreateInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "OwnerDisplayName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.SendReceiveExtension */ 

(function SendReceiveExtension$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SendReceiveExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HostSettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.HostSettings"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRegisterReceive", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.ReceiveSettings"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), 
          $asm0B.TypeRef("System.Activities.Bookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnUninitializeCorrelation", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterReceive", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.ReceiveSettings"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), 
          $asm0B.TypeRef("System.Activities.Bookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Send", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.MessageContext"), $asm24.TypeRef("System.ServiceModel.Activities.SendSettings"), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm0B.TypeRef("System.Activities.Bookmark")
        ])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "HostSettings", $asm24.TypeRef("System.ServiceModel.Activities.HostSettings"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.SendSettings */ 

(function SendSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Endpoint)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.System.Uri)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Security.Principal.TokenImpersonationLevel)) ();
  };



  function SendSettings_get_Endpoint () {
    return this.SendSettings$Endpoint$value;
  }; 

  function SendSettings_get_EndpointAddress () {
    return this.SendSettings$EndpointAddress$value;
  }; 

  function SendSettings_get_EndpointConfigurationName () {
    return this.SendSettings$EndpointConfigurationName$value;
  }; 

  function SendSettings_get_IsOneWay () {
    return this.SendSettings$IsOneWay$value;
  }; 

  function SendSettings_get_OwnerDisplayName () {
    return this.SendSettings$OwnerDisplayName$value;
  }; 

  function SendSettings_get_ProtectionLevel () {
    return this.SendSettings$ProtectionLevel$value;
  }; 

  function SendSettings_get_RequirePersistBeforeSend () {
    return this.SendSettings$RequirePersistBeforeSend$value;
  }; 

  function SendSettings_get_TokenImpersonationLevel () {
    return this.SendSettings$TokenImpersonationLevel$value;
  }; 

  function SendSettings_set_Endpoint (value) {
    this.SendSettings$Endpoint$value = value;
  }; 

  function SendSettings_set_EndpointAddress (value) {
    this.SendSettings$EndpointAddress$value = value;
  }; 

  function SendSettings_set_EndpointConfigurationName (value) {
    this.SendSettings$EndpointConfigurationName$value = value;
  }; 

  function SendSettings_set_IsOneWay (value) {
    this.SendSettings$IsOneWay$value = value;
  }; 

  function SendSettings_set_OwnerDisplayName (value) {
    this.SendSettings$OwnerDisplayName$value = value;
  }; 

  function SendSettings_set_ProtectionLevel (value) {
    this.SendSettings$ProtectionLevel$value = value;
  }; 

  function SendSettings_set_RequirePersistBeforeSend (value) {
    this.SendSettings$RequirePersistBeforeSend$value = value;
  }; 

  function SendSettings_set_TokenImpersonationLevel (value) {
    this.SendSettings$TokenImpersonationLevel$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SendSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Endpoint", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      SendSettings_get_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointAddress", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri")), 
      SendSettings_get_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndpointConfigurationName", 
      JSIL.MethodSignature.Return($.String), 
      SendSettings_get_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsOneWay", 
      JSIL.MethodSignature.Return($.Boolean), 
      SendSettings_get_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String), 
      SendSettings_get_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ProtectionLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      SendSettings_get_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RequirePersistBeforeSend", 
      JSIL.MethodSignature.Return($.Boolean), 
      SendSettings_get_RequirePersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TokenImpersonationLevel", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      SendSettings_get_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Endpoint", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Endpoint")), 
      SendSettings_set_Endpoint
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointAddress", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Uri")), 
      SendSettings_set_EndpointAddress
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EndpointConfigurationName", 
      JSIL.MethodSignature.Action($.String), 
      SendSettings_set_EndpointConfigurationName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsOneWay", 
      JSIL.MethodSignature.Action($.Boolean), 
      SendSettings_set_IsOneWay
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String), 
      SendSettings_set_OwnerDisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ProtectionLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")])), 
      SendSettings_set_ProtectionLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RequirePersistBeforeSend", 
      JSIL.MethodSignature.Action($.Boolean), 
      SendSettings_set_RequirePersistBeforeSend
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TokenImpersonationLevel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel")), 
      SendSettings_set_TokenImpersonationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$IsOneWay$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$Endpoint$value", $asm24.TypeRef("System.ServiceModel.Endpoint"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$EndpointAddress$value", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$EndpointConfigurationName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$TokenImpersonationLevel$value", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$ProtectionLevel$value", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$OwnerDisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendSettings$RequirePersistBeforeSend$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IsOneWay", $.Boolean);

    $.Property({Static:false, Public:true }, "Endpoint", $asm24.TypeRef("System.ServiceModel.Endpoint"));

    $.Property({Static:false, Public:true }, "EndpointAddress", $asm0A.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "EndpointConfigurationName", $.String);

    $.Property({Static:false, Public:true }, "TokenImpersonationLevel", $asm07.TypeRef("System.Security.Principal.TokenImpersonationLevel"));

    $.Property({Static:false, Public:true }, "ProtectionLevel", $asm07.TypeRef("System.Nullable`1", [$asm0A.TypeRef("System.Net.Security.ProtectionLevel")]));

    $.Property({Static:false, Public:true }, "OwnerDisplayName", $.String);

    $.Property({Static:false, Public:true }, "RequirePersistBeforeSend", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.ServiceOperationFormatterProvider */ 

(function ServiceOperationFormatterProvider$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.ServiceModel.Activities.ServiceOperationFormatterProvider", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "get_DummyDispatchRuntime", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDispatcherFormatterFromRuntime", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"), [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription")])
    );

    $.Field({Static:true , Public:false}, "dummyDispatchRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"));

    $.Property({Static:true , Public:false}, "DummyDispatchRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.SerializableInstanceKey */ 

(function SerializableInstanceKey$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SerializableInstanceKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Value", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Value", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ToInstanceKey", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.Field({Static:false, Public:false}, "value", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "metadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceValue")]));

    $.Property({Static:false, Public:false}, "Value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Metadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm24.TypeRef("System.ServiceModel.Activities.SerializableInstanceValue")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.SerializableInstanceValue */ 

(function SerializableInstanceValue$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SerializableInstanceValue", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Options", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Options", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "ToInstanceValue", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue"))
    );

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "options", $.Int32);

    $.Property({Static:false, Public:false}, "Value", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Options", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.ServiceModel.Activities.SR */ 

(function SR$Members () {
  var $, $thisType;































































































































































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AbortInstanceOnTransactionFailureDoesNotMatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentCannotHaveNullOrVoidType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferedReceiveRequiresReceiveContext", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BusyCountTraceFormatString", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotNestTransactedReceiveScopeWhenAmbientHandleIsSuppressed", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotUpdateLoadedInstance", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConflictingValueName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConnectionStringNameWrong", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ContractNotFoundInAddServiceEndpoint", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CorrelationHandleInUse", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DifferentWorkflowServiceNameNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicatedContract", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateDefinitionIdentity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateInstanceKeyExists", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "EndpointAddressNotSetInEndpoint", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "EndpointIncorrectlySet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "EndpointNotSet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtensionTypeNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtraParameter", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FailedToCreateSecurityToken", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FailedToInitializeRequestReplyCorrelationHandle", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FailedToLoadBindingInControlEndpoint", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FaultTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FirstParameterDoesnotMatchTheReturnValue", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BodyCannotBeNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BufferedReceiveBehaviorMultipleUse", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BufferedReceiveBehaviorUsedWithoutProperty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CacheSettingsLocked", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotCreateMessageFault", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSpecifyBothConnectionStringAndName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUseAddServiceEndpointOverloadForWorkflowServices", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompensableActivityInsideTransactedReceiveScope", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContextMismatchInContextAndCallBackContext", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ContractInferenceValidationForTransactionFlowBehavior", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CorrelatedContextRequiredForAnonymousSend", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CorrelationResponseContextShouldNotBeNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CurrentOperationCannotCreateInstance", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DanglingReceive", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultAbortReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultCreateOnlyReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultSuspendReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultTerminationReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DifferentContractsSameConfigName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DirectoryAborted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DispatchOperationInInvalidState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DuplexContractsNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EmptyCorrelationQueryResults", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ErrorTimeToPersistLessThanZero", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ErrorTimeToUnloadLessThanZero", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExtraReturnValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FailedToGetInstanceIdForControlOperation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FailedToGetWorkflowIdentityForControlOperation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FlowedTransactionDifferentFromAmbient", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HandleFreedInDirectory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceMustNotBeSuspended", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InternalServerError", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidInstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidKey", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidReceiveStateForDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidServiceImplementation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LoadingAborted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MaxPendingMessagesPerChannelMustBeGreaterThanZero", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MessageVersionInformationNotFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MissingBodyInWorkflowService", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MissingDisplayNameInRootActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MustSpecifyConnectionStringOrName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoAdditionalKeysOnInstanceIdLoad", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoRunnableInstances", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NotSpecified", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NullCorrelationHandleInMultipleQueryCorrelation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NullReplyMessageContractMismatch", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OperationFormatterAndFaultFormatterIncorrectlySet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OperationFormatterAndFaultFormatterNotSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PartialTrustPerformanceCounterNotEnabled", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PersistenceProviderRequiredToPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PersistenceTooLateToEnlist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PersistenceViolationNoCreate", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_QueryCorrelationInitializerCannotBeInitialized", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReceiveContentChanged", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReceiveCorrelationInitializiersChanged", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReceiveNotWithinATransactedReceiveScope", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RequestReplyHandleShouldNotBePresentForOneWay", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResponseContextIsNotNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SendReceiveExtensionNotFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SendRepliesHaveSameFaultTypeDifferentAction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ServiceHostExtensionAborted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ServiceHostExtensionImmutable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_StoreViolationNoInstanceBound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TransactionPersistenceTimeout", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TryRegisterRequestContextFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnableToOpenAndRegisterStore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UseInstanceStoreInsteadOfPersistenceProvider", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowCompletionAsyncResultCannotBeNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowControlEndpointDefaultBaseUriNotSupportedInPartialTrust", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowMustBeHosted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowServiceHostCannotAddOrRemoveServiceDefinitionAfterOpen", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeCorrelationRequiresWorkflowServiceHost", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InstanceLockedUnderTransaction", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InstanceSuspended", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidDataFromReceiveBookmarkState", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidDataFromSendBookmarkState", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MessageCannotBeEmpty", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MessageContentCannotHaveMoreThanOneParameter", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MessageHeaderNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MessagePropertyIsNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MessageTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingBindingInEndpoint", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingKnownTypes", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingOperationName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingParameter", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingServiceContractName", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingUriInEndpoint", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MisuseOfMessageContent", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MisuseOfParameterContent", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotSupportMoreThanOneParametersInMessageContract", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NullCorrelationHandleInInitializeCorrelation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnewayContractIsImplementedAsTwoWay", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationDoesNotExistInContract", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationHasSerializerBehavior", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationIsNotImplemented", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationNotAvailable", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationNotFound", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParameterNumberMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParameterPositionMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParameterTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PropertyMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProtectionLevelIsNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProtectionLevelNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryCorrelationInitializerWithEmptyMessageQuerySet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveAndReceiveParametersHaveSameName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveIsInTRSWhenTransactionFlowNotAllowed", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveIsNotInTRS", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveMessageNeedsToPairWithSendMessageForTwoWayContract", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceivePairedWithSendReplyAndSendReplyParameters", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveParametersContentDoesNotSupportMessage", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReceiveReplyRequestCannotBeNull", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RelativeUriRequiresBinding", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RelativeUriRequiresHost", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReplyShouldNotIncludeRequestReplyHandle", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequestMustBeSpecified", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ResultMustBeSpecified", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReturnValueMissing", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SendActivityCorrelationHandleNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SendMessageNeedsToPairWithReceiveMessageForTwoWayContract", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SendParametersContentDoesNotSupportMessage", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SendReplyRequestCannotBeNull", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SendWithUninitializedCorrelatesWith", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ServiceInstanceTerminated", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ServiceInstanceUnloaded", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ServiceMetadataBehaviorNotFoundForServiceMetadataEndpoint", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TargetContractCannotBeOneWayWithTransactionFlow", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutOnOperation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TransactedReceiveScopeMustHaveValidReceive", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TransactedReceiveScopeRequiresReceive", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceiveParametersWithSameNameButDifferentParameterCount", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceiveParametersWithSameNameButDifferentParameterName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceiveParametersWithSameNameButDifferentParameterType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceivesWithSameNameButDifferentAction", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceivesWithSameNameButDifferentIsOneWay", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceivesWithSameNameButDifferentTxProperties", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoReceivesWithSameNameButDifferentValueType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoSendRepliesWithSameNameButDifferentAction", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoSendRepliesWithSameNameButDifferentValueType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoSendReplyParametersWithSameNameButDifferentParameterCount", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoSendReplyParametersWithSameNameButDifferentParameterName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoSendReplyParametersWithSameNameButDifferentParameterType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TwoWayIsImplementedAsOneWay", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnableToDeserializeHttpResponseContent", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnwrappedMessageNotSupported", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateDefinitionNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateMapNotFound", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UriBaseMustBeSpecified", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValueArgumentTypeNotDerivedFromValueType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValueCannotBeNegative", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValueCannotBeNull", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValueTooLarge", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WindowsGroupNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowBehaviorWithNonWorkflowHost", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAborted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceCompleted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceNotFoundInStore", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceTerminated", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnloaded", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUpdateFailed", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowServiceDefinitionIdentityNotMatched", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrapperNotSupportedInMessageContract", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "CurrentOperationCannotCreateInstance", $.String);

    $.Property({Static:true , Public:false}, "InternalServerError", $.String);

    $.Property({Static:true , Public:false}, "DispatchOperationInInvalidState", $.String);

    $.Property({Static:true , Public:false}, "PartialTrustPerformanceCounterNotEnabled", $.String);

    $.Property({Static:true , Public:false}, "InvalidServiceImplementation", $.String);

    $.Property({Static:true , Public:false}, "DefaultAbortReason", $.String);

    $.Property({Static:true , Public:false}, "InstanceMustNotBeSuspended", $.String);

    $.Property({Static:true , Public:false}, "PersistenceProviderRequiredToPersist", $.String);

    $.Property({Static:true , Public:false}, "ErrorTimeToPersistLessThanZero", $.String);

    $.Property({Static:true , Public:false}, "ErrorTimeToUnloadLessThanZero", $.String);

    $.Property({Static:true , Public:false}, "MissingDisplayNameInRootActivity", $.String);

    $.Property({Static:true , Public:false}, "MissingBodyInWorkflowService", $.String);

    $.Property({Static:true , Public:false}, "ContextMismatchInContextAndCallBackContext", $.String);

    $.Property({Static:true , Public:false}, "TransactionPersistenceTimeout", $.String);

    $.Property({Static:true , Public:false}, "PersistenceTooLateToEnlist", $.String);

    $.Property({Static:true , Public:false}, "InvalidKey", $.String);

    $.Property({Static:true , Public:false}, "InvalidInstanceId", $.String);

    $.Property({Static:true , Public:false}, "HandleFreedInDirectory", $.String);

    $.Property({Static:true , Public:false}, "NoAdditionalKeysOnInstanceIdLoad", $.String);

    $.Property({Static:true , Public:false}, "DirectoryAborted", $.String);

    $.Property({Static:true , Public:false}, "StoreViolationNoInstanceBound", $.String);

    $.Property({Static:true , Public:false}, "PersistenceViolationNoCreate", $.String);

    $.Property({Static:true , Public:false}, "LoadingAborted", $.String);

    $.Property({Static:true , Public:false}, "DefaultTerminationReason", $.String);

    $.Property({Static:true , Public:false}, "DefaultCreateOnlyReason", $.String);

    $.Property({Static:true , Public:false}, "DefaultSuspendReason", $.String);

    $.Property({Static:true , Public:false}, "TryRegisterRequestContextFailed", $.String);

    $.Property({Static:true , Public:false}, "RequestReplyHandleShouldNotBePresentForOneWay", $.String);

    $.Property({Static:true , Public:false}, "CorrelatedContextRequiredForAnonymousSend", $.String);

    $.Property({Static:true , Public:false}, "WorkflowMustBeHosted", $.String);

    $.Property({Static:true , Public:false}, "NullCorrelationHandleInMultipleQueryCorrelation", $.String);

    $.Property({Static:true , Public:false}, "QueryCorrelationInitializerCannotBeInitialized", $.String);

    $.Property({Static:true , Public:false}, "EmptyCorrelationQueryResults", $.String);

    $.Property({Static:true , Public:false}, "NotSpecified", $.String);

    $.Property({Static:true , Public:false}, "FlowedTransactionDifferentFromAmbient", $.String);

    $.Property({Static:true , Public:false}, "ReceiveNotWithinATransactedReceiveScope", $.String);

    $.Property({Static:true , Public:false}, "ContractInferenceValidationForTransactionFlowBehavior", $.String);

    $.Property({Static:true , Public:false}, "NullReplyMessageContractMismatch", $.String);

    $.Property({Static:true , Public:false}, "CannotCreateMessageFault", $.String);

    $.Property({Static:true , Public:false}, "CorrelationResponseContextShouldNotBeNull", $.String);

    $.Property({Static:true , Public:false}, "DanglingReceive", $.String);

    $.Property({Static:true , Public:false}, "DifferentContractsSameConfigName", $.String);

    $.Property({Static:true , Public:false}, "OperationFormatterAndFaultFormatterNotSet", $.String);

    $.Property({Static:true , Public:false}, "OperationFormatterAndFaultFormatterIncorrectlySet", $.String);

    $.Property({Static:true , Public:false}, "ResponseContextIsNotNull", $.String);

    $.Property({Static:true , Public:false}, "SendRepliesHaveSameFaultTypeDifferentAction", $.String);

    $.Property({Static:true , Public:false}, "CompensableActivityInsideTransactedReceiveScope", $.String);

    $.Property({Static:true , Public:false}, "CannotUseAddServiceEndpointOverloadForWorkflowServices", $.String);

    $.Property({Static:true , Public:false}, "CacheSettingsLocked", $.String);

    $.Property({Static:true , Public:false}, "ServiceHostExtensionAborted", $.String);

    $.Property({Static:true , Public:false}, "ServiceHostExtensionImmutable", $.String);

    $.Property({Static:true , Public:false}, "UnableToOpenAndRegisterStore", $.String);

    $.Property({Static:true , Public:false}, "UseInstanceStoreInsteadOfPersistenceProvider", $.String);

    $.Property({Static:true , Public:false}, "BufferedReceiveBehaviorUsedWithoutProperty", $.String);

    $.Property({Static:true , Public:false}, "BufferedReceiveBehaviorMultipleUse", $.String);

    $.Property({Static:true , Public:false}, "MaxPendingMessagesPerChannelMustBeGreaterThanZero", $.String);

    $.Property({Static:true , Public:false}, "CannotSpecifyBothConnectionStringAndName", $.String);

    $.Property({Static:true , Public:false}, "MustSpecifyConnectionStringOrName", $.String);

    $.Property({Static:true , Public:false}, "WorkflowCompletionAsyncResultCannotBeNull", $.String);

    $.Property({Static:true , Public:false}, "NoRunnableInstances", $.String);

    $.Property({Static:true , Public:false}, "FailedToGetInstanceIdForControlOperation", $.String);

    $.Property({Static:true , Public:false}, "FailedToGetWorkflowIdentityForControlOperation", $.String);

    $.Property({Static:true , Public:false}, "BodyCannotBeNull", $.String);

    $.Property({Static:true , Public:false}, "DuplexContractsNotSupported", $.String);

    $.Property({Static:true , Public:false}, "ExtraReturnValue", $.String);

    $.Property({Static:true , Public:false}, "InvalidReceiveStateForDU", $.String);

    $.Property({Static:true , Public:false}, "ReceiveContentChanged", $.String);

    $.Property({Static:true , Public:false}, "ReceiveCorrelationInitializiersChanged", $.String);

    $.Property({Static:true , Public:false}, "WorkflowControlEndpointDefaultBaseUriNotSupportedInPartialTrust", $.String);

    $.Property({Static:true , Public:false}, "WorkflowServiceHostCannotAddOrRemoveServiceDefinitionAfterOpen", $.String);

    $.Property({Static:true , Public:false}, "SendReceiveExtensionNotFound", $.String);

    $.Property({Static:true , Public:false}, "MessageVersionInformationNotFound", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.TD */ 

(function TD$Members () {
  var $, $thisType;























































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.TD", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferOutOfOrderMessageNoBookmark", 
      new JSIL.MethodSignature(null, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferOutOfOrderMessageNoBookmarkIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferOutOfOrderMessageNoInstance", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "BufferOutOfOrderMessageNoInstanceIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateEventDescriptors", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "CreateWorkflowServiceHostStart", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateWorkflowServiceHostStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateWorkflowServiceHostStop", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateWorkflowServiceHostStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateCorrelationQuery", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateCorrelationQueryIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureEventDescriptors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "InferredContractDescription", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "InferredContractDescriptionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InferredOperationDescription", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InferredOperationDescriptionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsEtwEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "MaxInstancesExceeded", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "MaxInstancesExceededIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "MaxPendingMessagesPerChannelExceeded", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "MaxPendingMessagesPerChannelExceededIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "PendingMessagesPerChannelRatio", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "PendingMessagesPerChannelRatioIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SendMessageChannelCacheMiss", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "SendMessageChannelCacheMissIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ServiceEndpointAdded", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ServiceEndpointAddedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StartSignpostEvent", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.TraceRecord"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StartSignpostEventIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StopSignpostEvent", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.TraceRecord"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StopSignpostEventIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TraceCorrelationKeys", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TraceCorrelationKeysIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingProfileNotFound", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingProfileNotFoundIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TransactedReceiveScopeEndCommitFailed", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TransactedReceiveScopeEndCommitFailedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WfMessageReceived", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WfMessageReceivedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WfMessageSent", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WfMessageSentIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.Int32, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.Int32, $.Int32, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwTransferEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteTraceSource", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $asm25.TypeRef("System.Runtime.TracePayload")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "syncLock", $.Object);

    $.Field({Static:true , Public:false}, "eventDescriptorsCreated", $asm07.TypeRef("System.Boolean"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.FxTrace */ 

(function FxTrace$Members () {
  var $, $thisType;























  JSIL.MakeStaticClass("System.ServiceModel.Activities.FxTrace", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureEtwProviderInitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EventLog", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EventSourceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.ExceptionTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCritical", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCriticalToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceErrorToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformationToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerbose", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerboseToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarningToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Trace", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_TracingEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeTracing", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IsEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateEnabledEventsList", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "UpdateEventDefinitions", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]), $jsilcore.TypeRef("System.Array", [$.UInt16])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "baseEventSourceName", $.String, "System.ServiceModel");

    $.Constant({Static:true , Public:false}, "EventSourceVersion", $.String, "4.0.0.0");

    $.Field({Static:true , Public:false}, "etwProviderId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "eventSourceName", $.String);

    $.Field({Static:true , Public:false}, "exceptionTrace", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Field({Static:true , Public:false}, "enabledEvents", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Field({Static:true , Public:false}, "end2EndEvents", $asm0A.TypeRef("System.Collections.Generic.SortedSet`1", [$.UInt16]));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "lockObject", $.Object);

    $.Field({Static:true , Public:false}, "tracingEnabled", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerbose", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformation", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarning", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceError", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCritical", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerboseToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformationToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarningToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceErrorToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCriticalToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "diagnosticTrace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));


    function FxTrace__cctor () {
      $thisType.etwProviderId = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FxTrace__cctor
    );

    $.Property({Static:true , Public:true }, "ShouldTraceCritical", $.Boolean);

    $.Property({Static:true , Public:true }, "TracingEnabled", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceError", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformation", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerbose", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarning", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceCriticalToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceErrorToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformationToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerboseToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarningToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "Exception", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Property({Static:true , Public:true }, "Trace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));

    $.Property({Static:true , Public:true }, "EventLog", $asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"));

    $.Property({Static:true , Public:false}, "EventSourceName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.FxTrace+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.FxTrace+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lInitializeTracing$gb__54_0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__54_0", $asm07.TypeRef("System.Action"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities.Diagnostics");
/* class System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters */ 

(function WorkflowServiceHostPerformanceCounters$Members () {
  var $, $thisType;






























  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Diagnostics.PerformanceCountersBase"), 
      Name: "System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCounterSet", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Diagnostics.PerformanceData.CounterSet"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "CreateCounterSetInstance", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Diagnostics.PerformanceData.CounterSetInstance"), [$.String])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "CreateFriendlyInstanceName", 
      new JSIL.MethodSignature($.String, [$asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureCounterSet", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CounterNames", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Initialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InstanceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PerfCounterEnd", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_PerfCounterStart", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PerformanceCountersEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCompressionTasks", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters+InstanceNameTruncOptions"), [
          $.Int32, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializePerformanceCounters", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetFullVirtualPath", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.ServiceHostBase"), $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowCreated", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowExecuting", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowIdle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowInMemory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowLoadDuration", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowLoaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowOutOfMemory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowPersistDuration", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowPersisted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowSuspended", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowTerminated", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WorkflowUnloaded", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "syncRoot", $.Object);

    $.Field({Static:true , Public:false}, "workflowServiceHostProviderId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "workflowServiceHostCounterSetId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "workflowServiceHostCounterSet", $asm10.TypeRef("System.Diagnostics.PerformanceData.CounterSet"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "perfCounterNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "serviceHost", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Constant({Static:true , Public:false}, "maxCounterLength", $.Int32, 64);

    $.Constant({Static:true , Public:false}, "hashLength", $.Int32, 2);

    $.Field({Static:false, Public:false}, "workflowServiceHostCounterSetInstance", $asm10.TypeRef("System.Diagnostics.PerformanceData.CounterSetInstance"));

    $.Field({Static:false, Public:false}, "initialized", $.Boolean);

    $.Field({Static:false, Public:false}, "counters", $jsilcore.TypeRef("System.Array", [$asm10.TypeRef("System.Diagnostics.PerformanceData.CounterData")]));

    $.Field({Static:false, Public:false}, "instanceName", $.String);

    $.Field({Static:false, Public:false}, "isPerformanceCounterEnabled", $.Boolean);


    function WorkflowServiceHostPerformanceCounters__cctor () {
      $thisType.workflowServiceHostProviderId = new $asm07.System.Guid();
      $thisType.workflowServiceHostCounterSetId = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WorkflowServiceHostPerformanceCounters__cctor
    );

    $.Property({Static:false, Public:false, Virtual:true }, "InstanceName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "CounterNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Property({Static:false, Public:false, Virtual:true }, "PerfCounterStart", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "PerfCounterEnd", $.Int32);

    $.Property({Static:false, Public:false}, "PerformanceCountersEnabled", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "Initialized", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters+PerfCounters */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters+PerfCounters", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WorkflowsCreated: 0, 
    WorkflowsCreatedPerSecond: 1, 
    WorkflowsExecuting: 2, 
    WorkflowsCompleted: 3, 
    WorkflowsCompletedPerSecond: 4, 
    WorkflowsAborted: 5, 
    WorkflowsAbortedPerSecond: 6, 
    WorkflowsInMemory: 7, 
    WorkflowsPersisted: 8, 
    WorkflowsPersistedPerSecond: 9, 
    WorkflowsTerminated: 10, 
    WorkflowsTerminatedPerSecond: 11, 
    WorkflowsLoaded: 12, 
    WorkflowsLoadedPerSecond: 13, 
    WorkflowsUnloaded: 14, 
    WorkflowsUnloadedPerSecond: 15, 
    WorkflowsSuspended: 16, 
    WorkflowsSuspendedPerSecond: 17, 
    WorkflowsIdlePerSecond: 18, 
    AverageWorkflowLoadTime: 19, 
    AverageWorkflowLoadTimeBase: 20, 
    AverageWorkflowPersistTime: 21, 
    AverageWorkflowPersistTimeBase: 22, 
    TotalCounters: 23, 
  }
);

/* enum System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters+InstanceNameTruncOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Diagnostics.WorkflowServiceHostPerformanceCounters+InstanceNameTruncOptions", 
    BaseType: $asm07.TypeRef("System.UInt32"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    NoBits: 0, 
    Service32: 1, 
    Uri31: 4, 
  }
);

JSIL.DeclareNamespace("System.ServiceModel.Activities.Tracking");
/* class System.ServiceModel.Activities.Tracking.TrackingProfileManager */ 

(function TrackingProfileManager$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Tracking.TrackingProfileManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $.String, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndLoad", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), [
          $.String, $.String, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.DefaultProfileManager */ 

(function DefaultProfileManager$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.TrackingProfileManager"), 
      Name: "System.ServiceModel.Activities.Tracking.DefaultProfileManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ProfileStore", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.DefaultProfileManager+ConfigFileProfileStore"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetProfile", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), [
          $.String, $.String, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.Field({Static:false, Public:false}, "profileStore", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.DefaultProfileManager+ConfigFileProfileStore"));

    $.Property({Static:false, Public:false}, "ProfileStore", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.DefaultProfileManager+ConfigFileProfileStore"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.DefaultProfileManager+ConfigFileProfileStore */ 

(function ConfigFileProfileStore$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Tracking.DefaultProfileManager+ConfigFileProfileStore", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReadProfiles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")]))
    );

    $.Field({Static:false, Public:false}, "trackingProfiles", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.ReceiveMessageRecord */ 

(function ReceiveMessageRecord$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"), 
      Name: "System.ServiceModel.Activities.Tracking.ReceiveMessageRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_E2EActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_E2EActivityId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.Property({Static:false, Public:true }, "E2EActivityId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "MessageId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.SendMessageRecord */ 

(function SendMessageRecord$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"), 
      Name: "System.ServiceModel.Activities.Tracking.SendMessageRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_E2EActivityId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_E2EActivityId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.Property({Static:false, Public:true }, "E2EActivityId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities.Tracking.Configuration");
/* class System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement */ 

(function TrackingConfigurationElement$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetStringPairKey", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement */ 

(function TrackingQueryElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Annotations", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateTrackingQuery", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Field({Static:false, Public:false}, "elementKey", $asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Guid")]));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "Annotations", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["annotations"]; });

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement */ 

(function ActivityStateQueryElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_States", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "States", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["states"]; });

    $.Property({Static:false, Public:true }, "Variables", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["variables"]; });

    $.Property({Static:false, Public:true }, "Arguments", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["arguments"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1 */ 

(function TrackingConfigurationCollection$b1$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationElementCollection"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TConfigurationElement"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TConfigurationElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNewElement", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationElement"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CollectionType", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationElementCollectionType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.GenericParameter("TConfigurationElement"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetElementKey", 
      new JSIL.MethodSignature($.Object, [$asm0E.TypeRef("System.Configuration.ConfigurationElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IndexOf", 
      new JSIL.MethodSignature($.Int32, [$.GenericParameter("TConfigurationElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TConfigurationElement")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAt", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $.GenericParameter("TConfigurationElement")])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "CollectionType", $asm0E.TypeRef("System.Configuration.ConfigurationElementCollectionType"));

    $.Property({Static:false, Public:true }, "Item", $.GenericParameter("TConfigurationElement"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection */ 

(function ActivityStateQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement */ 

(function ActivityScheduledQueryElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ChildActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ChildActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "ChildActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["childActivityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection */ 

(function ActivityScheduledQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement */ 

(function AnnotationElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["value"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection */ 

(function AnnotationElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement */ 

(function ArgumentElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection */ 

(function ArgumentElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement */ 

(function BookmarkResumptionQueryElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection */ 

(function BookmarkResumptionQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement */ 

(function CancelRequestedQueryElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ChildActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ChildActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "ChildActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["childActivityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection */ 

(function CancelRequestedQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement */ 

(function FaultPropagationQueryElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultHandlerActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultSourceActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FaultHandlerActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FaultSourceActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "FaultSourceActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["faultSourceActivityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "FaultHandlerActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["faultHandlerActivityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection */ 

(function FaultPropagationQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ProfileElement */ 

(function ProfileElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ProfileElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementationVisibility", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Workflows", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ImplementationVisibility", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "ImplementationVisibility", $asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["implementationVisibility"]; })
      .Attribute($asm24.TypeRef("System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidatorAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ImplementationVisibilityHelper.__Type__]; });

    $.Property({Static:false, Public:true }, "Workflows", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return [""]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection */ 

(function ProfileElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CollectionType", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationElementCollectionType"))
    );

    $.Property({Static:false, Public:true , Virtual:true }, "CollectionType", $asm0E.TypeRef("System.Configuration.ConfigurationElementCollectionType"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement */ 

(function ProfileWorkflowElement$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddQueries", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingQuery")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "AddQueryCollection", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingQuery")]), $asm0E.TypeRef("System.Configuration.ConfigurationElementCollection")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityDefinitionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityScheduledQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityStateQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkResumptionQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CancelRequestedQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CustomTrackingQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultPropagationQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateMachineStateQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowInstanceQueries", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityDefinitionId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "ActivityDefinitionId", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityDefinitionId"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "WorkflowInstanceQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["workflowInstanceQueries"]; });

    $.Property({Static:false, Public:true }, "ActivityStateQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityStateQueries"]; });

    $.Property({Static:false, Public:true }, "ActivityScheduledQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityScheduledQueries"]; });

    $.Property({Static:false, Public:true }, "CancelRequestedQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["cancelRequestedQueries"]; });

    $.Property({Static:false, Public:true }, "FaultPropagationQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["faultPropagationQueries"]; });

    $.Property({Static:false, Public:true }, "BookmarkResumptionQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["bookmarkResumptionQueries"]; });

    $.Property({Static:false, Public:true }, "CustomTrackingQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["customTrackingQueries"]; });

    $.Property({Static:false, Public:true }, "StateMachineStateQueries", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["stateMachineStateQueries"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection */ 

(function ProfileWorkflowElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.StateElement */ 

(function StateElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.StateElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection */ 

(function StateElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.StateElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationStrings */ 

(function TrackingConfigurationStrings$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationStrings", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "ActivityDefinitionId", $.String, "activityDefinitionId");

    $.Constant({Static:true , Public:false}, "ActivityName", $.String, "activityName");

    $.Constant({Static:true , Public:false}, "ActivityQueries", $.String, "activityStateQueries");

    $.Constant({Static:true , Public:false}, "ActivityQuery", $.String, "activityStateQuery");

    $.Constant({Static:true , Public:false}, "ActivityScheduledQueries", $.String, "activityScheduledQueries");

    $.Constant({Static:true , Public:false}, "ActivityScheduledQuery", $.String, "activityScheduledQuery");

    $.Constant({Static:true , Public:false}, "ArgumentQueries", $.String, "arguments");

    $.Constant({Static:true , Public:false}, "ArgumentQuery", $.String, "argument");

    $.Constant({Static:true , Public:false}, "StarWildcard", $.String, "*");

    $.Constant({Static:true , Public:false}, "Annotation", $.String, "annotation");

    $.Constant({Static:true , Public:false}, "Annotations", $.String, "annotations");

    $.Constant({Static:true , Public:false}, "BookmarkResumptionQueries", $.String, "bookmarkResumptionQueries");

    $.Constant({Static:true , Public:false}, "BookmarkResumptionQuery", $.String, "bookmarkResumptionQuery");

    $.Constant({Static:true , Public:false}, "CancelRequestedQueries", $.String, "cancelRequestedQueries");

    $.Constant({Static:true , Public:false}, "CancelRequestedQuery", $.String, "cancelRequestedQuery");

    $.Constant({Static:true , Public:false}, "ChildActivityName", $.String, "childActivityName");

    $.Constant({Static:true , Public:false}, "Clear", $.String, "clear");

    $.Constant({Static:true , Public:false}, "FaultHandlerActivityName", $.String, "faultHandlerActivityName");

    $.Constant({Static:true , Public:false}, "FaultSourceActivityName", $.String, "faultSourceActivityName");

    $.Constant({Static:true , Public:false}, "FaultPropagationQueries", $.String, "faultPropagationQueries");

    $.Constant({Static:true , Public:false}, "FaultPropagationQuery", $.String, "faultPropagationQuery");

    $.Constant({Static:true , Public:false}, "ImplementationVisibility", $.String, "implementationVisibility");

    $.Constant({Static:true , Public:false}, "Name", $.String, "name");

    $.Constant({Static:true , Public:false}, "Profiles", $.String, "profiles");

    $.Constant({Static:true , Public:false}, "Remove", $.String, "remove");

    $.Constant({Static:true , Public:false}, "State", $.String, "state");

    $.Constant({Static:true , Public:false}, "States", $.String, "states");

    $.Constant({Static:true , Public:false}, "Tracking", $.String, "tracking");

    $.Constant({Static:true , Public:false}, "TrackingProfile", $.String, "trackingProfile");

    $.Constant({Static:true , Public:false}, "CustomTrackingQueries", $.String, "customTrackingQueries");

    $.Constant({Static:true , Public:false}, "CustomTrackingQuery", $.String, "customTrackingQuery");

    $.Constant({Static:true , Public:false}, "StateMachineStateQueries", $.String, "stateMachineStateQueries");

    $.Constant({Static:true , Public:false}, "StateMachineStateQuery", $.String, "stateMachineStateQuery");

    $.Constant({Static:true , Public:false}, "Value", $.String, "value");

    $.Constant({Static:true , Public:false}, "VariableQueries", $.String, "variables");

    $.Constant({Static:true , Public:false}, "VariableQuery", $.String, "variable");

    $.Constant({Static:true , Public:false}, "Workflow", $.String, "workflow");

    $.Constant({Static:true , Public:false}, "WorkflowInstanceQuery", $.String, "workflowInstanceQuery");

    $.Constant({Static:true , Public:false}, "WorkflowInstanceQueries", $.String, "workflowInstanceQueries");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.TrackingSection */ 

(function TrackingSection$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationSection"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.TrackingSection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Profiles", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TrackingProfiles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")]))
    );

    $.Field({Static:false, Public:false}, "trackingProfiles", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")]));

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "Profiles", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["profiles"]; });

    $.Property({Static:false, Public:true }, "TrackingProfiles", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement */ 

(function CustomTrackingQueryElement$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection */ 

(function CustomTrackingQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElement */ 

(function StateMachineStateQueryElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "StateMachineStateRecordName", $.String, "System.Activities.Statements.StateMachine");

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["activityName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElementCollection */ 

(function StateMachineStateQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.StateMachineStateQueryElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.VariableElement */ 

(function VariableElement$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.VariableElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ElementKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "ElementKey", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection */ 

(function VariableElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.VariableElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.VariableElement.__Type__]; });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.ImplementationVisibilityHelper */ 

(function ImplementationVisibilityHelper$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.ServiceModel.Activities.Tracking.Configuration.ImplementationVisibilityHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "IsDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement */ 

(function WorkflowInstanceQueryElement$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement"), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_States", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "NewTrackingQuery", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"))
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "States", $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["states"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection */ 

(function WorkflowInstanceQueryElementCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement")]), 
      Name: "System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement.__Type__]; });

})();

JSIL.DeclareNamespace("System.ServiceModel.Activities.Configuration");
/* class System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement */ 

(function EtwTrackingBehaviorElement$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProfileName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProfileName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Constant({Static:true , Public:false}, "profileNameParameter", $.String, "profileName");

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "ProfileName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["profileName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.ConfigurationStrings */ 

(function ConfigurationStrings$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.ServiceModel.Activities.Configuration.ConfigurationStrings", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowHostingOptionsSectionPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSectionPath", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.Constant({Static:true , Public:true }, "AllowUnsafeCaching", $.String, "allowUnsafeCaching");

    $.Constant({Static:true , Public:true }, "ChannelSettings", $.String, "channelSettings");

    $.Constant({Static:true , Public:true }, "FactorySettings", $.String, "factorySettings");

    $.Constant({Static:true , Public:true }, "IdleTimeout", $.String, "idleTimeout");

    $.Constant({Static:true , Public:true }, "LeaseTimeout", $.String, "leaseTimeout");

    $.Constant({Static:true , Public:true }, "MaxItemsInCache", $.String, "maxItemsInCache");

    $.Constant({Static:true , Public:true }, "TimeSpanZero", $.String, "00:00:00");

    $.Constant({Static:true , Public:true }, "SectionGroupName", $.String, "system.serviceModel.activities");

    $.Constant({Static:true , Public:true }, "WorkflowHostingOptionsSectionName", $.String, "workflowHostingOptions");

    $.Constant({Static:true , Public:true }, "OverrideSiteName", $.String, "overrideSiteName");

    $.Property({Static:true , Public:false}, "WorkflowHostingOptionsSectionPath", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.BufferedReceiveElement */ 

(function BufferedReceiveElement$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.BufferedReceiveElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxPendingMessagesPerChannel", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxPendingMessagesPerChannel", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Constant({Static:true , Public:false}, "MaxPendingMessagesPerChannelString", $.String, "maxPendingMessagesPerChannel");

    $.Property({Static:false, Public:true }, "MaxPendingMessagesPerChannel", $.Int32)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["maxPendingMessagesPerChannel"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0A.System.ComponentModel.Int32Converter.__Type__]; })
      .Attribute($asm0E.TypeRef("System.Configuration.IntegerValidatorAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowControlEndpointCollectionElement */ 

(function WorkflowControlEndpointCollectionElement$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.StandardEndpointCollectionElement`2", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowControlEndpoint"), $asm24.TypeRef("System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement")]), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowControlEndpointCollectionElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement */ 

(function WorkflowControlEndpointElement$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.StandardEndpointElement"), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateServiceEndpoint", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), [$asm22.TypeRef("System.ServiceModel.Description.ContractDescription")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Address", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Binding", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BindingConfiguration", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_EndpointType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HasAddressSetByUser", 
      new JSIL.MethodSignature($.Boolean, [$asm0E.TypeRef("System.Configuration.ConfigurationElement")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApplyConfiguration", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Configuration.ChannelEndpointElement")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApplyConfiguration", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Configuration.ServiceEndpointElement")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitializeAndValidate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Configuration.ServiceEndpointElement"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitializeAndValidate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Configuration.ChannelEndpointElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Address", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Binding", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BindingConfiguration", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Field({Static:false, Public:false}, "shouldLetConfigLoaderOverwriteAddress", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "EndpointType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Address", $asm0A.TypeRef("System.Uri"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["address"]; });

    $.Property({Static:false, Public:true }, "Binding", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["binding"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "BindingConfiguration", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["bindingConfiguration"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowIdleElement */ 

(function WorkflowIdleElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowIdleElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToPersist", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToUnload", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Constant({Static:true , Public:false}, "TimeToPersistString", $.String, "timeToPersist");

    $.Constant({Static:true , Public:false}, "TimeToUnloadString", $.String, "timeToUnload");

    $.Property({Static:false, Public:true }, "TimeToPersist", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["timeToPersist"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "TimeToUnload", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["timeToUnload"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement */ 

(function WorkflowUnhandledExceptionElement$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Constant({Static:true , Public:false}, "action", $.String, "action");

    $.Property({Static:false, Public:true }, "Action", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["action"]; })
      .Attribute($asm24.TypeRef("System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidatorAttribute"), function () { return [$asm24.System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionActionHelper.__Type__]; });

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidator */ 

(function ServiceModelActivitiesEnumValidator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationValidatorBase"), 
      Name: "System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanValidate", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "enumHelperType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "isDefined", $asm07.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidatorAttribute */ 

(function ServiceModelActivitiesEnumValidatorAttribute$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), 
      Name: "System.ServiceModel.Activities.Configuration.ServiceModelActivitiesEnumValidatorAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnumHelperType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ValidatorInstance", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationValidatorBase"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnumHelperType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.Field({Static:false, Public:false}, "enumHelperType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "EnumHelperType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm0E.TypeRef("System.Configuration.ConfigurationValidatorBase"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Property]; });

})();

/* class System.ServiceModel.Activities.Configuration.ServiceModelActivitiesSectionGroup */ 

(function ServiceModelActivitiesSectionGroup$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationSectionGroup"), 
      Name: "System.ServiceModel.Activities.Configuration.ServiceModelActivitiesSectionGroup", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowHostingOptionsSection", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Configuration.WorkflowHostingOptionsSection"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSectionGroup", 
      new JSIL.MethodSignature($.Type, [$asm0E.TypeRef("System.Configuration.Configuration")])
    );

    $.Property({Static:false, Public:true }, "WorkflowHostingOptionsSection", $asm24.TypeRef("System.ServiceModel.Activities.Configuration.WorkflowHostingOptionsSection"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowHostingOptionsSection */ 

(function WorkflowHostingOptionsSection$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationSection"), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowHostingOptionsSection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OverrideSiteName", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSection", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_OverrideSiteName", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Property({Static:false, Public:true }, "OverrideSiteName", $.Boolean)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["overrideSiteName"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement */ 

(function SendMessageChannelCacheElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowUnsafeCaching", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ChannelSettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Configuration.ChannelSettingsElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FactorySettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Configuration.FactorySettingsElement"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AllowUnsafeCaching", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "AllowUnsafeCaching", $.Boolean)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["allowUnsafeCaching"]; });

    $.Property({Static:false, Public:true }, "FactorySettings", $asm24.TypeRef("System.ServiceModel.Activities.Configuration.FactorySettingsElement"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["factorySettings"]; });

    $.Property({Static:false, Public:true }, "ChannelSettings", $asm24.TypeRef("System.ServiceModel.Activities.Configuration.ChannelSettingsElement"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["channelSettings"]; });

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.FactorySettingsElement */ 

(function FactorySettingsElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Configuration.FactorySettingsElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IdleTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LeaseTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxItemsInCache", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IdleTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_LeaseTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxItemsInCache", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "IdleTimeout", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["idleTimeout"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "LeaseTimeout", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["leaseTimeout"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "MaxItemsInCache", $.Int32)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["maxItemsInCache"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.IntegerValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.ChannelSettingsElement */ 

(function ChannelSettingsElement$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.ConfigurationElement"), 
      Name: "System.ServiceModel.Activities.Configuration.ChannelSettingsElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IdleTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LeaseTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxItemsInCache", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IdleTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_LeaseTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxItemsInCache", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true }, "IdleTimeout", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["idleTimeout"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "LeaseTimeout", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["leaseTimeout"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm22.TypeRef("System.ServiceModel.Configuration.ServiceModelTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "MaxItemsInCache", $.Int32)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["maxItemsInCache"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.IntegerValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement */ 

(function SqlWorkflowInstanceStoreElement$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectionStringName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceCompletionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceEncodingOption", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxConnectionRetries", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectionString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectionStringName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceCompletionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceEncodingOption", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxConnectionRetries", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Constant({Static:true , Public:false}, "connectionString", $.String, "connectionString");

    $.Constant({Static:true , Public:false}, "connectionStringName", $.String, "connectionStringName");

    $.Constant({Static:true , Public:false}, "defaultConnectionStringName", $.String, "DefaultSqlWorkflowInstanceStoreConnectionString");

    $.Constant({Static:true , Public:false}, "hostLockRenewalPeriodParameter", $.String, "hostLockRenewalPeriod");

    $.Constant({Static:true , Public:false}, "runnableInstancesDetectionPeriodParameter", $.String, "runnableInstancesDetectionPeriod");

    $.Constant({Static:true , Public:false}, "instanceEncodingOption", $.String, "instanceEncodingOption");

    $.Constant({Static:true , Public:false}, "instanceCompletionAction", $.String, "instanceCompletionAction");

    $.Constant({Static:true , Public:false}, "instanceLockedExceptionAction", $.String, "instanceLockedExceptionAction");

    $.Constant({Static:true , Public:false}, "maxConnectionRetries", $.String, "maxConnectionRetries");

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "ConnectionString", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["connectionString"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "ConnectionStringName", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["connectionStringName"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:true }, "HostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["hostLockRenewalPeriod"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm0E.TypeRef("System.Configuration.PositiveTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "RunnableInstancesDetectionPeriod", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["runnableInstancesDetectionPeriod"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm22.System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter.__Type__]; })
      .Attribute($asm0E.TypeRef("System.Configuration.PositiveTimeSpanValidatorAttribute"));

    $.Property({Static:false, Public:true }, "InstanceEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["instanceEncodingOption"]; });

    $.Property({Static:false, Public:true }, "InstanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["instanceCompletionAction"]; });

    $.Property({Static:false, Public:true }, "InstanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["instanceLockedExceptionAction"]; });

    $.Property({Static:false, Public:true }, "MaxConnectionRetries", $.Int32)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["maxConnectionRetries"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.IntegerValidatorAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement */ 

(function WorkflowInstanceManagementElement$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Configuration.BehaviorExtensionElement"), 
      Name: "System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateBehavior", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AuthorizedWindowsGroup", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BehaviorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AuthorizedWindowsGroup", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Constant({Static:true , Public:false}, "authorizedWindowsGroup", $.String, "authorizedWindowsGroup");

    $.Field({Static:false, Public:false}, "properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "BehaviorType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "AuthorizedWindowsGroup", $.String)
      .Attribute($asm0E.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["authorizedWindowsGroup"]; })
      .Attribute($asm0E.TypeRef("System.Configuration.StringValidatorAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm0E.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager */ 

(function BufferedReceiveManager$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "AbandonBufferedReceives", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "AbandonBufferedReceives", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AbandonReceiveContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BufferReceive", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.OperationContext"), $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"), 
          $.String, $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndAbandon", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnEndAbandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Retry", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.IExtension$lSystem.ServiceModel.ServiceHostBase$g.Attach", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.ServiceHostBase"))
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.ServiceHostBase")]), "Attach");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.IExtension$lSystem.ServiceModel.ServiceHostBase$g.Detach", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.ServiceHostBase"))
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.ServiceHostBase")]), "Detach");

    $.ExternalMethod({Static:false, Public:false}, "UpdateProperty", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.Channels.BufferedReceiveMessageProperty"), $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"), 
          $.Int32, $.String, 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState")
        ])
    );

    $.Field({Static:true , Public:false}, "onEndAbandon", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "bufferedProperties", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm22.TypeRef("System.ServiceModel.Channels.BufferedReceiveMessageProperty")])]));

    $.Field({Static:false, Public:false}, "throttle", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle"));

    $.Field({Static:false, Public:false}, "host", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Field({Static:false, Public:false}, "initialized", $.Int32);

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle */ 

(function PendingMessageThrottle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "Acquire", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Release", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "pendingMessages", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle+ThrottleEntry")]));

    $.Field({Static:false, Public:false}, "maxPendingMessagesPerChannel", $.Int32);

    $.Field({Static:false, Public:false}, "warningRestoreLimit", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle+ThrottleEntry */ 

(function ThrottleEntry$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function ThrottleEntry_get_Count () {
    return this.ThrottleEntry$Count$value;
  }; 

  function ThrottleEntry_get_WarningIssued () {
    return this.ThrottleEntry$WarningIssued$value;
  }; 

  function ThrottleEntry_set_Count (value) {
    this.ThrottleEntry$Count$value = (value | 0);
  }; 

  function ThrottleEntry_set_WarningIssued (value) {
    this.ThrottleEntry$WarningIssued$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PendingMessageThrottle+ThrottleEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32), 
      ThrottleEntry_get_Count
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WarningIssued", 
      JSIL.MethodSignature.Return($.Boolean), 
      ThrottleEntry_get_WarningIssued
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Count", 
      JSIL.MethodSignature.Action($.Int32), 
      ThrottleEntry_set_Count
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WarningIssued", 
      JSIL.MethodSignature.Action($.Boolean), 
      ThrottleEntry_set_WarningIssued
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ThrottleEntry$WarningIssued$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ThrottleEntry$Count$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "WarningIssued", $.Boolean);

    $.Property({Static:false, Public:true }, "Count", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PropertyData */ 

(function PropertyData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm22.System.ServiceModel.Channels.ReceiveContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.BufferedReceiveState)) ();
  };



  function PropertyData_get_BookmarkName () {
    return this.PropertyData$BookmarkName$value;
  }; 

  function PropertyData_get_ChannelKey () {
    return this.PropertyData$ChannelKey$value;
  }; 

  function PropertyData_get_ReceiveContext () {
    return this.PropertyData$ReceiveContext$value;
  }; 

  function PropertyData_get_State () {
    return this.PropertyData$State$value;
  }; 

  function PropertyData_set_BookmarkName (value) {
    this.PropertyData$BookmarkName$value = value;
  }; 

  function PropertyData_set_ChannelKey (value) {
    this.PropertyData$ChannelKey$value = (value | 0);
  }; 

  function PropertyData_set_ReceiveContext (value) {
    this.PropertyData$ReceiveContext$value = value;
  }; 

  function PropertyData_set_State (value) {
    this.PropertyData$State$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+PropertyData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_BookmarkName", 
      JSIL.MethodSignature.Return($.String), 
      PropertyData_get_BookmarkName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ChannelKey", 
      JSIL.MethodSignature.Return($.Int32), 
      PropertyData_get_ChannelKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ReceiveContext", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext")), 
      PropertyData_get_ReceiveContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState")), 
      PropertyData_get_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BookmarkName", 
      JSIL.MethodSignature.Action($.String), 
      PropertyData_set_BookmarkName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ChannelKey", 
      JSIL.MethodSignature.Action($.Int32), 
      PropertyData_set_ChannelKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReceiveContext", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext")), 
      PropertyData_set_ReceiveContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_State", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState")), 
      PropertyData_set_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyData$ReceiveContext$value", $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyData$ChannelKey$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyData$BookmarkName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyData$State$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ReceiveContext", $asm22.TypeRef("System.ServiceModel.Channels.ReceiveContext"));

    $.Property({Static:false, Public:true }, "ChannelKey", $.Int32);

    $.Property({Static:false, Public:true }, "BookmarkName", $.String);

    $.Property({Static:false, Public:true }, "State", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveState"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+<>c__DisplayClass7_0 */ 

(function $l$gc__DisplayClass7_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+<>c__DisplayClass7_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lBufferReceive$gb__0", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.Field({Static:false, Public:true }, "instanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Field({Static:false, Public:true }, "channelKey", $.Int32);

    $.Field({Static:false, Public:true }, "CS$$l$g8__locals1", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+<>c__DisplayClass7_1"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+<>c__DisplayClass7_1 */ 

(function $l$gc__DisplayClass7_1$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager+<>c__DisplayClass7_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "property", $asm22.TypeRef("System.ServiceModel.Channels.BufferedReceiveMessageProperty"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.ServiceModel.Activities.Dispatcher.BufferedReceiveState */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Dispatcher.BufferedReceiveState", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    WaitingOnInstance: 0, 
    WaitingOnBookmark: 1, 
  }
);

/* class System.ServiceModel.Activities.Dispatcher.DurableDispatcherAddressingFault */ 

(function DurableDispatcherAddressingFault$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Channels.MessageFault"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableDispatcherAddressingFault", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Code", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.FaultCode"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasDetail", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.FaultReason"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnWriteDetailContents", 
      JSIL.MethodSignature.Action($asm21.TypeRef("System.Xml.XmlDictionaryWriter"))
    );

    $.Field({Static:false, Public:false}, "faultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:false, Public:false}, "faultReason", $asm22.TypeRef("System.ServiceModel.FaultReason"));

    $.Property({Static:false, Public:true , Virtual:true }, "Code", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Property({Static:false, Public:true , Virtual:true }, "HasDetail", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Reason", $asm22.TypeRef("System.ServiceModel.FaultReason"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceContextProvider */ 

(function DurableInstanceContextProvider$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceContextProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.ServiceHostBase"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExistingInstanceContext", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.InstanceContext"), [$asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm22.TypeRef("System.ServiceModel.IContextChannel")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitializeInstanceContext", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.InstanceContext"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.IContextChannel")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsIdle", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.InstanceContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "NotifyIdle", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Dispatcher.InstanceContextIdleCallback"), $asm22.TypeRef("System.ServiceModel.InstanceContext")])
    );

    $.Field({Static:false, Public:false}, "serviceHostBase", $asm22.TypeRef("System.ServiceModel.ServiceHostBase"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IInstanceContextProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager */ 

(function DurableInstanceManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.DurableInstancingOptions)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowServiceHost)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory)) ();
  };


















  function DurableInstanceManager_get_DurableInstancingOptions () {
    return this.DurableInstanceManager$DurableInstancingOptions$value;
  }; 

  function DurableInstanceManager_get_Host () {
    return this.DurableInstanceManager$Host$value;
  }; 


  function DurableInstanceManager_get_PersistenceProviderDirectory () {
    return this.DurableInstanceManager$PersistenceProviderDirectory$value;
  }; 






  function DurableInstanceManager_set_DurableInstancingOptions (value) {
    this.DurableInstanceManager$DurableInstancingOptions$value = value;
  }; 

  function DurableInstanceManager_set_Host (value) {
    this.DurableInstanceManager$Host$value = value;
  }; 


  function DurableInstanceManager_set_PersistenceProviderDirectory (value) {
    this.DurableInstanceManager$PersistenceProviderDirectory$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortDirectory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInitialInstanceValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInstanceOwnerValues", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginClose", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginGetInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginGetInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginOpen", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginWaitAndHandleStoreEvents", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckPersistenceProviderBehavior", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndGetInstance", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndOpen", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndWaitAndHandleStoreEvents", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true }, "get_DurableInstancingOptions", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions")), 
      DurableInstanceManager_get_DurableInstancingOptions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Host", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost")), 
      DurableInstanceManager_get_Host
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Method({Static:false, Public:false}, "get_PersistenceProviderDirectory", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory")), 
      DurableInstanceManager_get_PersistenceProviderDirectory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetCreateOwnerCommand", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleException", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDefinitionProvider", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializePersistenceProviderDirectory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Open", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "set_DurableInstancingOptions", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions")), 
      DurableInstanceManager_set_DurableInstancingOptions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Host", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost")), 
      DurableInstanceManager_set_Host
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceStore", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Method({Static:false, Public:false}, "set_PersistenceProviderDirectory", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory")), 
      DurableInstanceManager_set_PersistenceProviderDirectory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetDefaultOwnerMetadata", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowIfClosedOrAborted", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowIfDisposedOrImmutable", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "WaitAndHandleStoreEventsCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:true , Public:false}, "waitAndHandleStoreEventsCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "state", $.Int32);

    $.Field({Static:false, Public:false}, "store", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false}, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "owner", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner"));

    $.Field({Static:false, Public:false}, "instanceOwnerMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "instanceMetadataChanges", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "waitForStoreEventsLoop", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "workflowDefinitionProvider", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"));

    $.Field({Static:false, Public:false}, "DurableInstanceManager$Host$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DurableInstanceManager$PersistenceProviderDirectory$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DurableInstanceManager$DurableInstancingOptions$value", $asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Host", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Property({Static:false, Public:false}, "PersistenceProviderDirectory", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"));

    $.Property({Static:false, Public:true }, "DurableInstancingOptions", $asm24.TypeRef("System.ServiceModel.Activities.DurableInstancingOptions"));

    $.Property({Static:false, Public:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+States */ 

(function States$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+States", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Created", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "Opened", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "Closed", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "Aborted", $.Int32, 3);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+OpenInstanceStoreAsyncResult */ 

(function OpenInstanceStoreAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+OpenInstanceStoreAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDirectory", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnFinally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false}, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onFinally", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnFinally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+CloseAsyncResult */ 

(function CloseAsyncResult$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+CloseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CloseProviderDirectory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndReleaseInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndReleaseInstanceWrapperCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleWaitForStoreEvents", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformClose", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "PostProcess", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Process", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "StartProcess", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForStoreEventsLoop", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "handleEndReleaseInstanceWrapperCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleWaitForStoreEvents", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleWaitForStoreEvents", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:true , Public:false}, "outstandingUnloadCapacity", $.Int32, 10);

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "workflowServiceInstances", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]));

    $.Field({Static:false, Public:false}, "instanceCount", $.Int32);

    $.Field({Static:false, Public:false}, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "instanceQueueLock", $.Object);

    $.Field({Static:false, Public:false}, "completedUnloadCount", $.Int32);

    $.Field({Static:false, Public:false}, "allReleaseInstancesCompletedSynchronously", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+GetInstanceAsyncResult */ 

(function GetInstanceAsyncResult$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+GetInstanceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), 
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm07.TypeRef("System.Guid"), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AssociateKeys", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CommitTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleAssociateInfrastructureKeys", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleCommit", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndAcquireReference", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndEnlistContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndLoad", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAcquire", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryEnlistContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "handleEndAcquireReference", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndAcquireReference", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndLoad", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndLoad", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleAssociateInfrastructureKeys", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleAssociateInfrastructureKeys", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleCommit", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleCommit", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndEnlistContext", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndEnlistContext", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "instanceKey", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Field({Static:false, Public:false}, "additionalKeys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false}, "timeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "durableInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "referenceAcquired", $.Boolean);

    $.Field({Static:false, Public:false}, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false}, "parameters", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext"));

    $.Field({Static:false, Public:false}, "transaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "committableTransaction", $asm27.TypeRef("System.Transactions.CommittableTransaction"));

    $.Field({Static:false, Public:false}, "loadAny", $.Boolean);

    $.Field({Static:false, Public:false}, "updatedIdentity", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+WaitAndHandleStoreEventsAsyncResult */ 

(function WaitAndHandleStoreEventsAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceManager+WaitAndHandleStoreEventsAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndGetInstance", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndRunInstance", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndWaitForStoreEvents", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleStoreEvents", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "RunInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WaitAndHandleStoreEvents", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForStoreEvents", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "waitAndHandleStoreEvents", $asm07.TypeRef("System.Action`1", [$.Object]), function ($pi) {
        return $asm07.System.Action$b1.Of($asm07.System.Object).New(null, null, new JSIL.MethodPointerInfo($thisType, "WaitAndHandleStoreEvents", JSIL.MethodSignature.Action($.Object), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndWaitForStoreEvents", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndWaitForStoreEvents", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndGetInstance", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndGetInstance", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndRunInstance", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndRunInstance", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instanceManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.DurableInstanceManager"));

    $.Field({Static:false, Public:false}, "events", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent")]));

    $.Field({Static:false, Public:false}, "currentInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.DurableInstanceProvider */ 

(function DurableInstanceProvider$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.DurableInstanceProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.ServiceHostBase"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Instance", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetInstance", 
      new JSIL.MethodSignature($.Object, [$asm22.TypeRef("System.ServiceModel.InstanceContext"), $asm22.TypeRef("System.ServiceModel.Channels.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetInstance", 
      new JSIL.MethodSignature($.Object, [$asm22.TypeRef("System.ServiceModel.InstanceContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReleaseInstance", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.InstanceContext"), $.Object])
    );

    $.Field({Static:false, Public:false}, "singletonDurableInstance", $.Object);

    $.Field({Static:false, Public:false}, "serviceHost", $asm22.TypeRef("System.ServiceModel.ServiceHostBase"));

    $.Property({Static:false, Public:false}, "Instance", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IInstanceProvider")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.OperationExecutionFault */ 

(function OperationExecutionFault$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Channels.MessageFault"), 
      Name: "System.ServiceModel.Activities.Dispatcher.OperationExecutionFault", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm22.TypeRef("System.ServiceModel.FaultCode")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateAbortedFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCompletedFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateInstanceNotFoundFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateInstanceUnloadedFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateOperationNotAvailableFault", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateSuspendedFault", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateTerminatedFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateTransactedLockException", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Guid"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateFailedFault", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Code", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.FaultCode"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasDetail", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.FaultReason"))
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAbortedFaultException", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.FaultException")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnWriteDetailContents", 
      JSIL.MethodSignature.Action($asm21.TypeRef("System.Xml.XmlDictionaryWriter"))
    );

    $.Field({Static:true , Public:false}, "instanceAbortedCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceCompletedCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceTerminatedCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceSuspendedFaultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceUnloadedFaultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceNotFoundCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "instanceLockedFaultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "operationNotAvailableFaultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:true , Public:false}, "updatedFailedFaultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:false, Public:false}, "faultCode", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Field({Static:false, Public:false}, "faultReason", $asm22.TypeRef("System.ServiceModel.FaultReason"));

    $.Property({Static:false, Public:true , Virtual:true }, "Code", $asm22.TypeRef("System.ServiceModel.FaultCode"));

    $.Property({Static:false, Public:true , Virtual:true }, "HasDetail", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Reason", $asm22.TypeRef("System.ServiceModel.FaultReason"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.OptionalMessageQuery */ 

(function OptionalMessageQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.MessageQuery)) ();
  };





  function OptionalMessageQuery_get_Query () {
    return this.OptionalMessageQuery$Query$value;
  }; 

  function OptionalMessageQuery_set_Query (value) {
    this.OptionalMessageQuery$Query$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"), 
      Name: "System.ServiceModel.Activities.Dispatcher.OptionalMessageQuery", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Evaluate", 
      new JSIL.MethodSignature("!!0", [$asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer")], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Evaluate", 
      new JSIL.MethodSignature("!!0", [$asm22.TypeRef("System.ServiceModel.Channels.Message")], ["TResult"])
    );

    $.Method({Static:false, Public:true }, "get_Query", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery")), 
      OptionalMessageQuery_get_Query
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Query", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery")), 
      OptionalMessageQuery_set_Query
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OptionalMessageQuery$Query$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Query", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.TransactionContext */ 

(function TransactionContext$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.TransactionContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAbortedOrInDoubtTransactionException", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.TransactionException"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndPrepare", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Commit", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Commit");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.InDoubt", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "InDoubt");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Prepare", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.PreparingEnlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Prepare");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Rollback", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Rollback");

    $.Field({Static:true , Public:false}, "handleEndPrepare", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "currentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "durableInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Property({Static:false, Public:true }, "CurrentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.ImplementInterfaces(
      /* 0 */ $asm27.TypeRef("System.Transactions.IEnlistmentNotification")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.TransactionContext+PrepareAsyncResult */ 

(function PrepareAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.TransactionContext+PrepareAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnEndPersist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "onEndPersist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnEndPersist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "context", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance */ 

(function WorkflowServiceInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm35.System.Runtime.IPersistencePipelineModule))) ();
  };























































  function WorkflowServiceInstance_get_HasBeenUpdated () {
    return this.WorkflowServiceInstance$HasBeenUpdated$value;
  }; 





  function WorkflowServiceInstance_get_PipelineModules () {
    return this.WorkflowServiceInstance$PipelineModules$value;
  }; 





















































  function WorkflowServiceInstance_set_HasBeenUpdated (value) {
    this.WorkflowServiceInstance$HasBeenUpdated$value = value;
  }; 

  function WorkflowServiceInstance_set_PipelineModules (value) {
    this.WorkflowServiceInstance$PipelineModules$value = value;
  }; 


























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortExtensions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortInstance", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortInstance", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcquireLock", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcquireLockAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $asm25.TypeRef("System.Runtime.FastAsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcquireLockAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $.Boolean, 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $asm25.TypeRef("System.Runtime.FastAsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCheckCanPersistWaiter", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WaitForCanPersistAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AreBookmarksInvalid", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.BookmarkResumptionResult")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAbandonAndSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAcquireLockOnIdle", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAssociateInfrastructureKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReleaseInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeProtocolBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkScope"), 
          $.Object, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm27.TypeRef("System.Transactions.Transaction"), $.String, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.Boolean, $.String, 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTryAcquireReference", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnsuspend", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginWaitForCanPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginWaitForPendingOperations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupIdleWaiter", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.AsyncWaitHandle"), $asm07.TypeRef("System.Exception"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompletePendingOperations", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAbandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAbandonAndSuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAcquireLockOnIdle", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAcquireLockOnIdle", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAssociateInfrastructureKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndCancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndPersist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndReleaseInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndReleaseInstanceForClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndResumeProtocolBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndRun", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndSuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTerminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTryAcquireReference", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUnsuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndWaitForCanPersist", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndWaitForPendingOperations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FaultPendingRequests", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePersistenceData", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BufferedReceiveManager", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"))
    );

    $.Method({Static:false, Public:true }, "get_HasBeenUpdated", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowServiceInstance_get_HasBeenUpdated
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsActive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsHandlerThread", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_PipelineModules", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")])), 
      WorkflowServiceInstance_get_PipelineModules
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ShouldRaiseComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ShouldRaiseIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_SupportsInstanceKeys", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TrackCompleteDoneCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TrackIdleDoneCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TrackUnhandledExceptionDoneCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UnhandledExceptionPolicy", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionPolicyHelper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UnloadInstancePolicy", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCompletionState", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndReleaseInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "InitializeInstance", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Guid"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext"), 
          $asm07.TypeRef("System.Threading.SynchronizationContext"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsLoadTransactionRequired", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkUnloaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyCheckCanPersistWaiters", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyNextIdleWaiter", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbortLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbortTrackingComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginAssociateKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginFlushTrackingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnDisassociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndAssociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndFlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnIdle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquiredAsync", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyPaused", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyUnhandledException", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPersistenceContextClosed", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnReleaseInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRequestAbort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackCompleteDone", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackIdleDone", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackUnhandledExceptionDone", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnTransactionAbortOrInDoubt", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.TransactionException"))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnTransactionPrepared", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnUnhandledException", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionAsyncData"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareNextIdleWaiter", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RecoverLastReference", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseLock", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseLock", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseReference", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "RemovePendingOperation", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResumeProtocolBookmarkCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm0B.TypeRef("System.Activities.BookmarkScope"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm25.TypeRef("System.Runtime.AsyncWaitHandle")]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RunCore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleAbortTracking", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_HasBeenUpdated", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowServiceInstance_set_HasBeenUpdated
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PipelineModules", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")])), 
      WorkflowServiceInstance_set_PipelineModules
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetupExtensions", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetupIdleWaiter", 
      new JSIL.MethodSignature($asm25.TypeRef("System.Runtime.AsyncWaitHandle"), [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "StartUnloadInstancePolicyIfNecessary", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNoPersistenceProvider", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfSuspended", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfTerminatedOrCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfUnloaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackAbort", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackPersistence", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PersistenceOperation"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TransactionCommitted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAddReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryReleaseLastReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Validate", 
      new JSIL.MethodSignature(null, [
          $.String, $asm27.TypeRef("System.Transactions.Transaction"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateHelper", 
      new JSIL.MethodSignature(null, [
          $.String, $asm27.TypeRef("System.Transactions.Transaction"), 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForAbort", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForAssociateKeys", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForCancel", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForPersist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForResumeProtocolBookmark", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForRun", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForSuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForTerminate", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForUnload", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForUnsuspend", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.Field({Static:true , Public:false}, "handleEndReleaseInstance", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "lockAcquiredAsyncCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLockAcquiredAsync", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "trackCompleteDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "trackIdleDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "trackUnhandledExceptionDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "emptyBookmarkInfoCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));

    $.Field({Static:false, Public:false}, "executorLock", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock"));

    $.Field({Static:false, Public:false}, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false}, "persistencePipelineInUse", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "abortingExtensions", $.Boolean);

    $.Field({Static:false, Public:false}, "activeOperations", $.Int32);

    $.Field({Static:false, Public:false}, "activeOperationsLock", $.Object);

    $.Field({Static:false, Public:false}, "handlerThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "isInHandler", $.Boolean);

    $.Field({Static:false, Public:false}, "idleWaiters", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm25.TypeRef("System.Runtime.AsyncWaitHandle")]));

    $.Field({Static:false, Public:false}, "nextIdleWaiters", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm25.TypeRef("System.Runtime.AsyncWaitHandle")]));

    $.Field({Static:false, Public:false}, "checkCanPersistWaiters", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WaitForCanPersistAsyncResult")]));

    $.Field({Static:false, Public:false}, "workflowServiceInstanceReadyWaitHandle", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "isWorkflowServiceInstanceReady", $.Boolean);

    $.Field({Static:false, Public:false}, "hasRaisedCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "hasPersistedDeleted", $.Boolean);

    $.Field({Static:false, Public:false}, "isRunnable", $.Boolean);

    $.Field({Static:false, Public:false}, "bufferedReceiveManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"));

    $.Field({Static:false, Public:false}, "state", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+State"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "transactionContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionContext"));

    $.Field({Static:false, Public:false}, "isInTransaction", $.Boolean);

    $.Field({Static:false, Public:false}, "isTransactedCancelled", $.Boolean);

    $.Field({Static:false, Public:false}, "pendingOperations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PendingOperationAsyncResult")])]));

    $.Field({Static:false, Public:false}, "pendingOperationCount", $.Int32);

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "hasDataToPersist", $.Boolean);

    $.Field({Static:false, Public:false}, "pendingRequests", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowOperationContext")]));

    $.Field({Static:false, Public:false}, "unloadInstancePolicy", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper"));

    $.Field({Static:false, Public:false}, "unhandledExceptionPolicy", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionPolicyHelper"));

    $.Field({Static:false, Public:false}, "referenceCount", $.Int32);

    $.Field({Static:false, Public:false}, "acquireReferenceSemaphore", $asm25.TypeRef("System.Runtime.ThreadNeutralSemaphore"));

    $.Field({Static:false, Public:false}, "serviceHost", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Field({Static:false, Public:false}, "creationContext", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext"));

    $.Field({Static:false, Public:false}, "creationContextAborted", $.Boolean);

    $.Field({Static:false, Public:false}, "workflowOutputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "terminationException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "completionState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Field({Static:false, Public:false}, "persistTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "trackTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "acquireLockTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "hasIncrementedBusyCount", $.Boolean);

    $.Field({Static:false, Public:false}, "WorkflowServiceInstance$PipelineModules$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowServiceInstance$HasBeenUpdated$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "TrackIdleDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:true , Public:false}, "TrackUnhandledExceptionDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:true , Public:false}, "TrackCompleteDoneCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:false, Public:false}, "PipelineModules", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")]));

    $.Property({Static:false, Public:true }, "BufferedReceiveManager", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.BufferedReceiveManager"));

    $.Property({Static:false, Public:true , Virtual:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "IsActive", $.Boolean);

    $.Property({Static:false, Public:true }, "HasBeenUpdated", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "SupportsInstanceKeys", $.Boolean);

    $.Property({Static:false, Public:false}, "IsIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "ShouldRaiseComplete", $.Boolean);

    $.Property({Static:false, Public:false}, "ShouldRaiseIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "IsHandlerThread", $.Boolean);

    $.Property({Static:false, Public:false}, "UnloadInstancePolicy", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper"));

    $.Property({Static:false, Public:false}, "UnhandledExceptionPolicy", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionPolicyHelper"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+InvokeCompletedCallback */ 

JSIL.MakeDelegate("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+InvokeCompletedCallback", false, [], 
  JSIL.MethodSignature.Void);

/* enum System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PersistenceOperation */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PersistenceOperation", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Delete: 0, 
    Save: 1, 
    Unload: 2, 
  }
);

/* struct System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AcquireLockAsyncData */ 

(function AcquireLockAsyncData$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AcquireLockAsyncData", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm25.TypeRef("System.Runtime.FastAsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Callback", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.FastAsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "callback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"));

    $.Field({Static:false, Public:false}, "state", $.Object);

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Property({Static:false, Public:true }, "Callback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"));

    $.Property({Static:false, Public:true }, "State", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbortInstanceState */ 

(function AbortInstanceState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function AbortInstanceState_get_Reason () {
    return this.AbortInstanceState$Reason$value;
  }; 

  function AbortInstanceState_get_ShouldTrackAbort () {
    return this.AbortInstanceState$ShouldTrackAbort$value;
  }; 

  function AbortInstanceState_set_Reason (value) {
    this.AbortInstanceState$Reason$value = value;
  }; 

  function AbortInstanceState_set_ShouldTrackAbort (value) {
    this.AbortInstanceState$ShouldTrackAbort$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbortInstanceState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.Method({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      AbortInstanceState_get_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackAbort", 
      JSIL.MethodSignature.Return($.Boolean), 
      AbortInstanceState_get_ShouldTrackAbort
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      AbortInstanceState_set_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackAbort", 
      JSIL.MethodSignature.Action($.Boolean), 
      AbortInstanceState_set_ShouldTrackAbort
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AbortInstanceState$Reason$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AbortInstanceState$ShouldTrackAbort$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Reason", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "ShouldTrackAbort", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+State */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+State", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Active: 0, 
    Aborted: 1, 
    Suspended: 2, 
    Completed: 3, 
    Unloaded: 4, 
  }
);

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+ReleaseInstanceAsyncResult */ 

(function ReleaseInstanceAsyncResult$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+ReleaseInstanceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AcquireCompletedCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTryUnload", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginUnload", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndTryUnload", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndAcquireReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndUnload", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LockAndReleasePersistenceContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnClosePersistenceContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnReleasePersistenceContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleasePersistenceContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAcquire", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "handleEndUnload", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "lockAcquiredCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLockAcquired", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "acquireCompletedCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AcquireCompletedCallback", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onReleasePersistenceContext", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:true , Public:false}, "onClosePersistenceContext", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:false, Public:false}, "workflowInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "isTryUnload", $.Boolean);

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.Field({Static:false, Public:false}, "referenceAcquired", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+TryAcquireReferenceAsyncResult */ 

(function TryAcquireReferenceAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+TryAcquireReferenceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AcquireCompletedCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndAcquireReference", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAcquire", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "acquireCompletedCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AcquireCompletedCallback", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "result", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PendingOperationAsyncResult */ 

(function PendingOperationAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PendingOperationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndWait", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Start", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Unblock", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "handleEndWait", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndWait", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:false, Public:false}, "waitHandle", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "isFirstRequest", $.Boolean);

    $.Field({Static:false, Public:false}, "timeout", $asm07.TypeRef("System.TimeSpan"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AssociateKeysAsyncResult */ 

(function AssociateKeysAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AssociateKeysAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AssociateKeys", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleAssociateInfrastructureKeys", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleLockAcquired", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleLockAcquired", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleLockAcquired", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleAssociateInfrastructureKeys", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleAssociateInfrastructureKeys", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "workflow", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "associatedKeys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+ResumeProtocolBookmarkAsyncResult */ 

(function ResumeProtocolBookmarkAsyncResult$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+ResumeProtocolBookmarkAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object, $asm0B.TypeRef("System.Activities.BookmarkScope"), 
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DoResumeBookmark", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndLockAcquired", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndReferenceAcquired", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndTrack", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnNextIdle", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnSignaled", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformResumption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackPerformResumption", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForInstanceToBeReady", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitToBeSignaled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "nextIdleCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:true , Public:false}, "workflowServiceInstanceReadyCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndTrack", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndTrack", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndLockAcquired", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndLockAcquired", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndReferenceAcquired", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndReferenceAcquired", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "bookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "nextIdleTimeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "waitHandle", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.Field({Static:false, Public:false}, "resumptionResult", $asm0B.TypeRef("System.Activities.BookmarkResumptionResult"));

    $.Field({Static:false, Public:false}, "isResumeProtocolBookmark", $.Boolean);

    $.Field({Static:false, Public:false}, "referenceAcquired", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadOrPersistAsyncResult */ 

(function UnloadOrPersistAsyncResult$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadOrPersistAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PersistenceOperation"), 
          $.Boolean, $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectAndMap", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDuration", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNextInnerAsyncCompletion", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"))
    );

    $.ExternalMethod({Static:false, Public:false}, "LockAndPassGuard", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyCompletion", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnCompleteContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnNotifyCompletion", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnPersisted", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnProviderOpened", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnSaved", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitForCanPersist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OpenProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OutermostCallback", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PassGuard", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Persist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareInnerAsyncCompletion", 
      new JSIL.MethodSignature($asm07.TypeRef("System.AsyncCallback"), [$asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Save", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetStartTime", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Track", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "lockAcquiredCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLockAcquired", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "persistedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnPersisted", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "savedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnSaved", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "waitForCanPersistCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnWaitForCanPersist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "providerOpenedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnProviderOpened", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "outermostCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OutermostCallback", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "trackingCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnTrackingComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeContextCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnCompleteContext", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "notifyCompletionCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnNotifyCompletion", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "isUnloaded", $.Boolean);

    $.Field({Static:false, Public:false}, "saveStatus", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.SaveStatus"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "operation", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+PersistenceOperation"));

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowPersistenceContext"));

    $.Field({Static:false, Public:false}, "nextInnerAsyncCompletion", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:false, Public:false}, "data", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "pipeline", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.Field({Static:false, Public:false}, "isWorkflowThread", $.Boolean);

    $.Field({Static:false, Public:false}, "isTry", $.Boolean);

    $.Field({Static:false, Public:false}, "tryResult", $.Boolean);

    $.Field({Static:false, Public:false}, "updateState", $.Boolean);

    $.Field({Static:false, Public:false}, "isCompletionTransactionRequired", $.Boolean);

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "isIdlePolicyPersist", $.Boolean);

    $.Field({Static:false, Public:false}, "startTime", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult */ 

(function SimpleOperationAsyncResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm27.System.Transactions.Transaction)) ();
  };









  function SimpleOperationAsyncResult_get_OperationTransaction () {
    return this.SimpleOperationAsyncResult$OperationTransaction$value;
  }; 









  function SimpleOperationAsyncResult_set_OperationTransaction (value) {
    this.SimpleOperationAsyncResult$OperationTransaction$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AttachTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginPerformOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndPerformOperation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSynchronousOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_OperationTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      SimpleOperationAsyncResult_get_OperationTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "HandleEndPerformOperation", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndTrack", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleLockAcquired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseLock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "set_OperationTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      SimpleOperationAsyncResult_set_OperationTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Track", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "lockAcquiredCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLockAcquired", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndPerformOperation", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:true , Public:false}, "handleEndTrack", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.Field({Static:false, Public:false}, "SimpleOperationAsyncResult$OperationTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Property({Static:false, Public:false}, "OperationTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsSynchronousOperation", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+TerminateAsyncResult */ 

(function TerminateAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+TerminateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbandonAsyncResult */ 

(function AbandonAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbandonAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $.Boolean, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginPerformOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndPerformOperation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSynchronousOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "shouldTrackAbort", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "IsSynchronousOperation", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbandonAndSuspendAsyncResult */ 

(function AbandonAndSuspendAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AbandonAndSuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginPerformOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndPerformOperation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSynchronousOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsSynchronousOperation", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+CancelAsyncResult */ 

(function CancelAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+CancelAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+RunAsyncResult */ 

(function RunAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+RunAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $.String, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "operationName", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult */ 

(function SuspendAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $.Boolean, 
          $.String, $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginPerformOperation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $.Boolean, 
          $.String, $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndPerformOperation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsSynchronousOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "isUnlocked", $.Boolean);

    $.Field({Static:false, Public:false}, "reason", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "IsSynchronousOperation", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult+SuspendCoreAsyncResult */ 

(function SuspendCoreAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult+SuspendCoreAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndWaitForCanPersist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "handleEndWaitForCanPersist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndWaitForCanPersist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "parent", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SuspendAsyncResult"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnsuspendAsyncResult */ 

(function UnsuspendAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+SimpleOperationAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnsuspendAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PostOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AcquireLockOnIdleAsyncResult */ 

(function AcquireLockOnIdleAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+AcquireLockOnIdleAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.TimeSpan"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckState", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnIdleReceived", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false}, "lockAcquiredCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLockAcquired", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "idleReceivedCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnIdleReceived", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:false, Public:false}, "idleEvent", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "acquiredLockAsynchronously", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WaitForCanPersistAsyncResult */ 

(function WaitForCanPersistAsyncResult$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WaitForCanPersistAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcquireLockWithoutPause", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleLockAcquired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleWaitEvent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLockAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitEvent", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetEvent", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForCanPersist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "onWaitEvent", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:true , Public:false}, "onLockAcquired", $asm25.TypeRef("System.Runtime.FastAsyncCallback"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "ownsLock", $.Boolean);

    $.Field({Static:false, Public:false}, "mustWait", $.Boolean);

    $.Field({Static:false, Public:false}, "checkCanPersistEvent", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock */ 

(function WorkflowExecutionLock$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanupWaiter", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Enter", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $asm25.TypeRef("System.Runtime.FastAsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterCore", 
      new JSIL.MethodSignature($asm25.TypeRef("System.Runtime.AsyncWaitHandle"), [$jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLocked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Waiters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnAsyncWaiterSignaled", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetupWaiter", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetupWaiter", 
      new JSIL.MethodSignature(null, [$.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryEnter", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryEnter", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.Field({Static:true , Public:false}, "asyncWaiterSignaledCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnAsyncWaiterSignaled", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:false, Public:false}, "owned", $.Boolean);

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "ThisLock", $.Object);

    $.Field({Static:false, Public:false}, "waiters", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

    $.Property({Static:false, Public:false}, "Waiters", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock+AsyncWaiterData */ 

(function AsyncWaiterData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm25.System.Runtime.FastAsyncCallback)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance_WorkflowExecutionLock)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Object)) ();
  };



  function AsyncWaiterData_get_Callback () {
    return this.AsyncWaiterData$Callback$value;
  }; 

  function AsyncWaiterData_get_Owner () {
    return this.AsyncWaiterData$Owner$value;
  }; 

  function AsyncWaiterData_get_State () {
    return this.AsyncWaiterData$State$value;
  }; 

  function AsyncWaiterData_get_Token () {
    return this.AsyncWaiterData$Token$value;
  }; 

  function AsyncWaiterData_set_Callback (value) {
    this.AsyncWaiterData$Callback$value = value;
  }; 

  function AsyncWaiterData_set_Owner (value) {
    this.AsyncWaiterData$Owner$value = value;
  }; 

  function AsyncWaiterData_set_State (value) {
    this.AsyncWaiterData$State$value = value;
  }; 

  function AsyncWaiterData_set_Token (value) {
    this.AsyncWaiterData$Token$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock+AsyncWaiterData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock"), $asm25.TypeRef("System.Runtime.FastAsyncCallback"), 
          $.Object, $.Object
        ])
    );

    $.Method({Static:false, Public:true }, "get_Callback", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.FastAsyncCallback")), 
      AsyncWaiterData_get_Callback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Owner", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock")), 
      AsyncWaiterData_get_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.Object), 
      AsyncWaiterData_get_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Token", 
      JSIL.MethodSignature.Return($.Object), 
      AsyncWaiterData_get_Token
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Callback", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.FastAsyncCallback")), 
      AsyncWaiterData_set_Callback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock")), 
      AsyncWaiterData_set_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_State", 
      JSIL.MethodSignature.Action($.Object), 
      AsyncWaiterData_set_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Token", 
      JSIL.MethodSignature.Action($.Object), 
      AsyncWaiterData_set_Token
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncWaiterData$Owner$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncWaiterData$Callback$value", $asm25.TypeRef("System.Runtime.FastAsyncCallback"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncWaiterData$State$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncWaiterData$Token$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Owner", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowExecutionLock"));

    $.Property({Static:false, Public:true }, "Callback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"));

    $.Property({Static:false, Public:true }, "State", $.Object);

    $.Property({Static:false, Public:true }, "Token", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionAsyncData */ 

(function UnhandledExceptionAsyncData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance)) ();
  };



  function UnhandledExceptionAsyncData_get_Exception () {
    return this.UnhandledExceptionAsyncData$Exception$value;
  }; 

  function UnhandledExceptionAsyncData_get_ExceptionSource () {
    return this.UnhandledExceptionAsyncData$ExceptionSource$value;
  }; 

  function UnhandledExceptionAsyncData_get_Instance () {
    return this.UnhandledExceptionAsyncData$Instance$value;
  }; 

  function UnhandledExceptionAsyncData_set_Exception (value) {
    this.UnhandledExceptionAsyncData$Exception$value = value;
  }; 

  function UnhandledExceptionAsyncData_set_ExceptionSource (value) {
    this.UnhandledExceptionAsyncData$ExceptionSource$value = value;
  }; 

  function UnhandledExceptionAsyncData_set_Instance (value) {
    this.UnhandledExceptionAsyncData$Instance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionAsyncData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      UnhandledExceptionAsyncData_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      UnhandledExceptionAsyncData_get_ExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance")), 
      UnhandledExceptionAsyncData_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      UnhandledExceptionAsyncData_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExceptionSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      UnhandledExceptionAsyncData_set_ExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance")), 
      UnhandledExceptionAsyncData_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnhandledExceptionAsyncData$ExceptionSource$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnhandledExceptionAsyncData$Instance$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnhandledExceptionAsyncData$Exception$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ExceptionSource", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowPersistenceContext */ 

(function WorkflowPersistenceContext$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+WorkflowPersistenceContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $.Boolean, 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PublicTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryBeginComplete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.AsyncCallback"), $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IAsyncResult")])
        ])
    );

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "contextOwnedTransaction", $asm27.TypeRef("System.Transactions.CommittableTransaction"));

    $.Field({Static:false, Public:false}, "clonedTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "PublicTransaction", $asm27.TypeRef("System.Transactions.Transaction"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper */ 

(function UnloadInstancePolicyHelper$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginUnlockAndAbort", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EndUnlockAndAbort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTimerCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "Persist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "PersistCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetTimer", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.IOThreadTimer"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Unload", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "UnloadCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UnlockAndAbortCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:true , Public:false}, "onTimerCallback", $asm07.TypeRef("System.Action`1", [$.Object]), function ($pi) {
        return $asm07.System.Action$b1.Of($asm07.System.Object).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnTimerCallback", JSIL.MethodSignature.Action($.Object), true, false));
      });

    $.Field({Static:true , Public:false}, "onPersistCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "onUnloadCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "onUnlockAndAbortCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "timeToUnload", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "persistTimer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));

    $.Field({Static:false, Public:false}, "unloadTimer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));

    $.Field({Static:false, Public:false}, "cancelled", $.Boolean);

    $.Field({Static:false, Public:false}, "persistEnabled", $.Boolean);

    $.Field({Static:false, Public:false}, "unloadEnabled", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper+UnlockAndAbortAsyncResult */ 

(function UnlockAndAbortAsyncResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnloadInstancePolicyHelper+UnlockAndAbortAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AcquireCompletedCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndAbandon", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndAcquireReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseAcquiredReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "onCompleting", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "acquireCompletedCallback", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "AcquireCompletedCallback", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleEndAbandon", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "referenceAcquired", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionPolicyHelper */ 

(function UnhandledExceptionPolicyHelper$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionPolicyHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleEndOperation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnUnhandledException", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+UnhandledExceptionAsyncData"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OperationCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:true , Public:false}, "operationCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "instance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "action", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsLoadTransactionRequired$gb__83_0", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__83_0", $asm07.TypeRef("System.Func`2", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.Dispatcher.WorkflowSynchronizationContext */ 

(function WorkflowSynchronizationContext$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Threading.SynchronizationContext"), 
      Name: "System.ServiceModel.Activities.Dispatcher.WorkflowSynchronizationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateCopy", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Post", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Send", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.Field({Static:true , Public:false}, "singletonInstance", $.Type);

    $.Property({Static:true , Public:true }, "Instance", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext */ 

(function PersistenceContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm10.System.Collections.Generic.HashSet$b1.Of($asm35.System.Runtime.DurableInstancing.InstanceKey))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.ObjectModel.ReadOnlyCollection$b1.Of($asm0B.System.Activities.Hosting.BookmarkInfo))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.String)) ();
  };



















  function PersistenceContext_get_AssociatedKeys () {
    return this.PersistenceContext$AssociatedKeys$value;
  }; 

  function PersistenceContext_get_Bookmarks () {
    return this.PersistenceContext$Bookmarks$value;
  }; 




  function PersistenceContext_get_Detaching () {
    return this.PersistenceContext$Detaching$value;
  }; 

  function PersistenceContext_get_InstanceId () {
    return this.PersistenceContext$InstanceId$value;
  }; 

  function PersistenceContext_get_IsCompleted () {
    return this.PersistenceContext$IsCompleted$value;
  }; 


  function PersistenceContext_get_IsInitialized () {
    return this.PersistenceContext$IsInitialized$value;
  }; 

  function PersistenceContext_get_IsLocked () {
    return this.PersistenceContext$IsLocked$value;
  }; 

  function PersistenceContext_get_IsPermanentlyRemoved () {
    return this.PersistenceContext$IsPermanentlyRemoved$value;
  }; 

  function PersistenceContext_get_IsSuspended () {
    return this.PersistenceContext$IsSuspended$value;
  }; 

  function PersistenceContext_get_IsVisible () {
    return this.PersistenceContext$IsVisible$value;
  }; 


  function PersistenceContext_get_SuspendedReason () {
    return this.PersistenceContext$SuspendedReason$value;
  }; 


















  function PersistenceContext_set_AssociatedKeys (value) {
    this.PersistenceContext$AssociatedKeys$value = value;
  }; 

  function PersistenceContext_set_Bookmarks (value) {
    this.PersistenceContext$Bookmarks$value = value;
  }; 

  function PersistenceContext_set_Detaching (value) {
    this.PersistenceContext$Detaching$value = value;
  }; 

  function PersistenceContext_set_InstanceId (value) {
    this.PersistenceContext$InstanceId$value = value.MemberwiseClone();
  }; 

  function PersistenceContext_set_IsCompleted (value) {
    this.PersistenceContext$IsCompleted$value = value;
  }; 

  function PersistenceContext_set_IsInitialized (value) {
    this.PersistenceContext$IsInitialized$value = value;
  }; 

  function PersistenceContext_set_IsLocked (value) {
    this.PersistenceContext$IsLocked$value = value;
  }; 

  function PersistenceContext_set_IsPermanentlyRemoved (value) {
    this.PersistenceContext$IsPermanentlyRemoved$value = value;
  }; 

  function PersistenceContext_set_IsSuspended (value) {
    this.PersistenceContext$IsSuspended$value = value;
  }; 

  function PersistenceContext_set_IsVisible (value) {
    this.PersistenceContext$IsVisible$value = value;
  }; 

  function PersistenceContext_set_SuspendedReason (value) {
    this.PersistenceContext$SuspendedReason$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.Channels.CommunicationObject"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"), $asm07.TypeRef("System.Guid"), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"), $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $.Boolean, 
          $.Boolean, $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAssociateInfrastructureKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAssociateKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAssociateKeysHelper", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.TimeSpan"), 
          $.Boolean, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginEnlist", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionWaitAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRelease", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.SaveStatus"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUpdateSuspendMetadata", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "DisassociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAssociateInfrastructureKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAssociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndEnlist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndRelease", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUpdateSuspendMetadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishOperation", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_AssociatedKeys", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])), 
      PersistenceContext_get_AssociatedKeys
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Bookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")])), 
      PersistenceContext_get_Bookmarks
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CanPersist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DefaultCloseTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DefaultOpenTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "get_Detaching", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_Detaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      PersistenceContext_get_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsCompleted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsHandleValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsLocked", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsLocked
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsPermanentlyRemoved", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsPermanentlyRemoved
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsSuspended", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsSuspended
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsVisible", 
      JSIL.MethodSignature.Return($.Boolean), 
      PersistenceContext_get_IsVisible
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_LockingTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.Method({Static:false, Public:true }, "get_SuspendedReason", 
      JSIL.MethodSignature.Return($.String), 
      PersistenceContext_get_SuspendedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetInstance", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), [$asm24.TypeRef("System.ServiceModel.Activities.WorkflowGetInstanceContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnAbort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginClose", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginOpen", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndClose", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndOpen", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnFaulted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperationHelper", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnOpen", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateActivationMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"))
    );

    $.ExternalMethod({Static:false, Public:false}, "QueueForTransactionLock", 
      new JSIL.MethodSignature($.Boolean, [$asm27.TypeRef("System.Transactions.Transaction"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionWaitAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RationalizeSavedKeys", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadSuspendedInfo", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleDetach", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleNextTransactionWaiter", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_AssociatedKeys", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])), 
      PersistenceContext_set_AssociatedKeys
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Bookmarks", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")])), 
      PersistenceContext_set_Bookmarks
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Detaching", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_Detaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      PersistenceContext_set_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsCompleted", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsCompleted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsInitialized", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsLocked", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsLocked
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsPermanentlyRemoved", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsPermanentlyRemoved
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsSuspended", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsSuspended
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsVisible", 
      JSIL.MethodSignature.Action($.Boolean), 
      PersistenceContext_set_IsVisible
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SuspendedReason", 
      JSIL.MethodSignature.Action($.String), 
      PersistenceContext_set_SuspendedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "StartOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotVisible", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $jsilcore.TypeRef("JSIL.Reference", ["!!0"])
        ], ["T"])
    );

    $.Field({Static:true , Public:false}, "Enlistments", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContextEnlistment")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "directory", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "store", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "keysToAssociate", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "keysToDisassociate", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:true , Public:false}, "defaultOpenTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false}, "defaultCloseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "operationInProgress", $.Boolean);

    $.Field({Static:false, Public:false}, "workflowInstance", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"));

    $.Field({Static:false, Public:false}, "lockingTransaction", $.Int32);

    $.Field({Static:false, Public:false}, "lockingTransactionObject", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "transactionWaiterQueue", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.TransactionWaitAsyncResult")]));

    $.Field({Static:false, Public:false}, "PersistenceContext$InstanceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsLocked$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsInitialized$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsCompleted$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsVisible$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsSuspended$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$SuspendedReason$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$Detaching$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$IsPermanentlyRemoved$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$AssociatedKeys$value", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceContext$Bookmarks$value", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function PersistenceContext__cctor () {
      $thisType.defaultOpenTimeout = new $asm07.System.TimeSpan();
      $thisType.defaultCloseTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      PersistenceContext__cctor
    );

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

    $.Property({Static:false, Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:false, Public:true }, "IsCompleted", $.Boolean);

    $.Property({Static:false, Public:true }, "IsVisible", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSuspended", $.Boolean);

    $.Property({Static:false, Public:true }, "SuspendedReason", $.String);

    $.Property({Static:false, Public:false}, "Detaching", $.Boolean);

    $.Property({Static:false, Public:true }, "CanPersist", $.Boolean);

    $.Property({Static:false, Public:true }, "IsHandleValid", $.Boolean);

    $.Property({Static:false, Public:false}, "LockingTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:false}, "IsPermanentlyRemoved", $.Boolean);

    $.Property({Static:false, Public:false}, "AssociatedKeys", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Property({Static:false, Public:false}, "Bookmarks", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));

    $.Property({Static:false, Public:false, Virtual:true }, "DefaultCloseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false, Virtual:true }, "DefaultOpenTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext+CloseAsyncResult */ 

(function CloseAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext+CloseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperation", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:false, Public:false}, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext+SaveAsyncResult */ 

(function SaveAsyncResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext+SaveAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), 
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.SaveStatus"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterEnlist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterSave", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndEnlist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperation", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndEnlist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndEnlist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "saveStatus", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.SaveStatus"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext+ReleaseAsyncResult */ 

(function ReleaseAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext+ReleaseAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterUnlock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndEnlist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperation", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndEnlist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndEnlist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext+AssociateKeysAsyncResult */ 

(function AssociateKeysAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext+AssociateKeysAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm07.TypeRef("System.TimeSpan"), $.Boolean, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterUpdate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndEnlist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperation", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndEnlist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndEnlist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "applicationKeys", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "keysToAssociate", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContext+UpdateSuspendMetadataAsyncResult */ 

(function UpdateSuspendMetadataAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContext+UpdateSuspendMetadataAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Exception"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleEndExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinishOperation", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "handleEndExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleEndExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceContextEnlistment */ 

(function PersistenceContextEnlistment$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceContextEnlistment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToEnlistment", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DoCommit", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "DoIndoubt", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "DoPrepare", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "DoRollback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CommitCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IndoubtCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PrepareCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RollbackCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Commit", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Commit");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.InDoubt", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "InDoubt");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Prepare", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.PreparingEnlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Prepare");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Rollback", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Rollback");

    $.Field({Static:false, Public:false}, "preparingEnlistment", $asm27.TypeRef("System.Transactions.PreparingEnlistment"));

    $.Field({Static:false, Public:false}, "enlistment", $asm27.TypeRef("System.Transactions.Enlistment"));

    $.Field({Static:false, Public:false}, "tooLateForMoreUndo", $.Boolean);

    $.Field({Static:false, Public:false}, "transaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "ThisLock", $.Object);

    $.Field({Static:false, Public:false}, "enlistedContexts", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]));

    $.Field({Static:true , Public:false}, "prepareCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:true , Public:false}, "commitCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:true , Public:false}, "rollbackCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:true , Public:false}, "indoubtCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Property({Static:true , Public:false}, "PrepareCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Property({Static:true , Public:false}, "CommitCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Property({Static:true , Public:false}, "RollbackCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Property({Static:true , Public:false}, "IndoubtCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.ImplementInterfaces(
      /* 0 */ $asm27.TypeRef("System.Transactions.IEnlistmentNotification")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory */ 

(function PersistenceProviderDirectory$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Description.DurableConsistencyScope)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm30.System.Xml.Linq.XName, $asm35.System.Runtime.DurableInstancing.InstanceValue))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Int32)) ();
  };



















  function PersistenceProviderDirectory_get_ConsistencyScope () {
    return this.PersistenceProviderDirectory$ConsistencyScope$value;
  }; 

  function PersistenceProviderDirectory_get_InstanceMetadataChanges () {
    return this.PersistenceProviderDirectory$InstanceMetadataChanges$value;
  }; 

  function PersistenceProviderDirectory_get_MaxInstances () {
    return this.PersistenceProviderDirectory$MaxInstances$value;
  }; 















  function PersistenceProviderDirectory_set_ConsistencyScope (value) {
    this.PersistenceProviderDirectory$ConsistencyScope$value = value;
  }; 

  function PersistenceProviderDirectory_set_InstanceMetadataChanges (value) {
    this.PersistenceProviderDirectory$InstanceMetadataChanges$value = value;
  }; 

  function PersistenceProviderDirectory_set_MaxInstances (value) {
    this.PersistenceProviderDirectory$MaxInstances$value = (value | 0);
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"), 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), $asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"), 
          $asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope"), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortContexts", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm27.TypeRef("System.Transactions.Transaction"), $.Boolean, 
          $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoadOrCreate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoadOrCreate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginReserveThrottle", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateLoadCommandHelper", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle")]), 
          $.Boolean, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DetachContext", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "DetachContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndLoad", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndLoadOrCreate", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndReserveThrottle", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:true }, "get_ConsistencyScope", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope")), 
      PersistenceProviderDirectory_get_ConsistencyScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceMetadataChanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])), 
      PersistenceProviderDirectory_get_InstanceMetadataChanges
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MaxInstances", 
      JSIL.MethodSignature.Return($.Int32), 
      PersistenceProviderDirectory_get_MaxInstances
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetBookmarksForInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetContexts", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetTransactionForInstance", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
    );

    $.ExternalMethod({Static:false, Public:true }, "InitializeInstance", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), [
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "InitializeInstance", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.WorkflowServiceInstance"), [
          $asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm24.TypeRef("System.ServiceModel.Activities.WorkflowCreationContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromCache", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Guid"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadInProgressFinished", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"))
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadInProgressWaitHandle", 
      new JSIL.MethodSignature($asm25.TypeRef("System.Runtime.AsyncWaitHandle"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterPipelineInUse", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.PersistencePipeline"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseThrottle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveAssociations", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveInstance", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveInstance", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $.Boolean])
    );

    $.Method({Static:false, Public:false}, "set_ConsistencyScope", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope")), 
      PersistenceProviderDirectory_set_ConsistencyScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstanceMetadataChanges", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])), 
      PersistenceProviderDirectory_set_InstanceMetadataChanges
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_MaxInstances", 
      JSIL.MethodSignature.Action($.Int32), 
      PersistenceProviderDirectory_set_MaxInstances
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfClosedOrAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryAddAssociations", 
      new JSIL.MethodSignature($.Boolean, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryAddKeyToInstanceKeysCollection", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UnregisterPipelineInUse", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.PersistencePipeline"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "serviceHost", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "store", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "owner", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "workflowDefinitionProvider", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "keyMap", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "throttle", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+InstanceThrottle"));

    $.Field({Static:false, Public:false}, "instanceCache", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]));

    $.Field({Static:false, Public:false}, "loadsInProgress", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm25.TypeRef("System.Runtime.AsyncWaitHandle")]));

    $.Field({Static:false, Public:false}, "pipelinesInUse", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm35.TypeRef("System.Runtime.PersistencePipeline")]));

    $.Field({Static:false, Public:false}, "aborted", $.Boolean);

    $.Field({Static:false, Public:false}, "PersistenceProviderDirectory$InstanceMetadataChanges$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceProviderDirectory$ConsistencyScope$value", $asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceProviderDirectory$MaxInstances$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceMetadataChanges", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true }, "ConsistencyScope", $asm24.TypeRef("System.ServiceModel.Activities.Description.DurableConsistencyScope"));

    $.Property({Static:false, Public:true }, "MaxInstances", $.Int32);

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+LoadOrCreateAsyncResult */ 

(function LoadOrCreateAsyncResult$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+LoadOrCreateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 11, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), 
          $asm07.TypeRef("System.Guid"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm27.TypeRef("System.Transactions.Transaction"), 
          $.Boolean, $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToCache", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterLoad", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureWorkflowHostType", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Finish", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDuration", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "HandleContextEnlist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleExecute", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleLoadPipeline", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleLoadRetry", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleReserveThrottle", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleWaitForInProgressLoad", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Load", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromCache", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "PromoteTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ResolveHandleConflict", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetStartTime", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "onComplete", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleReserveThrottle", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleReserveThrottle", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleExecute", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleExecute", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleLoadRetry", $asm07.TypeRef("System.Action`1", [$.Object]), function ($pi) {
        return $asm07.System.Action$b1.Of($asm07.System.Object).New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleLoadRetry", JSIL.MethodSignature.Action($.Object), true, false));
      });

    $.Field({Static:true , Public:false}, "handleLoadPipeline", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleLoadPipeline", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleContextEnlist", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleContextEnlist", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "handleWaitForInProgressLoad", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "HandleWaitForInProgressLoad", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "ppd", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "key", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "canCreateInstance", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "associatedKeys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "transaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "loadAny", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "updatedIdentity", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowIdentityKey"));

    $.Field({Static:false, Public:false}, "suggestedIdOrId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "context", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false}, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "view", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"));

    $.Field({Static:false, Public:false}, "loadPending", $.Boolean);

    $.Field({Static:false, Public:false}, "contextsToAbort", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")]));

    $.Field({Static:false, Public:false}, "pipeline", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "isInstanceInitialized", $.Boolean);

    $.Field({Static:false, Public:false}, "lockInstance", $.Boolean);

    $.Field({Static:false, Public:false}, "result", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Field({Static:false, Public:false}, "addedToCacheResult", $.Boolean);

    $.Field({Static:false, Public:false}, "startTime", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+LoadOrCreateAsyncResult+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+LoadOrCreateAsyncResult+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAfterLoad$gb__39_0", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKeyView")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAfterLoad$gb__39_1", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKeyView")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__39_0", $asm07.TypeRef("System.Func`2", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKeyView"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:true , Public:true }, "$l$g9__39_1", $asm07.TypeRef("System.Func`2", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKeyView"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+ReserveThrottleAsyncResult */ 

(function ReserveThrottleAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+ReserveThrottleAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnThrottleAcquired", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "onThrottleAcquired", $asm25.TypeRef("System.Runtime.FastAsyncCallback"), function ($pi) {
        return $asm25.System.Runtime.FastAsyncCallback.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnThrottleAcquired", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "ppd", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory"));

    $.Field({Static:false, Public:false}, "ownsThrottle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+InstanceThrottle */ 

(function InstanceThrottle$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.PersistenceProviderDirectory+InstanceThrottle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $asm25.TypeRef("System.Runtime.FastAsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceWarning", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "throttle", $asm25.TypeRef("System.Runtime.ThreadNeutralSemaphore"));

    $.Field({Static:false, Public:false}, "maxCount", $.Int32);

    $.Field({Static:false, Public:false}, "warningRestoreLimit", $.Int32);

    $.Field({Static:false, Public:false}, "warningIssued", $.Boolean);

    $.Field({Static:false, Public:false, ReadOnly:true }, "serviceHost", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.Dispatcher.SaveStatus */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Dispatcher.SaveStatus", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Locked: 0, 
    Unlocked: 1, 
    Completed: 2, 
  }
);

/* class System.ServiceModel.Activities.Dispatcher.TransactionWaitAsyncResult */ 

(function TransactionWaitAsyncResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.Dispatcher.PersistenceContext)) ();
  };






  function TransactionWaitAsyncResult_get_PersistenceContext () {
    return this.TransactionWaitAsyncResult$PersistenceContext$value;
  }; 




  function TransactionWaitAsyncResult_set_PersistenceContext (value) {
    this.TransactionWaitAsyncResult$PersistenceContext$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.ServiceModel.Activities.Dispatcher.TransactionWaitAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm27.TypeRef("System.Transactions.Transaction"), $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Complete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateVolatileEnlistment", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.TransactionException"), [$asm27.TypeRef("System.Transactions.Transaction")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:false}, "get_PersistenceContext", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")), 
      TransactionWaitAsyncResult_get_PersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TimeoutCallbackAction", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Transaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.Method({Static:false, Public:false}, "set_PersistenceContext", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext")), 
      TransactionWaitAsyncResult_set_PersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "TimeoutCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:true , Public:false}, "timerCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "timer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "TransactionWaitAsyncResult$PersistenceContext$value", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "PersistenceContext", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.PersistenceContext"));

    $.Property({Static:false, Public:false}, "Transaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);

    $.Property({Static:true , Public:false}, "TimeoutCallbackAction", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator */ 

(function CorrelationKeyCalculator$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddQuery", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilter"), $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateKeys", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.Channels.Message"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateKeys", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
        ])
    );

    $.Field({Static:false, Public:false}, "bufferCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageBufferCalculator"));

    $.Field({Static:false, Public:false}, "messageCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageCalculator"));

    $.Field({Static:false, Public:false}, "scopeName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "whereRuntime", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilterTable`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")]));

    $.Field({Static:false, Public:false}, "keyCache", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationKeyCache"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+Calculator`1 */ 

(function Calculator$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+Calculator`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateKeys", 
      new JSIL.MethodSignature($.Boolean, [
          $.GenericParameter("T"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteSelect", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"), $.String])]), [
          $.GenericParameter("T"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteWhere", 
      new JSIL.MethodSignature($.Boolean, [
          $.GenericParameter("T"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilterTable`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")]), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceKey", 
      new JSIL.MethodSignature($asm22.TypeRef("System.ServiceModel.Channels.CorrelationKey"), [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceCorrelationKeys", 
      new JSIL.MethodSignature(null, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])])
    );

    $.Field({Static:false, Public:false}, "parent", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageBufferCalculator */ 

(function MessageBufferCalculator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+Calculator`1", [$asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer")]), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageBufferCalculator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteSelect", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"), $.String])]), [
          $asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteWhere", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.Channels.MessageBuffer"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilterTable`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")]), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageCalculator */ 

(function MessageCalculator$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+Calculator`1", [$asm22.TypeRef("System.ServiceModel.Channels.Message")]), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+MessageCalculator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteSelect", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQuery"), $.String])]), [
          $asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ExecuteWhere", 
      new JSIL.MethodSignature($.Boolean, [
          $asm22.TypeRef("System.ServiceModel.Channels.Message"), $asm22.TypeRef("System.ServiceModel.Channels.Message"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageFilterTable`1", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")]), $jsilcore.TypeRef("JSIL.Reference", [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime")])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime */ 

(function SelectRuntime$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm22.System.ServiceModel.Dispatcher.MessageQueryTable$b1.Of($asm07.System.String))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm22.System.ServiceModel.Dispatcher.MessageQueryTable$b1.Of($asm07.System.String)))) ();
  };



  function SelectRuntime_get_IsContextQuery () {
    return this.SelectRuntime$IsContextQuery$value;
  }; 

  function SelectRuntime_get_Select () {
    return this.SelectRuntime$Select$value;
  }; 

  function SelectRuntime_get_SelectAdditional () {
    return this.SelectRuntime$SelectAdditional$value;
  }; 

  function SelectRuntime_set_IsContextQuery (value) {
    this.SelectRuntime$IsContextQuery$value = value;
  }; 

  function SelectRuntime_set_Select (value) {
    this.SelectRuntime$Select$value = value;
  }; 

  function SelectRuntime_set_SelectAdditional (value) {
    this.SelectRuntime$SelectAdditional$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+SelectRuntime", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_IsContextQuery", 
      JSIL.MethodSignature.Return($.Boolean), 
      SelectRuntime_get_IsContextQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Select", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])), 
      SelectRuntime_get_Select
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SelectAdditional", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])])), 
      SelectRuntime_get_SelectAdditional
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsContextQuery", 
      JSIL.MethodSignature.Action($.Boolean), 
      SelectRuntime_set_IsContextQuery
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Select", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])), 
      SelectRuntime_set_Select
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SelectAdditional", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])])), 
      SelectRuntime_set_SelectAdditional
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SelectRuntime$Select$value", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SelectRuntime$SelectAdditional$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SelectRuntime$IsContextQuery$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Select", $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String]));

    $.Property({Static:false, Public:true }, "SelectAdditional", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm22.TypeRef("System.ServiceModel.Dispatcher.MessageQueryTable`1", [$.String])]));

    $.Property({Static:false, Public:false}, "IsContextQuery", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationKeyCache */ 

(function CorrelationKeyCache$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationKeyCache", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey"), $asm22.TypeRef("System.ServiceModel.Channels.CorrelationKey")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey"), $jsilcore.TypeRef("JSIL.Reference", [$asm22.TypeRef("System.ServiceModel.Channels.CorrelationKey")])])
    );

    $.Field({Static:false, Public:false}, "cache", $asm25.TypeRef("System.Runtime.Collections.HopperCache"));

    $.Field({Static:false, Public:false}, "cacheLock", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey */ 

(function CorrelationCacheKey$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CombineHashCodes", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateKey", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey+SingleCacheKey */ 

(function SingleCacheKey$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey+SingleCacheKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "hashCode", $.Int32);

    $.Field({Static:false, Public:false}, "key", $.String);

    $.Field({Static:false, Public:false}, "value", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey+MultipleCacheKey */ 

(function MultipleCacheKey$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey"), 
      Name: "System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator+CorrelationCacheKey+MultipleCacheKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "keyValues", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String]));

    $.Field({Static:false, Public:false}, "hashCode", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior */ 

(function BufferedReceiveServiceBehavior$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxPendingMessagesPerChannel", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsWorkflowEndpoint", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxPendingMessagesPerChannel", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Constant({Static:true , Public:false}, "DefaultMaxPendingMessagesPerChannel", $.Int32, 512);

    $.Field({Static:false, Public:false}, "maxPendingMessagesPerChannel", $.Int32);

    $.Property({Static:false, Public:true }, "MaxPendingMessagesPerChannel", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.ControlOperationBehavior */ 

(function ControlOperationBehavior$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.ControlOperationBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientOperation")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchOperation")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.Field({Static:false, Public:false}, "isWrappedMode", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IOperationBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute */ 

(function WorkflowContractBehaviorAttribute$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientRuntime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), 
          $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchRuntime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ContractDescription"), $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")])
    );

    $.ImplementInterfaces(
      /* 1 */ $asm22.TypeRef("System.ServiceModel.Description.IContractBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Interface]; });

})();

/* class System.ServiceModel.Activities.Description.WorkflowServiceBehavior */ 

(function WorkflowServiceBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm24.System.ServiceModel.Activities.WorkflowDefinitionProvider)) ();
  };





  function WorkflowServiceBehavior_get_WorkflowDefinitionProvider () {
    return this.WorkflowServiceBehavior$WorkflowDefinitionProvider$value;
  }; 


  function WorkflowServiceBehavior_set_WorkflowDefinitionProvider (value) {
    this.WorkflowServiceBehavior$WorkflowDefinitionProvider$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowServiceBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Method({Static:false, Public:true }, "get_WorkflowDefinitionProvider", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider")), 
      WorkflowServiceBehavior_get_WorkflowDefinitionProvider
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "IsWorkflowEndpoint", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Dispatcher.EndpointDispatcher")])
    );

    $.Method({Static:false, Public:false}, "set_WorkflowDefinitionProvider", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider")), 
      WorkflowServiceBehavior_set_WorkflowDefinitionProvider
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Field({Static:false, Public:false}, "WorkflowServiceBehavior$WorkflowDefinitionProvider$value", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "WorkflowDefinitionProvider", $asm24.TypeRef("System.ServiceModel.Activities.WorkflowDefinitionProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.Description.DurableConsistencyScope */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Description.DurableConsistencyScope", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Global: 0, 
    InstanceGlobalKeyLocal: 1, 
    Local: 2, 
  }
);

/* class System.ServiceModel.Activities.Description.EtwTrackingBehavior */ 

(function EtwTrackingBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function EtwTrackingBehavior_get_ProfileName () {
    return this.EtwTrackingBehavior$ProfileName$value;
  }; 


  function EtwTrackingBehavior_set_ProfileName (value) {
    this.EtwTrackingBehavior$ProfileName$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.EtwTrackingBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Method({Static:false, Public:true }, "get_ProfileName", 
      JSIL.MethodSignature.Return($.String), 
      EtwTrackingBehavior_get_ProfileName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetProfile", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), [$.String, $.String])
    );

    $.Method({Static:false, Public:true }, "set_ProfileName", 
      JSIL.MethodSignature.Action($.String), 
      EtwTrackingBehavior_set_ProfileName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Field({Static:false, Public:false}, "EtwTrackingBehavior$ProfileName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ProfileName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.EtwTrackingBehavior+<>c__DisplayClass6_0 */ 

(function $l$gc__DisplayClass6_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.EtwTrackingBehavior+<>c__DisplayClass6_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lApplyDispatchBehavior$gb__0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.EtwTrackingParticipant"))
    );

    $.Field({Static:false, Public:true }, "hostReference", $.String);

    $.Field({Static:false, Public:true }, "trackingProfile", $asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.Activities.Description.WorkflowFormatterBehavior */ 

(function WorkflowFormatterBehavior$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowFormatterBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientOperation")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.OperationDescription"), $asm22.TypeRef("System.ServiceModel.Dispatcher.DispatchOperation")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Receives", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.OperationDescription"))
    );

    $.Field({Static:false, Public:false}, "formatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchMessageFormatter"));

    $.Field({Static:false, Public:false}, "faultFormatter", $asm22.TypeRef("System.ServiceModel.Dispatcher.IDispatchFaultFormatter"));

    $.Field({Static:false, Public:false}, "receives", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.Property({Static:false, Public:true }, "Receives", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm24.TypeRef("System.ServiceModel.Activities.Receive")]));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IOperationBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.ServiceDescriptionData */ 

(function ServiceDescriptionData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function ServiceDescriptionData_get_IsFirstReceiveOfTransactedReceiveScopeTree () {
    return this.ServiceDescriptionData$IsFirstReceiveOfTransactedReceiveScopeTree$value;
  }; 

  function ServiceDescriptionData_get_IsInsideTransactedReceiveScope () {
    return this.ServiceDescriptionData$IsInsideTransactedReceiveScope$value;
  }; 

  function ServiceDescriptionData_set_IsFirstReceiveOfTransactedReceiveScopeTree (value) {
    this.ServiceDescriptionData$IsFirstReceiveOfTransactedReceiveScopeTree$value = value;
  }; 

  function ServiceDescriptionData_set_IsInsideTransactedReceiveScope (value) {
    this.ServiceDescriptionData$IsInsideTransactedReceiveScope$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.ServiceDescriptionData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_IsFirstReceiveOfTransactedReceiveScopeTree", 
      JSIL.MethodSignature.Return($.Boolean), 
      ServiceDescriptionData_get_IsFirstReceiveOfTransactedReceiveScopeTree
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsInsideTransactedReceiveScope", 
      JSIL.MethodSignature.Return($.Boolean), 
      ServiceDescriptionData_get_IsInsideTransactedReceiveScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsFirstReceiveOfTransactedReceiveScopeTree", 
      JSIL.MethodSignature.Action($.Boolean), 
      ServiceDescriptionData_set_IsFirstReceiveOfTransactedReceiveScopeTree
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsInsideTransactedReceiveScope", 
      JSIL.MethodSignature.Action($.Boolean), 
      ServiceDescriptionData_set_IsInsideTransactedReceiveScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ServiceDescriptionData$IsInsideTransactedReceiveScope$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ServiceDescriptionData$IsFirstReceiveOfTransactedReceiveScopeTree$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IsInsideTransactedReceiveScope", $.Boolean);

    $.Property({Static:false, Public:true }, "IsFirstReceiveOfTransactedReceiveScopeTree", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.SendMessageChannelCacheBehavior */ 

(function SendMessageChannelCacheBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm24.System.ServiceModel.Activities.ChannelCacheSettings)) ();
  };





  function SendMessageChannelCacheBehavior_get_AllowUnsafeCaching () {
    return this.SendMessageChannelCacheBehavior$AllowUnsafeCaching$value;
  }; 

  function SendMessageChannelCacheBehavior_get_ChannelSettings () {
    return this.SendMessageChannelCacheBehavior$ChannelSettings$value;
  }; 

  function SendMessageChannelCacheBehavior_get_FactorySettings () {
    return this.SendMessageChannelCacheBehavior$FactorySettings$value;
  }; 

  function SendMessageChannelCacheBehavior_set_AllowUnsafeCaching (value) {
    this.SendMessageChannelCacheBehavior$AllowUnsafeCaching$value = value;
  }; 

  function SendMessageChannelCacheBehavior_set_ChannelSettings (value) {
    this.SendMessageChannelCacheBehavior$ChannelSettings$value = value;
  }; 

  function SendMessageChannelCacheBehavior_set_FactorySettings (value) {
    this.SendMessageChannelCacheBehavior$FactorySettings$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.SendMessageChannelCacheBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Method({Static:false, Public:true }, "get_AllowUnsafeCaching", 
      JSIL.MethodSignature.Return($.Boolean), 
      SendMessageChannelCacheBehavior_get_AllowUnsafeCaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ChannelSettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")), 
      SendMessageChannelCacheBehavior_get_ChannelSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FactorySettings", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")), 
      SendMessageChannelCacheBehavior_get_FactorySettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AllowUnsafeCaching", 
      JSIL.MethodSignature.Action($.Boolean), 
      SendMessageChannelCacheBehavior_set_AllowUnsafeCaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ChannelSettings", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")), 
      SendMessageChannelCacheBehavior_set_ChannelSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FactorySettings", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings")), 
      SendMessageChannelCacheBehavior_set_FactorySettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Field({Static:false, Public:false}, "SendMessageChannelCacheBehavior$AllowUnsafeCaching$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageChannelCacheBehavior$FactorySettings$value", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SendMessageChannelCacheBehavior$ChannelSettings$value", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AllowUnsafeCaching", $.Boolean);

    $.Property({Static:false, Public:true }, "FactorySettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.Property({Static:false, Public:true }, "ChannelSettings", $asm24.TypeRef("System.ServiceModel.Activities.ChannelCacheSettings"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.CorrelationQueryBehavior */ 

(function CorrelationQueryBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm30.System.Xml.Linq.XName)) ();
  };












  function CorrelationQueryBehavior_get_ScopeName () {
    return this.CorrelationQueryBehavior$ScopeName$value;
  }; 


  function CorrelationQueryBehavior_get_ServiceContractName () {
    return this.CorrelationQueryBehavior$ServiceContractName$value;
  }; 



  function CorrelationQueryBehavior_set_ScopeName (value) {
    this.CorrelationQueryBehavior$ScopeName$value = value;
  }; 

  function CorrelationQueryBehavior_set_ServiceContractName (value) {
    this.CorrelationQueryBehavior$ServiceContractName$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.CorrelationQueryBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyClientBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Dispatcher.ClientRuntime")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Dispatcher.EndpointDispatcher")])
    );

    $.ExternalMethod({Static:true , Public:true }, "BindingHasDefaultQueries", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.Channels.Binding")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConfigureBindingDataNames", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Channels.ICorrelationDataSource"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ConfigureBindingDefaultQueries", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"), $asm22.TypeRef("System.ServiceModel.Channels.ICorrelationDataSource"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateDefaultCorrelationQuery", 
      new JSIL.MethodSignature($asm24.TypeRef("System.ServiceModel.CorrelationQuery"), [
          $asm24.TypeRef("System.ServiceModel.CorrelationQuery"), $.String, 
          $asm22.TypeRef("System.ServiceModel.Channels.CorrelationDataDescription"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationQueries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReceiveNames", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]))
    );

    $.Method({Static:false, Public:false}, "get_ScopeName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationQueryBehavior_get_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_SendNames", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]))
    );

    $.Method({Static:false, Public:true }, "get_ServiceContractName", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationQueryBehavior_get_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetKeyCalculator", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsCookieBasedQueryPresent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_ScopeName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationQueryBehavior_set_ScopeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ServiceContractName", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName")), 
      CorrelationQueryBehavior_set_ServiceContractName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.Dispatcher.IChannelInitializer.Initialize", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.IClientChannel"))
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.Dispatcher.IChannelInitializer"), "Initialize");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.IExtension$lSystem.ServiceModel.IContextChannel$g.Attach", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.IContextChannel"))
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.IContextChannel")]), "Attach");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ServiceModel.IExtension$lSystem.ServiceModel.IContextChannel$g.Detach", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.IContextChannel"))
    )
      .Overrides($asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.IContextChannel")]), "Detach");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint"))
    );

    $.Constant({Static:true , Public:false}, "defaultQueryFormat", $.String, "sm:correlation-data('{0}')");

    $.Constant({Static:true , Public:false}, "contextCorrelationName", $.String, "wsc-instanceId");

    $.Constant({Static:true , Public:false}, "cookieCorrelationName", $.String, "http-cookie");

    $.Field({Static:true , Public:false}, "xPathForCookie", $.String);

    $.Field({Static:false, Public:false}, "correlationKeyCalculator", $asm24.TypeRef("System.ServiceModel.Activities.Dispatcher.CorrelationKeyCalculator"));

    $.Field({Static:false, Public:false}, "queries", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Field({Static:false, Public:false}, "sendNames", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Field({Static:false, Public:false}, "receiveNames", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Field({Static:false, Public:false}, "shouldPreserveMessage", $.Boolean);

    $.Field({Static:false, Public:false}, "CorrelationQueryBehavior$ScopeName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationQueryBehavior$ServiceContractName$value", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CorrelationQueries", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm24.TypeRef("System.ServiceModel.CorrelationQuery")]));

    $.Property({Static:false, Public:true }, "ReceiveNames", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:true }, "SendNames", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:false}, "ScopeName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true }, "ServiceContractName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IEndpointBehavior"), 
      /* 1 */ $asm22.TypeRef("System.ServiceModel.Dispatcher.IChannelInitializer"), 
      /* 2 */ $asm22.TypeRef("System.ServiceModel.IExtension`1", [$asm22.TypeRef("System.ServiceModel.IContextChannel")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior */ 

(function SqlWorkflowInstanceStoreBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStore)) ();
  };













  function SqlWorkflowInstanceStoreBehavior_get_SqlWorkflowInstanceStore () {
    return this.SqlWorkflowInstanceStoreBehavior$SqlWorkflowInstanceStore$value;
  }; 









  function SqlWorkflowInstanceStoreBehavior_set_SqlWorkflowInstanceStore (value) {
    this.SqlWorkflowInstanceStoreBehavior$SqlWorkflowInstanceStore$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceCompletionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceEncodingOption", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxConnectionRetries", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "get_SqlWorkflowInstanceStore", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      SqlWorkflowInstanceStoreBehavior_get_SqlWorkflowInstanceStore
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Promote", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XName")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectionString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceCompletionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceEncodingOption", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxConnectionRetries", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "set_SqlWorkflowInstanceStore", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      SqlWorkflowInstanceStoreBehavior_set_SqlWorkflowInstanceStore
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Constant({Static:true , Public:false}, "defaultMaximumRetries", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "defaultHostRenewalString", $.String, "00:00:30.0");

    $.Field({Static:true , Public:false}, "defaultHostRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "defaultRunnableInstancesDetectionPeriodString", $.String, "00:00:05.0");

    $.Field({Static:true , Public:false}, "defaultRunnableInstancesDetectionPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "defaultEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"), 1);

    $.Constant({Static:true , Public:false}, "defaultInstanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"), 1);

    $.Constant({Static:true , Public:false}, "defaultInstanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"), 0);

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreBehavior$SqlWorkflowInstanceStore$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function SqlWorkflowInstanceStoreBehavior__cctor () {
      $thisType.defaultHostRenewalPeriod = new $asm07.System.TimeSpan();
      $thisType.defaultRunnableInstancesDetectionPeriod = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SqlWorkflowInstanceStoreBehavior__cctor
    );

    $.Property({Static:false, Public:true }, "InstanceEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"));

    $.Property({Static:false, Public:true }, "InstanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"));

    $.Property({Static:false, Public:true }, "InstanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"));

    $.Property({Static:false, Public:true }, "ConnectionString", $.String);

    $.Property({Static:false, Public:true }, "HostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "RunnableInstancesDetectionPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "MaxConnectionRetries", $.Int32);

    $.Property({Static:false, Public:false}, "SqlWorkflowInstanceStore", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Abandon: 0, 
    Cancel: 1, 
    Terminate: 2, 
    AbandonAndSuspend: 3, 
  }
);

/* class System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionActionHelper */ 

(function WorkflowUnhandledExceptionActionHelper$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionActionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "IsDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior */ 

(function WorkflowUnhandledExceptionBehavior$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Constant({Static:true , Public:false}, "defaultAction", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"), 3);

    $.Field({Static:false, Public:false}, "action", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"));

    $.Property({Static:false, Public:true }, "Action", $asm24.TypeRef("System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowIdleBehavior */ 

(function WorkflowIdleBehavior$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowIdleBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToPersist", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToUnload", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Constant({Static:true , Public:false}, "defaultTimeToPersistString", $.String, "Infinite");

    $.Field({Static:true , Public:false}, "defaultTimeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "defaultTimeToUnloadString", $.String, "00:01:00");

    $.Field({Static:true , Public:false}, "defaultTimeToUnload", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "timeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "timeToUnload", $asm07.TypeRef("System.TimeSpan"));


    function WorkflowIdleBehavior__cctor () {
      $thisType.defaultTimeToPersist = new $asm07.System.TimeSpan();
      $thisType.defaultTimeToUnload = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WorkflowIdleBehavior__cctor
    );

    $.Property({Static:false, Public:true }, "TimeToPersist", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "TimeToUnload", $asm07.TypeRef("System.TimeSpan"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior */ 

(function WorkflowInstanceManagementBehavior$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddBindingParameters", 
      new JSIL.MethodSignature(null, [
          $asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm22.TypeRef("System.ServiceModel.Description.ServiceEndpoint")]), $asm22.TypeRef("System.ServiceModel.Channels.BindingParameterCollection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ApplyDispatchBehavior", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateWorkflowManagementEndpoint", 
      JSIL.MethodSignature.Action($asm24.TypeRef("System.ServiceModel.Activities.WorkflowServiceHost"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_HttpControlEndpointBinding", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Binding"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_NamedPipeControlEndpointBinding", 
      JSIL.MethodSignature.Return($asm22.TypeRef("System.ServiceModel.Channels.Binding"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WindowsGroup", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDefaultBuiltinAdministratorsGroup", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_WindowsGroup", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm22.TypeRef("System.ServiceModel.Description.ServiceDescription"), $asm22.TypeRef("System.ServiceModel.ServiceHostBase")])
    );

    $.Constant({Static:true , Public:true }, "ControlEndpointAddress", $.String, "System.ServiceModel.Activities_IWorkflowInstanceManagement");

    $.Field({Static:true , Public:false}, "httpBinding", $asm22.TypeRef("System.ServiceModel.Channels.Binding"));

    $.Field({Static:true , Public:false}, "namedPipeBinding", $asm22.TypeRef("System.ServiceModel.Channels.Binding"));

    $.Field({Static:false, Public:false}, "windowsGroup", $.String);

    $.Property({Static:false, Public:true }, "WindowsGroup", $.String);

    $.Property({Static:true , Public:true }, "HttpControlEndpointBinding", $asm22.TypeRef("System.ServiceModel.Channels.Binding"));

    $.Property({Static:true , Public:true }, "NamedPipeControlEndpointBinding", $asm22.TypeRef("System.ServiceModel.Channels.Binding"));

    $.ImplementInterfaces(
      /* 0 */ $asm22.TypeRef("System.ServiceModel.Description.IServiceBehavior")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior+WindowsAuthorizationManager */ 

(function WindowsAuthorizationManager$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm22.TypeRef("System.ServiceModel.ServiceAuthorizationManager"), 
      Name: "System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior+WindowsAuthorizationManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CheckAccessCore", 
      new JSIL.MethodSignature($.Boolean, [$asm22.TypeRef("System.ServiceModel.OperationContext")])
    );

    $.Field({Static:false, Public:false}, "sid", $asm07.TypeRef("System.Security.Principal.SecurityIdentifier"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ComputeStringHash", 
      new JSIL.MethodSignature($.UInt32, [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

