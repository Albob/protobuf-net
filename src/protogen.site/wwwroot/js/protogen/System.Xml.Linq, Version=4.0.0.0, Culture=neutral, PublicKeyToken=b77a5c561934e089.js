/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm30 = JSIL.DeclareAssembly("System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Xml.Linq.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Xml.Linq.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Xml.Linq.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2046.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Xml");
JSIL.DeclareNamespace("System.Xml.Schema");
/* class System.Xml.Schema.XNodeValidator */ 

(function XNodeValidator$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Schema.XNodeValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultAttributeSchemaInfo", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo"), [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultValue", 
      new JSIL.MethodSignature($.String, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDefaultValue", 
      new JSIL.MethodSignature($.String, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaElement")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushAncestorsAndSelf", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReplaceSchemaInfo", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XObject"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RestoreLineInfo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.IXmlLineInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SaveLineInfo", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.IXmlLineInfo"), [$asm30.TypeRef("System.Xml.Linq.XObject")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XObject"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateAttributes", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateElement", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateNodes", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidationCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm2F.TypeRef("System.Xml.Schema.ValidationEventArgs")])
    );

    $.Field({Static:false, Public:false}, "schemas", $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"));

    $.Field({Static:false, Public:false}, "validationEventHandler", $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler"));

    $.Field({Static:false, Public:false}, "source", $asm30.TypeRef("System.Xml.Linq.XObject"));

    $.Field({Static:false, Public:false}, "addSchemaInfo", $.Boolean);

    $.Field({Static:false, Public:false}, "namespaceManager", $asm2F.TypeRef("System.Xml.XmlNamespaceManager"));

    $.Field({Static:false, Public:false}, "validator", $asm2F.TypeRef("System.Xml.Schema.XmlSchemaValidator"));

    $.Field({Static:false, Public:false}, "schemaInfos", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo")]));

    $.Field({Static:false, Public:false}, "defaultAttributes", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "xsiTypeName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "xsiNilName", $asm30.TypeRef("System.Xml.Linq.XName"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Schema.XmlSchemaInfoEqualityComparer */ 

(function XmlSchemaInfoEqualityComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Schema.XmlSchemaInfoEqualityComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo")])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaInfo")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Schema.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("System.Xml.Schema.Extensions", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetSchemaInfo", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.Schema.IXmlSchemaInfo"), [$asm30.TypeRef("System.Xml.Linq.XElement")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetSchemaInfo", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.Schema.IXmlSchemaInfo"), [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XDocument"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), 
          $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XDocument"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), 
          $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler"), $.Boolean
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler"), 
          $.Boolean
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XAttribute"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XAttribute"), $asm2F.TypeRef("System.Xml.Schema.XmlSchemaObject"), 
          $asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler"), 
          $.Boolean
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.XPath");
/* class System.Xml.XPath.XNodeNavigator */ 

(function XNodeNavigator$Members () {
  var $, $thisType;





















































  JSIL.MakeType({
      BaseType: $asm2F.TypeRef("System.Xml.XPath.XPathNavigator"), 
      Name: "System.Xml.XPath.XNodeNavigator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm2F.TypeRef("System.Xml.XmlNameTable")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CheckValidity", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.Schema.XmlSchemaSet"), $asm2F.TypeRef("System.Xml.Schema.ValidationEventHandler")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XPath.XPathNavigator"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectText", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XText")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateNameTable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasChildren", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XPath.XPathNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingObject", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetElementContentMask", 
      new JSIL.MethodSignature($.Int32, [$asm2F.TypeRef("System.Xml.XPath.XPathNodeType")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFirstNamespaceDeclarationGlobal", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XElement")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFirstNamespaceDeclarationLocal", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XElement")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNextNamespaceDeclarationGlobal", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNextNamespaceDeclarationLocal", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXmlNamespaceDeclaration", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HasNamespaceDeclarationInScope", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute"), $asm30.TypeRef("System.Xml.Linq.XElement")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsContent", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XContainer"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsSamePosition", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNavigator")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsSamePosition", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsXmlNamespaceDeclaration", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveTo", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNavigator")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToChild", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToChild", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNodeType")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstChild", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstNamespace", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNamespaceScope")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToId", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNamespace", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNext", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNodeType")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextNamespace", 
      new JSIL.MethodSignature($.Boolean, [$asm2F.TypeRef("System.Xml.XPath.XPathNamespaceScope")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToParent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToPrevious", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadSubtree", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LineNumber");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LinePosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "HasLineInfo");

    $.Constant({Static:true , Public:false}, "DocumentContentMask", $.Int32, 386);

    $.Field({Static:true , Public:false, ReadOnly:true }, "ElementContentMasks", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Constant({Static:true , Public:false}, "TextMask", $.Int32, 24);

    $.Field({Static:true , Public:false}, "XmlNamespaceDeclaration", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Field({Static:false, Public:false}, "source", $.Object);

    $.Field({Static:false, Public:false}, "parent", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "nameTable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasChildren", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XPath.XPathNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingObject", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32);

    $.ImplementInterfaces(
      /* 3 */ $asm2F.TypeRef("System.Xml.IXmlLineInfo")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.XPath.XPathEvaluator */ 

(function XPathEvaluator$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.XPath.XPathEvaluator", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
      SizeBytes: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, "Evaluate", 
      new JSIL.MethodSignature($.Object, [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "EvaluateIterator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm2F.TypeRef("System.Xml.XPath.XPathNodeIterator")], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.XPath.XPathEvaluator_$lEvaluateIterator$gd__1$b1.__Type__]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.XPath.XPathEvaluator+<EvaluateIterator>d__1`1 */ 

(function $lEvaluateIterator$gd__1$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.XPath.XPathEvaluator+<EvaluateIterator>d__1`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("T"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "result", $asm2F.TypeRef("System.Xml.XPath.XPathNodeIterator"));

    $.Field({Static:false, Public:true }, "$l$g3__result", $asm2F.TypeRef("System.Xml.XPath.XPathNodeIterator"));

    $.Field({Static:false, Public:false}, "$lr$g5__1", $.Object);

    $.Field({Static:false, Public:false}, "$lt$g5__2", $asm30.TypeRef("System.Xml.Linq.XText"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.XPath.XPathEvaluator"));

    $.Field({Static:false, Public:true }, "$l$g3__$l$g4__this", $asm30.TypeRef("System.Xml.XPath.XPathEvaluator"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.IEnumerator"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.XPath.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;










  JSIL.MakeStaticClass("System.Xml.XPath.Extensions", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CalibrateText", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XText"), [$asm30.TypeRef("System.Xml.Linq.XText")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateNavigator", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.XPath.XPathNavigator"), [$asm30.TypeRef("System.Xml.Linq.XNode")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "CreateNavigator", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.XPath.XPathNavigator"), [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm2F.TypeRef("System.Xml.XmlNameTable")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathEvaluate", 
      new JSIL.MethodSignature($.Object, [$asm30.TypeRef("System.Xml.Linq.XNode"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathEvaluate", 
      new JSIL.MethodSignature($.Object, [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElement", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XElement"), [$asm30.TypeRef("System.Xml.Linq.XNode"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElement", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XElement"), [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XNode"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "XPathSelectElements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $.String, 
          $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.Linq");
/* class System.Xml.Linq.XName */ 

(function XName$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XName", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String, $.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_LocalName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNamespace"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IEquatable$lSystem.Xml.Linq.XName$g.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    )
      .Overrides($asm07.TypeRef("System.IEquatable`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), "Equals")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "ns", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:false, Public:false}, "localName", $.String);

    $.Field({Static:false, Public:false}, "hashCode", $.Int32);

    $.Property({Static:false, Public:true }, "LocalName", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Namespace", $asm30.TypeRef("System.Xml.Linq.XNamespace"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "NamespaceName", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type]), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.KnownTypeAttribute"), function () { return [$asm30.System.Xml.Linq.NameSerializer.__Type__]; })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.NameSerializer */ 

(function NameSerializer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.NameSerializer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.IObjectReference.GetRealObject", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.IObjectReference"), "GetRealObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.Serialization.ISerializable.GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Overrides($asm07.TypeRef("System.Runtime.Serialization.ISerializable"), "GetObjectData");

    $.Field({Static:false, Public:false}, "expandedName", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Runtime.Serialization.IObjectReference"), 
      /* 1 */ $asm07.TypeRef("System.Runtime.Serialization.ISerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNamespace */ 

(function XNamespace$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNamespace", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureNamespace", 
      new JSIL.MethodSignature($.Type, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.WeakReference")]), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ExtractLocalName", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractNamespace", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.WeakReference")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "Get", 
      new JSIL.MethodSignature($.Type, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NamespaceName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_None", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_Xml", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_Xmlns", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetName", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XName"), [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetName", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XName"), [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Addition", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XName"), [$.Type, $.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Constant({Static:true , Public:false}, "xmlPrefixNamespace", $.String, "http://www.w3.org/XML/1998/namespace");

    $.Constant({Static:true , Public:false}, "xmlnsPrefixNamespace", $.String, "http://www.w3.org/2000/xmlns/");

    $.Field({Static:true , Public:false}, "namespaces", $asm30.TypeRef("System.Xml.Linq.XHashtable`1", [$asm07.TypeRef("System.WeakReference")]));

    $.Field({Static:true , Public:false}, "refNone", $asm07.TypeRef("System.WeakReference"));

    $.Field({Static:true , Public:false}, "refXml", $asm07.TypeRef("System.WeakReference"));

    $.Field({Static:true , Public:false}, "refXmlns", $asm07.TypeRef("System.WeakReference"));

    $.Field({Static:false, Public:false}, "namespaceName", $.String);

    $.Field({Static:false, Public:false}, "hashCode", $.Int32);

    $.Field({Static:false, Public:false}, "names", $asm30.TypeRef("System.Xml.Linq.XHashtable`1", [$asm30.TypeRef("System.Xml.Linq.XName")]));

    $.Constant({Static:true , Public:false}, "NamesCapacity", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "NamespacesCapacity", $.Int32, 32);

    $.Property({Static:false, Public:true }, "NamespaceName", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:true , Public:true }, "None", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:true , Public:true }, "Xml", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:true , Public:true }, "Xmlns", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XHashtable`1 */ 

(function XHashtable$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XHashtable`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XHashtable`1+ExtractKeyDelegate", [$.GenericParameter("TValue")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature($.GenericParameter("TValue"), [$.GenericParameter("TValue")])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.GenericParameter("TValue")])
        ])
    );

    $.Field({Static:false, Public:false}, "state", $asm30.TypeRef("System.Xml.Linq.XHashtable`1+XHashtableState", [$.GenericParameter("TValue")]));

    $.Constant({Static:true , Public:false}, "StartingHash", $.Int32, 352654597);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Xml.Linq.XHashtable`1+ExtractKeyDelegate */ 

JSIL.MakeDelegate("System.Xml.Linq.XHashtable`1+ExtractKeyDelegate", false, ["TValue"], 
  new JSIL.MethodSignature($asm07.TypeRef("System.String"), [new JSIL.GenericParameter("TValue", "System.Xml.Linq.XHashtable`1+ExtractKeyDelegate")]));

/* class System.Xml.Linq.XHashtable`1+XHashtableState */ 

(function XHashtableState$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XHashtable`1+XHashtableState", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XHashtable`1+ExtractKeyDelegate", [$.GenericParameter("TValue")]), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComputeHashCode", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEntry", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.String, 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Resize", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XHashtable`1+XHashtableState", [$.GenericParameter("TValue")]), null)
    );

    $.ExternalMethod({Static:false, Public:true }, "TryAdd", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("TValue"), $jsilcore.TypeRef("JSIL.Reference", [$.GenericParameter("TValue")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.GenericParameter("TValue")])
        ])
    );

    $.Field({Static:false, Public:false}, "buckets", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:false}, "entries", $jsilcore.TypeRef("System.Array", [$asm30.TypeRef("System.Xml.Linq.XHashtable`1+XHashtableState+Entry", [$.GenericParameter("TValue")])]));

    $.Field({Static:false, Public:false}, "numEntries", $.Int32);

    $.Field({Static:false, Public:false}, "extractKey", $asm30.TypeRef("System.Xml.Linq.XHashtable`1+ExtractKeyDelegate", [$.GenericParameter("TValue")]));

    $.Constant({Static:true , Public:false}, "EndOfList", $.Int32, 0);

    $.Constant({Static:true , Public:false}, "FullList", $.Int32, -1);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.XHashtable`1+XHashtableState+Entry */ 

(function Entry$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.XHashtable`1+XHashtableState+Entry", 
      IsPublic: false, 
      IsReferenceType: false, 
      GenericParameters: ["TValue"], 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Value", $.GenericParameter("TValue"));

    $.Field({Static:false, Public:true }, "HashCode", $.Int32);

    $.Field({Static:false, Public:true }, "Next", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XObject */ 

(function XObject$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Changed", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_Changing", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AddAnnotation", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Annotation", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Annotation", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Annotations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Annotations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XObject_$lAnnotations$gd__16$b1.__Type__]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AnnotationsIterator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XObject_$lAnnotationsIterator$gd__15.__Type__]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BaseUri", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Document", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XDocument"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_HasBaseUri", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetSaveOptionsFromAnnotations", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.SaveOptions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyChanged", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyChanging", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Changed", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_Changing", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "RemoveAnnotations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "RemoveAnnotations", 
      new JSIL.MethodSignature(null, null, ["T"])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetBaseUri", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetLineInfo", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "SkipNotify", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LineNumber")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LinePosition")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "HasLineInfo")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "parent", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "annotations", $.Object);

    $.Property({Static:false, Public:true }, "BaseUri", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Document", $asm30.TypeRef("System.Xml.Linq.XDocument"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Parent", $asm30.TypeRef("System.Xml.Linq.XElement"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:false}, "HasBaseUri", $.Boolean);

    $.Event({Static:false, Public:true }, "Changed", $asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Event({Static:false, Public:true }, "Changing", $asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm2F.TypeRef("System.Xml.IXmlLineInfo")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XObject+<AnnotationsIterator>d__15 */ 

(function $lAnnotationsIterator$gd__15$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject+<AnnotationsIterator>d__15", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XObject"));

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$la$g5__1", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "$li$g5__2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XObject+<Annotations>d__16`1 */ 

(function $lAnnotations$gd__16$b1$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObject+<Annotations>d__16`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("T"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XObject"));

    $.Field({Static:false, Public:false}, "$la$g5__1", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "$li$g5__2", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.BaseUriAnnotation */ 

(function BaseUriAnnotation$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.BaseUriAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "baseUri", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.LineInfoAnnotation */ 

(function LineInfoAnnotation$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.LineInfoAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.Field({Static:false, Public:false}, "lineNumber", $.Int32);

    $.Field({Static:false, Public:false}, "linePosition", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.LineInfoEndElementAnnotation */ 

(function LineInfoEndElementAnnotation$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.LineInfoAnnotation"), 
      Name: "System.Xml.Linq.LineInfoEndElementAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XObjectChangeAnnotation */ 

(function XObjectChangeAnnotation$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XObjectChangeAnnotation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "changing", $asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]));

    $.Field({Static:false, Public:false}, "changed", $asm07.TypeRef("System.EventHandler`1", [$asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Xml.Linq.XObjectChange */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.Linq.XObjectChange", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Add: 0, 
    Remove: 1, 
    Name: 2, 
    Value: 3, 
  }
);

/* class System.Xml.Linq.XObjectChangeEventArgs */ 

(function XObjectChangeEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Xml.Linq.XObjectChangeEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XObjectChange"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ObjectChange", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XObjectChange"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "objectChange", $asm30.TypeRef("System.Xml.Linq.XObjectChange"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "Add", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "Remove", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "Name", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "Value", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "ObjectChange", $asm30.TypeRef("System.Xml.Linq.XObjectChange"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XNode */ 

(function XNode$Members () {
  var $, $thisType;









































  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XObject"), 
      Name: "System.Xml.Linq.XNode", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddAfterSelf", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AddAfterSelf", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "AddBeforeSelf", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AddBeforeSelf", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "Ancestors", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Text.StringBuilder"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "CompareDocumentOrder", 
      new JSIL.MethodSignature($.Int32, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "CreateReader", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlReader"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.XmlReader"), [$asm30.TypeRef("System.Xml.Linq.ReaderOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "ElementsAfterSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ElementsAfterSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ElementsBeforeSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ElementsBeforeSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_DocumentOrderComparer", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_EqualityComparer", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNodeEqualityComparer"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_NextNode", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousNode", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetAncestors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName"), $.Boolean])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XNode_$lGetAncestors$gd__40.__Type__]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementsAfterSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XNode_$lGetElementsAfterSelf$gd__41.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "GetElementsBeforeSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XNode_$lGetElementsBeforeSelf$gd__42.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetXmlReaderSettings", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.XmlReaderSettings"), [$asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetXmlString", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXmlWriterSettings", 
      new JSIL.MethodSignature($asm2F.TypeRef("System.Xml.XmlWriterSettings"), [$asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsAfter", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "IsBefore", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "NodesAfterSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XNode_$lNodesAfterSelf$gd__21.__Type__]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "NodesBeforeSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XNode_$lNodesBeforeSelf$gd__22.__Type__]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "ReadFrom", 
      new JSIL.MethodSignature($.Type, [$asm2F.TypeRef("System.Xml.XmlReader")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReplaceWith", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReplaceWith", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:false}, "documentOrderComparer", $asm30.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer"));

    $.Field({Static:true , Public:false}, "equalityComparer", $asm30.TypeRef("System.Xml.Linq.XNodeEqualityComparer"));

    $.Field({Static:false, Public:false}, "next", $.Type);

    $.Property({Static:false, Public:true }, "NextNode", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "PreviousNode", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:true , Public:true }, "DocumentOrderComparer", $asm30.TypeRef("System.Xml.Linq.XNodeDocumentOrderComparer"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:true , Public:true }, "EqualityComparer", $asm30.TypeRef("System.Xml.Linq.XNodeEqualityComparer"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XNode+<NodesAfterSelf>d__21 */ 

(function $lNodesAfterSelf$gd__21$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode+<NodesAfterSelf>d__21", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode+<NodesBeforeSelf>d__22 */ 

(function $lNodesBeforeSelf$gd__22$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode+<NodesBeforeSelf>d__22", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode+<GetAncestors>d__40 */ 

(function $lGetAncestors$gd__40$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode+<GetAncestors>d__40", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$le$g5__1", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode+<GetElementsAfterSelf>d__41 */ 

(function $lGetElementsAfterSelf$gd__41$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode+<GetElementsAfterSelf>d__41", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNode+<GetElementsBeforeSelf>d__42 */ 

(function $lGetElementsBeforeSelf$gd__42$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNode+<GetElementsBeforeSelf>d__42", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNodeDocumentOrderComparer */ 

(function XNodeDocumentOrderComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNodeDocumentOrderComparer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IComparer.Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object])
    )
      .Overrides($asm07.TypeRef("System.Collections.IComparer"), "Compare")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IComparer"), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.IComparer`1", [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XNodeEqualityComparer */ 

(function XNodeEqualityComparer$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XNodeEqualityComparer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEqualityComparer.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $.Object])
    )
      .Overrides($asm07.TypeRef("System.Collections.IEqualityComparer"), "Equals")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEqualityComparer.GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$.Object])
    )
      .Overrides($asm07.TypeRef("System.Collections.IEqualityComparer"), "GetHashCode")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEqualityComparer"), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XText */ 

(function XText$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XText", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Text.StringBuilder"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "text", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XCData */ 

(function XCData$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XText"), 
      Name: "System.Xml.Linq.XCData", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XContainer */ 

(function XContainer$Members () {
  var $, $thisType;

















































  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XContainer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddContentSkipNotify", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddContentToList", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNodeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddStringSkipNotify", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendNodeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AppendText", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Text.StringBuilder"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectText", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("JSIL.Reference", [$asm30.TypeRef("System.Xml.Linq.XNode")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ContentsEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "ContentsHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertTextToNode", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateWriter", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "DescendantNodes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Descendants", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Element", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XElement"), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Elements", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Elements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_FirstNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_LastNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetContentSnapshot", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDateTimeString", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDescendantNodes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), [$.Boolean])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XContainer_$lGetDescendantNodes$gd__38.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "GetDescendants", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName"), $.Boolean])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XContainer_$lGetDescendants$gd__39.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "GetElements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XContainer_$lGetElements$gd__40.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetStringValue", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTextOnly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Nodes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XContainer_$lNodes$gd__18.__Type__]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ReadContentFrom", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadContentFrom", 
      new JSIL.MethodSignature(null, [$asm2F.TypeRef("System.Xml.XmlReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveNodes", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveNodesSkipNotify", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceNodes", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReplaceNodes", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteContentTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.Field({Static:false, Public:false}, "content", $.Object);

    $.Property({Static:false, Public:true }, "FirstNode", $asm30.TypeRef("System.Xml.Linq.XNode"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "LastNode", $asm30.TypeRef("System.Xml.Linq.XNode"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XContainer+<Nodes>d__18 */ 

(function $lNodes$gd__18$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer+<Nodes>d__18", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer+<GetDescendantNodes>d__38 */ 

(function $lGetDescendantNodes$gd__38$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer+<GetDescendantNodes>d__38", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer+<GetDescendants>d__39 */ 

(function $lGetDescendants$gd__39$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer+<GetDescendants>d__39", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XContainer+<GetElements>d__40 */ 

(function $lGetElements$gd__40$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XContainer+<GetElements>d__40", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct System.Xml.Linq.Inserter */ 

(function Inserter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.Inserter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XContainer"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddContent", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "InsertNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.Field({Static:false, Public:false}, "parent", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "previous", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.NamespaceCache */ 

(function NamespaceCache$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.NamespaceCache", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XNamespace"), [$.String])
    );

    $.Field({Static:false, Public:false}, "ns", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:false, Public:false}, "namespaceName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XElement */ 

(function XElement$Members () {
  var $, $thisType;





































































































  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XContainer"), 
      Name: "System.Xml.Linq.XElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(1, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XStreamingElement"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2F.TypeRef("System.Xml.XmlReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AncestorsAndSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AppendAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendAttributeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Attribute", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AttributesEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true }, "DescendantNodesAndSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "DescendantsAndSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_EmptySequence", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_FirstAttribute", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_HasAttributes", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_HasElements", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_LastAttribute", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetAttributes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), [$asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.XElement_$lGetAttributes$gd__104.__Type__]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDefaultNamespace", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNamespace"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetNamespaceOfPrefix", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XNamespace"), [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceOfPrefixInScope", 
      new JSIL.MethodSignature($.String, [$.String, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XNamespace")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String, $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.Stream")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.Stream"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.TextReader")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.TextReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm2F.TypeRef("System.Xml.XmlReader")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm2F.TypeRef("System.Xml.XmlReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.String, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Boolean]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int32, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int32]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt32, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.UInt32]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int64, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int64]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt64, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.UInt64]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Single, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Single]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Double, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Double]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Decimal"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Decimal")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.DateTime"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.DateTime")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.DateTimeOffset"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.DateTimeOffset")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.TimeSpan")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Guid")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String, $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ReadElementFrom", 
      new JSIL.MethodSignature(null, [$asm2F.TypeRef("System.Xml.XmlReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAll", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAttributes", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveAttributesSkipNotify", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAll", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAll", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAttributes", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ReplaceAttributes", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.TextWriter"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAttributeValue", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetElementValue", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetEndElementLineInfo", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.GetSchema", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Schema.XmlSchema"))
    )
      .Overrides($asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable"), "GetSchema")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.ReadXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    )
      .Overrides($asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable"), "ReadXml")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.Serialization.IXmlSerializable.WriteXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Overrides($asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable"), "WriteXml")
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:false}, "emptySequence", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "lastAttr", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:true , Public:true }, "EmptySequence", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "FirstAttribute", $asm30.TypeRef("System.Xml.Linq.XAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "HasAttributes", $.Boolean)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "HasElements", $.Boolean)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "LastAttribute", $asm30.TypeRef("System.Xml.Linq.XAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Name", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
      /* 1 */ $asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2F.TypeRef("System.Xml.Serialization.XmlSchemaProviderAttribute"), function () { return [null]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeDescriptionProviderAttribute"), function () { return [$asm30.MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider$b1.Of($asm30.System.Xml.Linq.XElement).__Type__]; })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XElement+<GetAttributes>d__104 */ 

(function $lGetAttributes$gd__104$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XElement+<GetAttributes>d__104", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XAttribute$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$la$g5__1", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.Current", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct System.Xml.Linq.ElementWriter */ 

(function ElementWriter$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.ElementWriter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushAncestors", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteElement", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteFullEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteStartElement", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.Field({Static:false, Public:false}, "writer", $asm2F.TypeRef("System.Xml.XmlWriter"));

    $.Field({Static:false, Public:false}, "resolver", $asm30.TypeRef("System.Xml.Linq.NamespaceResolver"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Xml.Linq.NamespaceResolver */ 

(function NamespaceResolver$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.NamespaceResolver", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $asm30.TypeRef("System.Xml.Linq.XNamespace")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFirst", 
      new JSIL.MethodSignature(null, [$.String, $asm30.TypeRef("System.Xml.Linq.XNamespace")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "PopScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PushScope", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "scope", $.Int32);

    $.Field({Static:false, Public:false}, "declaration", $asm30.TypeRef("System.Xml.Linq.NamespaceResolver+NamespaceDeclaration"));

    $.Field({Static:false, Public:false}, "rover", $asm30.TypeRef("System.Xml.Linq.NamespaceResolver+NamespaceDeclaration"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.NamespaceResolver+NamespaceDeclaration */ 

(function NamespaceDeclaration$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.NamespaceResolver+NamespaceDeclaration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "prefix", $.String);

    $.Field({Static:false, Public:true }, "ns", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:false, Public:true }, "scope", $.Int32);

    $.Field({Static:false, Public:true }, "prev", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Xml.Linq.LoadOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.Linq.LoadOptions", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    PreserveWhitespace: 1, 
    SetBaseUri: 2, 
    SetLineInfo: 4, 
  }
);

/* enum System.Xml.Linq.SaveOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.Linq.SaveOptions", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    DisableFormatting: 1, 
    OmitDuplicateNamespaces: 2, 
  }
);

/* enum System.Xml.Linq.ReaderOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.Linq.ReaderOptions", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    OmitDuplicateNamespaces: 1, 
  }
);

/* class System.Xml.Linq.XDocument */ 

(function XDocument$Members () {
  var $, $thisType;






































  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XContainer"), 
      Name: "System.Xml.Linq.XDocument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XDeclaration"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(1, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "AddAttributeSkipNotify", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Declaration", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XDeclaration"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DocumentType", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XDocumentType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Root", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFirstNode", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsWhitespace", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$.String, $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.Stream")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.Stream"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.TextReader")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.IO.TextReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm2F.TypeRef("System.Xml.XmlReader")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($.Type, [$asm2F.TypeRef("System.Xml.XmlReader"), $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String, $asm30.TypeRef("System.Xml.Linq.LoadOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.TextWriter"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Declaration", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XDeclaration"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ValidateDocument", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $asm2F.TypeRef("System.Xml.XmlNodeType"), 
          $asm2F.TypeRef("System.Xml.XmlNodeType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateNode", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "declaration", $asm30.TypeRef("System.Xml.Linq.XDeclaration"));

    $.Property({Static:false, Public:true }, "Declaration", $asm30.TypeRef("System.Xml.Linq.XDeclaration"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "DocumentType", $asm30.TypeRef("System.Xml.Linq.XDocumentType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Root", $asm30.TypeRef("System.Xml.Linq.XElement"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XComment */ 

(function XComment$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XComment", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "value", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XProcessingInstruction */ 

(function XProcessingInstruction$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XProcessingInstruction", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Data", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Data", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ValidateName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "target", $.String);

    $.Field({Static:false, Public:false}, "data", $.String);

    $.Property({Static:false, Public:true }, "Data", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Target", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XDeclaration */ 

(function XDeclaration$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XDeclaration", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Encoding", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Standalone", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Encoding", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Standalone", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Version", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "version", $.String);

    $.Field({Static:false, Public:false}, "encoding", $.String);

    $.Field({Static:false, Public:false}, "standalone", $.String);

    $.Property({Static:false, Public:true }, "Encoding", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Standalone", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Version", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XDocumentType */ 

(function XDocumentType$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XNode"), 
      Name: "System.Xml.Linq.XDocumentType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm2F.TypeRef("System.Xml.IDtdInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CloneNode", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeepEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DtdInfo", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.IDtdInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InternalSubset", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_PublicId", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_SystemId", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InternalSubset", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_PublicId", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_SystemId", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "publicId", $.String);

    $.Field({Static:false, Public:false}, "systemId", $.String);

    $.Field({Static:false, Public:false}, "internalSubset", $.String);

    $.Field({Static:false, Public:false}, "dtdInfo", $asm2F.TypeRef("System.Xml.IDtdInfo"));

    $.Property({Static:false, Public:true }, "InternalSubset", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "PublicId", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "SystemId", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:false}, "DtdInfo", $asm2F.TypeRef("System.Xml.IDtdInfo"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XAttribute */ 

(function XAttribute$Members () {
  var $, $thisType;










































  JSIL.MakeType({
      BaseType: $asm30.TypeRef("System.Xml.Linq.XObject"), 
      Name: "System.Xml.Linq.XAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_EmptySequence", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsNamespaceDeclaration", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_NextAttribute", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousAttribute", 
      JSIL.MethodSignature.Return($.Type)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetDeepHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XNamespace")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.String, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Boolean]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int32, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int32]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt32, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.UInt32]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Int64, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int64]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.UInt64, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.UInt64]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Single, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Single]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($.Double, [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Double]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Decimal"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Decimal")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.DateTime"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.DateTime")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.DateTimeOffset"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.DateTimeOffset")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.TimeSpan")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "op_Explicit", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Guid")]), [$.Type])
    )
      .Attribute($asm07.TypeRef("System.CLSCompliantAttribute"), function () { return [false]; })
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ValidateAttribute", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.String])
    );

    $.Field({Static:true , Public:false}, "emptySequence", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]));

    $.Field({Static:false, Public:false}, "next", $.Type);

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "value", $.String);

    $.Property({Static:true , Public:true }, "EmptySequence", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "IsNamespaceDeclaration", $.Boolean)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Name", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "NextAttribute", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "PreviousAttribute", $.Type)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeDescriptionProviderAttribute"), function () { return [$asm30.MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider$b1.Of($asm30.System.Xml.Linq.XAttribute).__Type__]; })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.XStreamingElement */ 

(function XStreamingElement$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.XStreamingElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XName"), $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(1, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"))
      .Parameter(0, "content", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetXmlString", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$.String, $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.TextWriter"), $asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XName"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.SaveOptions")])
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "WriteTo", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    )
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "content", $.Object);

    $.Property({Static:false, Public:true }, "Name", $asm30.TypeRef("System.Xml.Linq.XName"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* struct System.Xml.Linq.StreamingElementWriter */ 

(function StreamingElementWriter$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Xml.Linq.StreamingElementWriter", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefixOfNamespace", 
      new JSIL.MethodSignature($.String, [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Write", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteAttribute", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteStreamingElement", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XStreamingElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "writer", $asm2F.TypeRef("System.Xml.XmlWriter"));

    $.Field({Static:false, Public:false}, "element", $asm30.TypeRef("System.Xml.Linq.XStreamingElement"));

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]));

    $.Field({Static:false, Public:false}, "resolver", $asm30.TypeRef("System.Xml.Linq.NamespaceResolver"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.Extensions */ 

(function Extensions$Members () {
  var $, $thisType;
























  JSIL.MakeStaticClass("System.Xml.Linq.Extensions", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Ancestors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "AncestorsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), $asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Attributes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), $asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantNodes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantNodesAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Descendants", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DescendantsAndSelf", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), $asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Elements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Elements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetAncestors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $.Boolean
        ], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lGetAncestors$gd__19$b1.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetAttributes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), $asm30.TypeRef("System.Xml.Linq.XName")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lGetAttributes$gd__18.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetDescendantNodes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $.Boolean], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lGetDescendantNodes$gd__20$b1.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetDescendants", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $.Boolean
        ], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lGetDescendants$gd__21$b1.__Type__]; });

    $.ExternalMethod({Static:true , Public:false}, "GetElements", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm30.TypeRef("System.Xml.Linq.XName")], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lGetElements$gd__22$b1.__Type__]; });

    $.ExternalMethod({Static:true , Public:true }, "InDocumentOrder", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Nodes", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm30.System.Xml.Linq.Extensions_$lNodes$gd__6$b1.__Type__]; })
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
      .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"))
    .Attribute($asm30.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Xml.Linq.Extensions+<Nodes>d__6`1 */ 

(function $lNodes$gd__6$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<Nodes>d__6`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$lroot$g5__2", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<>c__15`1 */ 

(function $l$gc__15$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<>c__15`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lInDocumentOrder$gb__15_0", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XNode"), [$.GenericParameter("T")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm30.TypeRef("System.Xml.Linq.Extensions+<>c__15`1", [$.GenericParameter("T")]));

    $.Field({Static:true , Public:true }, "$l$g9__15_0", $asm07.TypeRef("System.Func`2", [$.GenericParameter("T"), $asm30.TypeRef("System.Xml.Linq.XNode")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<GetAttributes>d__18 */ 

(function $lGetAttributes$gd__18$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<GetAttributes>d__18", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XAttribute$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XAttribute"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Field({Static:false, Public:false}, "$la$g5__1", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XAttribute$g.Current", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<GetAncestors>d__19`1 */ 

(function $lGetAncestors$gd__19$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<GetAncestors>d__19`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$le$g5__1", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<GetDescendantNodes>d__20`1 */ 

(function $lGetDescendantNodes$gd__20$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<GetDescendantNodes>d__20`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XNode$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNode"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:false}, "$lroot$g5__1", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$ln$g5__2", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XNode$g.Current", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XNode")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<GetDescendants>d__21`1 */ 

(function $lGetDescendants$gd__21$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<GetDescendants>d__21`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "self", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__self", $.Boolean);

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$lroot$g5__1", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$ln$g5__2", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$le$g5__3", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.Extensions+<GetElements>d__22`1 */ 

(function $lGetElements$gd__22$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Extensions+<GetElements>d__22`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Xml.Linq.XElement$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.get_Current", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:true }, "$l$g3__source", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "$ln$g5__1", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:true }, "$l$g3__name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "$lroot$g5__2", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Xml.Linq.XElement$g.Current", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Xml.Linq.XNodeBuilder */ 

(function XNodeBuilder$Members () {
  var $, $thisType;
































  JSIL.MakeType({
      BaseType: $asm2F.TypeRef("System.Xml.XmlWriter"), 
      Name: "System.Xml.Linq.XNodeBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XContainer"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddNode", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlWriterSettings"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_WriteState", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.WriteState"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupPrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteBase64", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCData", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCharEntity", 
      JSIL.MethodSignature.Action($.Char)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteChars", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteComment", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteDocType", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndAttribute", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndDocument", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEntityRef", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteFullEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteProcessingInstruction", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartAttribute", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartElement", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteSurrogateCharEntity", 
      new JSIL.MethodSignature(null, [$.Char, $.Char])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTimeOffset"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteWhitespace", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "content", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "parent", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Field({Static:false, Public:false}, "attrName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "attrValue", $.String);

    $.Field({Static:false, Public:false}, "root", $asm30.TypeRef("System.Xml.Linq.XContainer"));

    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm2F.TypeRef("System.Xml.XmlWriterSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "WriteState", $asm2F.TypeRef("System.Xml.WriteState"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.XNodeReader */ 

(function XNodeReader$Members () {
  var $, $thisType;

































































  JSIL.MakeType({
      BaseType: $asm2F.TypeRef("System.Xml.XmlReader"), 
      Name: "System.Xml.Linq.XNodeReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XNode"), $asm2F.TypeRef("System.Xml.XmlNameTable"), 
          $asm30.TypeRef("System.Xml.Linq.ReaderOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm30.TypeRef("System.Xml.Linq.XNode"), $asm2F.TypeRef("System.Xml.XmlNameTable")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateNameTable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AttributeCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DtdInfo", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.IDtdInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EOF", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEndElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInteractive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReadState", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.ReadState"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlReaderSettings"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlLang", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlSpace", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlSpace"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDepth", 
      new JSIL.MethodSignature($.Int32, [$asm30.TypeRef("System.Xml.Linq.XObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementInAttributeScope", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementInScope", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetFirstNonDuplicateNamespaceAttribute", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNameInAttributeScope", 
      new JSIL.MethodSignature(null, [
          $.String, $asm30.TypeRef("System.Xml.Linq.XElement"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDuplicateNamespaceAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDuplicateNamespaceAttributeInner", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Read", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadAttributeValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoDocument", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XDocument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadIntoElement", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XElement")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverAttribute", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XAttribute"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverNode", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNode")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadOverText", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToDescendant", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadToEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToFollowing", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToNextSibling", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResolveEntity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsEndElement", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Skip", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LineNumber");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "get_LinePosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlLineInfo"), "HasLineInfo");

    $.Field({Static:false, Public:false}, "source", $.Object);

    $.Field({Static:false, Public:false}, "parent", $.Object);

    $.Field({Static:false, Public:false}, "state", $asm2F.TypeRef("System.Xml.ReadState"));

    $.Field({Static:false, Public:false}, "root", $asm30.TypeRef("System.Xml.Linq.XNode"));

    $.Field({Static:false, Public:false}, "nameTable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Field({Static:false, Public:false}, "omitDuplicateNamespaces", $.Boolean);

    $.Field({Static:false, Public:false}, "dtdInfo", $asm2F.TypeRef("System.Xml.IDtdInfo"));

    $.Field({Static:false, Public:false}, "dtdInfoInitialized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "AttributeCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "EOF", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasValue", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ReadState", $asm2F.TypeRef("System.Xml.ReadState"));

    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm2F.TypeRef("System.Xml.XmlReaderSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlLang", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlSpace", $asm2F.TypeRef("System.Xml.XmlSpace"));

    $.Property({Static:false, Public:false, Virtual:true }, "DtdInfo", $asm2F.TypeRef("System.Xml.IDtdInfo"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LineNumber", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlLineInfo.LinePosition", $.Int32);

    $.Property({Static:false, Public:false}, "IsEndElement", $.Boolean);

    $.Property({Static:false, Public:false}, "IsInteractive", $.Boolean);

    $.ImplementInterfaces(
      /* 1 */ $asm2F.TypeRef("System.Xml.IXmlLineInfo")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Linq.ResDescriptionAttribute */ 

(function ResDescriptionAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Xml.Linq.ResDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Xml.Linq.ResCategoryAttribute */ 

(function ResCategoryAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Xml.Linq.ResCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Xml.Linq.Res */ 

(function Res$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Xml.Linq.Res", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Constant({Static:true , Public:false}, "Argument_AddAttribute", $.String, "Argument_AddAttribute");

    $.Constant({Static:true , Public:false}, "Argument_AddNode", $.String, "Argument_AddNode");

    $.Constant({Static:true , Public:false}, "Argument_AddNonWhitespace", $.String, "Argument_AddNonWhitespace");

    $.Constant({Static:true , Public:false}, "Argument_ConvertToString", $.String, "Argument_ConvertToString");

    $.Constant({Static:true , Public:false}, "Argument_CreateNavigator", $.String, "Argument_CreateNavigator");

    $.Constant({Static:true , Public:false}, "Argument_InvalidExpandedName", $.String, "Argument_InvalidExpandedName");

    $.Constant({Static:true , Public:false}, "Argument_InvalidPIName", $.String, "Argument_InvalidPIName");

    $.Constant({Static:true , Public:false}, "Argument_InvalidPrefix", $.String, "Argument_InvalidPrefix");

    $.Constant({Static:true , Public:false}, "Argument_MustBeDerivedFrom", $.String, "Argument_MustBeDerivedFrom");

    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationPrefixed", $.String, "Argument_NamespaceDeclarationPrefixed");

    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationXml", $.String, "Argument_NamespaceDeclarationXml");

    $.Constant({Static:true , Public:false}, "Argument_NamespaceDeclarationXmlns", $.String, "Argument_NamespaceDeclarationXmlns");

    $.Constant({Static:true , Public:false}, "Argument_XObjectValue", $.String, "Argument_XObjectValue");

    $.Constant({Static:true , Public:false}, "InvalidOperation_BadNodeType", $.String, "InvalidOperation_BadNodeType");

    $.Constant({Static:true , Public:false}, "InvalidOperation_DocumentStructure", $.String, "InvalidOperation_DocumentStructure");

    $.Constant({Static:true , Public:false}, "InvalidOperation_DuplicateAttribute", $.String, "InvalidOperation_DuplicateAttribute");

    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedEndOfFile", $.String, "InvalidOperation_ExpectedEndOfFile");

    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedInteractive", $.String, "InvalidOperation_ExpectedInteractive");

    $.Constant({Static:true , Public:false}, "InvalidOperation_ExpectedNodeType", $.String, "InvalidOperation_ExpectedNodeType");

    $.Constant({Static:true , Public:false}, "InvalidOperation_ExternalCode", $.String, "InvalidOperation_ExternalCode");

    $.Constant({Static:true , Public:false}, "InvalidOperation_DeserializeInstance", $.String, "InvalidOperation_DeserializeInstance");

    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingAncestor", $.String, "InvalidOperation_MissingAncestor");

    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingParent", $.String, "InvalidOperation_MissingParent");

    $.Constant({Static:true , Public:false}, "InvalidOperation_MissingRoot", $.String, "InvalidOperation_MissingRoot");

    $.Constant({Static:true , Public:false}, "InvalidOperation_UnexpectedEvaluation", $.String, "InvalidOperation_UnexpectedEvaluation");

    $.Constant({Static:true , Public:false}, "InvalidOperation_UnexpectedNodeType", $.String, "InvalidOperation_UnexpectedNodeType");

    $.Constant({Static:true , Public:false}, "InvalidOperation_UnresolvedEntityReference", $.String, "InvalidOperation_UnresolvedEntityReference");

    $.Constant({Static:true , Public:false}, "InvalidOperation_WriteAttribute", $.String, "InvalidOperation_WriteAttribute");

    $.Constant({Static:true , Public:false}, "NotSupported_CheckValidity", $.String, "NotSupported_CheckValidity");

    $.Constant({Static:true , Public:false}, "NotSupported_MoveToId", $.String, "NotSupported_MoveToId");

    $.Constant({Static:true , Public:false}, "NotSupported_WriteBase64", $.String, "NotSupported_WriteBase64");

    $.Constant({Static:true , Public:false}, "NotSupported_WriteEntityRef", $.String, "NotSupported_WriteEntityRef");

    $.Field({Static:true , Public:false}, "loader", $.Type);

    $.Field({Static:false, Public:false}, "resources", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm07.TypeRef("System.Resources.ResourceManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("MS");
JSIL.DeclareNamespace("MS.Internal");
JSIL.DeclareNamespace("MS.Internal.Xml");
JSIL.DeclareNamespace("MS.Internal.Xml.Linq");
JSIL.DeclareNamespace("MS.Internal.Xml.Linq.ComponentModel");
/* class MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1 */ 

(function XTypeDescriptionProvider$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeDescriptionProvider"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetTypeDescriptor", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), [$asm07.TypeRef("System.Type"), $.Object])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptor`1 */ 

(function XTypeDescriptor$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CustomTypeDescriptor"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptor`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2 */ 

(function XPropertyDescriptor$b2$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TProperty"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddValueChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventHandler")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanResetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ComponentType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SupportsChangeEvents", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RemoveValueChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventHandler")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ShouldSerializeValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ComponentType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "SupportsChangeEvents", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor */ 

(function XElementAttributePropertyDescriptor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.Object")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.Field({Static:false, Public:false}, "value", $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", [$asm30.TypeRef("System.Xml.Linq.XAttribute")]));

    $.Field({Static:false, Public:false}, "changeState", $asm30.TypeRef("System.Xml.Linq.XAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementAttributePropertyDescriptor+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetValue$gb__3_0", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XAttribute"), [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm30.TypeRef("System.Xml.Linq.XAttribute")
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor */ 

(function XElementDescendantsPropertyDescriptor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.Field({Static:false, Public:false}, "value", $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Field({Static:false, Public:false}, "changeState", $asm30.TypeRef("System.Xml.Linq.XName"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementDescendantsPropertyDescriptor+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetValue$gb__3_0", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor */ 

(function XElementElementPropertyDescriptor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.Object")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.Field({Static:false, Public:false}, "value", $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Field({Static:false, Public:false}, "changeState", $asm30.TypeRef("System.Xml.Linq.XElement"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementPropertyDescriptor+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetValue$gb__3_0", 
      new JSIL.MethodSignature($asm30.TypeRef("System.Xml.Linq.XElement"), [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm30.TypeRef("System.Xml.Linq.XElement")
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor */ 

(function XElementElementsPropertyDescriptor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanging", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.Field({Static:false, Public:false}, "value", $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]));

    $.Field({Static:false, Public:false}, "changeState", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementElementsPropertyDescriptor+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetValue$gb__3_0", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")]), [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XElement")])
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementValuePropertyDescriptor */ 

(function XElementValuePropertyDescriptor$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementValuePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "element", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XElementXmlPropertyDescriptor */ 

(function XElementXmlPropertyDescriptor$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XElement"), $asm07.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XElementXmlPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.Field({Static:false, Public:false}, "element", $asm30.TypeRef("System.Xml.Linq.XElement"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XAttributeValuePropertyDescriptor */ 

(function XAttributeValuePropertyDescriptor$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm30.TypeRef("MS.Internal.Xml.Linq.ComponentModel.XPropertyDescriptor`2", [$asm30.TypeRef("System.Xml.Linq.XAttribute"), $asm07.TypeRef("System.String")]), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XAttributeValuePropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm30.TypeRef("System.Xml.Linq.XObjectChangeEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "attribute", $asm30.TypeRef("System.Xml.Linq.XAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1 */ 

(function XDeferredAxis$b1$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Func`3", [
              $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
              $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])
            ]), $asm30.TypeRef("System.Xml.Linq.XElement"), 
          $asm30.TypeRef("System.Xml.Linq.XName")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "func", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])
        ]));

    $.Field({Static:false, Public:false}, "element", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true }, "Item", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1 */ 

(function XDeferredSingleton$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "MS.Internal.Xml.Linq.ComponentModel.XDeferredSingleton`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Func`3", [
              $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
              $.GenericParameter("T")
            ]), $asm30.TypeRef("System.Xml.Linq.XElement"), 
          $asm30.TypeRef("System.Xml.Linq.XName")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$.String])
    );

    $.Field({Static:false, Public:false}, "func", $asm07.TypeRef("System.Func`3", [
          $asm30.TypeRef("System.Xml.Linq.XElement"), $asm30.TypeRef("System.Xml.Linq.XName"), 
          $.GenericParameter("T")
        ]));

    $.Field({Static:false, Public:false}, "element", $asm30.TypeRef("System.Xml.Linq.XElement"));

    $.Field({Static:false, Public:false}, "$name", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Property({Static:false, Public:true }, "Item", $.GenericParameter("T"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:true , Public:false, ReadOnly:true }, "EBC658B067B5C785A3F0BB67D73755F6FEE7F70C", $.Int64);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class __DynamicallyInvokableAttribute */ 

(function __DynamicallyInvokableAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "__DynamicallyInvokableAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

