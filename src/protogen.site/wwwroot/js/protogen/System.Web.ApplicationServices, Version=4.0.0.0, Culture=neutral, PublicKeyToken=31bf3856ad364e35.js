/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm29 = JSIL.DeclareAssembly("System.Web.ApplicationServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Web.ApplicationServices.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Web.ApplicationServices.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Web.ApplicationServices.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2046.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Web");
/* class System.Web.ApplicationServicesStrings */ 

(function ApplicationServicesStrings$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Web.ApplicationServicesStrings", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Can_not_use_encrypted_passwords_with_autogen_keys", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CustomLoader_ForbiddenByHost", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CustomLoader_MustImplementICustomLoader", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CustomLoader_NoAttributeFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CustomLoader_NotInFullTrust", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_DuplicateEmail", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_DuplicateProviderUserKey", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_DuplicateUserName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidAnswer", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidEmail", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidPassword", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidProviderUserKey", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidQuestion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_InvalidUserName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_no_error", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_provider_name_invalid", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Membership_UserRejected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Parameter_can_not_be_empty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Platform_not_supported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Provider_Error", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Provider_must_implement_type", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.Field({Static:true , Public:false}, "resourceMan", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Advanced]; });

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Advanced]; });

    $.Property({Static:true , Public:false}, "Can_not_use_encrypted_passwords_with_autogen_keys", $.String);

    $.Property({Static:true , Public:false}, "CustomLoader_ForbiddenByHost", $.String);

    $.Property({Static:true , Public:false}, "CustomLoader_MustImplementICustomLoader", $.String);

    $.Property({Static:true , Public:false}, "CustomLoader_NoAttributeFound", $.String);

    $.Property({Static:true , Public:false}, "CustomLoader_NotInFullTrust", $.String);

    $.Property({Static:true , Public:false}, "Membership_DuplicateEmail", $.String);

    $.Property({Static:true , Public:false}, "Membership_DuplicateProviderUserKey", $.String);

    $.Property({Static:true , Public:false}, "Membership_DuplicateUserName", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidAnswer", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidEmail", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidPassword", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidProviderUserKey", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidQuestion", $.String);

    $.Property({Static:true , Public:false}, "Membership_InvalidUserName", $.String);

    $.Property({Static:true , Public:false}, "Membership_no_error", $.String);

    $.Property({Static:true , Public:false}, "Membership_provider_name_invalid", $.String);

    $.Property({Static:true , Public:false}, "Membership_UserRejected", $.String);

    $.Property({Static:true , Public:false}, "Parameter_can_not_be_empty", $.String);

    $.Property({Static:true , Public:false}, "Platform_not_supported", $.String);

    $.Property({Static:true , Public:false}, "Provider_Error", $.String);

    $.Property({Static:true , Public:false}, "Provider_must_implement_type", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.CodeDom.Compiler.GeneratedCodeAttribute"), function () { return ["System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0"]; })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"))
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Web.Util");
/* class System.Web.Util.SystemWebProxy */ 

(function SystemWebProxy$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Web.Util.SystemWebProxy", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CreateSystemWebMembershipAdapter", 
      JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.IMembershipAdapter"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DangerousCreateInstance", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMembershipAdapter", 
      JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.IMembershipAdapter"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "Membership", $asm29.TypeRef("System.Web.Security.IMembershipAdapter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.Util.SecurityServices */ 

(function SecurityServices$Members () {
  var $, $thisType;




  JSIL.MakeStaticClass("System.Web.Util.SecurityServices", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CheckForEmptyOrWhiteSpaceParameter", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.String]), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckForEmptyParameter", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckPasswordParameter", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Web.Security");
/* class System.Web.Security.MembershipCreateUserException */ 

(function MembershipCreateUserException$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Web.Security.MembershipCreateUserException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.MembershipCreateStatus"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StatusCode", 
      JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.MembershipCreateStatus"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessageFromStatusCode", 
      new JSIL.MethodSignature($.String, [$asm29.TypeRef("System.Web.Security.MembershipCreateStatus")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "_StatusCode", $asm29.TypeRef("System.Web.Security.MembershipCreateStatus"));

    $.Property({Static:false, Public:true }, "StatusCode", $asm29.TypeRef("System.Web.Security.MembershipCreateStatus"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Web.Security.MembershipUserCollection */ 

(function MembershipUserCollection$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Web.Security.MembershipUserCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.MembershipUser"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm29.TypeRef("System.Web.Security.MembershipUser")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUser"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.ICollection.CopyTo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $.Int32])
    )
      .Overrides($asm07.TypeRef("System.Collections.ICollection"), "CopyTo");

    $.Field({Static:false, Public:false}, "_Indices", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "_Values", $asm07.TypeRef("System.Collections.ArrayList"));

    $.Field({Static:false, Public:false}, "_ReadOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "Item", $asm29.TypeRef("System.Web.Security.MembershipUser"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 1 */ $asm07.TypeRef("System.Collections.ICollection")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* enum System.Web.Security.MembershipCreateStatus */ 

JSIL.MakeEnum(
  {
    FullName: "System.Web.Security.MembershipCreateStatus", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Success: 0, 
    InvalidUserName: 1, 
    InvalidPassword: 2, 
    InvalidQuestion: 3, 
    InvalidAnswer: 4, 
    InvalidEmail: 5, 
    DuplicateUserName: 6, 
    DuplicateEmail: 7, 
    UserRejected: 8, 
    InvalidProviderUserKey: 9, 
    DuplicateProviderUserKey: 10, 
    ProviderError: 11, 
  }
);

/* enum System.Web.Security.MembershipPasswordFormat */ 

JSIL.MakeEnum(
  {
    FullName: "System.Web.Security.MembershipPasswordFormat", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Clear: 0, 
    Hashed: 1, 
    Encrypted: 2, 
  }
);

/* class System.Web.Security.MembershipProviderCollection */ 

(function MembershipProviderCollection$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.Provider.ProviderCollection"), 
      Name: "System.Web.Security.MembershipProviderCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Configuration.Provider.ProviderBase"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm29.TypeRef("System.Web.Security.MembershipProvider")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipProvider"), [$.String])
    );

    $.Property({Static:false, Public:true }, "Item", $asm29.TypeRef("System.Web.Security.MembershipProvider"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* delegate System.Web.Security.MembershipValidatePasswordEventHandler */ 

JSIL.MakeDelegate("System.Web.Security.MembershipValidatePasswordEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm29.TypeRef("System.Web.Security.ValidatePasswordEventArgs")]));

/* class System.Web.Security.ValidatePasswordEventArgs */ 

(function ValidatePasswordEventArgs$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Web.Security.ValidatePasswordEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Cancel", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FailureInformation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsNewUser", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Password", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UserName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Cancel", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FailureInformation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:false, Public:false}, "_userName", $.String);

    $.Field({Static:false, Public:false}, "_password", $.String);

    $.Field({Static:false, Public:false}, "_isNewUser", $.Boolean);

    $.Field({Static:false, Public:false}, "_cancel", $.Boolean);

    $.Field({Static:false, Public:false}, "_failureInformation", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "UserName", $.String);

    $.Property({Static:false, Public:true }, "Password", $.String);

    $.Property({Static:false, Public:true }, "IsNewUser", $.Boolean);

    $.Property({Static:false, Public:true }, "Cancel", $.Boolean);

    $.Property({Static:false, Public:true }, "FailureInformation", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Web.Security.DefaultMembershipAdapter */ 

(function DefaultMembershipAdapter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Web.Security.DefaultMembershipAdapter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EncryptOrDecryptData", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [
          $.Boolean, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDecryptionKeyAutogenerated", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Providers", 
      JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.MembershipProviderCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UserIsOnlineTimeWindow", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UsingCustomEncryption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "Providers", $asm29.TypeRef("System.Web.Security.MembershipProviderCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "UserIsOnlineTimeWindow", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsDecryptionKeyAutogenerated", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "UsingCustomEncryption", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm29.TypeRef("System.Web.Security.IMembershipAdapter")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Web.Security.IMembershipAdapter */ 

JSIL.MakeInterface(
  "System.Web.Security.IMembershipAdapter", false, [], function ($) {
    $.Method({}, "get_Providers", JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.MembershipProviderCollection")));
    $.Method({}, "get_UserIsOnlineTimeWindow", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "get_IsDecryptionKeyAutogenerated", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "get_UsingCustomEncryption", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "EncryptOrDecryptData", new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [
          $.Boolean, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Boolean
        ]));
    $.Property({}, "Providers");
    $.Property({}, "UserIsOnlineTimeWindow");
    $.Property({}, "IsDecryptionKeyAutogenerated");
    $.Property({}, "UsingCustomEncryption");
  }, []);

/* class System.Web.Security.MembershipProvider */ 

(function MembershipProvider$Members () {
  var $, $thisType;





































  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.Provider.ProviderBase"), 
      Name: "System.Web.Security.MembershipProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ValidatingPassword", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.MembershipValidatePasswordEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ChangePassword", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ChangePasswordQuestionAndAnswer", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateUser", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUser"), [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$asm29.TypeRef("System.Web.Security.MembershipCreateStatus")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DecryptPassword", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DeleteUser", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EncryptPassword", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EncryptPassword", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$jsilcore.TypeRef("System.Array", [$.Byte]), $asm29.TypeRef("System.Web.Configuration.MembershipPasswordCompatibilityMode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindUsersByEmail", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUserCollection"), [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindUsersByName", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUserCollection"), [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ApplicationName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EnablePasswordReset", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EnablePasswordRetrieval", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MaxInvalidPasswordAttempts", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MinRequiredNonAlphanumericCharacters", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MinRequiredPasswordLength", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PasswordAttemptWindow", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PasswordFormat", 
      JSIL.MethodSignature.Return($asm29.TypeRef("System.Web.Security.MembershipPasswordFormat"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PasswordStrengthRegularExpression", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresQuestionAndAnswer", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresUniqueEmail", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAllUsers", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUserCollection"), [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNumberOfUsersOnline", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPassword", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUser", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUser"), [$.Object, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUser", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUser"), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetUser", 
      new JSIL.MethodSignature($asm29.TypeRef("System.Web.Security.MembershipUser"), [
          $.String, $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUserNameByEmail", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnValidatingPassword", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.ValidatePasswordEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ValidatingPassword", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.MembershipValidatePasswordEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetPassword", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_ApplicationName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UnlockUser", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UpdateUser", 
      JSIL.MethodSignature.Action($asm29.TypeRef("System.Web.Security.MembershipUser"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ValidateUser", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.Field({Static:false, Public:false}, "_EventHandler", $asm29.TypeRef("System.Web.Security.MembershipValidatePasswordEventHandler"));

    $.Property({Static:false, Public:true , Virtual:true }, "EnablePasswordRetrieval", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "EnablePasswordReset", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresQuestionAndAnswer", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ApplicationName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "MaxInvalidPasswordAttempts", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "PasswordAttemptWindow", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresUniqueEmail", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PasswordFormat", $asm29.TypeRef("System.Web.Security.MembershipPasswordFormat"));

    $.Property({Static:false, Public:true , Virtual:true }, "MinRequiredPasswordLength", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "MinRequiredNonAlphanumericCharacters", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "PasswordStrengthRegularExpression", $.String);

    $.Event({Static:false, Public:true }, "ValidatingPassword", $asm29.TypeRef("System.Web.Security.MembershipValidatePasswordEventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Web.Security.MembershipPasswordException */ 

(function MembershipPasswordException$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Web.Security.MembershipPasswordException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Web.Security.MembershipUser */ 

(function MembershipUser$Members () {
  var $, $thisType;







































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Web.Security.MembershipUser", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 13, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $.String, 
          $.String, $.String, 
          $.Boolean, $.Boolean, 
          $asm07.TypeRef("System.DateTime"), $asm07.TypeRef("System.DateTime"), 
          $asm07.TypeRef("System.DateTime"), $asm07.TypeRef("System.DateTime"), 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ChangePassword", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ChangePassword", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ChangePasswordQuestionAndAnswer", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Comment", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CreationDate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Email", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsApproved", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsLockedOut", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsOnline", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LastActivityDate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LastLockoutDate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LastLoginDate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LastPasswordChangedDate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PasswordQuestion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ProviderName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ProviderUserKey", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UserName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPassword", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPassword", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPassword", 
      new JSIL.MethodSignature($.String, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPassword", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPassword", 
      new JSIL.MethodSignature($.String, [
          $.String, $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetPassword", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetPassword", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetPassword", 
      new JSIL.MethodSignature($.String, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetPassword", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetPassword", 
      new JSIL.MethodSignature($.String, [
          $.String, $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Comment", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Email", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_IsApproved", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_LastActivityDate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_LastLoginDate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UnlockUser", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Update", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateSelf", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_UserName", $.String);

    $.Field({Static:false, Public:false}, "_ProviderUserKey", $.Object);

    $.Field({Static:false, Public:false}, "_Email", $.String);

    $.Field({Static:false, Public:false}, "_PasswordQuestion", $.String);

    $.Field({Static:false, Public:false}, "_Comment", $.String);

    $.Field({Static:false, Public:false}, "_IsApproved", $.Boolean);

    $.Field({Static:false, Public:false}, "_IsLockedOut", $.Boolean);

    $.Field({Static:false, Public:false}, "_LastLockoutDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_CreationDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_LastLoginDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_LastActivityDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_LastPasswordChangedDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "_ProviderName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "UserName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ProviderUserKey", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Email", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "PasswordQuestion", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Comment", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "IsApproved", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsLockedOut", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LastLockoutDate", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true , Virtual:true }, "CreationDate", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true , Virtual:true }, "LastLoginDate", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true , Virtual:true }, "LastActivityDate", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true , Virtual:true }, "LastPasswordChangedDate", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsOnline", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ProviderName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Web.Security.RoleProvider */ 

(function RoleProvider$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Configuration.Provider.ProviderBase"), 
      Name: "System.Web.Security.RoleProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddUsersToRoles", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateRole", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DeleteRole", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindUsersInRole", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ApplicationName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAllRoles", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRolesForUser", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetUsersInRole", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsUserInRole", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RemoveUsersFromRoles", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RoleExists", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_ApplicationName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ApplicationName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.TypeForwardedFromAttribute"), function () { return ["System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

JSIL.DeclareNamespace("System.Web.Hosting");
/* interface System.Web.Hosting.ICustomLoaderHelperFunctions */ 

JSIL.MakeInterface(
  "System.Web.Hosting.ICustomLoaderHelperFunctions", false, [], function ($) {
    $.Method({}, "get_AppPhysicalPath", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CustomLoaderIsEnabled", JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$.Boolean])));
    $.Method({}, "GetTrustLevel", new JSIL.MethodSignature($.String, [$.String]));
    $.Method({}, "MapPath", new JSIL.MethodSignature($.String, [$.String]));
    $.Property({}, "AppPhysicalPath");
    $.Property({}, "CustomLoaderIsEnabled");
  }, []);

/* class System.Web.Hosting.CustomLoaderHelper */ 

(function CustomLoaderHelper$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.MarshalByRefObject"), 
      Name: "System.Web.Hosting.CustomLoaderHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCustomLoader", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.IObjectHandle"), [
          $asm29.TypeRef("System.Web.Hosting.ICustomLoaderHelperFunctions"), $.String, 
          $.String, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.AppDomain")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCustomLoaderImpl", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.Remoting.ObjectHandle"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsFullyTrusted", 
      new JSIL.MethodSignature($.Boolean, [$asm29.TypeRef("System.Web.Hosting.ICustomLoaderHelperFunctions"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ObjectImplementsComInterface", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm07.TypeRef("System.Guid")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_customLoaderTargetFrameworkName", $.String);

    $.Field({Static:true , Public:false, ReadOnly:true }, "_customLoaderAssemblyName", $.String);

    $.Field({Static:true , Public:false, ReadOnly:true }, "_customLoaderTypeName", $.String);

    $.Field({Static:true , Public:false, ReadOnly:true }, "IID_ICustomLoader", $asm07.TypeRef("System.Guid"));


    function CustomLoaderHelper__cctor () {
      $thisType.IID_ICustomLoader = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      CustomLoaderHelper__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.Hosting.CustomLoaderAttribute */ 

(function CustomLoaderAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function CustomLoaderAttribute_get_CustomLoaderType () {
    return this.CustomLoaderAttribute$CustomLoaderType$value;
  }; 

  function CustomLoaderAttribute_set_CustomLoaderType (value) {
    this.CustomLoaderAttribute$CustomLoaderType$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Web.Hosting.CustomLoaderAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.Method({Static:false, Public:true }, "get_CustomLoaderType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      CustomLoaderAttribute_get_CustomLoaderType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CustomLoaderType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      CustomLoaderAttribute_set_CustomLoaderType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CustomLoaderAttribute$CustomLoaderType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CustomLoaderType", $asm07.TypeRef("System.Type"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Assembly]; });

})();

JSIL.DeclareNamespace("System.Web.Configuration");
/* enum System.Web.Configuration.MembershipPasswordCompatibilityMode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Web.Configuration.MembershipPasswordCompatibilityMode", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Framework20: 0, 
    Framework40: 1, 
  }
);

