/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm0B = JSIL.DeclareAssembly("System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.VisualBasic");
JSIL.DeclareNamespace("Microsoft.VisualBasic.Activities");
/* class Microsoft.VisualBasic.Activities.VisualBasic */ 

(function VisualBasic$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("Microsoft.VisualBasic.Activities.VisualBasic", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetSettings", 
      new JSIL.MethodSignature($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetSettings", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetSettingsForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializeSettings", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Field({Static:true , Public:false}, "settingsPropertyID", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper */ 

(function VisualBasicDesignerHelper$Members () {
  var $, $thisType;











  JSIL.MakeStaticClass("Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreatePrecompiledVisualBasicReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [
          $asm07.TypeRef("System.Type"), $.String, 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), 
          $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ExpressionParser.SourceExpressionException")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreatePrecompiledVisualBasicValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [
          $asm07.TypeRef("System.Type"), $.String, 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), 
          $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ExpressionParser.SourceExpressionException")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureTypeReferenced", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureTypeReferencedRecurse", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindTypeReferences", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression"), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindTypeReferences", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.MemberBinding"), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_NameShadowingConstraint", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAllImportReferences", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "RecompileVisualBasicReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [
          $asm0B.TypeRef("System.Activities.ActivityWithResult"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ExpressionParser.SourceExpressionException")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "RecompileVisualBasicValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [
          $asm0B.TypeRef("System.Activities.ActivityWithResult"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ExpressionParser.SourceExpressionException")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings")])
        ])
    );

    $.Field({Static:true , Public:false}, "VisualBasicExpressionFactoryType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper_VisualBasicExpressionFactory$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "nameShadowingConstraint", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicNameShadowingConstraint"));

    $.Property({Static:true , Public:true }, "NameShadowingConstraint", $asm0B.TypeRef("System.Activities.Validation.Constraint"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper+VisualBasicExpressionFactory */ 

(function VisualBasicExpressionFactory$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper+VisualBasicExpressionFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateVisualBasicReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateVisualBasicValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper+VisualBasicExpressionFactory`1 */ 

(function VisualBasicExpressionFactory$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper+VisualBasicExpressionFactory"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper+VisualBasicExpressionFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateVisualBasicReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateVisualBasicValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper */ 

(function VisualBasicHelper$Members () {
  var $, $thisType;






























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.AssemblyName")]), 
          $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddToRawTreeCache", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheKey"), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheValueWrapper"), 
          $asm10.TypeRef("System.Linq.Expressions.LambdaExpression")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Compile", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), [
          $.String, $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "Compile", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), [$asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), $.Boolean], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "Compile", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), [$asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "Compile", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), [$asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $.Boolean], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "CompileNonGeneric", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"), [$asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "EnsureTypeReferenced", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureTypeReferencedRecurse", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractNamespacesAndReferences", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindAllLocationReferenceMatch", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindFirstLocationReferenceMatch", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindLocationReferenceMatchShortcut", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindLocationReferencesFromEnvironment", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.LocationReference"), [
          $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch"), 
          $.String, $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindParameter", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), [$asm10.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindParameter", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindParameter", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm10.TypeRef("System.Linq.Expressions.ElementInit")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindParameter", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm10.TypeRef("System.Linq.Expressions.MemberBinding")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RawTreeCache", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Collections.HopperCache"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_TextToCompile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetAllImportReferences", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCachedHostedCompiler", 
      new JSIL.MethodSignature($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+HostedCompilerWrapper"), [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetFastAssemblyName", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.AssemblyName"), [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.AssemblyName")]), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Rewrite", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Rewrite", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Rewrite", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.MemberBinding"), [
          $asm10.TypeRef("System.Linq.Expressions.MemberBinding"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "DefaultReferencedAssemblies", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")]));

    $.Constant({Static:true , Public:false}, "typeReferenceCacheMaxSize", $.Int32, 100);

    $.Field({Static:true , Public:false}, "typeReferenceCacheLock", $.Object);

    $.Field({Static:true , Public:false}, "typeReferenceCache", $asm25.TypeRef("System.Runtime.Collections.HopperCache"));

    $.Field({Static:true , Public:false}, "lastTimestamp", $.UInt64, function ($pi) {
        return ($asm07.System.Int64.FromNumber(0)).ToUInt64();
      });

    $.Constant({Static:true , Public:false}, "rawTreeCacheMaxSize", $.Int32, 128);

    $.Field({Static:true , Public:false}, "rawTreeCacheLock", $.Object);

    $.Field({Static:true , Public:false}, "rawTreeCache", $asm25.TypeRef("System.Runtime.Collections.HopperCache"))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Constant({Static:true , Public:false}, "HostedCompilerCacheSize", $.Int32, 10);

    $.Field({Static:true , Public:false}, "HostedCompilerCache", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")]), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+HostedCompilerWrapper")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "textToCompile", $.String);

    $.Field({Static:false, Public:false}, "referencedAssemblies", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")]));

    $.Field({Static:false, Public:false}, "namespaceImports", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "publicAccessor", $asm07.TypeRef("System.Nullable`1", [$asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")]));

    $.Field({Static:false, Public:false}, "isShortCutRewrite", $.Boolean);

    $.Field({Static:true , Public:false}, "delegateFindLocationReferenceMatchShortcut", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch"), function ($pi) {
        return $asm0B.Microsoft.VisualBasic.Activities.VisualBasicHelper_FindMatch.New(null, null, new JSIL.MethodPointerInfo($thisType, "FindLocationReferenceMatchShortcut", new JSIL.MethodSignature($.Boolean, [
                $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
                $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
              ]), true, false));
      });

    $.Field({Static:true , Public:false}, "delegateFindFirstLocationReferenceMatch", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch"), function ($pi) {
        return $asm0B.Microsoft.VisualBasic.Activities.VisualBasicHelper_FindMatch.New(null, null, new JSIL.MethodPointerInfo($thisType, "FindFirstLocationReferenceMatch", new JSIL.MethodSignature($.Boolean, [
                $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
                $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
              ]), true, false));
      });

    $.Field({Static:true , Public:false}, "delegateFindAllLocationReferenceMatch", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch"), function ($pi) {
        return $asm0B.Microsoft.VisualBasic.Activities.VisualBasicHelper_FindMatch.New(null, null, new JSIL.MethodPointerInfo($thisType, "FindAllLocationReferenceMatch", new JSIL.MethodSignature($.Boolean, [
                $asm0B.TypeRef("System.Activities.LocationReference"), $.String, 
                $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
              ]), true, false));
      });

    $.Property({Static:true , Public:false}, "Language", $.String);

    $.Property({Static:true , Public:false}, "RawTreeCache", $asm25.TypeRef("System.Runtime.Collections.HopperCache"));

    $.Property({Static:false, Public:true }, "TextToCompile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch */ 

JSIL.MakeDelegate("Microsoft.VisualBasic.Activities.VisualBasicHelper+FindMatch", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Boolean"), [
      $asm0B.TypeRef("System.Activities.LocationReference"), $asm07.TypeRef("System.String"), 
      $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Boolean")])
    ]));

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheValueWrapper */ 

(function RawTreeCacheValueWrapper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm10.System.Linq.Expressions.LambdaExpression)) ();
  };



  function RawTreeCacheValueWrapper_get_Value () {
    return this.RawTreeCacheValueWrapper$Value$value;
  }; 

  function RawTreeCacheValueWrapper_set_Value (value) {
    this.RawTreeCacheValueWrapper$Value$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheValueWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.LambdaExpression")), 
      RawTreeCacheValueWrapper_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression")), 
      RawTreeCacheValueWrapper_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RawTreeCacheValueWrapper$Value$value", $asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Value", $asm10.TypeRef("System.Linq.Expressions.LambdaExpression"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheKey */ 

(function RawTreeCacheKey$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper+RawTreeCacheKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")]), $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CombineHashCodes", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:true , Public:false}, "AssemblySetEqualityComparer", $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")])]));

    $.Field({Static:true , Public:false}, "NamespaceSetEqualityComparer", $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String])]));

    $.Field({Static:false, Public:false}, "expressionText", $.String);

    $.Field({Static:false, Public:false}, "returnType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "assemblies", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Reflection.Assembly")]));

    $.Field({Static:false, Public:false}, "namespaces", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "hashCode", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper+VisualBasicImportScope */ 

(function VisualBasicImportScope$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper+VisualBasicImportScope", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("Microsoft.Compiler.VisualBasic.Import")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetImports", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("Microsoft.Compiler.VisualBasic.Import")]))
    );

    $.Field({Static:false, Public:false}, "importList", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("Microsoft.Compiler.VisualBasic.Import")]));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("Microsoft.Compiler.VisualBasic.IImportScope")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper+VisualBasicScriptAndTypeScope */ 

(function VisualBasicScriptAndTypeScope$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper+VisualBasicScriptAndTypeScope", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Reflection.Assembly")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindTypes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindVariable", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "NamespaceExists", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Field({Static:false, Public:false}, "environmentProvider", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "assemblies", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Reflection.Assembly")]));

    $.Field({Static:false, Public:false}, "errorMessage", $.String);

    $.Property({Static:false, Public:true }, "ErrorMessage", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("Microsoft.Compiler.VisualBasic.IScriptScope"), 
      /* 1 */ $asm06.TypeRef("Microsoft.Compiler.VisualBasic.ITypeScope")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicHelper+HostedCompilerWrapper */ 

(function HostedCompilerWrapper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.UInt64)) ();
  };




  function HostedCompilerWrapper_get_Timestamp () {
    return this.HostedCompilerWrapper$Timestamp$value;
  }; 




  function HostedCompilerWrapper_set_Timestamp (value) {
    this.HostedCompilerWrapper$Timestamp$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicHelper+HostedCompilerWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Microsoft.Compiler.VisualBasic.HostedCompiler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Compiler", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Microsoft.Compiler.VisualBasic.HostedCompiler"))
    );

    $.Method({Static:false, Public:true }, "get_Timestamp", 
      JSIL.MethodSignature.Return($.UInt64), 
      HostedCompilerWrapper_get_Timestamp
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "MarkAsKickedOut", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Release", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Reserve", 
      JSIL.MethodSignature.Action($.UInt64)
    );

    $.Method({Static:false, Public:false}, "set_Timestamp", 
      JSIL.MethodSignature.Action($.UInt64), 
      HostedCompilerWrapper_set_Timestamp
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "wrapperLock", $.Object);

    $.Field({Static:false, Public:false}, "compiler", $asm06.TypeRef("Microsoft.Compiler.VisualBasic.HostedCompiler"));

    $.Field({Static:false, Public:false}, "isCached", $.Boolean);

    $.Field({Static:false, Public:false}, "refCount", $.Int32);

    $.Field({Static:false, Public:false}, "HostedCompilerWrapper$Timestamp$value", $.UInt64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Compiler", $asm06.TypeRef("Microsoft.Compiler.VisualBasic.HostedCompiler"));

    $.Property({Static:false, Public:true }, "Timestamp", $.UInt64);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Activities");
/* class System.Activities.Activity */ 

(function Activity$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.ActivityDelegate)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Func$b1.Of($asm0B.System.Activities.Activity))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Version)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.IdSpace)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




























  function Activity_get_HandlerOf () {
    return this.Activity$HandlerOf$value;
  }; 







  function Activity_get_Implementation () {
    return this.Activity$Implementation$value;
  }; 



  function Activity_get_ImplementationEnvironment () {
    return this.Activity$ImplementationEnvironment$value;
  }; 


  function Activity_get_ImplementationVersion () {
    return this.Activity$ImplementationVersion$value;
  }; 











  function Activity_get_MemberOf () {
    return this.Activity$MemberOf$value;
  }; 

  function Activity_get_Origin () {
    return this.Activity$Origin$value;
  }; 


  function Activity_get_Parent$00 () {
    return this.Activity$Parent$value;
  }; 

  function Activity_get_ParentOf () {
    return this.Activity$ParentOf$value;
  }; 

  function Activity_get_PublicEnvironment () {
    return this.Activity$PublicEnvironment$value;
  }; 









  function Activity_get_SkipArgumentResolution () {
    return this.Activity$SkipArgumentResolution$value;
  }; 



  function Activity_get_UseOldFastPath () {
    return this.Activity$UseOldFastPath$value;
  }; 

























  function Activity_set_HandlerOf (value) {
    this.Activity$HandlerOf$value = value;
  }; 


  function Activity_set_Implementation (value) {
    this.Activity$Implementation$value = value;
  }; 

  function Activity_set_ImplementationEnvironment (value) {
    this.Activity$ImplementationEnvironment$value = value;
  }; 

  function Activity_set_ImplementationVersion (value) {
    this.Activity$ImplementationVersion$value = value;
  }; 


  function Activity_set_MemberOf (value) {
    this.Activity$MemberOf$value = value;
  }; 

  function Activity_set_Origin (value) {
    this.Activity$Origin$value = value;
  }; 


  function Activity_set_Parent$01 (value) {
    this.Activity$Parent$value = value;
  }; 

  function Activity_set_ParentOf (value) {
    this.Activity$ParentOf$value = value;
  }; 

  function Activity_set_PublicEnvironment (value) {
    this.Activity$PublicEnvironment$value = value;
  }; 


  function Activity_set_SkipArgumentResolution (value) {
    this.Activity$SkipArgumentResolution$value = value;
  }; 

  function Activity_set_UseOldFastPath (value) {
    this.Activity$UseOldFastPath$value = value;
  }; 
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Activity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddChild", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddDefaultExtensionProvider", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddImplementationChild", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddImplementationDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddImplementationVariable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddImportedChild", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddImportedDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddTempAutoGeneratedArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.RuntimeArgument"), [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddTempValidationError", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationError"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddVariable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CanBeScheduledBy", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearCachedInformation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearCachedMetadata", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearIdInfo", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DeclareSingletonActivity", 
      new JSIL.MethodSignature(null, [$.String, $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CacheId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Children", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Constraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultExtensionsCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Delegates", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EquivalenceInfo", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"))
    );

    $.Method({Static:false, Public:false}, "get_HandlerOf", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityDelegate")), 
      Activity_get_HandlerOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_HasBeenAssociatedWithAnInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasNonEmptySubtree", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasStartedCachingMetadata", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasTempViolations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HostEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$.Type])), 
      Activity_get_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ImplementationChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImplementationDelegates", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.Method({Static:false, Public:false}, "get_ImplementationEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      Activity_get_ImplementationEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ImplementationVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.Method({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version")), 
      Activity_get_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ImportedChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportedDelegates", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalCanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsActivityWithResult", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsExpressionRoot", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsFastPath", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsMetadataCached", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsMetadataFullyCached", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsRuntimeReady", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_MemberOf", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace")), 
      Activity_get_MemberOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Origin", 
      JSIL.MethodSignature.Return($.Object), 
      Activity_get_Origin
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_OverloadGroups", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]))
    );

    $.Method({Static:false, Public:false}, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      Activity_get_Parent$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ParentOf", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace")), 
      Activity_get_ParentOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_PublicEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      Activity_get_PublicEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_QualifiedId", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.QualifiedId"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RelationshipToParent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity+RelationshipType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RequiredArgumentsNotInOverloadGroups", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RequiredExtensionTypesCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RootActivity", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.Method({Static:false, Public:false}, "get_SkipArgumentResolution", 
      JSIL.MethodSignature.Return($.Boolean), 
      Activity_get_SkipArgumentResolution
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SymbolCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Method({Static:false, Public:false}, "get_UseOldFastPath", 
      JSIL.MethodSignature.Return($.Boolean), 
      Activity_get_UseOldFastPath
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetActivityExtensionInformation", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])]), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetParentEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSingletonActivity", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeAsRoot", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.ActivityCollectionType"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Variable"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $.Type, $asm0B.TypeRef("System.Activities.ActivityCollectionType"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $.Type, $.Boolean, 
          $asm0B.TypeRef("System.Activities.Activity+RelationshipType"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalCacheMetadata", 
      new JSIL.MethodSignature(null, [$.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsResultArgument", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsSingletonActivityDeclared", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "NullCheck", 
      new JSIL.MethodSignature($.Boolean, ["!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $.Type
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RequireExtension", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetTempAutoGeneratedArguments", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_EquivalenceInfo", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"))
    );

    $.Method({Static:false, Public:false}, "set_HandlerOf", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate")), 
      Activity_set_HandlerOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_HasBeenAssociatedWithAnInstance", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$.Type])), 
      Activity_set_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ImplementationEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      Activity_set_ImplementationEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version")), 
      Activity_set_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_InternalId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Method({Static:false, Public:false}, "set_MemberOf", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace")), 
      Activity_set_MemberOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Origin", 
      JSIL.MethodSignature.Action($.Object), 
      Activity_set_Origin
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_OverloadGroups", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]))
    );

    $.Method({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      Activity_set_Parent$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ParentOf", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace")), 
      Activity_set_ParentOf
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PublicEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      Activity_set_PublicEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_RequiredArgumentsNotInOverloadGroups", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.Method({Static:false, Public:false}, "set_SkipArgumentResolution", 
      JSIL.MethodSignature.Action($.Boolean), 
      Activity_set_SkipArgumentResolution
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_UseOldFastPath", 
      JSIL.MethodSignature.Action($.Boolean), 
      Activity_set_UseOldFastPath
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetArgumentsCollection", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetCached", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImplementationChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImplementationDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImplementationVariablesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImportedChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetImportedDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetRuntimeReady", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetTempValidationErrorCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetVariablesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeDisplayName", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "TransferTempValidationErrors", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])]))
    );

    $.Constant({Static:true , Public:false}, "generatedArgumentPrefix", $.String, "Argument");

    $.Field({Static:true , Public:false}, "nextCacheId", $.Int32);

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyChildren", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyVariables", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyDelegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyConstraints", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "isDisplayNameSet", $.Boolean);

    $.Field({Static:false, Public:false}, "id", $.Int32);

    $.Field({Static:false, Public:false}, "rootProperties", $asm0B.TypeRef("System.Activities.Activity+RootProperties"));

    $.Field({Static:false, Public:false}, "$arguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Field({Static:false, Public:false}, "children", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Field({Static:false, Public:false}, "implementationChildren", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Field({Static:false, Public:false}, "importedChildren", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Field({Static:false, Public:false}, "delegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Field({Static:false, Public:false}, "implementationDelegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Field({Static:false, Public:false}, "importedDelegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "implementationVariables", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "tempValidationErrors", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "tempAutoGeneratedArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Field({Static:false, Public:false}, "constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Field({Static:false, Public:false}, "runtimeImplementation", $.Type);

    $.Field({Static:false, Public:false}, "rootActivity", $.Type);

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "qualifiedId", $asm0B.TypeRef("System.Activities.QualifiedId"));

    $.Field({Static:false, Public:false}, "isMetadataCached", $asm0B.TypeRef("System.Activities.Activity+CacheStates"));

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "relationshipToParent", $asm0B.TypeRef("System.Activities.Activity+RelationshipType"));

    $.Field({Static:false, Public:false}, "isSubtreeEmpty", $asm07.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "symbolCount", $.Int32);

    $.Field({Static:false, Public:false}, "Activity$ImplementationVersion$value", $asm07.TypeRef("System.Version"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$Implementation$value", $asm07.TypeRef("System.Func`1", [$.Type]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$MemberOf$value", $asm0B.TypeRef("System.Activities.IdSpace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$ParentOf$value", $asm0B.TypeRef("System.Activities.IdSpace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$UseOldFastPath$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$SkipArgumentResolution$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$Origin$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$HandlerOf$value", $asm0B.TypeRef("System.Activities.ActivityDelegate"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$Parent$value", $.Type)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$PublicEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Activity$ImplementationEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ImplementationVersionConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$.Type]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.XamlDeferLoadAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.FuncDeferringLoader.__Type__, $asm0B.System.Activities.Activity.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.AmbientAttribute"));

    $.Property({Static:false, Public:false}, "Constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Property({Static:false, Public:false}, "CacheId", $.Int32);

    $.Property({Static:false, Public:false}, "RelationshipToParent", $asm0B.TypeRef("System.Activities.Activity+RelationshipType"));

    $.Property({Static:false, Public:false}, "HasNonEmptySubtree", $.Boolean);

    $.Property({Static:false, Public:false}, "SymbolCount", $.Int32);

    $.Property({Static:false, Public:false}, "MemberOf", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Property({Static:false, Public:false}, "ParentOf", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Property({Static:false, Public:false}, "QualifiedId", $asm0B.TypeRef("System.Activities.QualifiedId"));

    $.Property({Static:false, Public:false}, "UseOldFastPath", $.Boolean);

    $.Property({Static:false, Public:false}, "SkipArgumentResolution", $.Boolean);

    $.Property({Static:false, Public:false}, "IsFastPath", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "IsActivityWithResult", $.Boolean);

    $.Property({Static:false, Public:false}, "Origin", $.Object);

    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true }, "Id", $.String);

    $.Property({Static:false, Public:false}, "IsExpressionRoot", $.Boolean);

    $.Property({Static:false, Public:false}, "HasStartedCachingMetadata", $.Boolean);

    $.Property({Static:false, Public:false}, "IsMetadataCached", $.Boolean);

    $.Property({Static:false, Public:false}, "IsMetadataFullyCached", $.Boolean);

    $.Property({Static:false, Public:false}, "IsRuntimeReady", $.Boolean);

    $.Property({Static:false, Public:false}, "RootActivity", $.Type);

    $.Property({Static:false, Public:false}, "InternalId", $.Int32);

    $.Property({Static:false, Public:false}, "HandlerOf", $asm0B.TypeRef("System.Activities.ActivityDelegate"));

    $.Property({Static:false, Public:false}, "Parent", $.Type);

    $.Property({Static:false, Public:false}, "HostEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false}, "RuntimeArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Property({Static:false, Public:false}, "Children", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Property({Static:false, Public:false}, "ImplementationChildren", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Property({Static:false, Public:false}, "ImportedChildren", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]));

    $.Property({Static:false, Public:false}, "Delegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Property({Static:false, Public:false}, "ImplementationDelegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Property({Static:false, Public:false}, "ImportedDelegates", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Property({Static:false, Public:false}, "HasBeenAssociatedWithAnInstance", $.Boolean);

    $.Property({Static:false, Public:false}, "OverloadGroups", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]));

    $.Property({Static:false, Public:false}, "RequiredArgumentsNotInOverloadGroups", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Property({Static:false, Public:false}, "EquivalenceInfo", $asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"));

    $.Property({Static:false, Public:false}, "RuntimeVariables", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:false}, "ImplementationVariables", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:false}, "RuntimeConstraints", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Property({Static:false, Public:false}, "PublicEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false}, "ImplementationEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false, Virtual:true }, "InternalCanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "HasTempViolations", $.Boolean);

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);

    $.Property({Static:false, Public:false}, "RequiredExtensionTypesCount", $.Int32);

    $.Property({Static:false, Public:false}, "DefaultExtensionsCount", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Implementation"]; });

})();

/* class System.Activities.Activity+RootProperties */ 

(function RootProperties$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Validation.ValidationHelper_OverloadGroupEquivalenceInfo)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Collections.Generic.Dictionary$b2.Of($asm07.System.String, $asm07.System.Collections.Generic.List$b1.Of($asm0B.System.Activities.RuntimeArgument)))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm0B.System.Activities.RuntimeArgument))) ();
  };






  function RootProperties_get_EquivalenceInfo () {
    return this.RootProperties$EquivalenceInfo$value;
  }; 

  function RootProperties_get_HasBeenAssociatedWithAnInstance () {
    return this.RootProperties$HasBeenAssociatedWithAnInstance$value;
  }; 

  function RootProperties_get_HostEnvironment () {
    return this.RootProperties$HostEnvironment$value;
  }; 

  function RootProperties_get_OverloadGroups () {
    return this.RootProperties$OverloadGroups$value;
  }; 

  function RootProperties_get_RequiredArgumentsNotInOverloadGroups () {
    return this.RootProperties$RequiredArgumentsNotInOverloadGroups$value;
  }; 






  function RootProperties_set_EquivalenceInfo (value) {
    this.RootProperties$EquivalenceInfo$value = value;
  }; 

  function RootProperties_set_HasBeenAssociatedWithAnInstance (value) {
    this.RootProperties$HasBeenAssociatedWithAnInstance$value = value;
  }; 

  function RootProperties_set_HostEnvironment (value) {
    this.RootProperties$HostEnvironment$value = value;
  }; 

  function RootProperties_set_OverloadGroups (value) {
    this.RootProperties$OverloadGroups$value = value;
  }; 

  function RootProperties_set_RequiredArgumentsNotInOverloadGroups (value) {
    this.RootProperties$RequiredArgumentsNotInOverloadGroups$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Activity+RootProperties", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDefaultExtensionProvider", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DeclareSingletonActivity", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultExtensionsCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Method({Static:false, Public:true }, "get_EquivalenceInfo", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo")), 
      RootProperties_get_EquivalenceInfo
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HasBeenAssociatedWithAnInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      RootProperties_get_HasBeenAssociatedWithAnInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HostEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      RootProperties_get_HostEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OverloadGroups", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])])), 
      RootProperties_get_OverloadGroups
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RequiredArgumentsNotInOverloadGroups", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])), 
      RootProperties_get_RequiredArgumentsNotInOverloadGroups
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_RequiredExtensionTypesCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetActivityExtensionInformation", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])]), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSingletonActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsSingletonActivityDeclared", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.Method({Static:false, Public:true }, "set_EquivalenceInfo", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo")), 
      RootProperties_set_EquivalenceInfo
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HasBeenAssociatedWithAnInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      RootProperties_set_HasBeenAssociatedWithAnInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HostEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      RootProperties_set_HostEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OverloadGroups", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])])), 
      RootProperties_set_OverloadGroups
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RequiredArgumentsNotInOverloadGroups", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])), 
      RootProperties_set_RequiredArgumentsNotInOverloadGroups
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "singletonActivityNames", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "activityExtensionProviders", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")]));

    $.Field({Static:false, Public:false}, "requiredExtensionTypes", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "RootProperties$HasBeenAssociatedWithAnInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RootProperties$HostEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RootProperties$OverloadGroups$value", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RootProperties$RequiredArgumentsNotInOverloadGroups$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RootProperties$EquivalenceInfo$value", $asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "HasBeenAssociatedWithAnInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "HostEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "OverloadGroups", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]));

    $.Property({Static:false, Public:true }, "RequiredArgumentsNotInOverloadGroups", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Property({Static:false, Public:true }, "EquivalenceInfo", $asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"));

    $.Property({Static:false, Public:true }, "DefaultExtensionsCount", $.Int32);

    $.Property({Static:false, Public:true }, "RequiredExtensionTypesCount", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Activity+ReflectedInformation */ 

(function ReflectedInformation$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Activity+ReflectedInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity+ReflectedInformation+ReflectedType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"])]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCollection", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"])]), $asm07.TypeRef("System.Collections.IEnumerable")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetChildren", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDelegates", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDelegates", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIsArgumentRequired", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.PropertyDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOverloadGroupNames", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$.String]), [$asm0A.TypeRef("System.ComponentModel.PropertyDescriptor")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetVariables", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "$arguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "children", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "delegates", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]));

    $.Field({Static:true , Public:false}, "DictionaryArgumentHelperType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Activity_ReflectedInformation_DictionaryArgumentHelper$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "OverloadGroupAttributeType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.OverloadGroupAttribute.__Type__;
      });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Activity+ReflectedInformation+ReflectedType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Activity+ReflectedInformation+ReflectedType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    Argument: 1, 
    Variable: 2, 
    Child: 4, 
    ActivityDelegate: 8, 
    All: 15, 
  }
);

/* class System.Activities.Activity+ReflectedInformation+DictionaryArgumentHelper */ 

(function DictionaryArgumentHelper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IList$b1.Of($asm0B.System.Activities.RuntimeArgument))) ();
  };



  function DictionaryArgumentHelper_get_RuntimeArguments () {
    return this.DictionaryArgumentHelper$RuntimeArguments$value;
  }; 


  function DictionaryArgumentHelper_set_RuntimeArguments (value) {
    this.DictionaryArgumentHelper$RuntimeArguments$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Activity+ReflectedInformation+DictionaryArgumentHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_RuntimeArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])), 
      DictionaryArgumentHelper_get_RuntimeArguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetRuntimeArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, "!!0"])]), $.String], ["T"])
    );

    $.Method({Static:false, Public:false}, "set_RuntimeArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])), 
      DictionaryArgumentHelper_set_RuntimeArguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryGetRuntimeArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), [$.Object, $.String])
    );

    $.Field({Static:false, Public:false}, "DictionaryArgumentHelper$RuntimeArguments$value", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "RuntimeArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Activity+ReflectedInformation+DictionaryArgumentHelper`1 */ 

(function DictionaryArgumentHelper$b1$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity+ReflectedInformation+DictionaryArgumentHelper"), 
      Name: "System.Activities.Activity+ReflectedInformation+DictionaryArgumentHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Activity+RelationshipType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Activity+RelationshipType", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Child: 0, 
    ImportedChild: 1, 
    ImplementationChild: 2, 
    DelegateHandler: 3, 
    ArgumentExpression: 4, 
    VariableDefault: 5, 
  }
);

/* enum System.Activities.Activity+CacheStates */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Activity+CacheStates", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Uncached: 0, 
    Partial: 1, 
    Full: 2, 
    RuntimeReady: 4, 
  }
);

/* class System.Activities.ActivityWithResult */ 

(function ActivityWithResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.RuntimeArgument)) ();
  };







  function ActivityWithResult_get_ResultRuntimeArgument () {
    return this.ActivityWithResult$ResultRuntimeArgument$value;
  }; 





  function ActivityWithResult_set_ResultRuntimeArgument (value) {
    this.ActivityWithResult$ResultRuntimeArgument$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.ActivityWithResult", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsActivityWithResult", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ResultCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.Method({Static:false, Public:false}, "get_ResultRuntimeArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeArgument")), 
      ActivityWithResult_get_ResultRuntimeArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecuteInResolutionContextUntyped", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Result", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ResultCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.Method({Static:false, Public:false}, "set_ResultRuntimeArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument")), 
      ActivityWithResult_set_ResultRuntimeArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityWithResult$ResultRuntimeArgument$value", $asm0B.TypeRef("System.Activities.RuntimeArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ResultType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "InternalResultType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "ResultCore", $asm0B.TypeRef("System.Activities.OutArgument"));

    $.Property({Static:false, Public:false}, "ResultRuntimeArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Property({Static:false, Public:false, Virtual:true }, "IsActivityWithResult", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Activity`1 */ 

(function Activity$b1$Members () {
  var $, $thisType;






  function Activity$b1_get_Result$00 () {
    return this.Activity$b1$Result$value;
  }; 











  function Activity$b1_set_Result$01 (value) {
    this.Activity$b1$Result$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityWithResult"), 
      Name: "System.Activities.Activity`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "FromValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$.GenericParameter("TResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("TResult")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("TResult")]), null), 
      Activity$b1_get_Result$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ResultCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecuteInResolutionContext", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecuteInResolutionContextUntyped", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsBoundArgumentCorrect", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "IsResultArgument", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadataExceptResult", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$.GenericParameter("TResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("TResult")])])
    );

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("TResult")])]), 
      Activity$b1_set_Result$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ResultCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument"))
    );

    $.Field({Static:false, Public:false}, "Activity$b1$Result$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "InternalResultType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "ResultCore", $asm0B.TypeRef("System.Activities.OutArgument"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ActivityWithResultConverter.__Type__]; })
    .Attribute($asm0A.TypeRef("System.Windows.Markup.ValueSerializerAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ActivityWithResultValueSerializer.__Type__]; });

})();

/* class System.Activities.CodeActivity`1 */ 

(function CodeActivity$b1$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [new JSIL.GenericParameter("TResult", "System.Activities.CodeActivity`1")]), 
      Name: "System.Activities.CodeActivity`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecuteInResolutionContext", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadataExceptResult", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicReference`1 */ 

(function VisualBasicReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };









  function VisualBasicReference$b1_get_ExpressionText () {
    return this.VisualBasicReference$b1$ExpressionText$value;
  }; 




  function VisualBasicReference$b1_set_ExpressionText (value) {
    this.VisualBasicReference$b1$ExpressionText$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "Microsoft.VisualBasic.Activities.VisualBasicReference`1")])]), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompileLocationExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])]), [$asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ExpressionText", 
      JSIL.MethodSignature.Return($.String), 
      VisualBasicReference$b1_get_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresCompilation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExpressionTree", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Method({Static:false, Public:true }, "set_ExpressionText", 
      JSIL.MethodSignature.Action($.String), 
      VisualBasicReference$b1_set_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "expressionTree", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])]));

    $.Field({Static:false, Public:false}, "locationFactory", $asm0B.TypeRef("System.Activities.LocationFactory`1", [$.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "invoker", $asm0B.TypeRef("System.Activities.Expressions.CompiledExpressionInvoker"));

    $.Field({Static:false, Public:false}, "VisualBasicReference$b1$ExpressionText$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExpressionText", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Language", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresCompilation", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.XamlIntegration.IValueSerializableExpression"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 2 */ $asm0B.TypeRef("System.Activities.Expressions.ITextExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"));

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicImportReference */ 

(function VisualBasicImportReference$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Reflection.Assembly)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm30.System.Xml.Linq.XNamespace)) ();
  };








  function VisualBasicImportReference_get_EarlyBoundAssembly () {
    return this.VisualBasicImportReference$EarlyBoundAssembly$value;
  }; 


  function VisualBasicImportReference_get_Xmlns () {
    return this.VisualBasicImportReference$Xmlns$value;
  }; 



  function VisualBasicImportReference_set_EarlyBoundAssembly (value) {
    this.VisualBasicImportReference$EarlyBoundAssembly$value = value;
  }; 


  function VisualBasicImportReference_set_Xmlns (value) {
    this.VisualBasicImportReference$Xmlns$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicImportReference", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateXamlNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.INamespacePrefixLookup"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assembly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AssemblyName", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.AssemblyName"))
    );

    $.Method({Static:false, Public:false}, "get_EarlyBoundAssembly", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.Assembly")), 
      VisualBasicImportReference_get_EarlyBoundAssembly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Import", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Xmlns", 
      JSIL.MethodSignature.Return($asm30.TypeRef("System.Xml.Linq.XNamespace")), 
      VisualBasicImportReference_get_Xmlns
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Assembly", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_EarlyBoundAssembly", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly")), 
      VisualBasicImportReference_set_EarlyBoundAssembly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Import", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_Xmlns", 
      JSIL.MethodSignature.Action($asm30.TypeRef("System.Xml.Linq.XNamespace")), 
      VisualBasicImportReference_set_Xmlns
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "equalityComparer", $asm0B.TypeRef("System.Activities.Expressions.AssemblyNameEqualityComparer"));

    $.Field({Static:false, Public:false}, "assemblyName", $asm07.TypeRef("System.Reflection.AssemblyName"));

    $.Field({Static:false, Public:false}, "assemblyNameString", $.String);

    $.Field({Static:false, Public:false}, "hashCode", $.Int32);

    $.Field({Static:false, Public:false}, "$import", $.String);

    $.Field({Static:false, Public:false}, "VisualBasicImportReference$Xmlns$value", $asm30.TypeRef("System.Xml.Linq.XNamespace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VisualBasicImportReference$EarlyBoundAssembly$value", $asm07.TypeRef("System.Reflection.Assembly"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Assembly", $.String);

    $.Property({Static:false, Public:true }, "Import", $.String);

    $.Property({Static:false, Public:false}, "AssemblyName", $asm07.TypeRef("System.Reflection.AssemblyName"));

    $.Property({Static:false, Public:false}, "Xmlns", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Property({Static:false, Public:false}, "EarlyBoundAssembly", $asm07.TypeRef("System.Reflection.Assembly"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicSettings */ 

(function VisualBasicSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0A.System.Collections.Generic.ISet$b1.Of($asm0B.Microsoft.VisualBasic.Activities.VisualBasicImportReference))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };






  function VisualBasicSettings_get_ImportReferences () {
    return this.VisualBasicSettings$ImportReferences$value;
  }; 

  function VisualBasicSettings_get_SuppressXamlSerialization () {
    return this.VisualBasicSettings$SuppressXamlSerialization$value;
  }; 


  function VisualBasicSettings_set_ImportReferences (value) {
    this.VisualBasicSettings$ImportReferences$value = value;
  }; 

  function VisualBasicSettings_set_SuppressXamlSerialization (value) {
    this.VisualBasicSettings$SuppressXamlSerialization$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateXamlReferences", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "get_ImportReferences", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")])), 
      VisualBasicSettings_get_ImportReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SuppressXamlSerialization", 
      JSIL.MethodSignature.Return($.Boolean), 
      VisualBasicSettings_get_SuppressXamlSerialization
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetService", 
      new JSIL.MethodSignature("!!0", [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")], ["T"])
    );

    $.Method({Static:false, Public:false}, "set_ImportReferences", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")])), 
      VisualBasicSettings_set_ImportReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SuppressXamlSerialization", 
      JSIL.MethodSignature.Action($.Boolean), 
      VisualBasicSettings_set_SuppressXamlSerialization
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultImportReferences", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]));

    $.Field({Static:true , Public:false}, "defaultSettings", $.Type);

    $.Field({Static:false, Public:false}, "VisualBasicSettings$ImportReferences$value", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VisualBasicSettings$SuppressXamlSerialization$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:true }, "Default", $.Type);

    $.Property({Static:false, Public:true }, "ImportReferences", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:false}, "SuppressXamlSerialization", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.Windows.Markup.ValueSerializerAttribute"), function () { return [$asm0B.Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.__Type__]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.__Type__]; });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicValue`1 */ 

(function VisualBasicValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };








  function VisualBasicValue$b1_get_ExpressionText () {
    return this.VisualBasicValue$b1$ExpressionText$value;
  }; 




  function VisualBasicValue$b1_set_ExpressionText (value) {
    this.VisualBasicValue$b1$ExpressionText$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "Microsoft.VisualBasic.Activities.VisualBasicValue`1")]), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ExpressionText", 
      JSIL.MethodSignature.Return($.String), 
      VisualBasicValue$b1_get_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresCompilation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExpressionTree", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Method({Static:false, Public:true }, "set_ExpressionText", 
      JSIL.MethodSignature.Action($.String), 
      VisualBasicValue$b1_set_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "expressionTree", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])]));

    $.Field({Static:false, Public:false}, "compiledExpression", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "invoker", $asm0B.TypeRef("System.Activities.Expressions.CompiledExpressionInvoker"));

    $.Field({Static:false, Public:false}, "VisualBasicValue$b1$ExpressionText$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExpressionText", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Language", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresCompilation", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.XamlIntegration.IValueSerializableExpression"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 2 */ $asm0B.TypeRef("System.Activities.Expressions.ITextExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"));

})();

JSIL.DeclareNamespace("System.Activities.Validation");
/* class System.Activities.NativeActivity */ 

(function NativeActivity$Members () {
  var $, $thisType;























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.NativeActivity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "DoPublicChildrenMatch", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalCanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.DynamicUpdate.IInstanceUpdatable.InternalUpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.DynamicUpdate.IInstanceUpdatable"), "InternalUpdateInstance");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "InternalCanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.DynamicUpdate.IInstanceUpdatable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.Constraint */ 

(function Constraint$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Validation.Constraint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "AddValidationError", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Validation.ValidationError")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $.Object, 
          $asm0B.TypeRef("System.Activities.Validation.ValidationContext")
        ])
    );

    $.Constant({Static:true , Public:true }, "ValidationErrorListPropertyName", $.String, "System.Activities.Validation.Constraint.ValidationErrorList");

    $.Constant({Static:true , Public:false}, "ToValidateArgumentName", $.String, "ToValidate");

    $.Constant({Static:true , Public:false}, "ValidationErrorListArgumentName", $.String, "ViolationList");

    $.Constant({Static:true , Public:false}, "ToValidateContextArgumentName", $.String, "ToValidateContext");

    $.Field({Static:false, Public:false}, "toValidate", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:false, Public:false}, "violationList", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:false, Public:false}, "toValidateContext", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.VisualBasicNameShadowingConstraint */ 

(function VisualBasicNameShadowingConstraint$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Validation.Constraint"), 
      Name: "Microsoft.VisualBasic.Activities.VisualBasicNameShadowingConstraint", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FindLocationReferencesFromEnvironment", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $.Object, 
          $asm0B.TypeRef("System.Activities.Validation.ValidationContext")
        ])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft.VisualBasic.Activities.XamlIntegration");
/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter */ 

(function VisualBasicExpressionConverter$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CollectXmlNamespacesAndAssemblies", 
      new JSIL.MethodSignature($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrapCachedMapping", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping")])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "assemblyQualifiedNamespaceRegex", $asm0A.TypeRef("System.Text.RegularExpressions.Regex"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+AssemblyCache */ 

(function AssemblyCache$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+AssemblyCache", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CacheLoadedAssembly", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "EnsureInitialized", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_XmlnsMappings", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping")]))
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "OnAssemblyLoaded", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.AssemblyLoadEventArgs")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "initialized", $.Boolean, false);

    $.Field({Static:true , Public:true }, "XmlnsMappingsLockObject", $.Object);

    $.Field({Static:true , Public:false}, "xmlnsMappings", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Property({Static:true , Public:true }, "XmlnsMappings", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+AssemblyCache+XNamespaceEqualityComparer */ 

(function XNamespaceEqualityComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+AssemblyCache+XNamespaceEqualityComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEqualityComparer$lSystem.Xml.Linq.XNamespace$g.Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm30.TypeRef("System.Xml.Linq.XNamespace"), $asm30.TypeRef("System.Xml.Linq.XNamespace")])
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm30.TypeRef("System.Xml.Linq.XNamespace")]), "Equals");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEqualityComparer$lSystem.Xml.Linq.XNamespace$g.GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm30.TypeRef("System.Xml.Linq.XNamespace")])
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm30.TypeRef("System.Xml.Linq.XNamespace")]), "GetHashCode");

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm30.TypeRef("System.Xml.Linq.XNamespace")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping */ 

(function XmlnsMapping$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:true }, "ImportReferences", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]));

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping */ 

(function ReadOnlyXmlnsMapping$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter_ReadOnlyXmlnsMapping_$lget_ImportReferences$gd__5.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "wrappedMapping", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+XmlnsMapping"));

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:false}, "ImportReferences", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

})();

/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping+<get_ImportReferences>d__5 */ 

(function $lget_ImportReferences$gd__5$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping+<get_ImportReferences>d__5", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lMicrosoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter.ReadOnlyVisualBasicImportReference$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lMicrosoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter.ReadOnlyVisualBasicImportReference$g.get_Current", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping"));

    $.Field({Static:false, Public:true }, "$l$g3__$l$g4__this", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyXmlnsMapping"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm10.TypeRef("System.Collections.Generic.HashSet`1+Enumerator", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lMicrosoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter.ReadOnlyVisualBasicImportReference$g.Current", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference */ 

(function ReadOnlyVisualBasicImportReference$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicExpressionConverter+ReadOnlyVisualBasicImportReference", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AssemblySatisfiesReference", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EarlyBoundAssembly", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "wrappedReference", $asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicImportReference"));

    $.Property({Static:false, Public:false}, "EarlyBoundAssembly", $asm07.TypeRef("System.Reflection.Assembly"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

})();

/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter */ 

(function VisualBasicSettingsConverter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectXmlNamespacesAndAssemblies", 
      new JSIL.MethodSignature($asm0B.TypeRef("Microsoft.VisualBasic.Activities.VisualBasicSettings"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer */ 

(function VisualBasicSettingsValueSerializer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.ValueSerializer"), 
      Name: "Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.Constant({Static:true , Public:false}, "VisualBasicSettingsValue", $.String, "Assembly references and imported namespaces serialized as XML namespaces");

    $.Constant({Static:true , Public:false}, "ImplementationVisualBasicSettingsValue", $.String, "Assembly references and imported namespaces for internal implementation");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft.CSharp");
JSIL.DeclareNamespace("Microsoft.CSharp.Activities");
/* class Microsoft.CSharp.Activities.CSharpReference`1 */ 

(function CSharpReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };






  function CSharpReference$b1_get_ExpressionText () {
    return this.CSharpReference$b1$ExpressionText$value;
  }; 




  function CSharpReference$b1_set_ExpressionText (value) {
    this.CSharpReference$b1$ExpressionText$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "Microsoft.CSharp.Activities.CSharpReference`1")])]), 
      Name: "Microsoft.CSharp.Activities.CSharpReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ExpressionText", 
      JSIL.MethodSignature.Return($.String), 
      CSharpReference$b1_get_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresCompilation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExpressionTree", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Method({Static:false, Public:true }, "set_ExpressionText", 
      JSIL.MethodSignature.Action($.String), 
      CSharpReference$b1_set_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "invoker", $asm0B.TypeRef("System.Activities.Expressions.CompiledExpressionInvoker"));

    $.Field({Static:false, Public:false}, "CSharpReference$b1$ExpressionText$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExpressionText", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Language", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresCompilation", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Expressions.ITextExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"))
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["ExpressionText"]; });

})();

/* class Microsoft.CSharp.Activities.CSharpValue`1 */ 

(function CSharpValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };






  function CSharpValue$b1_get_ExpressionText () {
    return this.CSharpValue$b1$ExpressionText$value;
  }; 




  function CSharpValue$b1_set_ExpressionText (value) {
    this.CSharpValue$b1$ExpressionText$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "Microsoft.CSharp.Activities.CSharpValue`1")]), 
      Name: "Microsoft.CSharp.Activities.CSharpValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ExpressionText", 
      JSIL.MethodSignature.Return($.String), 
      CSharpValue$b1_get_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_RequiresCompilation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetExpressionTree", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Method({Static:false, Public:true }, "set_ExpressionText", 
      JSIL.MethodSignature.Action($.String), 
      CSharpValue$b1_set_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "invoker", $asm0B.TypeRef("System.Activities.Expressions.CompiledExpressionInvoker"));

    $.Field({Static:false, Public:false}, "CSharpValue$b1$ExpressionText$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExpressionText", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Language", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true , Virtual:true }, "RequiresCompilation", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Expressions.ITextExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"))
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["ExpressionText"]; });

})();

/* class System.AppContextDefaultValues */ 

(function AppContextDefaultValues$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.AppContextDefaultValues", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ParseTargetFrameworkName", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "PopulateDefaultValues", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "PopulateDefaultValuesPartial", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryParseFrameworkName", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.TelemetryEventSource */ 

(function TelemetryEventSource$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Diagnostics.Tracing.EventSource"), 
      Name: "System.TelemetryEventSource", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CriticalDataOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MeasuresOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TelemetryOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "V2Runtime", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.Tracing.EventAttribute"), function () { return [1]; });

    $.Constant({Static:true , Public:false}, "Reserved44Keyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 17592186044416);

    $.Constant({Static:true , Public:false}, "TelemetryKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 35184372088832);

    $.Constant({Static:true , Public:false}, "MeasuresKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 70368744177664);

    $.Constant({Static:true , Public:false}, "CriticalDataKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 140737488355328);

    $.Constant({Static:true , Public:false}, "CoreData", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 524288);

    $.Constant({Static:true , Public:false}, "InjectXToken", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 1048576);

    $.Constant({Static:true , Public:false}, "RealtimeLatency", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 2097152);

    $.Constant({Static:true , Public:false}, "NormalLatency", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 4194304);

    $.Constant({Static:true , Public:false}, "CriticalPersistence", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 8388608);

    $.Constant({Static:true , Public:false}, "NormalPersistence", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 16777216);

    $.Constant({Static:true , Public:false}, "DropPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 33554432);

    $.Constant({Static:true , Public:false}, "HashPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 67108864);

    $.Constant({Static:true , Public:false}, "MarkPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 134217728);

    $.Constant({Static:true , Public:false}, "DropPiiField", $asm07.TypeRef("System.Diagnostics.Tracing.EventFieldTags"), 67108864);

    $.Constant({Static:true , Public:false}, "HashPiiField", $asm07.TypeRef("System.Diagnostics.Tracing.EventFieldTags"), 134217728);

    $.Field({Static:true , Public:false, ReadOnly:true }, "telemetryTraits", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Constant({Static:true , Public:false}, "WfV2ProviderName", $.String, "Microsoft.DOTNET.WF.V2");

    $.Constant({Static:true , Public:false}, "V2RuntimeEventId", $.Int32, 1);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.LocalAppContext */ 

(function LocalAppContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function LocalAppContext_get_DisableCaching () {
    return $thisType.LocalAppContext$DisableCaching$value;
  }; 





  function LocalAppContext_set_DisableCaching (value) {
    $thisType.LocalAppContext$DisableCaching$value = value;
  }; 


  JSIL.MakeStaticClass("System.LocalAppContext", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "DefineSwitchDefault", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.Method({Static:true , Public:false}, "get_DisableCaching", 
      JSIL.MethodSignature.Return($.Boolean), 
      LocalAppContext_get_DisableCaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetCachedSwitchValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCachedSwitchValueInternal", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsSwitchEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsSwitchEnabledLocal", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Method({Static:true , Public:false}, "set_DisableCaching", 
      JSIL.MethodSignature.Action($.Boolean), 
      LocalAppContext_set_DisableCaching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "SetupDelegate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "TryGetSwitchFromCentralAppContext", $asm0B.TypeRef("System.LocalAppContext+TryGetSwitchDelegate"));

    $.Field({Static:true , Public:false}, "s_canForwardCalls", $.Boolean);

    $.Field({Static:true , Public:false}, "s_switchMap", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Boolean]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "s_syncLock", $.Object);

    $.Field({Static:true , Public:false}, "LocalAppContext$DisableCaching$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "DisableCaching", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.LocalAppContext+TryGetSwitchDelegate */ 

JSIL.MakeDelegate("System.LocalAppContext+TryGetSwitchDelegate", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Boolean"), [$asm07.TypeRef("System.String"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Boolean")])]));

/* class System.Activities.LocalAppContextSwitches */ 

(function LocalAppContextSwitches$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.LocalAppContextSwitches", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "get_UseMD5ForWFDebugger", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "useMD5ForWFDebugger", $.Int32);

    $.Property({Static:true , Public:true }, "UseMD5ForWFDebugger", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityDelegate */ 

(function ActivityDelegate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };





  function ActivityDelegate_get_Environment () {
    return this.ActivityDelegate$Environment$value;
  }; 

  function ActivityDelegate_get_Handler () {
    return this.ActivityDelegate$Handler$value;
  }; 










  function ActivityDelegate_set_Environment (value) {
    this.ActivityDelegate$Environment$value = value;
  }; 

  function ActivityDelegate_set_Handler (value) {
    this.ActivityDelegate$Handler$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityDelegate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CanBeScheduledBy", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ActivityDelegate_get_Environment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Handler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityDelegate_get_Handler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ParentCollectionType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityCollectionType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityCollectionType"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalCacheMetadata", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_Environment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ActivityDelegate_set_Environment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Handler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityDelegate_set_Handler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeDisplayName", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:true , Public:false}, "ArgumentName", $.String, "Argument");

    $.Field({Static:true , Public:false}, "Argument1Name", $.String, "Argument1");

    $.Field({Static:true , Public:false}, "Argument2Name", $.String, "Argument2");

    $.Field({Static:true , Public:false}, "Argument3Name", $.String, "Argument3");

    $.Field({Static:true , Public:false}, "Argument4Name", $.String, "Argument4");

    $.Field({Static:true , Public:false}, "Argument5Name", $.String, "Argument5");

    $.Field({Static:true , Public:false}, "Argument6Name", $.String, "Argument6");

    $.Field({Static:true , Public:false}, "Argument7Name", $.String, "Argument7");

    $.Field({Static:true , Public:false}, "Argument8Name", $.String, "Argument8");

    $.Field({Static:true , Public:false}, "Argument9Name", $.String, "Argument9");

    $.Field({Static:true , Public:false}, "Argument10Name", $.String, "Argument10");

    $.Field({Static:true , Public:false}, "Argument11Name", $.String, "Argument11");

    $.Field({Static:true , Public:false}, "Argument12Name", $.String, "Argument12");

    $.Field({Static:true , Public:false}, "Argument13Name", $.String, "Argument13");

    $.Field({Static:true , Public:false}, "Argument14Name", $.String, "Argument14");

    $.Field({Static:true , Public:false}, "Argument15Name", $.String, "Argument15");

    $.Field({Static:true , Public:false}, "Argument16Name", $.String, "Argument16");

    $.Field({Static:true , Public:false}, "ResultArgumentName", $.String, "Result");

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "isDisplayNameSet", $.Boolean);

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "delegateParameters", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]));

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "parentCollectionType", $asm0B.TypeRef("System.Activities.ActivityCollectionType"));

    $.Field({Static:false, Public:false}, "ActivityDelegate$Handler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityDelegate$Environment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true }, "Handler", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "ParentCollectionType", $asm0B.TypeRef("System.Activities.ActivityCollectionType"));

    $.Property({Static:false, Public:false}, "RuntimeDelegateArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Handler"]; });

})();

/* class System.Activities.ActivityAction */ 

(function ActivityAction$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyDelegateParameters", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`1 */ 

(function ActivityAction$b1$Members () {
  var $, $thisType;


  function ActivityAction$b1_get_Argument () {
    return this.ActivityAction$b1$Argument$value;
  }; 


  function ActivityAction$b1_set_Argument (value) {
    this.ActivityAction$b1$Argument$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]), null), 
      ActivityAction$b1_get_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")])]), 
      ActivityAction$b1_set_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b1$Argument$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`2 */ 

(function ActivityAction$b2$Members () {
  var $, $thisType;


  function ActivityAction$b2_get_Argument1 () {
    return this.ActivityAction$b2$Argument1$value;
  }; 

  function ActivityAction$b2_get_Argument2 () {
    return this.ActivityAction$b2$Argument2$value;
  }; 


  function ActivityAction$b2_set_Argument1 (value) {
    this.ActivityAction$b2$Argument1$value = value;
  }; 

  function ActivityAction$b2_set_Argument2 (value) {
    this.ActivityAction$b2$Argument2$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b2_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b2_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b2_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b2_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b2$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b2$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`3 */ 

(function ActivityAction$b3$Members () {
  var $, $thisType;


  function ActivityAction$b3_get_Argument1 () {
    return this.ActivityAction$b3$Argument1$value;
  }; 

  function ActivityAction$b3_get_Argument2 () {
    return this.ActivityAction$b3$Argument2$value;
  }; 

  function ActivityAction$b3_get_Argument3 () {
    return this.ActivityAction$b3$Argument3$value;
  }; 


  function ActivityAction$b3_set_Argument1 (value) {
    this.ActivityAction$b3$Argument1$value = value;
  }; 

  function ActivityAction$b3_set_Argument2 (value) {
    this.ActivityAction$b3$Argument2$value = value;
  }; 

  function ActivityAction$b3_set_Argument3 (value) {
    this.ActivityAction$b3$Argument3$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b3_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b3_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b3_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b3_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b3_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b3_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b3$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b3$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b3$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`4 */ 

(function ActivityAction$b4$Members () {
  var $, $thisType;


  function ActivityAction$b4_get_Argument1 () {
    return this.ActivityAction$b4$Argument1$value;
  }; 

  function ActivityAction$b4_get_Argument2 () {
    return this.ActivityAction$b4$Argument2$value;
  }; 

  function ActivityAction$b4_get_Argument3 () {
    return this.ActivityAction$b4$Argument3$value;
  }; 

  function ActivityAction$b4_get_Argument4 () {
    return this.ActivityAction$b4$Argument4$value;
  }; 


  function ActivityAction$b4_set_Argument1 (value) {
    this.ActivityAction$b4$Argument1$value = value;
  }; 

  function ActivityAction$b4_set_Argument2 (value) {
    this.ActivityAction$b4$Argument2$value = value;
  }; 

  function ActivityAction$b4_set_Argument3 (value) {
    this.ActivityAction$b4$Argument3$value = value;
  }; 

  function ActivityAction$b4_set_Argument4 (value) {
    this.ActivityAction$b4$Argument4$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`4", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3", "T4"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b4_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b4_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b4_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b4_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b4_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b4_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b4_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b4_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b4$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b4$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b4$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b4$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`5 */ 

(function ActivityAction$b5$Members () {
  var $, $thisType;


  function ActivityAction$b5_get_Argument1 () {
    return this.ActivityAction$b5$Argument1$value;
  }; 

  function ActivityAction$b5_get_Argument2 () {
    return this.ActivityAction$b5$Argument2$value;
  }; 

  function ActivityAction$b5_get_Argument3 () {
    return this.ActivityAction$b5$Argument3$value;
  }; 

  function ActivityAction$b5_get_Argument4 () {
    return this.ActivityAction$b5$Argument4$value;
  }; 

  function ActivityAction$b5_get_Argument5 () {
    return this.ActivityAction$b5$Argument5$value;
  }; 


  function ActivityAction$b5_set_Argument1 (value) {
    this.ActivityAction$b5$Argument1$value = value;
  }; 

  function ActivityAction$b5_set_Argument2 (value) {
    this.ActivityAction$b5$Argument2$value = value;
  }; 

  function ActivityAction$b5_set_Argument3 (value) {
    this.ActivityAction$b5$Argument3$value = value;
  }; 

  function ActivityAction$b5_set_Argument4 (value) {
    this.ActivityAction$b5$Argument4$value = value;
  }; 

  function ActivityAction$b5_set_Argument5 (value) {
    this.ActivityAction$b5$Argument5$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`5", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b5_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b5_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b5_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b5_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b5_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b5_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b5_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b5_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b5_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b5_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b5$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b5$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b5$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b5$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b5$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`6 */ 

(function ActivityAction$b6$Members () {
  var $, $thisType;


  function ActivityAction$b6_get_Argument1 () {
    return this.ActivityAction$b6$Argument1$value;
  }; 

  function ActivityAction$b6_get_Argument2 () {
    return this.ActivityAction$b6$Argument2$value;
  }; 

  function ActivityAction$b6_get_Argument3 () {
    return this.ActivityAction$b6$Argument3$value;
  }; 

  function ActivityAction$b6_get_Argument4 () {
    return this.ActivityAction$b6$Argument4$value;
  }; 

  function ActivityAction$b6_get_Argument5 () {
    return this.ActivityAction$b6$Argument5$value;
  }; 

  function ActivityAction$b6_get_Argument6 () {
    return this.ActivityAction$b6$Argument6$value;
  }; 


  function ActivityAction$b6_set_Argument1 (value) {
    this.ActivityAction$b6$Argument1$value = value;
  }; 

  function ActivityAction$b6_set_Argument2 (value) {
    this.ActivityAction$b6$Argument2$value = value;
  }; 

  function ActivityAction$b6_set_Argument3 (value) {
    this.ActivityAction$b6$Argument3$value = value;
  }; 

  function ActivityAction$b6_set_Argument4 (value) {
    this.ActivityAction$b6$Argument4$value = value;
  }; 

  function ActivityAction$b6_set_Argument5 (value) {
    this.ActivityAction$b6$Argument5$value = value;
  }; 

  function ActivityAction$b6_set_Argument6 (value) {
    this.ActivityAction$b6$Argument6$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`6", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b6_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b6_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b6_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b6_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b6_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b6_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b6_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b6_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b6_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b6_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b6_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b6_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b6$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`7 */ 

(function ActivityAction$b7$Members () {
  var $, $thisType;


  function ActivityAction$b7_get_Argument1 () {
    return this.ActivityAction$b7$Argument1$value;
  }; 

  function ActivityAction$b7_get_Argument2 () {
    return this.ActivityAction$b7$Argument2$value;
  }; 

  function ActivityAction$b7_get_Argument3 () {
    return this.ActivityAction$b7$Argument3$value;
  }; 

  function ActivityAction$b7_get_Argument4 () {
    return this.ActivityAction$b7$Argument4$value;
  }; 

  function ActivityAction$b7_get_Argument5 () {
    return this.ActivityAction$b7$Argument5$value;
  }; 

  function ActivityAction$b7_get_Argument6 () {
    return this.ActivityAction$b7$Argument6$value;
  }; 

  function ActivityAction$b7_get_Argument7 () {
    return this.ActivityAction$b7$Argument7$value;
  }; 


  function ActivityAction$b7_set_Argument1 (value) {
    this.ActivityAction$b7$Argument1$value = value;
  }; 

  function ActivityAction$b7_set_Argument2 (value) {
    this.ActivityAction$b7$Argument2$value = value;
  }; 

  function ActivityAction$b7_set_Argument3 (value) {
    this.ActivityAction$b7$Argument3$value = value;
  }; 

  function ActivityAction$b7_set_Argument4 (value) {
    this.ActivityAction$b7$Argument4$value = value;
  }; 

  function ActivityAction$b7_set_Argument5 (value) {
    this.ActivityAction$b7$Argument5$value = value;
  }; 

  function ActivityAction$b7_set_Argument6 (value) {
    this.ActivityAction$b7$Argument6$value = value;
  }; 

  function ActivityAction$b7_set_Argument7 (value) {
    this.ActivityAction$b7$Argument7$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`7", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b7_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b7_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b7_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b7_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b7_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b7_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b7_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b7_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b7_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b7_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b7_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b7_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b7_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b7_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b7$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`8 */ 

(function ActivityAction$b8$Members () {
  var $, $thisType;


  function ActivityAction$b8_get_Argument1 () {
    return this.ActivityAction$b8$Argument1$value;
  }; 

  function ActivityAction$b8_get_Argument2 () {
    return this.ActivityAction$b8$Argument2$value;
  }; 

  function ActivityAction$b8_get_Argument3 () {
    return this.ActivityAction$b8$Argument3$value;
  }; 

  function ActivityAction$b8_get_Argument4 () {
    return this.ActivityAction$b8$Argument4$value;
  }; 

  function ActivityAction$b8_get_Argument5 () {
    return this.ActivityAction$b8$Argument5$value;
  }; 

  function ActivityAction$b8_get_Argument6 () {
    return this.ActivityAction$b8$Argument6$value;
  }; 

  function ActivityAction$b8_get_Argument7 () {
    return this.ActivityAction$b8$Argument7$value;
  }; 

  function ActivityAction$b8_get_Argument8 () {
    return this.ActivityAction$b8$Argument8$value;
  }; 


  function ActivityAction$b8_set_Argument1 (value) {
    this.ActivityAction$b8$Argument1$value = value;
  }; 

  function ActivityAction$b8_set_Argument2 (value) {
    this.ActivityAction$b8$Argument2$value = value;
  }; 

  function ActivityAction$b8_set_Argument3 (value) {
    this.ActivityAction$b8$Argument3$value = value;
  }; 

  function ActivityAction$b8_set_Argument4 (value) {
    this.ActivityAction$b8$Argument4$value = value;
  }; 

  function ActivityAction$b8_set_Argument5 (value) {
    this.ActivityAction$b8$Argument5$value = value;
  }; 

  function ActivityAction$b8_set_Argument6 (value) {
    this.ActivityAction$b8$Argument6$value = value;
  }; 

  function ActivityAction$b8_set_Argument7 (value) {
    this.ActivityAction$b8$Argument7$value = value;
  }; 

  function ActivityAction$b8_set_Argument8 (value) {
    this.ActivityAction$b8$Argument8$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`8", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b8_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b8_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b8_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b8_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b8_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b8_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b8_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b8_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b8_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b8_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b8_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b8_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b8_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b8_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b8_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b8_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b8$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`9 */ 

(function ActivityAction$b9$Members () {
  var $, $thisType;


  function ActivityAction$b9_get_Argument1 () {
    return this.ActivityAction$b9$Argument1$value;
  }; 

  function ActivityAction$b9_get_Argument2 () {
    return this.ActivityAction$b9$Argument2$value;
  }; 

  function ActivityAction$b9_get_Argument3 () {
    return this.ActivityAction$b9$Argument3$value;
  }; 

  function ActivityAction$b9_get_Argument4 () {
    return this.ActivityAction$b9$Argument4$value;
  }; 

  function ActivityAction$b9_get_Argument5 () {
    return this.ActivityAction$b9$Argument5$value;
  }; 

  function ActivityAction$b9_get_Argument6 () {
    return this.ActivityAction$b9$Argument6$value;
  }; 

  function ActivityAction$b9_get_Argument7 () {
    return this.ActivityAction$b9$Argument7$value;
  }; 

  function ActivityAction$b9_get_Argument8 () {
    return this.ActivityAction$b9$Argument8$value;
  }; 

  function ActivityAction$b9_get_Argument9 () {
    return this.ActivityAction$b9$Argument9$value;
  }; 


  function ActivityAction$b9_set_Argument1 (value) {
    this.ActivityAction$b9$Argument1$value = value;
  }; 

  function ActivityAction$b9_set_Argument2 (value) {
    this.ActivityAction$b9$Argument2$value = value;
  }; 

  function ActivityAction$b9_set_Argument3 (value) {
    this.ActivityAction$b9$Argument3$value = value;
  }; 

  function ActivityAction$b9_set_Argument4 (value) {
    this.ActivityAction$b9$Argument4$value = value;
  }; 

  function ActivityAction$b9_set_Argument5 (value) {
    this.ActivityAction$b9$Argument5$value = value;
  }; 

  function ActivityAction$b9_set_Argument6 (value) {
    this.ActivityAction$b9$Argument6$value = value;
  }; 

  function ActivityAction$b9_set_Argument7 (value) {
    this.ActivityAction$b9$Argument7$value = value;
  }; 

  function ActivityAction$b9_set_Argument8 (value) {
    this.ActivityAction$b9$Argument8$value = value;
  }; 

  function ActivityAction$b9_set_Argument9 (value) {
    this.ActivityAction$b9$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`9", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b9_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b9_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b9_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b9_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b9_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b9_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b9_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b9_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b9_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b9_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b9_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b9_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b9_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b9_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b9_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b9_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b9_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b9_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b9$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`10 */ 

(function ActivityAction$b10$Members () {
  var $, $thisType;


  function ActivityAction$b10_get_Argument1 () {
    return this.ActivityAction$b10$Argument1$value;
  }; 

  function ActivityAction$b10_get_Argument10 () {
    return this.ActivityAction$b10$Argument10$value;
  }; 

  function ActivityAction$b10_get_Argument2 () {
    return this.ActivityAction$b10$Argument2$value;
  }; 

  function ActivityAction$b10_get_Argument3 () {
    return this.ActivityAction$b10$Argument3$value;
  }; 

  function ActivityAction$b10_get_Argument4 () {
    return this.ActivityAction$b10$Argument4$value;
  }; 

  function ActivityAction$b10_get_Argument5 () {
    return this.ActivityAction$b10$Argument5$value;
  }; 

  function ActivityAction$b10_get_Argument6 () {
    return this.ActivityAction$b10$Argument6$value;
  }; 

  function ActivityAction$b10_get_Argument7 () {
    return this.ActivityAction$b10$Argument7$value;
  }; 

  function ActivityAction$b10_get_Argument8 () {
    return this.ActivityAction$b10$Argument8$value;
  }; 

  function ActivityAction$b10_get_Argument9 () {
    return this.ActivityAction$b10$Argument9$value;
  }; 


  function ActivityAction$b10_set_Argument1 (value) {
    this.ActivityAction$b10$Argument1$value = value;
  }; 

  function ActivityAction$b10_set_Argument10 (value) {
    this.ActivityAction$b10$Argument10$value = value;
  }; 

  function ActivityAction$b10_set_Argument2 (value) {
    this.ActivityAction$b10$Argument2$value = value;
  }; 

  function ActivityAction$b10_set_Argument3 (value) {
    this.ActivityAction$b10$Argument3$value = value;
  }; 

  function ActivityAction$b10_set_Argument4 (value) {
    this.ActivityAction$b10$Argument4$value = value;
  }; 

  function ActivityAction$b10_set_Argument5 (value) {
    this.ActivityAction$b10$Argument5$value = value;
  }; 

  function ActivityAction$b10_set_Argument6 (value) {
    this.ActivityAction$b10$Argument6$value = value;
  }; 

  function ActivityAction$b10_set_Argument7 (value) {
    this.ActivityAction$b10$Argument7$value = value;
  }; 

  function ActivityAction$b10_set_Argument8 (value) {
    this.ActivityAction$b10$Argument8$value = value;
  }; 

  function ActivityAction$b10_set_Argument9 (value) {
    this.ActivityAction$b10$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`10", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b10_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b10_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b10_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b10_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b10_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b10_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b10_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b10_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b10_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b10_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b10_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b10_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b10_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b10_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b10_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b10_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b10_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b10_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b10_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b10_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b10$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`11 */ 

(function ActivityAction$b11$Members () {
  var $, $thisType;


  function ActivityAction$b11_get_Argument1 () {
    return this.ActivityAction$b11$Argument1$value;
  }; 

  function ActivityAction$b11_get_Argument10 () {
    return this.ActivityAction$b11$Argument10$value;
  }; 

  function ActivityAction$b11_get_Argument11 () {
    return this.ActivityAction$b11$Argument11$value;
  }; 

  function ActivityAction$b11_get_Argument2 () {
    return this.ActivityAction$b11$Argument2$value;
  }; 

  function ActivityAction$b11_get_Argument3 () {
    return this.ActivityAction$b11$Argument3$value;
  }; 

  function ActivityAction$b11_get_Argument4 () {
    return this.ActivityAction$b11$Argument4$value;
  }; 

  function ActivityAction$b11_get_Argument5 () {
    return this.ActivityAction$b11$Argument5$value;
  }; 

  function ActivityAction$b11_get_Argument6 () {
    return this.ActivityAction$b11$Argument6$value;
  }; 

  function ActivityAction$b11_get_Argument7 () {
    return this.ActivityAction$b11$Argument7$value;
  }; 

  function ActivityAction$b11_get_Argument8 () {
    return this.ActivityAction$b11$Argument8$value;
  }; 

  function ActivityAction$b11_get_Argument9 () {
    return this.ActivityAction$b11$Argument9$value;
  }; 


  function ActivityAction$b11_set_Argument1 (value) {
    this.ActivityAction$b11$Argument1$value = value;
  }; 

  function ActivityAction$b11_set_Argument10 (value) {
    this.ActivityAction$b11$Argument10$value = value;
  }; 

  function ActivityAction$b11_set_Argument11 (value) {
    this.ActivityAction$b11$Argument11$value = value;
  }; 

  function ActivityAction$b11_set_Argument2 (value) {
    this.ActivityAction$b11$Argument2$value = value;
  }; 

  function ActivityAction$b11_set_Argument3 (value) {
    this.ActivityAction$b11$Argument3$value = value;
  }; 

  function ActivityAction$b11_set_Argument4 (value) {
    this.ActivityAction$b11$Argument4$value = value;
  }; 

  function ActivityAction$b11_set_Argument5 (value) {
    this.ActivityAction$b11$Argument5$value = value;
  }; 

  function ActivityAction$b11_set_Argument6 (value) {
    this.ActivityAction$b11$Argument6$value = value;
  }; 

  function ActivityAction$b11_set_Argument7 (value) {
    this.ActivityAction$b11$Argument7$value = value;
  }; 

  function ActivityAction$b11_set_Argument8 (value) {
    this.ActivityAction$b11$Argument8$value = value;
  }; 

  function ActivityAction$b11_set_Argument9 (value) {
    this.ActivityAction$b11$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`11", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b11_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b11_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b11_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b11_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b11_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b11_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b11_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b11_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b11_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b11_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b11_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b11_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b11_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b11_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b11_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b11_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b11_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b11_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b11_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b11_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b11_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b11_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b11$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`12 */ 

(function ActivityAction$b12$Members () {
  var $, $thisType;


  function ActivityAction$b12_get_Argument1 () {
    return this.ActivityAction$b12$Argument1$value;
  }; 

  function ActivityAction$b12_get_Argument10 () {
    return this.ActivityAction$b12$Argument10$value;
  }; 

  function ActivityAction$b12_get_Argument11 () {
    return this.ActivityAction$b12$Argument11$value;
  }; 

  function ActivityAction$b12_get_Argument12 () {
    return this.ActivityAction$b12$Argument12$value;
  }; 

  function ActivityAction$b12_get_Argument2 () {
    return this.ActivityAction$b12$Argument2$value;
  }; 

  function ActivityAction$b12_get_Argument3 () {
    return this.ActivityAction$b12$Argument3$value;
  }; 

  function ActivityAction$b12_get_Argument4 () {
    return this.ActivityAction$b12$Argument4$value;
  }; 

  function ActivityAction$b12_get_Argument5 () {
    return this.ActivityAction$b12$Argument5$value;
  }; 

  function ActivityAction$b12_get_Argument6 () {
    return this.ActivityAction$b12$Argument6$value;
  }; 

  function ActivityAction$b12_get_Argument7 () {
    return this.ActivityAction$b12$Argument7$value;
  }; 

  function ActivityAction$b12_get_Argument8 () {
    return this.ActivityAction$b12$Argument8$value;
  }; 

  function ActivityAction$b12_get_Argument9 () {
    return this.ActivityAction$b12$Argument9$value;
  }; 


  function ActivityAction$b12_set_Argument1 (value) {
    this.ActivityAction$b12$Argument1$value = value;
  }; 

  function ActivityAction$b12_set_Argument10 (value) {
    this.ActivityAction$b12$Argument10$value = value;
  }; 

  function ActivityAction$b12_set_Argument11 (value) {
    this.ActivityAction$b12$Argument11$value = value;
  }; 

  function ActivityAction$b12_set_Argument12 (value) {
    this.ActivityAction$b12$Argument12$value = value;
  }; 

  function ActivityAction$b12_set_Argument2 (value) {
    this.ActivityAction$b12$Argument2$value = value;
  }; 

  function ActivityAction$b12_set_Argument3 (value) {
    this.ActivityAction$b12$Argument3$value = value;
  }; 

  function ActivityAction$b12_set_Argument4 (value) {
    this.ActivityAction$b12$Argument4$value = value;
  }; 

  function ActivityAction$b12_set_Argument5 (value) {
    this.ActivityAction$b12$Argument5$value = value;
  }; 

  function ActivityAction$b12_set_Argument6 (value) {
    this.ActivityAction$b12$Argument6$value = value;
  }; 

  function ActivityAction$b12_set_Argument7 (value) {
    this.ActivityAction$b12$Argument7$value = value;
  }; 

  function ActivityAction$b12_set_Argument8 (value) {
    this.ActivityAction$b12$Argument8$value = value;
  }; 

  function ActivityAction$b12_set_Argument9 (value) {
    this.ActivityAction$b12$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`12", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b12_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b12_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b12_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityAction$b12_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b12_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b12_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b12_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b12_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b12_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b12_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b12_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b12_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b12_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b12_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b12_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityAction$b12_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b12_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b12_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b12_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b12_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b12_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b12_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b12_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b12_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b12$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`13 */ 

(function ActivityAction$b13$Members () {
  var $, $thisType;


  function ActivityAction$b13_get_Argument1 () {
    return this.ActivityAction$b13$Argument1$value;
  }; 

  function ActivityAction$b13_get_Argument10 () {
    return this.ActivityAction$b13$Argument10$value;
  }; 

  function ActivityAction$b13_get_Argument11 () {
    return this.ActivityAction$b13$Argument11$value;
  }; 

  function ActivityAction$b13_get_Argument12 () {
    return this.ActivityAction$b13$Argument12$value;
  }; 

  function ActivityAction$b13_get_Argument13 () {
    return this.ActivityAction$b13$Argument13$value;
  }; 

  function ActivityAction$b13_get_Argument2 () {
    return this.ActivityAction$b13$Argument2$value;
  }; 

  function ActivityAction$b13_get_Argument3 () {
    return this.ActivityAction$b13$Argument3$value;
  }; 

  function ActivityAction$b13_get_Argument4 () {
    return this.ActivityAction$b13$Argument4$value;
  }; 

  function ActivityAction$b13_get_Argument5 () {
    return this.ActivityAction$b13$Argument5$value;
  }; 

  function ActivityAction$b13_get_Argument6 () {
    return this.ActivityAction$b13$Argument6$value;
  }; 

  function ActivityAction$b13_get_Argument7 () {
    return this.ActivityAction$b13$Argument7$value;
  }; 

  function ActivityAction$b13_get_Argument8 () {
    return this.ActivityAction$b13$Argument8$value;
  }; 

  function ActivityAction$b13_get_Argument9 () {
    return this.ActivityAction$b13$Argument9$value;
  }; 


  function ActivityAction$b13_set_Argument1 (value) {
    this.ActivityAction$b13$Argument1$value = value;
  }; 

  function ActivityAction$b13_set_Argument10 (value) {
    this.ActivityAction$b13$Argument10$value = value;
  }; 

  function ActivityAction$b13_set_Argument11 (value) {
    this.ActivityAction$b13$Argument11$value = value;
  }; 

  function ActivityAction$b13_set_Argument12 (value) {
    this.ActivityAction$b13$Argument12$value = value;
  }; 

  function ActivityAction$b13_set_Argument13 (value) {
    this.ActivityAction$b13$Argument13$value = value;
  }; 

  function ActivityAction$b13_set_Argument2 (value) {
    this.ActivityAction$b13$Argument2$value = value;
  }; 

  function ActivityAction$b13_set_Argument3 (value) {
    this.ActivityAction$b13$Argument3$value = value;
  }; 

  function ActivityAction$b13_set_Argument4 (value) {
    this.ActivityAction$b13$Argument4$value = value;
  }; 

  function ActivityAction$b13_set_Argument5 (value) {
    this.ActivityAction$b13$Argument5$value = value;
  }; 

  function ActivityAction$b13_set_Argument6 (value) {
    this.ActivityAction$b13$Argument6$value = value;
  }; 

  function ActivityAction$b13_set_Argument7 (value) {
    this.ActivityAction$b13$Argument7$value = value;
  }; 

  function ActivityAction$b13_set_Argument8 (value) {
    this.ActivityAction$b13$Argument8$value = value;
  }; 

  function ActivityAction$b13_set_Argument9 (value) {
    this.ActivityAction$b13$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`13", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b13_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b13_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b13_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityAction$b13_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityAction$b13_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b13_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b13_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b13_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b13_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b13_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b13_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b13_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b13_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b13_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b13_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b13_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityAction$b13_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityAction$b13_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b13_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b13_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b13_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b13_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b13_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b13_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b13_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b13_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b13$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`14 */ 

(function ActivityAction$b14$Members () {
  var $, $thisType;


  function ActivityAction$b14_get_Argument1 () {
    return this.ActivityAction$b14$Argument1$value;
  }; 

  function ActivityAction$b14_get_Argument10 () {
    return this.ActivityAction$b14$Argument10$value;
  }; 

  function ActivityAction$b14_get_Argument11 () {
    return this.ActivityAction$b14$Argument11$value;
  }; 

  function ActivityAction$b14_get_Argument12 () {
    return this.ActivityAction$b14$Argument12$value;
  }; 

  function ActivityAction$b14_get_Argument13 () {
    return this.ActivityAction$b14$Argument13$value;
  }; 

  function ActivityAction$b14_get_Argument14 () {
    return this.ActivityAction$b14$Argument14$value;
  }; 

  function ActivityAction$b14_get_Argument2 () {
    return this.ActivityAction$b14$Argument2$value;
  }; 

  function ActivityAction$b14_get_Argument3 () {
    return this.ActivityAction$b14$Argument3$value;
  }; 

  function ActivityAction$b14_get_Argument4 () {
    return this.ActivityAction$b14$Argument4$value;
  }; 

  function ActivityAction$b14_get_Argument5 () {
    return this.ActivityAction$b14$Argument5$value;
  }; 

  function ActivityAction$b14_get_Argument6 () {
    return this.ActivityAction$b14$Argument6$value;
  }; 

  function ActivityAction$b14_get_Argument7 () {
    return this.ActivityAction$b14$Argument7$value;
  }; 

  function ActivityAction$b14_get_Argument8 () {
    return this.ActivityAction$b14$Argument8$value;
  }; 

  function ActivityAction$b14_get_Argument9 () {
    return this.ActivityAction$b14$Argument9$value;
  }; 


  function ActivityAction$b14_set_Argument1 (value) {
    this.ActivityAction$b14$Argument1$value = value;
  }; 

  function ActivityAction$b14_set_Argument10 (value) {
    this.ActivityAction$b14$Argument10$value = value;
  }; 

  function ActivityAction$b14_set_Argument11 (value) {
    this.ActivityAction$b14$Argument11$value = value;
  }; 

  function ActivityAction$b14_set_Argument12 (value) {
    this.ActivityAction$b14$Argument12$value = value;
  }; 

  function ActivityAction$b14_set_Argument13 (value) {
    this.ActivityAction$b14$Argument13$value = value;
  }; 

  function ActivityAction$b14_set_Argument14 (value) {
    this.ActivityAction$b14$Argument14$value = value;
  }; 

  function ActivityAction$b14_set_Argument2 (value) {
    this.ActivityAction$b14$Argument2$value = value;
  }; 

  function ActivityAction$b14_set_Argument3 (value) {
    this.ActivityAction$b14$Argument3$value = value;
  }; 

  function ActivityAction$b14_set_Argument4 (value) {
    this.ActivityAction$b14$Argument4$value = value;
  }; 

  function ActivityAction$b14_set_Argument5 (value) {
    this.ActivityAction$b14$Argument5$value = value;
  }; 

  function ActivityAction$b14_set_Argument6 (value) {
    this.ActivityAction$b14$Argument6$value = value;
  }; 

  function ActivityAction$b14_set_Argument7 (value) {
    this.ActivityAction$b14$Argument7$value = value;
  }; 

  function ActivityAction$b14_set_Argument8 (value) {
    this.ActivityAction$b14$Argument8$value = value;
  }; 

  function ActivityAction$b14_set_Argument9 (value) {
    this.ActivityAction$b14$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`14", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b14_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b14_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b14_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityAction$b14_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityAction$b14_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityAction$b14_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b14_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b14_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b14_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b14_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b14_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b14_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b14_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b14_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b14_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b14_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b14_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityAction$b14_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityAction$b14_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityAction$b14_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b14_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b14_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b14_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b14_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b14_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b14_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b14_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b14_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b14$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`15 */ 

(function ActivityAction$b15$Members () {
  var $, $thisType;


  function ActivityAction$b15_get_Argument1 () {
    return this.ActivityAction$b15$Argument1$value;
  }; 

  function ActivityAction$b15_get_Argument10 () {
    return this.ActivityAction$b15$Argument10$value;
  }; 

  function ActivityAction$b15_get_Argument11 () {
    return this.ActivityAction$b15$Argument11$value;
  }; 

  function ActivityAction$b15_get_Argument12 () {
    return this.ActivityAction$b15$Argument12$value;
  }; 

  function ActivityAction$b15_get_Argument13 () {
    return this.ActivityAction$b15$Argument13$value;
  }; 

  function ActivityAction$b15_get_Argument14 () {
    return this.ActivityAction$b15$Argument14$value;
  }; 

  function ActivityAction$b15_get_Argument15 () {
    return this.ActivityAction$b15$Argument15$value;
  }; 

  function ActivityAction$b15_get_Argument2 () {
    return this.ActivityAction$b15$Argument2$value;
  }; 

  function ActivityAction$b15_get_Argument3 () {
    return this.ActivityAction$b15$Argument3$value;
  }; 

  function ActivityAction$b15_get_Argument4 () {
    return this.ActivityAction$b15$Argument4$value;
  }; 

  function ActivityAction$b15_get_Argument5 () {
    return this.ActivityAction$b15$Argument5$value;
  }; 

  function ActivityAction$b15_get_Argument6 () {
    return this.ActivityAction$b15$Argument6$value;
  }; 

  function ActivityAction$b15_get_Argument7 () {
    return this.ActivityAction$b15$Argument7$value;
  }; 

  function ActivityAction$b15_get_Argument8 () {
    return this.ActivityAction$b15$Argument8$value;
  }; 

  function ActivityAction$b15_get_Argument9 () {
    return this.ActivityAction$b15$Argument9$value;
  }; 


  function ActivityAction$b15_set_Argument1 (value) {
    this.ActivityAction$b15$Argument1$value = value;
  }; 

  function ActivityAction$b15_set_Argument10 (value) {
    this.ActivityAction$b15$Argument10$value = value;
  }; 

  function ActivityAction$b15_set_Argument11 (value) {
    this.ActivityAction$b15$Argument11$value = value;
  }; 

  function ActivityAction$b15_set_Argument12 (value) {
    this.ActivityAction$b15$Argument12$value = value;
  }; 

  function ActivityAction$b15_set_Argument13 (value) {
    this.ActivityAction$b15$Argument13$value = value;
  }; 

  function ActivityAction$b15_set_Argument14 (value) {
    this.ActivityAction$b15$Argument14$value = value;
  }; 

  function ActivityAction$b15_set_Argument15 (value) {
    this.ActivityAction$b15$Argument15$value = value;
  }; 

  function ActivityAction$b15_set_Argument2 (value) {
    this.ActivityAction$b15$Argument2$value = value;
  }; 

  function ActivityAction$b15_set_Argument3 (value) {
    this.ActivityAction$b15$Argument3$value = value;
  }; 

  function ActivityAction$b15_set_Argument4 (value) {
    this.ActivityAction$b15$Argument4$value = value;
  }; 

  function ActivityAction$b15_set_Argument5 (value) {
    this.ActivityAction$b15$Argument5$value = value;
  }; 

  function ActivityAction$b15_set_Argument6 (value) {
    this.ActivityAction$b15$Argument6$value = value;
  }; 

  function ActivityAction$b15_set_Argument7 (value) {
    this.ActivityAction$b15$Argument7$value = value;
  }; 

  function ActivityAction$b15_set_Argument8 (value) {
    this.ActivityAction$b15$Argument8$value = value;
  }; 

  function ActivityAction$b15_set_Argument9 (value) {
    this.ActivityAction$b15$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`15", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b15_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b15_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b15_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityAction$b15_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityAction$b15_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityAction$b15_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]), null), 
      ActivityAction$b15_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b15_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b15_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b15_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b15_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b15_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b15_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b15_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b15_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b15_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b15_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b15_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityAction$b15_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityAction$b15_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityAction$b15_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")])]), 
      ActivityAction$b15_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b15_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b15_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b15_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b15_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b15_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b15_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b15_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b15_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b15$Argument15$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityAction`16 */ 

(function ActivityAction$b16$Members () {
  var $, $thisType;


  function ActivityAction$b16_get_Argument1 () {
    return this.ActivityAction$b16$Argument1$value;
  }; 

  function ActivityAction$b16_get_Argument10 () {
    return this.ActivityAction$b16$Argument10$value;
  }; 

  function ActivityAction$b16_get_Argument11 () {
    return this.ActivityAction$b16$Argument11$value;
  }; 

  function ActivityAction$b16_get_Argument12 () {
    return this.ActivityAction$b16$Argument12$value;
  }; 

  function ActivityAction$b16_get_Argument13 () {
    return this.ActivityAction$b16$Argument13$value;
  }; 

  function ActivityAction$b16_get_Argument14 () {
    return this.ActivityAction$b16$Argument14$value;
  }; 

  function ActivityAction$b16_get_Argument15 () {
    return this.ActivityAction$b16$Argument15$value;
  }; 

  function ActivityAction$b16_get_Argument16 () {
    return this.ActivityAction$b16$Argument16$value;
  }; 

  function ActivityAction$b16_get_Argument2 () {
    return this.ActivityAction$b16$Argument2$value;
  }; 

  function ActivityAction$b16_get_Argument3 () {
    return this.ActivityAction$b16$Argument3$value;
  }; 

  function ActivityAction$b16_get_Argument4 () {
    return this.ActivityAction$b16$Argument4$value;
  }; 

  function ActivityAction$b16_get_Argument5 () {
    return this.ActivityAction$b16$Argument5$value;
  }; 

  function ActivityAction$b16_get_Argument6 () {
    return this.ActivityAction$b16$Argument6$value;
  }; 

  function ActivityAction$b16_get_Argument7 () {
    return this.ActivityAction$b16$Argument7$value;
  }; 

  function ActivityAction$b16_get_Argument8 () {
    return this.ActivityAction$b16$Argument8$value;
  }; 

  function ActivityAction$b16_get_Argument9 () {
    return this.ActivityAction$b16$Argument9$value;
  }; 


  function ActivityAction$b16_set_Argument1 (value) {
    this.ActivityAction$b16$Argument1$value = value;
  }; 

  function ActivityAction$b16_set_Argument10 (value) {
    this.ActivityAction$b16$Argument10$value = value;
  }; 

  function ActivityAction$b16_set_Argument11 (value) {
    this.ActivityAction$b16$Argument11$value = value;
  }; 

  function ActivityAction$b16_set_Argument12 (value) {
    this.ActivityAction$b16$Argument12$value = value;
  }; 

  function ActivityAction$b16_set_Argument13 (value) {
    this.ActivityAction$b16$Argument13$value = value;
  }; 

  function ActivityAction$b16_set_Argument14 (value) {
    this.ActivityAction$b16$Argument14$value = value;
  }; 

  function ActivityAction$b16_set_Argument15 (value) {
    this.ActivityAction$b16$Argument15$value = value;
  }; 

  function ActivityAction$b16_set_Argument16 (value) {
    this.ActivityAction$b16$Argument16$value = value;
  }; 

  function ActivityAction$b16_set_Argument2 (value) {
    this.ActivityAction$b16$Argument2$value = value;
  }; 

  function ActivityAction$b16_set_Argument3 (value) {
    this.ActivityAction$b16$Argument3$value = value;
  }; 

  function ActivityAction$b16_set_Argument4 (value) {
    this.ActivityAction$b16$Argument4$value = value;
  }; 

  function ActivityAction$b16_set_Argument5 (value) {
    this.ActivityAction$b16$Argument5$value = value;
  }; 

  function ActivityAction$b16_set_Argument6 (value) {
    this.ActivityAction$b16$Argument6$value = value;
  }; 

  function ActivityAction$b16_set_Argument7 (value) {
    this.ActivityAction$b16$Argument7$value = value;
  }; 

  function ActivityAction$b16_set_Argument8 (value) {
    this.ActivityAction$b16$Argument8$value = value;
  }; 

  function ActivityAction$b16_set_Argument9 (value) {
    this.ActivityAction$b16$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityAction`16", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "T16"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityAction$b16_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityAction$b16_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityAction$b16_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityAction$b16_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityAction$b16_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityAction$b16_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]), null), 
      ActivityAction$b16_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument16", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]), null), 
      ActivityAction$b16_get_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityAction$b16_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityAction$b16_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityAction$b16_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityAction$b16_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityAction$b16_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityAction$b16_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityAction$b16_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityAction$b16_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityAction$b16_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityAction$b16_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityAction$b16_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityAction$b16_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityAction$b16_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityAction$b16_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")])]), 
      ActivityAction$b16_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument16", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")])]), 
      ActivityAction$b16_set_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityAction$b16_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityAction$b16_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityAction$b16_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityAction$b16_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityAction$b16_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityAction$b16_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityAction$b16_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityAction$b16_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument15$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityAction$b16$Argument16$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument16", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityBuilder */ 

(function ActivityBuilder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Version)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };






  function ActivityBuilder_get_Implementation () {
    return this.ActivityBuilder$Implementation$value;
  }; 

  function ActivityBuilder_get_ImplementationVersion () {
    return this.ActivityBuilder$ImplementationVersion$value;
  }; 

  function ActivityBuilder_get_Name () {
    return this.ActivityBuilder$Name$value;
  }; 






  function ActivityBuilder_set_Implementation (value) {
    this.ActivityBuilder$Implementation$value = value;
  }; 

  function ActivityBuilder_set_ImplementationVersion (value) {
    this.ActivityBuilder$ImplementationVersion$value = value;
  }; 

  function ActivityBuilder_set_Name (value) {
    this.ActivityBuilder$Name$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityBuilder", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateActivityPropertyCollection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Constraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.Method({Static:false, Public:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityBuilder_get_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version")), 
      ActivityBuilder_get_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ActivityBuilder_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPropertyReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityPropertyReference"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPropertyReferenceCollection", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityBuilder+PropertyReferenceCollection"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPropertyReferences", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")]), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "HasPropertyReferences", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Method({Static:false, Public:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityBuilder_set_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version")), 
      ActivityBuilder_set_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      ActivityBuilder_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "SetPropertyReference", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.ActivityPropertyReference")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializePropertyReference", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializePropertyReferences", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.IDebuggableWorkflowTree"), "GetWorkflowRoot");

    $.Field({Static:true , Public:false}, "propertyReferencePropertyID", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false}, "propertyReferencesPropertyID", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:false, Public:false}, "properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]));

    $.Field({Static:false, Public:false}, "constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Field({Static:false, Public:false}, "ActivityBuilder$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityBuilder$ImplementationVersion$value", $asm07.TypeRef("System.Version"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityBuilder$Implementation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Attributes"]; });

    $.Property({Static:false, Public:true }, "Constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Properties"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ImplementationVersionConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Implementation", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Constraints"]; });

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Debugger.IDebuggableWorkflowTree")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Implementation"]; });

})();

/* class System.Activities.ActivityBuilder+ActivityPropertyCollection */ 

(function ActivityPropertyCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$asm07.TypeRef("System.String"), $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]), 
      Name: "System.Activities.ActivityBuilder+ActivityPropertyCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetKeyForItem", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DynamicActivityProperty")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityBuilder+PropertyReferenceCollection */ 

(function PropertyReferenceCollection$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")]), 
      Name: "System.Activities.ActivityBuilder+PropertyReferenceCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SingleItem", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityPropertyReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.ActivityPropertyReference")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SingleItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityPropertyReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.ActivityPropertyReference")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateAttachedProperty", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "targetObject", $asm07.TypeRef("System.WeakReference"));

    $.Field({Static:false, Public:false}, "singleItemIndex", $.Int32);

    $.Property({Static:false, Public:true }, "SingleItem", $asm0B.TypeRef("System.Activities.ActivityPropertyReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityBuilder`1 */ 

(function ActivityBuilder$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Version)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };





  function ActivityBuilder$b1_get_Implementation () {
    return this.ActivityBuilder$b1$Implementation$value;
  }; 

  function ActivityBuilder$b1_get_ImplementationVersion () {
    return this.ActivityBuilder$b1$ImplementationVersion$value;
  }; 

  function ActivityBuilder$b1_get_Name () {
    return this.ActivityBuilder$b1$Name$value;
  }; 


  function ActivityBuilder$b1_set_Implementation (value) {
    this.ActivityBuilder$b1$Implementation$value = value;
  }; 

  function ActivityBuilder$b1_set_ImplementationVersion (value) {
    this.ActivityBuilder$b1$ImplementationVersion$value = value;
  }; 

  function ActivityBuilder$b1_set_Name (value) {
    this.ActivityBuilder$b1$Name$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityBuilder`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Constraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.Method({Static:false, Public:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityBuilder$b1_get_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version")), 
      ActivityBuilder$b1_get_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ActivityBuilder$b1_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    );

    $.Method({Static:false, Public:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityBuilder$b1_set_Implementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version")), 
      ActivityBuilder$b1_set_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      ActivityBuilder$b1_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.IDebuggableWorkflowTree"), "GetWorkflowRoot");

    $.Field({Static:false, Public:false}, "properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]));

    $.Field({Static:false, Public:false}, "constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]));

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Field({Static:false, Public:false}, "ActivityBuilder$b1$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityBuilder$b1$ImplementationVersion$value", $asm07.TypeRef("System.Version"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityBuilder$b1$Implementation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Attributes"]; });

    $.Property({Static:false, Public:true }, "Constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Properties"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ImplementationVersionConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Implementation", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Constraints"]; });

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Debugger.IDebuggableWorkflowTree")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Implementation"]; });

})();

/* enum System.Activities.ActivityCollectionType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.ActivityCollectionType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Public: 0, 
    Imports: 1, 
    Implementation: 2, 
  }
);

/* class System.Activities.ActivityContext */ 

(function ActivityContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };






  function ActivityContext_get_Activity () {
    return this.ActivityContext$Activity$value;
  }; 


  function ActivityContext_get_AllowChainedEnvironmentAccess () {
    return this.ActivityContext$AllowChainedEnvironmentAccess$value;
  }; 



















  function ActivityContext_set_Activity (value) {
    this.ActivityContext$Activity$value = value;
  }; 

  function ActivityContext_set_AllowChainedEnvironmentAccess (value) {
    this.ActivityContext$AllowChainedEnvironmentAccess$value = value;
  }; 









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposeDataContext", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityContext_get_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_AllowChainedEnvironmentAccess", 
      JSIL.MethodSignature.Return($.Boolean), 
      ActivityContext_get_AllowChainedEnvironmentAccess
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentExecutor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DataContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowDataContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowInstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExtension", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIgnorableResultLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), [$asm0B.TypeRef("System.Activities.LocationReference")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.LocationReference")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.OutArgument`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.InOutArgument`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.InArgument`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Argument")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetValueCore", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.LocationReference")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "Reinitialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Reinitialize", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Activity"), $.Int64
        ])
    );

    $.Method({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityContext_set_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_AllowChainedEnvironmentAccess", 
      JSIL.MethodSignature.Action($.Boolean), 
      ActivityContext_set_AllowChainedEnvironmentAccess
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.LocationReference"), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.OutArgument`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InOutArgument`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Argument"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetValueCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.LocationReference"), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"))
    );

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "instanceId", $.Int64);

    $.Field({Static:false, Public:false}, "ActivityContext$AllowChainedEnvironmentAccess$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityContext$Activity$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Environment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Property({Static:false, Public:false}, "AllowChainedEnvironmentAccess", $.Boolean);

    $.Property({Static:false, Public:false}, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "CurrentInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "CurrentExecutor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true }, "ActivityInstanceId", $.String);

    $.Property({Static:false, Public:true }, "WorkflowInstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "DataContext", $asm0B.TypeRef("System.Activities.WorkflowDataContext"));

    $.Property({Static:false, Public:false}, "IsDisposed", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityDefaults */ 

(function ActivityDefaults$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.ActivityDefaults", false, [], function ($ib) {
    $ = $ib;

    $.Field({Static:true , Public:true }, "AcquireLockTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "AsyncOperationContextCompleteTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "CloseTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "DeleteTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "InvokeTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "LoadTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "OpenTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "ResumeBookmarkTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "SaveTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "InternalSaveTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "TrackingTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true }, "TransactionCompletionTimeout", $asm07.TypeRef("System.TimeSpan"));


    function ActivityDefaults__cctor () {
      $thisType.AcquireLockTimeout = new $asm07.System.TimeSpan();
      $thisType.AsyncOperationContextCompleteTimeout = new $asm07.System.TimeSpan();
      $thisType.CloseTimeout = new $asm07.System.TimeSpan();
      $thisType.DeleteTimeout = new $asm07.System.TimeSpan();
      $thisType.InvokeTimeout = new $asm07.System.TimeSpan();
      $thisType.LoadTimeout = new $asm07.System.TimeSpan();
      $thisType.OpenTimeout = new $asm07.System.TimeSpan();
      $thisType.ResumeBookmarkTimeout = new $asm07.System.TimeSpan();
      $thisType.SaveTimeout = new $asm07.System.TimeSpan();
      $thisType.InternalSaveTimeout = new $asm07.System.TimeSpan();
      $thisType.TrackingTimeout = new $asm07.System.TimeSpan();
      $thisType.TransactionCompletionTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ActivityDefaults__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`1 */ 

(function ActivityFunc$b1$Members () {
  var $, $thisType;


  function ActivityFunc$b1_get_Result () {
    return this.ActivityFunc$b1$Result$value;
  }; 



  function ActivityFunc$b1_set_Result (value) {
    this.ActivityFunc$b1$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b1_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b1_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b1$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`2 */ 

(function ActivityFunc$b2$Members () {
  var $, $thisType;


  function ActivityFunc$b2_get_Argument () {
    return this.ActivityFunc$b2$Argument$value;
  }; 

  function ActivityFunc$b2_get_Result () {
    return this.ActivityFunc$b2$Result$value;
  }; 



  function ActivityFunc$b2_set_Argument (value) {
    this.ActivityFunc$b2$Argument$value = value;
  }; 

  function ActivityFunc$b2_set_Result (value) {
    this.ActivityFunc$b2$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]), null), 
      ActivityFunc$b2_get_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b2_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")])]), 
      ActivityFunc$b2_set_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b2_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b2$Argument$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b2$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`3 */ 

(function ActivityFunc$b3$Members () {
  var $, $thisType;


  function ActivityFunc$b3_get_Argument1 () {
    return this.ActivityFunc$b3$Argument1$value;
  }; 

  function ActivityFunc$b3_get_Argument2 () {
    return this.ActivityFunc$b3$Argument2$value;
  }; 

  function ActivityFunc$b3_get_Result () {
    return this.ActivityFunc$b3$Result$value;
  }; 



  function ActivityFunc$b3_set_Argument1 (value) {
    this.ActivityFunc$b3$Argument1$value = value;
  }; 

  function ActivityFunc$b3_set_Argument2 (value) {
    this.ActivityFunc$b3$Argument2$value = value;
  }; 

  function ActivityFunc$b3_set_Result (value) {
    this.ActivityFunc$b3$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b3_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b3_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b3_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b3_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b3_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b3_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b3$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b3$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b3$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`4 */ 

(function ActivityFunc$b4$Members () {
  var $, $thisType;


  function ActivityFunc$b4_get_Argument1 () {
    return this.ActivityFunc$b4$Argument1$value;
  }; 

  function ActivityFunc$b4_get_Argument2 () {
    return this.ActivityFunc$b4$Argument2$value;
  }; 

  function ActivityFunc$b4_get_Argument3 () {
    return this.ActivityFunc$b4$Argument3$value;
  }; 

  function ActivityFunc$b4_get_Result () {
    return this.ActivityFunc$b4$Result$value;
  }; 



  function ActivityFunc$b4_set_Argument1 (value) {
    this.ActivityFunc$b4$Argument1$value = value;
  }; 

  function ActivityFunc$b4_set_Argument2 (value) {
    this.ActivityFunc$b4$Argument2$value = value;
  }; 

  function ActivityFunc$b4_set_Argument3 (value) {
    this.ActivityFunc$b4$Argument3$value = value;
  }; 

  function ActivityFunc$b4_set_Result (value) {
    this.ActivityFunc$b4$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`4", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b4_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b4_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b4_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b4_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b4_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b4_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b4_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b4_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b4$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b4$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b4$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b4$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`5 */ 

(function ActivityFunc$b5$Members () {
  var $, $thisType;


  function ActivityFunc$b5_get_Argument1 () {
    return this.ActivityFunc$b5$Argument1$value;
  }; 

  function ActivityFunc$b5_get_Argument2 () {
    return this.ActivityFunc$b5$Argument2$value;
  }; 

  function ActivityFunc$b5_get_Argument3 () {
    return this.ActivityFunc$b5$Argument3$value;
  }; 

  function ActivityFunc$b5_get_Argument4 () {
    return this.ActivityFunc$b5$Argument4$value;
  }; 

  function ActivityFunc$b5_get_Result () {
    return this.ActivityFunc$b5$Result$value;
  }; 



  function ActivityFunc$b5_set_Argument1 (value) {
    this.ActivityFunc$b5$Argument1$value = value;
  }; 

  function ActivityFunc$b5_set_Argument2 (value) {
    this.ActivityFunc$b5$Argument2$value = value;
  }; 

  function ActivityFunc$b5_set_Argument3 (value) {
    this.ActivityFunc$b5$Argument3$value = value;
  }; 

  function ActivityFunc$b5_set_Argument4 (value) {
    this.ActivityFunc$b5$Argument4$value = value;
  }; 

  function ActivityFunc$b5_set_Result (value) {
    this.ActivityFunc$b5$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`5", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b5_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b5_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b5_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b5_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b5_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b5_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b5_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b5_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b5_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b5_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b5$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b5$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b5$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b5$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b5$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`6 */ 

(function ActivityFunc$b6$Members () {
  var $, $thisType;


  function ActivityFunc$b6_get_Argument1 () {
    return this.ActivityFunc$b6$Argument1$value;
  }; 

  function ActivityFunc$b6_get_Argument2 () {
    return this.ActivityFunc$b6$Argument2$value;
  }; 

  function ActivityFunc$b6_get_Argument3 () {
    return this.ActivityFunc$b6$Argument3$value;
  }; 

  function ActivityFunc$b6_get_Argument4 () {
    return this.ActivityFunc$b6$Argument4$value;
  }; 

  function ActivityFunc$b6_get_Argument5 () {
    return this.ActivityFunc$b6$Argument5$value;
  }; 

  function ActivityFunc$b6_get_Result () {
    return this.ActivityFunc$b6$Result$value;
  }; 



  function ActivityFunc$b6_set_Argument1 (value) {
    this.ActivityFunc$b6$Argument1$value = value;
  }; 

  function ActivityFunc$b6_set_Argument2 (value) {
    this.ActivityFunc$b6$Argument2$value = value;
  }; 

  function ActivityFunc$b6_set_Argument3 (value) {
    this.ActivityFunc$b6$Argument3$value = value;
  }; 

  function ActivityFunc$b6_set_Argument4 (value) {
    this.ActivityFunc$b6$Argument4$value = value;
  }; 

  function ActivityFunc$b6_set_Argument5 (value) {
    this.ActivityFunc$b6$Argument5$value = value;
  }; 

  function ActivityFunc$b6_set_Result (value) {
    this.ActivityFunc$b6$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`6", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b6_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b6_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b6_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b6_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b6_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b6_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b6_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b6_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b6_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b6_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b6_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b6_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b6$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`7 */ 

(function ActivityFunc$b7$Members () {
  var $, $thisType;


  function ActivityFunc$b7_get_Argument1 () {
    return this.ActivityFunc$b7$Argument1$value;
  }; 

  function ActivityFunc$b7_get_Argument2 () {
    return this.ActivityFunc$b7$Argument2$value;
  }; 

  function ActivityFunc$b7_get_Argument3 () {
    return this.ActivityFunc$b7$Argument3$value;
  }; 

  function ActivityFunc$b7_get_Argument4 () {
    return this.ActivityFunc$b7$Argument4$value;
  }; 

  function ActivityFunc$b7_get_Argument5 () {
    return this.ActivityFunc$b7$Argument5$value;
  }; 

  function ActivityFunc$b7_get_Argument6 () {
    return this.ActivityFunc$b7$Argument6$value;
  }; 

  function ActivityFunc$b7_get_Result () {
    return this.ActivityFunc$b7$Result$value;
  }; 



  function ActivityFunc$b7_set_Argument1 (value) {
    this.ActivityFunc$b7$Argument1$value = value;
  }; 

  function ActivityFunc$b7_set_Argument2 (value) {
    this.ActivityFunc$b7$Argument2$value = value;
  }; 

  function ActivityFunc$b7_set_Argument3 (value) {
    this.ActivityFunc$b7$Argument3$value = value;
  }; 

  function ActivityFunc$b7_set_Argument4 (value) {
    this.ActivityFunc$b7$Argument4$value = value;
  }; 

  function ActivityFunc$b7_set_Argument5 (value) {
    this.ActivityFunc$b7$Argument5$value = value;
  }; 

  function ActivityFunc$b7_set_Argument6 (value) {
    this.ActivityFunc$b7$Argument6$value = value;
  }; 

  function ActivityFunc$b7_set_Result (value) {
    this.ActivityFunc$b7$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`7", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b7_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b7_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b7_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b7_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b7_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b7_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b7_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b7_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b7_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b7_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b7_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b7_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b7_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b7_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b7$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`8 */ 

(function ActivityFunc$b8$Members () {
  var $, $thisType;


  function ActivityFunc$b8_get_Argument1 () {
    return this.ActivityFunc$b8$Argument1$value;
  }; 

  function ActivityFunc$b8_get_Argument2 () {
    return this.ActivityFunc$b8$Argument2$value;
  }; 

  function ActivityFunc$b8_get_Argument3 () {
    return this.ActivityFunc$b8$Argument3$value;
  }; 

  function ActivityFunc$b8_get_Argument4 () {
    return this.ActivityFunc$b8$Argument4$value;
  }; 

  function ActivityFunc$b8_get_Argument5 () {
    return this.ActivityFunc$b8$Argument5$value;
  }; 

  function ActivityFunc$b8_get_Argument6 () {
    return this.ActivityFunc$b8$Argument6$value;
  }; 

  function ActivityFunc$b8_get_Argument7 () {
    return this.ActivityFunc$b8$Argument7$value;
  }; 

  function ActivityFunc$b8_get_Result () {
    return this.ActivityFunc$b8$Result$value;
  }; 



  function ActivityFunc$b8_set_Argument1 (value) {
    this.ActivityFunc$b8$Argument1$value = value;
  }; 

  function ActivityFunc$b8_set_Argument2 (value) {
    this.ActivityFunc$b8$Argument2$value = value;
  }; 

  function ActivityFunc$b8_set_Argument3 (value) {
    this.ActivityFunc$b8$Argument3$value = value;
  }; 

  function ActivityFunc$b8_set_Argument4 (value) {
    this.ActivityFunc$b8$Argument4$value = value;
  }; 

  function ActivityFunc$b8_set_Argument5 (value) {
    this.ActivityFunc$b8$Argument5$value = value;
  }; 

  function ActivityFunc$b8_set_Argument6 (value) {
    this.ActivityFunc$b8$Argument6$value = value;
  }; 

  function ActivityFunc$b8_set_Argument7 (value) {
    this.ActivityFunc$b8$Argument7$value = value;
  }; 

  function ActivityFunc$b8_set_Result (value) {
    this.ActivityFunc$b8$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`8", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b8_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b8_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b8_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b8_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b8_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b8_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b8_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b8_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b8_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b8_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b8_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b8_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b8_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b8_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b8_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b8_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b8$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`9 */ 

(function ActivityFunc$b9$Members () {
  var $, $thisType;


  function ActivityFunc$b9_get_Argument1 () {
    return this.ActivityFunc$b9$Argument1$value;
  }; 

  function ActivityFunc$b9_get_Argument2 () {
    return this.ActivityFunc$b9$Argument2$value;
  }; 

  function ActivityFunc$b9_get_Argument3 () {
    return this.ActivityFunc$b9$Argument3$value;
  }; 

  function ActivityFunc$b9_get_Argument4 () {
    return this.ActivityFunc$b9$Argument4$value;
  }; 

  function ActivityFunc$b9_get_Argument5 () {
    return this.ActivityFunc$b9$Argument5$value;
  }; 

  function ActivityFunc$b9_get_Argument6 () {
    return this.ActivityFunc$b9$Argument6$value;
  }; 

  function ActivityFunc$b9_get_Argument7 () {
    return this.ActivityFunc$b9$Argument7$value;
  }; 

  function ActivityFunc$b9_get_Argument8 () {
    return this.ActivityFunc$b9$Argument8$value;
  }; 

  function ActivityFunc$b9_get_Result () {
    return this.ActivityFunc$b9$Result$value;
  }; 



  function ActivityFunc$b9_set_Argument1 (value) {
    this.ActivityFunc$b9$Argument1$value = value;
  }; 

  function ActivityFunc$b9_set_Argument2 (value) {
    this.ActivityFunc$b9$Argument2$value = value;
  }; 

  function ActivityFunc$b9_set_Argument3 (value) {
    this.ActivityFunc$b9$Argument3$value = value;
  }; 

  function ActivityFunc$b9_set_Argument4 (value) {
    this.ActivityFunc$b9$Argument4$value = value;
  }; 

  function ActivityFunc$b9_set_Argument5 (value) {
    this.ActivityFunc$b9$Argument5$value = value;
  }; 

  function ActivityFunc$b9_set_Argument6 (value) {
    this.ActivityFunc$b9$Argument6$value = value;
  }; 

  function ActivityFunc$b9_set_Argument7 (value) {
    this.ActivityFunc$b9$Argument7$value = value;
  }; 

  function ActivityFunc$b9_set_Argument8 (value) {
    this.ActivityFunc$b9$Argument8$value = value;
  }; 

  function ActivityFunc$b9_set_Result (value) {
    this.ActivityFunc$b9$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`9", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b9_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b9_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b9_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b9_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b9_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b9_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b9_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b9_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b9_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b9_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b9_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b9_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b9_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b9_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b9_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b9_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b9_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b9_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b9$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`10 */ 

(function ActivityFunc$b10$Members () {
  var $, $thisType;


  function ActivityFunc$b10_get_Argument1 () {
    return this.ActivityFunc$b10$Argument1$value;
  }; 

  function ActivityFunc$b10_get_Argument2 () {
    return this.ActivityFunc$b10$Argument2$value;
  }; 

  function ActivityFunc$b10_get_Argument3 () {
    return this.ActivityFunc$b10$Argument3$value;
  }; 

  function ActivityFunc$b10_get_Argument4 () {
    return this.ActivityFunc$b10$Argument4$value;
  }; 

  function ActivityFunc$b10_get_Argument5 () {
    return this.ActivityFunc$b10$Argument5$value;
  }; 

  function ActivityFunc$b10_get_Argument6 () {
    return this.ActivityFunc$b10$Argument6$value;
  }; 

  function ActivityFunc$b10_get_Argument7 () {
    return this.ActivityFunc$b10$Argument7$value;
  }; 

  function ActivityFunc$b10_get_Argument8 () {
    return this.ActivityFunc$b10$Argument8$value;
  }; 

  function ActivityFunc$b10_get_Argument9 () {
    return this.ActivityFunc$b10$Argument9$value;
  }; 

  function ActivityFunc$b10_get_Result () {
    return this.ActivityFunc$b10$Result$value;
  }; 



  function ActivityFunc$b10_set_Argument1 (value) {
    this.ActivityFunc$b10$Argument1$value = value;
  }; 

  function ActivityFunc$b10_set_Argument2 (value) {
    this.ActivityFunc$b10$Argument2$value = value;
  }; 

  function ActivityFunc$b10_set_Argument3 (value) {
    this.ActivityFunc$b10$Argument3$value = value;
  }; 

  function ActivityFunc$b10_set_Argument4 (value) {
    this.ActivityFunc$b10$Argument4$value = value;
  }; 

  function ActivityFunc$b10_set_Argument5 (value) {
    this.ActivityFunc$b10$Argument5$value = value;
  }; 

  function ActivityFunc$b10_set_Argument6 (value) {
    this.ActivityFunc$b10$Argument6$value = value;
  }; 

  function ActivityFunc$b10_set_Argument7 (value) {
    this.ActivityFunc$b10$Argument7$value = value;
  }; 

  function ActivityFunc$b10_set_Argument8 (value) {
    this.ActivityFunc$b10$Argument8$value = value;
  }; 

  function ActivityFunc$b10_set_Argument9 (value) {
    this.ActivityFunc$b10$Argument9$value = value;
  }; 

  function ActivityFunc$b10_set_Result (value) {
    this.ActivityFunc$b10$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`10", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b10_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b10_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b10_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b10_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b10_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b10_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b10_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b10_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b10_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b10_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b10_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b10_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b10_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b10_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b10_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b10_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b10_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b10_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b10_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b10_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b10$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`11 */ 

(function ActivityFunc$b11$Members () {
  var $, $thisType;


  function ActivityFunc$b11_get_Argument1 () {
    return this.ActivityFunc$b11$Argument1$value;
  }; 

  function ActivityFunc$b11_get_Argument10 () {
    return this.ActivityFunc$b11$Argument10$value;
  }; 

  function ActivityFunc$b11_get_Argument2 () {
    return this.ActivityFunc$b11$Argument2$value;
  }; 

  function ActivityFunc$b11_get_Argument3 () {
    return this.ActivityFunc$b11$Argument3$value;
  }; 

  function ActivityFunc$b11_get_Argument4 () {
    return this.ActivityFunc$b11$Argument4$value;
  }; 

  function ActivityFunc$b11_get_Argument5 () {
    return this.ActivityFunc$b11$Argument5$value;
  }; 

  function ActivityFunc$b11_get_Argument6 () {
    return this.ActivityFunc$b11$Argument6$value;
  }; 

  function ActivityFunc$b11_get_Argument7 () {
    return this.ActivityFunc$b11$Argument7$value;
  }; 

  function ActivityFunc$b11_get_Argument8 () {
    return this.ActivityFunc$b11$Argument8$value;
  }; 

  function ActivityFunc$b11_get_Argument9 () {
    return this.ActivityFunc$b11$Argument9$value;
  }; 

  function ActivityFunc$b11_get_Result () {
    return this.ActivityFunc$b11$Result$value;
  }; 



  function ActivityFunc$b11_set_Argument1 (value) {
    this.ActivityFunc$b11$Argument1$value = value;
  }; 

  function ActivityFunc$b11_set_Argument10 (value) {
    this.ActivityFunc$b11$Argument10$value = value;
  }; 

  function ActivityFunc$b11_set_Argument2 (value) {
    this.ActivityFunc$b11$Argument2$value = value;
  }; 

  function ActivityFunc$b11_set_Argument3 (value) {
    this.ActivityFunc$b11$Argument3$value = value;
  }; 

  function ActivityFunc$b11_set_Argument4 (value) {
    this.ActivityFunc$b11$Argument4$value = value;
  }; 

  function ActivityFunc$b11_set_Argument5 (value) {
    this.ActivityFunc$b11$Argument5$value = value;
  }; 

  function ActivityFunc$b11_set_Argument6 (value) {
    this.ActivityFunc$b11$Argument6$value = value;
  }; 

  function ActivityFunc$b11_set_Argument7 (value) {
    this.ActivityFunc$b11$Argument7$value = value;
  }; 

  function ActivityFunc$b11_set_Argument8 (value) {
    this.ActivityFunc$b11$Argument8$value = value;
  }; 

  function ActivityFunc$b11_set_Argument9 (value) {
    this.ActivityFunc$b11$Argument9$value = value;
  }; 

  function ActivityFunc$b11_set_Result (value) {
    this.ActivityFunc$b11$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`11", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b11_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b11_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b11_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b11_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b11_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b11_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b11_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b11_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b11_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b11_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b11_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b11_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b11_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b11_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b11_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b11_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b11_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b11_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b11_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b11_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b11_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b11_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b11$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`12 */ 

(function ActivityFunc$b12$Members () {
  var $, $thisType;


  function ActivityFunc$b12_get_Argument1 () {
    return this.ActivityFunc$b12$Argument1$value;
  }; 

  function ActivityFunc$b12_get_Argument10 () {
    return this.ActivityFunc$b12$Argument10$value;
  }; 

  function ActivityFunc$b12_get_Argument11 () {
    return this.ActivityFunc$b12$Argument11$value;
  }; 

  function ActivityFunc$b12_get_Argument2 () {
    return this.ActivityFunc$b12$Argument2$value;
  }; 

  function ActivityFunc$b12_get_Argument3 () {
    return this.ActivityFunc$b12$Argument3$value;
  }; 

  function ActivityFunc$b12_get_Argument4 () {
    return this.ActivityFunc$b12$Argument4$value;
  }; 

  function ActivityFunc$b12_get_Argument5 () {
    return this.ActivityFunc$b12$Argument5$value;
  }; 

  function ActivityFunc$b12_get_Argument6 () {
    return this.ActivityFunc$b12$Argument6$value;
  }; 

  function ActivityFunc$b12_get_Argument7 () {
    return this.ActivityFunc$b12$Argument7$value;
  }; 

  function ActivityFunc$b12_get_Argument8 () {
    return this.ActivityFunc$b12$Argument8$value;
  }; 

  function ActivityFunc$b12_get_Argument9 () {
    return this.ActivityFunc$b12$Argument9$value;
  }; 

  function ActivityFunc$b12_get_Result () {
    return this.ActivityFunc$b12$Result$value;
  }; 



  function ActivityFunc$b12_set_Argument1 (value) {
    this.ActivityFunc$b12$Argument1$value = value;
  }; 

  function ActivityFunc$b12_set_Argument10 (value) {
    this.ActivityFunc$b12$Argument10$value = value;
  }; 

  function ActivityFunc$b12_set_Argument11 (value) {
    this.ActivityFunc$b12$Argument11$value = value;
  }; 

  function ActivityFunc$b12_set_Argument2 (value) {
    this.ActivityFunc$b12$Argument2$value = value;
  }; 

  function ActivityFunc$b12_set_Argument3 (value) {
    this.ActivityFunc$b12$Argument3$value = value;
  }; 

  function ActivityFunc$b12_set_Argument4 (value) {
    this.ActivityFunc$b12$Argument4$value = value;
  }; 

  function ActivityFunc$b12_set_Argument5 (value) {
    this.ActivityFunc$b12$Argument5$value = value;
  }; 

  function ActivityFunc$b12_set_Argument6 (value) {
    this.ActivityFunc$b12$Argument6$value = value;
  }; 

  function ActivityFunc$b12_set_Argument7 (value) {
    this.ActivityFunc$b12$Argument7$value = value;
  }; 

  function ActivityFunc$b12_set_Argument8 (value) {
    this.ActivityFunc$b12$Argument8$value = value;
  }; 

  function ActivityFunc$b12_set_Argument9 (value) {
    this.ActivityFunc$b12$Argument9$value = value;
  }; 

  function ActivityFunc$b12_set_Result (value) {
    this.ActivityFunc$b12$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`12", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b12_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b12_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b12_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b12_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b12_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b12_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b12_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b12_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b12_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b12_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b12_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b12_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b12_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b12_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b12_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b12_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b12_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b12_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b12_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b12_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b12_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b12_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b12_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b12_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b12$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`13 */ 

(function ActivityFunc$b13$Members () {
  var $, $thisType;


  function ActivityFunc$b13_get_Argument1 () {
    return this.ActivityFunc$b13$Argument1$value;
  }; 

  function ActivityFunc$b13_get_Argument10 () {
    return this.ActivityFunc$b13$Argument10$value;
  }; 

  function ActivityFunc$b13_get_Argument11 () {
    return this.ActivityFunc$b13$Argument11$value;
  }; 

  function ActivityFunc$b13_get_Argument12 () {
    return this.ActivityFunc$b13$Argument12$value;
  }; 

  function ActivityFunc$b13_get_Argument2 () {
    return this.ActivityFunc$b13$Argument2$value;
  }; 

  function ActivityFunc$b13_get_Argument3 () {
    return this.ActivityFunc$b13$Argument3$value;
  }; 

  function ActivityFunc$b13_get_Argument4 () {
    return this.ActivityFunc$b13$Argument4$value;
  }; 

  function ActivityFunc$b13_get_Argument5 () {
    return this.ActivityFunc$b13$Argument5$value;
  }; 

  function ActivityFunc$b13_get_Argument6 () {
    return this.ActivityFunc$b13$Argument6$value;
  }; 

  function ActivityFunc$b13_get_Argument7 () {
    return this.ActivityFunc$b13$Argument7$value;
  }; 

  function ActivityFunc$b13_get_Argument8 () {
    return this.ActivityFunc$b13$Argument8$value;
  }; 

  function ActivityFunc$b13_get_Argument9 () {
    return this.ActivityFunc$b13$Argument9$value;
  }; 

  function ActivityFunc$b13_get_Result () {
    return this.ActivityFunc$b13$Result$value;
  }; 



  function ActivityFunc$b13_set_Argument1 (value) {
    this.ActivityFunc$b13$Argument1$value = value;
  }; 

  function ActivityFunc$b13_set_Argument10 (value) {
    this.ActivityFunc$b13$Argument10$value = value;
  }; 

  function ActivityFunc$b13_set_Argument11 (value) {
    this.ActivityFunc$b13$Argument11$value = value;
  }; 

  function ActivityFunc$b13_set_Argument12 (value) {
    this.ActivityFunc$b13$Argument12$value = value;
  }; 

  function ActivityFunc$b13_set_Argument2 (value) {
    this.ActivityFunc$b13$Argument2$value = value;
  }; 

  function ActivityFunc$b13_set_Argument3 (value) {
    this.ActivityFunc$b13$Argument3$value = value;
  }; 

  function ActivityFunc$b13_set_Argument4 (value) {
    this.ActivityFunc$b13$Argument4$value = value;
  }; 

  function ActivityFunc$b13_set_Argument5 (value) {
    this.ActivityFunc$b13$Argument5$value = value;
  }; 

  function ActivityFunc$b13_set_Argument6 (value) {
    this.ActivityFunc$b13$Argument6$value = value;
  }; 

  function ActivityFunc$b13_set_Argument7 (value) {
    this.ActivityFunc$b13$Argument7$value = value;
  }; 

  function ActivityFunc$b13_set_Argument8 (value) {
    this.ActivityFunc$b13$Argument8$value = value;
  }; 

  function ActivityFunc$b13_set_Argument9 (value) {
    this.ActivityFunc$b13$Argument9$value = value;
  }; 

  function ActivityFunc$b13_set_Result (value) {
    this.ActivityFunc$b13$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`13", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b13_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b13_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b13_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityFunc$b13_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b13_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b13_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b13_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b13_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b13_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b13_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b13_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b13_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b13_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b13_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b13_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b13_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityFunc$b13_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b13_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b13_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b13_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b13_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b13_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b13_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b13_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b13_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b13_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b13$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`14 */ 

(function ActivityFunc$b14$Members () {
  var $, $thisType;


  function ActivityFunc$b14_get_Argument1 () {
    return this.ActivityFunc$b14$Argument1$value;
  }; 

  function ActivityFunc$b14_get_Argument10 () {
    return this.ActivityFunc$b14$Argument10$value;
  }; 

  function ActivityFunc$b14_get_Argument11 () {
    return this.ActivityFunc$b14$Argument11$value;
  }; 

  function ActivityFunc$b14_get_Argument12 () {
    return this.ActivityFunc$b14$Argument12$value;
  }; 

  function ActivityFunc$b14_get_Argument13 () {
    return this.ActivityFunc$b14$Argument13$value;
  }; 

  function ActivityFunc$b14_get_Argument2 () {
    return this.ActivityFunc$b14$Argument2$value;
  }; 

  function ActivityFunc$b14_get_Argument3 () {
    return this.ActivityFunc$b14$Argument3$value;
  }; 

  function ActivityFunc$b14_get_Argument4 () {
    return this.ActivityFunc$b14$Argument4$value;
  }; 

  function ActivityFunc$b14_get_Argument5 () {
    return this.ActivityFunc$b14$Argument5$value;
  }; 

  function ActivityFunc$b14_get_Argument6 () {
    return this.ActivityFunc$b14$Argument6$value;
  }; 

  function ActivityFunc$b14_get_Argument7 () {
    return this.ActivityFunc$b14$Argument7$value;
  }; 

  function ActivityFunc$b14_get_Argument8 () {
    return this.ActivityFunc$b14$Argument8$value;
  }; 

  function ActivityFunc$b14_get_Argument9 () {
    return this.ActivityFunc$b14$Argument9$value;
  }; 

  function ActivityFunc$b14_get_Result () {
    return this.ActivityFunc$b14$Result$value;
  }; 



  function ActivityFunc$b14_set_Argument1 (value) {
    this.ActivityFunc$b14$Argument1$value = value;
  }; 

  function ActivityFunc$b14_set_Argument10 (value) {
    this.ActivityFunc$b14$Argument10$value = value;
  }; 

  function ActivityFunc$b14_set_Argument11 (value) {
    this.ActivityFunc$b14$Argument11$value = value;
  }; 

  function ActivityFunc$b14_set_Argument12 (value) {
    this.ActivityFunc$b14$Argument12$value = value;
  }; 

  function ActivityFunc$b14_set_Argument13 (value) {
    this.ActivityFunc$b14$Argument13$value = value;
  }; 

  function ActivityFunc$b14_set_Argument2 (value) {
    this.ActivityFunc$b14$Argument2$value = value;
  }; 

  function ActivityFunc$b14_set_Argument3 (value) {
    this.ActivityFunc$b14$Argument3$value = value;
  }; 

  function ActivityFunc$b14_set_Argument4 (value) {
    this.ActivityFunc$b14$Argument4$value = value;
  }; 

  function ActivityFunc$b14_set_Argument5 (value) {
    this.ActivityFunc$b14$Argument5$value = value;
  }; 

  function ActivityFunc$b14_set_Argument6 (value) {
    this.ActivityFunc$b14$Argument6$value = value;
  }; 

  function ActivityFunc$b14_set_Argument7 (value) {
    this.ActivityFunc$b14$Argument7$value = value;
  }; 

  function ActivityFunc$b14_set_Argument8 (value) {
    this.ActivityFunc$b14$Argument8$value = value;
  }; 

  function ActivityFunc$b14_set_Argument9 (value) {
    this.ActivityFunc$b14$Argument9$value = value;
  }; 

  function ActivityFunc$b14_set_Result (value) {
    this.ActivityFunc$b14$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`14", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b14_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b14_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b14_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityFunc$b14_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityFunc$b14_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b14_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b14_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b14_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b14_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b14_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b14_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b14_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b14_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b14_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b14_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b14_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b14_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityFunc$b14_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityFunc$b14_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b14_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b14_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b14_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b14_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b14_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b14_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b14_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b14_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b14_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b14$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`15 */ 

(function ActivityFunc$b15$Members () {
  var $, $thisType;


  function ActivityFunc$b15_get_Argument1 () {
    return this.ActivityFunc$b15$Argument1$value;
  }; 

  function ActivityFunc$b15_get_Argument10 () {
    return this.ActivityFunc$b15$Argument10$value;
  }; 

  function ActivityFunc$b15_get_Argument11 () {
    return this.ActivityFunc$b15$Argument11$value;
  }; 

  function ActivityFunc$b15_get_Argument12 () {
    return this.ActivityFunc$b15$Argument12$value;
  }; 

  function ActivityFunc$b15_get_Argument13 () {
    return this.ActivityFunc$b15$Argument13$value;
  }; 

  function ActivityFunc$b15_get_Argument14 () {
    return this.ActivityFunc$b15$Argument14$value;
  }; 

  function ActivityFunc$b15_get_Argument2 () {
    return this.ActivityFunc$b15$Argument2$value;
  }; 

  function ActivityFunc$b15_get_Argument3 () {
    return this.ActivityFunc$b15$Argument3$value;
  }; 

  function ActivityFunc$b15_get_Argument4 () {
    return this.ActivityFunc$b15$Argument4$value;
  }; 

  function ActivityFunc$b15_get_Argument5 () {
    return this.ActivityFunc$b15$Argument5$value;
  }; 

  function ActivityFunc$b15_get_Argument6 () {
    return this.ActivityFunc$b15$Argument6$value;
  }; 

  function ActivityFunc$b15_get_Argument7 () {
    return this.ActivityFunc$b15$Argument7$value;
  }; 

  function ActivityFunc$b15_get_Argument8 () {
    return this.ActivityFunc$b15$Argument8$value;
  }; 

  function ActivityFunc$b15_get_Argument9 () {
    return this.ActivityFunc$b15$Argument9$value;
  }; 

  function ActivityFunc$b15_get_Result () {
    return this.ActivityFunc$b15$Result$value;
  }; 



  function ActivityFunc$b15_set_Argument1 (value) {
    this.ActivityFunc$b15$Argument1$value = value;
  }; 

  function ActivityFunc$b15_set_Argument10 (value) {
    this.ActivityFunc$b15$Argument10$value = value;
  }; 

  function ActivityFunc$b15_set_Argument11 (value) {
    this.ActivityFunc$b15$Argument11$value = value;
  }; 

  function ActivityFunc$b15_set_Argument12 (value) {
    this.ActivityFunc$b15$Argument12$value = value;
  }; 

  function ActivityFunc$b15_set_Argument13 (value) {
    this.ActivityFunc$b15$Argument13$value = value;
  }; 

  function ActivityFunc$b15_set_Argument14 (value) {
    this.ActivityFunc$b15$Argument14$value = value;
  }; 

  function ActivityFunc$b15_set_Argument2 (value) {
    this.ActivityFunc$b15$Argument2$value = value;
  }; 

  function ActivityFunc$b15_set_Argument3 (value) {
    this.ActivityFunc$b15$Argument3$value = value;
  }; 

  function ActivityFunc$b15_set_Argument4 (value) {
    this.ActivityFunc$b15$Argument4$value = value;
  }; 

  function ActivityFunc$b15_set_Argument5 (value) {
    this.ActivityFunc$b15$Argument5$value = value;
  }; 

  function ActivityFunc$b15_set_Argument6 (value) {
    this.ActivityFunc$b15$Argument6$value = value;
  }; 

  function ActivityFunc$b15_set_Argument7 (value) {
    this.ActivityFunc$b15$Argument7$value = value;
  }; 

  function ActivityFunc$b15_set_Argument8 (value) {
    this.ActivityFunc$b15$Argument8$value = value;
  }; 

  function ActivityFunc$b15_set_Argument9 (value) {
    this.ActivityFunc$b15$Argument9$value = value;
  }; 

  function ActivityFunc$b15_set_Result (value) {
    this.ActivityFunc$b15$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`15", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b15_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b15_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b15_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityFunc$b15_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityFunc$b15_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityFunc$b15_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b15_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b15_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b15_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b15_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b15_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b15_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b15_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b15_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b15_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b15_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b15_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b15_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityFunc$b15_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityFunc$b15_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityFunc$b15_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b15_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b15_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b15_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b15_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b15_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b15_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b15_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b15_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b15_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b15$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`16 */ 

(function ActivityFunc$b16$Members () {
  var $, $thisType;


  function ActivityFunc$b16_get_Argument1 () {
    return this.ActivityFunc$b16$Argument1$value;
  }; 

  function ActivityFunc$b16_get_Argument10 () {
    return this.ActivityFunc$b16$Argument10$value;
  }; 

  function ActivityFunc$b16_get_Argument11 () {
    return this.ActivityFunc$b16$Argument11$value;
  }; 

  function ActivityFunc$b16_get_Argument12 () {
    return this.ActivityFunc$b16$Argument12$value;
  }; 

  function ActivityFunc$b16_get_Argument13 () {
    return this.ActivityFunc$b16$Argument13$value;
  }; 

  function ActivityFunc$b16_get_Argument14 () {
    return this.ActivityFunc$b16$Argument14$value;
  }; 

  function ActivityFunc$b16_get_Argument15 () {
    return this.ActivityFunc$b16$Argument15$value;
  }; 

  function ActivityFunc$b16_get_Argument2 () {
    return this.ActivityFunc$b16$Argument2$value;
  }; 

  function ActivityFunc$b16_get_Argument3 () {
    return this.ActivityFunc$b16$Argument3$value;
  }; 

  function ActivityFunc$b16_get_Argument4 () {
    return this.ActivityFunc$b16$Argument4$value;
  }; 

  function ActivityFunc$b16_get_Argument5 () {
    return this.ActivityFunc$b16$Argument5$value;
  }; 

  function ActivityFunc$b16_get_Argument6 () {
    return this.ActivityFunc$b16$Argument6$value;
  }; 

  function ActivityFunc$b16_get_Argument7 () {
    return this.ActivityFunc$b16$Argument7$value;
  }; 

  function ActivityFunc$b16_get_Argument8 () {
    return this.ActivityFunc$b16$Argument8$value;
  }; 

  function ActivityFunc$b16_get_Argument9 () {
    return this.ActivityFunc$b16$Argument9$value;
  }; 

  function ActivityFunc$b16_get_Result () {
    return this.ActivityFunc$b16$Result$value;
  }; 



  function ActivityFunc$b16_set_Argument1 (value) {
    this.ActivityFunc$b16$Argument1$value = value;
  }; 

  function ActivityFunc$b16_set_Argument10 (value) {
    this.ActivityFunc$b16$Argument10$value = value;
  }; 

  function ActivityFunc$b16_set_Argument11 (value) {
    this.ActivityFunc$b16$Argument11$value = value;
  }; 

  function ActivityFunc$b16_set_Argument12 (value) {
    this.ActivityFunc$b16$Argument12$value = value;
  }; 

  function ActivityFunc$b16_set_Argument13 (value) {
    this.ActivityFunc$b16$Argument13$value = value;
  }; 

  function ActivityFunc$b16_set_Argument14 (value) {
    this.ActivityFunc$b16$Argument14$value = value;
  }; 

  function ActivityFunc$b16_set_Argument15 (value) {
    this.ActivityFunc$b16$Argument15$value = value;
  }; 

  function ActivityFunc$b16_set_Argument2 (value) {
    this.ActivityFunc$b16$Argument2$value = value;
  }; 

  function ActivityFunc$b16_set_Argument3 (value) {
    this.ActivityFunc$b16$Argument3$value = value;
  }; 

  function ActivityFunc$b16_set_Argument4 (value) {
    this.ActivityFunc$b16$Argument4$value = value;
  }; 

  function ActivityFunc$b16_set_Argument5 (value) {
    this.ActivityFunc$b16$Argument5$value = value;
  }; 

  function ActivityFunc$b16_set_Argument6 (value) {
    this.ActivityFunc$b16$Argument6$value = value;
  }; 

  function ActivityFunc$b16_set_Argument7 (value) {
    this.ActivityFunc$b16$Argument7$value = value;
  }; 

  function ActivityFunc$b16_set_Argument8 (value) {
    this.ActivityFunc$b16$Argument8$value = value;
  }; 

  function ActivityFunc$b16_set_Argument9 (value) {
    this.ActivityFunc$b16$Argument9$value = value;
  }; 

  function ActivityFunc$b16_set_Result (value) {
    this.ActivityFunc$b16$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`16", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b16_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b16_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b16_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityFunc$b16_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityFunc$b16_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityFunc$b16_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]), null), 
      ActivityFunc$b16_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b16_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b16_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b16_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b16_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b16_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b16_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b16_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b16_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b16_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b16_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b16_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b16_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityFunc$b16_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityFunc$b16_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityFunc$b16_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")])]), 
      ActivityFunc$b16_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b16_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b16_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b16_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b16_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b16_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b16_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b16_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b16_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b16_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Argument15$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b16$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityFunc`17 */ 

(function ActivityFunc$b17$Members () {
  var $, $thisType;


  function ActivityFunc$b17_get_Argument1 () {
    return this.ActivityFunc$b17$Argument1$value;
  }; 

  function ActivityFunc$b17_get_Argument10 () {
    return this.ActivityFunc$b17$Argument10$value;
  }; 

  function ActivityFunc$b17_get_Argument11 () {
    return this.ActivityFunc$b17$Argument11$value;
  }; 

  function ActivityFunc$b17_get_Argument12 () {
    return this.ActivityFunc$b17$Argument12$value;
  }; 

  function ActivityFunc$b17_get_Argument13 () {
    return this.ActivityFunc$b17$Argument13$value;
  }; 

  function ActivityFunc$b17_get_Argument14 () {
    return this.ActivityFunc$b17$Argument14$value;
  }; 

  function ActivityFunc$b17_get_Argument15 () {
    return this.ActivityFunc$b17$Argument15$value;
  }; 

  function ActivityFunc$b17_get_Argument16 () {
    return this.ActivityFunc$b17$Argument16$value;
  }; 

  function ActivityFunc$b17_get_Argument2 () {
    return this.ActivityFunc$b17$Argument2$value;
  }; 

  function ActivityFunc$b17_get_Argument3 () {
    return this.ActivityFunc$b17$Argument3$value;
  }; 

  function ActivityFunc$b17_get_Argument4 () {
    return this.ActivityFunc$b17$Argument4$value;
  }; 

  function ActivityFunc$b17_get_Argument5 () {
    return this.ActivityFunc$b17$Argument5$value;
  }; 

  function ActivityFunc$b17_get_Argument6 () {
    return this.ActivityFunc$b17$Argument6$value;
  }; 

  function ActivityFunc$b17_get_Argument7 () {
    return this.ActivityFunc$b17$Argument7$value;
  }; 

  function ActivityFunc$b17_get_Argument8 () {
    return this.ActivityFunc$b17$Argument8$value;
  }; 

  function ActivityFunc$b17_get_Argument9 () {
    return this.ActivityFunc$b17$Argument9$value;
  }; 

  function ActivityFunc$b17_get_Result () {
    return this.ActivityFunc$b17$Result$value;
  }; 



  function ActivityFunc$b17_set_Argument1 (value) {
    this.ActivityFunc$b17$Argument1$value = value;
  }; 

  function ActivityFunc$b17_set_Argument10 (value) {
    this.ActivityFunc$b17$Argument10$value = value;
  }; 

  function ActivityFunc$b17_set_Argument11 (value) {
    this.ActivityFunc$b17$Argument11$value = value;
  }; 

  function ActivityFunc$b17_set_Argument12 (value) {
    this.ActivityFunc$b17$Argument12$value = value;
  }; 

  function ActivityFunc$b17_set_Argument13 (value) {
    this.ActivityFunc$b17$Argument13$value = value;
  }; 

  function ActivityFunc$b17_set_Argument14 (value) {
    this.ActivityFunc$b17$Argument14$value = value;
  }; 

  function ActivityFunc$b17_set_Argument15 (value) {
    this.ActivityFunc$b17$Argument15$value = value;
  }; 

  function ActivityFunc$b17_set_Argument16 (value) {
    this.ActivityFunc$b17$Argument16$value = value;
  }; 

  function ActivityFunc$b17_set_Argument2 (value) {
    this.ActivityFunc$b17$Argument2$value = value;
  }; 

  function ActivityFunc$b17_set_Argument3 (value) {
    this.ActivityFunc$b17$Argument3$value = value;
  }; 

  function ActivityFunc$b17_set_Argument4 (value) {
    this.ActivityFunc$b17$Argument4$value = value;
  }; 

  function ActivityFunc$b17_set_Argument5 (value) {
    this.ActivityFunc$b17$Argument5$value = value;
  }; 

  function ActivityFunc$b17_set_Argument6 (value) {
    this.ActivityFunc$b17$Argument6$value = value;
  }; 

  function ActivityFunc$b17_set_Argument7 (value) {
    this.ActivityFunc$b17$Argument7$value = value;
  }; 

  function ActivityFunc$b17_set_Argument8 (value) {
    this.ActivityFunc$b17$Argument8$value = value;
  }; 

  function ActivityFunc$b17_set_Argument9 (value) {
    this.ActivityFunc$b17$Argument9$value = value;
  }; 

  function ActivityFunc$b17_set_Result (value) {
    this.ActivityFunc$b17$Result$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityDelegate"), 
      Name: "System.Activities.ActivityFunc`17", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "T16", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]), null), 
      ActivityFunc$b17_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]), null), 
      ActivityFunc$b17_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]), null), 
      ActivityFunc$b17_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]), null), 
      ActivityFunc$b17_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]), null), 
      ActivityFunc$b17_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]), null), 
      ActivityFunc$b17_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]), null), 
      ActivityFunc$b17_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument16", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]), null), 
      ActivityFunc$b17_get_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]), null), 
      ActivityFunc$b17_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]), null), 
      ActivityFunc$b17_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]), null), 
      ActivityFunc$b17_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]), null), 
      ActivityFunc$b17_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]), null), 
      ActivityFunc$b17_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]), null), 
      ActivityFunc$b17_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]), null), 
      ActivityFunc$b17_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]), null), 
      ActivityFunc$b17_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]), null), 
      ActivityFunc$b17_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetResultArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateOutArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetRuntimeDelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]))
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")])]), 
      ActivityFunc$b17_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")])]), 
      ActivityFunc$b17_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")])]), 
      ActivityFunc$b17_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")])]), 
      ActivityFunc$b17_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")])]), 
      ActivityFunc$b17_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")])]), 
      ActivityFunc$b17_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")])]), 
      ActivityFunc$b17_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument16", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")])]), 
      ActivityFunc$b17_set_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")])]), 
      ActivityFunc$b17_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")])]), 
      ActivityFunc$b17_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")])]), 
      ActivityFunc$b17_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")])]), 
      ActivityFunc$b17_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")])]), 
      ActivityFunc$b17_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")])]), 
      ActivityFunc$b17_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")])]), 
      ActivityFunc$b17_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")])]), 
      ActivityFunc$b17_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")])]), 
      ActivityFunc$b17_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument1$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument2$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument3$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument4$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument5$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument6$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument7$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument8$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument9$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument10$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument11$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument12$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument13$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument14$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument15$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Argument16$value", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityFunc$b17$Result$value", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Argument16", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.DelegateOutArgument`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityInstance */ 

(function ActivityInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Version)) ();
  };
























  function ActivityInstance_get_CompiledDataContexts () {
    return this.ActivityInstance$CompiledDataContexts$value;
  }; 

  function ActivityInstance_get_CompiledDataContextsForImplementation () {
    return this.ActivityInstance$CompiledDataContextsForImplementation$value;
  }; 










  function ActivityInstance_get_ImplementationVersion () {
    return this.ActivityInstance$ImplementationVersion$value;
  }; 













































  function ActivityInstance_set_CompiledDataContexts (value) {
    this.ActivityInstance$CompiledDataContexts$value = value;
  }; 

  function ActivityInstance_set_CompiledDataContextsForImplementation (value) {
    this.ActivityInstance$CompiledDataContextsForImplementation$value = value;
  }; 




  function ActivityInstance_set_ImplementationVersion (value) {
    this.ActivityInstance$ImplementationVersion$value = value;
  }; 




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityInstance", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Abort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), 
          $asm07.TypeRef("System.Exception"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddActivityReference", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddChild", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "AppendChildren", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+TreeProcessingList"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type])])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "BaseCancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelChildren", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCanceledInstance", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCompletedInstance", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementBusyCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnqueueVariableDefault", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Variable"), 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureExtendedData", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Execute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FillInstanceMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalizeState", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinalizeState", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "FixupInstance", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateInstanceMapCallback", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:false}, "get_CompiledDataContexts", 
      JSIL.MethodSignature.Return($.Object), 
      ActivityInstance_get_CompiledDataContexts
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_CompiledDataContextsForImplementation", 
      JSIL.MethodSignature.Return($.Object), 
      ActivityInstance_get_CompiledDataContextsForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_CompletionBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DataContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowDataContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FaultBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasActivityReferences", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasChildren", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasNotExecuted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasPendingWork", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version")), 
      ActivityInstance_get_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsCancellationRequested", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEnvironmentOwner", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsPerformingDefaultCancelation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsResolvingArguments", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OnlyHasOutstandingBookmarks", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OwnerName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Parent", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PropertyManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBusyCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedChildren", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance+ChildList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExtendedData", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInitializationIncomplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsCancellationRequested", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNoSymbols", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPerformingDefaultCancelation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropertyManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSubstate", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance+Substate"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SubState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance+Substate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_WaitingForTransactionContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRawChildren", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.HybridCollection`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementBusyCount", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature($.Boolean, [
          $.Type, $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature($.Boolean, [
          $.Type, $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalTryPopulateArgumentValueOrScheduleExpression", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Int32, 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Location"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkAsComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkCanceled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkExecuted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveAllBookmarks", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveChild", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveArguments", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Location"), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveNewArgumentsDuringDynamicUpdate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveNewVariableDefaultsDuringDynamicUpdate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$.Int32]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveVariable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveVariables", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:false}, "set_CompiledDataContexts", 
      JSIL.MethodSignature.Action($.Object), 
      ActivityInstance_set_CompiledDataContexts
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CompiledDataContextsForImplementation", 
      JSIL.MethodSignature.Action($.Object), 
      ActivityInstance_set_CompiledDataContextsForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_CompletionBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_DataContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowDataContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FaultBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"))
    );

    $.Method({Static:false, Public:false}, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version")), 
      ActivityInstance_set_ImplementationVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_IsCancellationRequested", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OwnerName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_PropertyManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBusyCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedChildren", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance+ChildList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExtendedData", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInitializationIncomplete", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsCancellationRequested", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNoSymbols", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPerformingDefaultCancelation", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropertyManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSubstate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance+Substate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_WaitingForTransactionContext", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetCanceled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetClosed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetInitializationIncomplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetInitializedSubstate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "get_Activity");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "Load");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReferenceWithEnvironment.UpdateEnvironment", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment"), "UpdateEnvironment");

    $.ExternalMethod({Static:false, Public:false}, "TryCancelParent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryFixupChildren", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateLocationEnvironmentHierarchy", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), 
          $.Type
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateState", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "childList", $asm0B.TypeRef("System.Activities.ActivityInstance+ChildList"));

    $.Field({Static:false, Public:false}, "childCache", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Type]));

    $.Field({Static:false, Public:false}, "completionBookmark", $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"));

    $.Field({Static:false, Public:false}, "instanceMap", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"));

    $.Field({Static:false, Public:false}, "parent", $.Type);

    $.Field({Static:false, Public:false}, "ownerName", $.String);

    $.Field({Static:false, Public:false}, "busyCount", $.Int32);

    $.Field({Static:false, Public:false}, "extendedData", $asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData"));

    $.Field({Static:false, Public:false}, "noSymbols", $.Boolean);

    $.Field({Static:false, Public:false}, "state", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Field({Static:false, Public:false}, "isCancellationRequested", $.Boolean);

    $.Field({Static:false, Public:false}, "performingDefaultCancelation", $.Boolean);

    $.Field({Static:false, Public:false}, "substate", $asm0B.TypeRef("System.Activities.ActivityInstance+Substate"));

    $.Field({Static:false, Public:false}, "id", $.Int64);

    $.Field({Static:false, Public:false}, "initializationIncomplete", $.Boolean);

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Field({Static:false, Public:false}, "propertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Field({Static:false, Public:false}, "ActivityInstance$CompiledDataContexts$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityInstance$CompiledDataContextsForImplementation$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityInstance$ImplementationVersion$value", $asm07.TypeRef("System.Version"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "SubState", $asm0B.TypeRef("System.Activities.ActivityInstance+Substate"));

    $.Property({Static:false, Public:false}, "SerializedEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBusyCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExtendedData", $asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNoSymbols", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsCancellationRequested", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPerformingDefaultCancelation", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSubstate", $asm0B.TypeRef("System.Activities.ActivityInstance+Substate"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedInitializationIncomplete", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Environment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Property({Static:false, Public:false}, "InstanceMap", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"));

    $.Property({Static:false, Public:true }, "IsCompleted", $.Boolean);

    $.Property({Static:false, Public:true }, "State", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Property({Static:false, Public:false}, "IsCancellationRequested", $.Boolean);

    $.Property({Static:false, Public:false}, "IsPerformingDefaultCancelation", $.Boolean);

    $.Property({Static:false, Public:true }, "Id", $.String);

    $.Property({Static:false, Public:false}, "InternalId", $.Int64);

    $.Property({Static:false, Public:false}, "IsEnvironmentOwner", $.Boolean);

    $.Property({Static:false, Public:false}, "IsResolvingArguments", $.Boolean);

    $.Property({Static:false, Public:false}, "HasNotExecuted", $.Boolean);

    $.Property({Static:false, Public:false}, "HasPendingWork", $.Boolean);

    $.Property({Static:false, Public:false}, "OnlyHasOutstandingBookmarks", $.Boolean);

    $.Property({Static:false, Public:false}, "Parent", $.Type);

    $.Property({Static:false, Public:false}, "WaitingForTransactionContext", $.Boolean);

    $.Property({Static:false, Public:false}, "CompletionBookmark", $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "FaultBookmark", $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"));

    $.Property({Static:false, Public:false}, "HasChildren", $.Boolean);

    $.Property({Static:false, Public:false}, "PropertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Property({Static:false, Public:false}, "DataContext", $asm0B.TypeRef("System.Activities.WorkflowDataContext"));

    $.Property({Static:false, Public:false}, "CompiledDataContexts", $.Object);

    $.Property({Static:false, Public:false}, "CompiledDataContextsForImplementation", $.Object);

    $.Property({Static:false, Public:false}, "HasActivityReferences", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedPropertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedChildren", $asm0B.TypeRef("System.Activities.ActivityInstance+ChildList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "OwnerName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* enum System.Activities.ActivityInstance+Substate */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.ActivityInstance+Substate", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Executing: 0, 
    Canceling: 5, 
    PreExecuting: 128, 
    Created: 129, 
    ResolvingArguments: 130, 
    ResolvingVariables: 131, 
    Initialized: 132, 
  }
);

/* class System.Activities.ActivityInstance+ExtendedData */ 

(function ExtendedData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowDataContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Runtime.FaultBookmark)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };









  function ExtendedData_get_DataContext () {
    return this.ExtendedData$DataContext$value;
  }; 

  function ExtendedData_get_FaultBookmark () {
    return this.ExtendedData$FaultBookmark$value;
  }; 



  function ExtendedData_get_WaitingForTransactionContext () {
    return this.ExtendedData$WaitingForTransactionContext$value;
  }; 







  function ExtendedData_set_DataContext (value) {
    this.ExtendedData$DataContext$value = value;
  }; 

  function ExtendedData_set_FaultBookmark (value) {
    this.ExtendedData$FaultBookmark$value = value;
  }; 


  function ExtendedData_set_WaitingForTransactionContext (value) {
    this.ExtendedData$WaitingForTransactionContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityInstance+ExtendedData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddActivityReference", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "FillInstanceMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ActivityReferences", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlockingBookmarkCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Bookmarks", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkList"))
    );

    $.Method({Static:false, Public:true }, "get_DataContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowDataContext")), 
      ExtendedData_get_DataContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FaultBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")), 
      ExtendedData_get_FaultBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_HasActivityReferences", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBlockingBookmarkCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Method({Static:false, Public:true }, "get_WaitingForTransactionContext", 
      JSIL.MethodSignature.Return($.Boolean), 
      ExtendedData_get_WaitingForTransactionContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "PurgeActivityReferences", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:true }, "PurgeBookmarks", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ActivityReferences", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BlockingBookmarkCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Bookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.BookmarkList"))
    );

    $.Method({Static:false, Public:true }, "set_DataContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowDataContext")), 
      ExtendedData_set_DataContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FaultBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")), 
      ExtendedData_set_FaultBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBlockingBookmarkCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Method({Static:false, Public:true }, "set_WaitingForTransactionContext", 
      JSIL.MethodSignature.Action($.Boolean), 
      ExtendedData_set_WaitingForTransactionContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "bookmarks", $asm0B.TypeRef("System.Activities.Runtime.BookmarkList"));

    $.Field({Static:false, Public:false}, "activityReferences", $asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList"));

    $.Field({Static:false, Public:false}, "blockingBookmarkCount", $.Int32);

    $.Field({Static:false, Public:false}, "ExtendedData$WaitingForTransactionContext$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExtendedData$FaultBookmark$value", $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExtendedData$DataContext$value", $asm0B.TypeRef("System.Activities.WorkflowDataContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "BlockingBookmarkCount", $.Int32);

    $.Property({Static:false, Public:true }, "WaitingForTransactionContext", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "FaultBookmark", $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "DataContext", $asm0B.TypeRef("System.Activities.WorkflowDataContext"));

    $.Property({Static:false, Public:false}, "SerializedBlockingBookmarkCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Bookmarks", $asm0B.TypeRef("System.Activities.Runtime.BookmarkList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "ActivityReferences", $asm0B.TypeRef("System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "HasActivityReferences", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.HybridCollection`1 */ 

(function HybridCollection$b1$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.HybridCollection`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AsReadOnly", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:true }, "Compress", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MultipleItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedMultipleItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSingleItem", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SingleItem", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedMultipleItems", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSingleItem", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "multipleItems", $asm07.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "singleItem", $.GenericParameter("T"));

    $.Property({Static:false, Public:true }, "Item", $.GenericParameter("T"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SingleItem", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "MultipleItems", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false}, "SerializedMultipleItems", $asm07.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSingleItem", $.GenericParameter("T"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList */ 

(function ActivityReferenceList$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")]), 
      Name: "System.Activities.ActivityInstance+ExtendedData+ActivityReferenceList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "FillInstanceMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:true }, "PurgeActivityReferences", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ActivityInstance+ChildList */ 

(function ChildList$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), 
      Name: "System.Activities.ActivityInstance+ChildList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AppendChildren", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+TreeProcessingList"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")])])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "FixupList", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Empty", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
    );

    $.Field({Static:true , Public:false}, "emptyChildren", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]));

    $.Property({Static:true , Public:true }, "Empty", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ActivityInstance+AbortEnumerator */ 

(function AbortEnumerator$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityInstance+AbortEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "root", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "current", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "initialized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), 
      /* 1 */ $asm07.TypeRef("System.IDisposable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityInstance+<>c__DisplayClass170_0 */ 

(function $l$gc__DisplayClass170_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityInstance+<>c__DisplayClass170_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lUpdateLocationEnvironmentHierarchy$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.Field({Static:false, Public:true }, "currentInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:true }, "oldParentEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Field({Static:false, Public:true }, "newEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.Activities.ActivityInstanceState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.ActivityInstanceState", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Executing: 0, 
    Closed: 1, 
    Canceled: 2, 
    Faulted: 3, 
  }
);

/* class System.Activities.ActivityInstanceStateExtension */ 

(function ActivityInstanceStateExtension$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.ActivityInstanceStateExtension", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "GetStateName", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.ActivityInstanceState")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.LocationReferenceEnvironment */ 

(function LocationReferenceEnvironment$Members () {
  var $, $thisType;


  function LocationReferenceEnvironment_get_Parent () {
    return this.LocationReferenceEnvironment$Parent$value;
  }; 




  function LocationReferenceEnvironment_set_Parent (value) {
    this.LocationReferenceEnvironment$Parent$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.LocationReferenceEnvironment", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      LocationReferenceEnvironment_get_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Root", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocationReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReference")])
    );

    $.Method({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      LocationReferenceEnvironment_set_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetLocationReference", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])])
    );

    $.Field({Static:false, Public:false}, "LocationReferenceEnvironment$Parent$value", $.Type)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Root", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Parent", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityLocationReferenceEnvironment */ 

(function ActivityLocationReferenceEnvironment$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };






  function ActivityLocationReferenceEnvironment_get_InternalRoot () {
    return this.ActivityLocationReferenceEnvironment$InternalRoot$value;
  }; 




  function ActivityLocationReferenceEnvironment_set_InternalRoot (value) {
    this.ActivityLocationReferenceEnvironment$InternalRoot$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
      Name: "System.Activities.ActivityLocationReferenceEnvironment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Declare", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Declarations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.Method({Static:false, Public:true }, "get_InternalRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityLocationReferenceEnvironment_get_InternalRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Root", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocationReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReference")])
    );

    $.Method({Static:false, Public:true }, "set_InternalRoot", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityLocationReferenceEnvironment_set_InternalRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetLocationReference", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])])
    );

    $.Field({Static:false, Public:false}, "declarations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "unnamedDeclarations", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "ActivityLocationReferenceEnvironment$InternalRoot$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Root", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "InternalRoot", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "Declarations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.ActivityMetadata */ 

(function ActivityMetadata$Members () {
  var $, $thisType;

































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.ActivityMetadata", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDefaultExtensionProvider", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedChild", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationError"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddVariable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddVariable", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Bind", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Argument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasViolations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetArgumentsWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetImportedChildrenWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetImportedDelegatesWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetVariablesWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      new JSIL.MethodSignature(null, null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetArgumentsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImportedChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImportedDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValidationErrorsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetVariablesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "createEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:false}, "CreateEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:true }, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "HasViolations", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityPropertyReference */ 

(function ActivityPropertyReference$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function ActivityPropertyReference_get_SourceProperty () {
    return this.ActivityPropertyReference$SourceProperty$value;
  }; 

  function ActivityPropertyReference_get_TargetProperty () {
    return this.ActivityPropertyReference$TargetProperty$value;
  }; 

  function ActivityPropertyReference_set_SourceProperty (value) {
    this.ActivityPropertyReference$SourceProperty$value = value;
  }; 

  function ActivityPropertyReference_set_TargetProperty (value) {
    this.ActivityPropertyReference$TargetProperty$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityPropertyReference", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_SourceProperty", 
      JSIL.MethodSignature.Return($.String), 
      ActivityPropertyReference_get_SourceProperty
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetProperty", 
      JSIL.MethodSignature.Return($.String), 
      ActivityPropertyReference_get_TargetProperty
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SourceProperty", 
      JSIL.MethodSignature.Action($.String), 
      ActivityPropertyReference_set_SourceProperty
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetProperty", 
      JSIL.MethodSignature.Action($.String), 
      ActivityPropertyReference_set_TargetProperty
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityPropertyReference$SourceProperty$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityPropertyReference$TargetProperty$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "SourceProperty", $.String);

    $.Property({Static:false, Public:true }, "TargetProperty", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityUtilities */ 

(function ActivityUtilities$Members () {
  var $, $thisType;




























































  JSIL.MakeStaticClass("System.Activities.ActivityUtilities", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", ["!!0"])]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"])]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "CacheRootMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ProcessActivityCallback"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateActivityWithResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Argument"), [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateArgumentOfObject", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Argument"), [$asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCompletionBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), [$asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCompletionBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), [$asm0B.TypeRef("System.Activities.DelegateCompletionCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCompletionBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), [$asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!0"]), $asm0B.TypeRef("System.Activities.ActivityInstance")], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFaultBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"), [$asm0B.TypeRef("System.Activities.FaultCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateLocationAccessExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [
          $asm0B.TypeRef("System.Activities.LocationReference"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReferenceArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Argument"), [
          $asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.VariableModifiers")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateVariableReference", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FindArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.RuntimeArgument"), [$.String, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FinishCachingSubtree", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "FinishCachingSubtree", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ProcessActivityCallback")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CollectionInterfaces", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EmptyParameters", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ValuePropertyChangedEventArgs", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventArgs"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDisplayName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetTraceString", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetTraceString", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsActivityDelegateType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsActivityType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsActivityType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsArgumentDictionaryType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsArgumentType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsCompletedState", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstanceState")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsHandle", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsInScope", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsKnownCollectionType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsLocationGenericType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsRuntimeArgumentType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVariableType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVariableType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "NoOpCallback", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessActivity", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])]), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])]), $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), 
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ProcessActivityCallback")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ProcessActivityInstanceTree", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Func`3", [
              $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
              $.Boolean
            ])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessActivityTreeCore", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ProcessActivityCallback"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessArguments", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityLocationReferenceEnvironment")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessChildren", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Activity")]), 
          $asm0B.TypeRef("System.Activities.ActivityCollectionType"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessDelegates", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]), 
          $asm0B.TypeRef("System.Activities.ActivityCollectionType"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessVariables", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), 
          $asm0B.TypeRef("System.Activities.ActivityCollectionType"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityLocationReferenceEnvironment")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "RemoveNulls", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IList"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Activity")]), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Variable"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetupForProcessing", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ShouldShortcut", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions")])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGetArgumentDirectionAndType", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ArgumentDirection")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGetDelegateArgumentDirectionAndType", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.ArgumentDirection")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateOrigin", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:true , Public:false}, "popActivity", $asm0B.TypeRef("System.Activities.ActivityUtilities+Pop"));

    $.Field({Static:true , Public:false}, "activityType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Activity.__Type__;
      });

    $.Field({Static:true , Public:false}, "activityGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Activity$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "activityDelegateType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.ActivityDelegate.__Type__;
      });

    $.Field({Static:true , Public:false}, "constraintType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Validation.Constraint.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Variable.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Variable$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateInArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateInArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateOutArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateOutArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateInArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateInArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateOutArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateOutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "inArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "inArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "inOutArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InOutArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "inOutArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InOutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "outArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.OutArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "outArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.OutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "argumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Argument.__Type__;
      });

    $.Field({Static:true , Public:false}, "argumentReferenceGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.ArgumentReference$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "argumentValueGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.ArgumentValue$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "runtimeArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.RuntimeArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "locationGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Location$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableReferenceGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.VariableReference$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableValueGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.VariableValue$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateArgumentValueGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.DelegateArgumentValue$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "handleType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Handle.__Type__;
      });

    $.Field({Static:true , Public:false}, "iDictionaryGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Collections.Generic.IDictionary$b2.__Type__;
      });

    $.Field({Static:true , Public:false}, "locationReferenceValueType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.LocationReferenceValue$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "environmentLocationValueType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.EnvironmentLocationValue$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "environmentLocationReferenceType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Expressions.EnvironmentLocationReference$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "collectionInterfaces", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:true , Public:false}, "inArgumentOfObjectType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InArgument$b1.Of($asm07.System.Object).__Type__;
      });

    $.Field({Static:true , Public:false}, "outArgumentOfObjectType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.OutArgument$b1.Of($asm07.System.Object).__Type__;
      });

    $.Field({Static:true , Public:false}, "inOutArgumentOfObjectType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InOutArgument$b1.Of($asm07.System.Object).__Type__;
      });

    $.Field({Static:true , Public:false}, "propertyChangedEventArgs", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventArgs"));

    $.Field({Static:true , Public:false}, "emptyParameters", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.Object]));

    $.Property({Static:true , Public:true }, "EmptyParameters", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.Object]));

    $.Property({Static:true , Public:false}, "ValuePropertyChangedEventArgs", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventArgs"));

    $.Property({Static:true , Public:false}, "CollectionInterfaces", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Activities.ActivityUtilities+ProcessActivityCallback */ 

JSIL.MakeDelegate("System.Activities.ActivityUtilities+ProcessActivityCallback", false, [], 
  new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")]));

/* class System.Activities.ActivityUtilities+TreeProcessingList */ 

(function TreeProcessingList$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityUtilities+TreeProcessingList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "TransferTo", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.Field({Static:false, Public:false}, "singleItem", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "multipleItems", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]));

    $.Field({Static:false, Public:false}, "addRequiresNewList", $.Boolean);

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.ActivityInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.ActivityUtilities+Pop */ 

(function Pop$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.ActivityUtilities+Pop", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.ActivityUtilities+ChildActivity */ 

(function ChildActivity$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function ChildActivity_get_Activity () {
    return this.ChildActivity$Activity$value;
  }; 

  function ChildActivity_get_CanBeExecuted () {
    return this.ChildActivity$CanBeExecuted$value;
  }; 


  function ChildActivity_set_Activity (value) {
    this.ChildActivity$Activity$value = value;
  }; 

  function ChildActivity_set_CanBeExecuted (value) {
    this.ChildActivity$CanBeExecuted$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.ActivityUtilities+ChildActivity", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.Method({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ChildActivity_get_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CanBeExecuted", 
      JSIL.MethodSignature.Return($.Boolean), 
      ChildActivity_get_CanBeExecuted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_Empty", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ChildActivity_set_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CanBeExecuted", 
      JSIL.MethodSignature.Action($.Boolean), 
      ChildActivity_set_CanBeExecuted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ChildActivity$Activity$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ChildActivity$CanBeExecuted$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:true }, "Empty", $.Type);

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "CanBeExecuted", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityUtilities+ActivityCallStack */ 

(function ActivityCallStack$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ActivityUtilities+ActivityCallStack", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WillExecute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Pop", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Push", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"))
    );

    $.Field({Static:false, Public:false}, "nonExecutingParentCount", $.Int32);

    $.Field({Static:false, Public:false}, "callStack", $asm0B.TypeRef("System.Activities.Quack`1", [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity")]));

    $.Property({Static:false, Public:true }, "WillExecute", $.Boolean);

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.ActivityUtilities+ArgumentTypeDefinitionsCache */ 

(function ArgumentTypeDefinitionsCache$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.ActivityUtilities+ArgumentTypeDefinitionsCache", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CreateArgumentType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetArgumentType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.Field({Static:true , Public:false}, "inArgumentTypeDefinitions", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "outArgumentTypeDefinitions", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "inOutArgumentTypeDefinitions", $asm07.TypeRef("System.Collections.Hashtable"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityUtilities+LocationAccessExpressionTypeDefinitionsCache */ 

(function LocationAccessExpressionTypeDefinitionsCache$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.ActivityUtilities+LocationAccessExpressionTypeDefinitionsCache", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CreateLocationAccessExpressionType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateNewLocationAccessExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $.Boolean, $asm0B.TypeRef("System.Activities.LocationReference")
        ])
    );

    $.Field({Static:true , Public:false}, "locationReferenceValueTypeDefinitionsLock", $.Object);

    $.Field({Static:true , Public:false}, "locationReferenceValueTypeDefinitions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")]));

    $.Field({Static:true , Public:false}, "environmentLocationReferenceTypeDefinitionsLock", $.Object);

    $.Field({Static:true , Public:false}, "environmentLocationReferenceTypeDefinitions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")]));

    $.Field({Static:true , Public:false}, "environmentLocationValueTypeDefinitionsLock", $.Object);

    $.Field({Static:true , Public:false}, "environmentLocationValueTypeDefinitions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ActivityWithResultWrapper`1 */ 

(function ActivityWithResultWrapper$b1$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("T", "System.Activities.ActivityWithResultWrapper`1")]), 
      Name: "System.Activities.ActivityWithResultWrapper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Argument.IExpressionWrapper.get_InnerExpression", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Argument+IExpressionWrapper"), "get_InnerExpression");

    $.Field({Static:false, Public:false}, "expression", $asm0B.TypeRef("System.Activities.ActivityWithResult"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Argument.IExpressionWrapper.InnerExpression", $asm0B.TypeRef("System.Activities.ActivityWithResult"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Argument+IExpressionWrapper")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Argument */ 

(function Argument$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };













  function Argument_get_ArgumentType () {
    return this.Argument$ArgumentType$value;
  }; 









  function Argument_get_WasDesignTimeNull () {
    return this.Argument$WasDesignTimeNull$value;
  }; 



  function Argument_set_ArgumentType (value) {
    this.Argument$ArgumentType$value = value;
  }; 






  function Argument_set_WasDesignTimeNull (value) {
    this.Argument$WasDesignTimeNull$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Argument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "Bind", 
      new JSIL.MethodSignature(null, [$.Type, $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$.Type, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Declare", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.ActivityContext")], ["T"])
    );

    $.Method({Static:false, Public:true }, "get_ArgumentType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      Argument_get_ArgumentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EvaluationOrder", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Expression", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ExpressionCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInTree", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.Method({Static:false, Public:false}, "get_WasDesignTimeNull", 
      JSIL.MethodSignature.Return($.Boolean), 
      Argument_get_WasDesignTimeNull
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object])
    );

    $.Method({Static:false, Public:false}, "set_ArgumentType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      Argument_set_ArgumentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Direction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EvaluationOrder", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Expression", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ExpressionCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_RuntimeArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.Method({Static:false, Public:false}, "set_WasDesignTimeNull", 
      JSIL.MethodSignature.Action($.Boolean), 
      Argument_set_WasDesignTimeNull
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotInTree", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TryBind", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm0B.TypeRef("System.Activities.RuntimeArgument"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryPopulateValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Validate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "UnspecifiedEvaluationOrder", $.Int32, -1);

    $.Constant({Static:true , Public:true }, "ResultValue", $.String, "Result");

    $.Field({Static:false, Public:false}, "direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Field({Static:false, Public:false}, "runtimeArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:false, Public:false}, "evaluationOrder", $.Int32);

    $.Field({Static:false, Public:false}, "Argument$ArgumentType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Argument$WasDesignTimeNull$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ArgumentType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:true }, "EvaluationOrder", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [-1]; });

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.ActivityWithResult"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ExpressionCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));

    $.Property({Static:false, Public:false}, "RuntimeArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Property({Static:false, Public:false}, "IsInTree", $.Boolean);

    $.Property({Static:false, Public:false}, "WasDesignTimeNull", $.Boolean);

    $.Property({Static:false, Public:false}, "Id", $.Int32);

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.Argument+IExpressionWrapper */ 

JSIL.MakeInterface(
  "System.Activities.Argument+IExpressionWrapper", false, [], function ($) {
    $.Method({}, "get_InnerExpression", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult")));
    $.Property({}, "InnerExpression");
  }, []);

/* enum System.Activities.ArgumentDirection */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.ArgumentDirection", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    In: 0, 
    Out: 1, 
    InOut: 2, 
  }
);

/* class System.Activities.ArgumentDirectionHelper */ 

(function ArgumentDirectionHelper$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.Activities.ArgumentDirectionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "IsDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsIn", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Argument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsIn", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsOut", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Argument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsOut", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ArgumentDirection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ArgumentDirection"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncCodeActivity */ 

(function AsyncCodeActivity$Members () {
  var $, $thisType;





















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.AsyncCodeActivity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteAsynchronousExecution", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalCanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OnExecuteComplete", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IAsyncCodeActivity.FinishExecution", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.IAsyncCodeActivity"), "FinishExecution");

    $.Field({Static:true , Public:false}, "onExecuteComplete", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));

    $.Property({Static:true , Public:false}, "OnExecuteComplete", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:false, Public:false, Virtual:true }, "InternalCanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IAsyncCodeActivity")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncOperationContext */ 

(function AsyncOperationContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Object)) ();
  };






  function AsyncOperationContext_get_HasCalledAsyncCodeActivityCancel () {
    return this.AsyncOperationContext$HasCalledAsyncCodeActivityCancel$value;
  }; 

  function AsyncOperationContext_get_IsAborting () {
    return this.AsyncOperationContext$IsAborting$value;
  }; 


  function AsyncOperationContext_get_UserState () {
    return this.AsyncOperationContext$UserState$value;
  }; 


  function AsyncOperationContext_set_HasCalledAsyncCodeActivityCancel (value) {
    this.AsyncOperationContext$HasCalledAsyncCodeActivityCancel$value = value;
  }; 

  function AsyncOperationContext_set_IsAborting (value) {
    this.AsyncOperationContext$IsAborting$value = value;
  }; 

  function AsyncOperationContext_set_UserState (value) {
    this.AsyncOperationContext$UserState$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.AsyncOperationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteAsyncCodeActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncOperationContext+CompleteData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteOperation", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_HasCalledAsyncCodeActivityCancel", 
      JSIL.MethodSignature.Return($.Boolean), 
      AsyncOperationContext_get_HasCalledAsyncCodeActivityCancel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsAborting", 
      JSIL.MethodSignature.Return($.Boolean), 
      AsyncOperationContext_get_IsAborting
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsStillActive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_UserState", 
      JSIL.MethodSignature.Return($.Object), 
      AsyncOperationContext_get_UserState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "OnResumeAsyncCodeActivityBookmark", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true }, "set_HasCalledAsyncCodeActivityCancel", 
      JSIL.MethodSignature.Action($.Boolean), 
      AsyncOperationContext_set_HasCalledAsyncCodeActivityCancel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsAborting", 
      JSIL.MethodSignature.Action($.Boolean), 
      AsyncOperationContext_set_IsAborting
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UserState", 
      JSIL.MethodSignature.Action($.Object), 
      AsyncOperationContext_set_UserState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ShouldCancel", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "onResumeAsyncCodeActivityBookmark", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "owningActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "hasCanceled", $.Boolean);

    $.Field({Static:false, Public:false}, "hasCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "AsyncOperationContext$UserState$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncOperationContext$HasCalledAsyncCodeActivityCancel$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncOperationContext$IsAborting$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IsStillActive", $.Boolean);

    $.Property({Static:false, Public:true }, "UserState", $.Object);

    $.Property({Static:false, Public:true }, "HasCalledAsyncCodeActivityCancel", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAborting", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncOperationContext+CompleteData */ 

(function CompleteData$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.AsyncOperationContext+CompleteData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncOperationContext"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AsyncContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.AsyncOperationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Executor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCallExecutor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldCallExecutor", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "context", $asm0B.TypeRef("System.Activities.AsyncOperationContext"));

    $.Field({Static:false, Public:false}, "isCancel", $.Boolean);

    $.Property({Static:false, Public:false}, "Executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "AsyncContext", $asm0B.TypeRef("System.Activities.AsyncOperationContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncCodeActivity+CompleteAsyncCodeActivityData */ 

(function CompleteAsyncCodeActivityData$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncOperationContext+CompleteData"), 
      Name: "System.Activities.AsyncCodeActivity+CompleteAsyncCodeActivityData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncOperationContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCallExecutor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "result", $asm07.TypeRef("System.IAsyncResult"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Runtime");
/* class System.Activities.Runtime.WorkItem */ 

(function WorkItem$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };












  function WorkItem_get_ExitNoPersistRequired () {
    return this.WorkItem$ExitNoPersistRequired$value;
  }; 


  function WorkItem_get_IsPooled () {
    return this.WorkItem$IsPooled$value;
  }; 














  function WorkItem_set_ExitNoPersistRequired (value) {
    this.WorkItem$ExitNoPersistRequired$value = value;
  }; 


  function WorkItem_set_IsPooled (value) {
    this.WorkItem$IsPooled$value = value;
  }; 









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.WorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ClearForReuse", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ExceptionPropagated", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushBookmarkScopeKeys", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushTracking", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExceptionToPropagate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.Method({Static:false, Public:true }, "get_ExitNoPersistRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkItem_get_ExitNoPersistRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_IsPooled", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkItem_get_IsPooled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_OriginalExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowAbortException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnAssociateComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Reinitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Release", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ExceptionToPropagate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Method({Static:false, Public:false}, "set_ExitNoPersistRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkItem_set_ExitNoPersistRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_IsEmpty", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_IsPooled", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkItem_set_IsPooled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivityInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsEmpty", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceRuntimeWorkItemCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceRuntimeWorkItemScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceRuntimeWorkItemStarting", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "associateCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "trackingCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "workflowAbortException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "activityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "isEmpty", $.Boolean);

    $.Field({Static:false, Public:false}, "exceptionToPropagate", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "WorkItem$ExitNoPersistRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkItem$IsPooled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "WorkflowAbortException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "ExceptionToPropagate", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true , Virtual:true }, "OriginalExceptionSource", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "ExitNoPersistRequired", $.Boolean);

    $.Property({Static:false, Public:false}, "IsPooled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsEmpty", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.WorkItem+CallbackData */ 

(function CallbackData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Runtime.ActivityExecutor)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Runtime.WorkItem)) ();
  };



  function CallbackData_get_Executor () {
    return this.CallbackData$Executor$value;
  }; 

  function CallbackData_get_WorkItem () {
    return this.CallbackData$WorkItem$value;
  }; 

  function CallbackData_set_Executor (value) {
    this.CallbackData$Executor$value = value;
  }; 

  function CallbackData_set_WorkItem (value) {
    this.CallbackData$WorkItem$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.WorkItem+CallbackData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.WorkItem")])
    );

    $.Method({Static:false, Public:true }, "get_Executor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")), 
      CallbackData_get_Executor
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkItem", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.WorkItem")), 
      CallbackData_get_WorkItem
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Executor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")), 
      CallbackData_set_Executor
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_WorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem")), 
      CallbackData_set_WorkItem
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CallbackData$Executor$value", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CallbackData$WorkItem$value", $asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true }, "WorkItem", $asm0B.TypeRef("System.Activities.Runtime.WorkItem"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutionWorkItem */ 

(function ActivityExecutionWorkItem$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ClearForReuse", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetExceptionToPropagateWithoutAbort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:false, Public:false}, "skipActivityInstanceAbort", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.AsyncCodeActivity+CompleteAsyncCodeActivityData+CompleteAsyncCodeActivityWorkItem */ 

(function CompleteAsyncCodeActivityWorkItem$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.AsyncCodeActivity+CompleteAsyncCodeActivityData+CompleteAsyncCodeActivityWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.AsyncOperationContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm07.TypeRef("System.IAsyncResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "result", $asm07.TypeRef("System.IAsyncResult"));

    $.Field({Static:false, Public:false}, "asyncContext", $asm0B.TypeRef("System.Activities.AsyncOperationContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncCodeActivity`1 */ 

(function AsyncCodeActivity$b1$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [new JSIL.GenericParameter("TResult", "System.Activities.AsyncCodeActivity`1")]), 
      Name: "System.Activities.AsyncCodeActivity`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalCanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadataExceptResult", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IAsyncCodeActivity.FinishExecution", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.IAsyncCodeActivity"), "FinishExecution");

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "InternalCanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IAsyncCodeActivity")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.CodeActivityContext */ 

(function CodeActivityContext$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityContext"), 
      Name: "System.Activities.CodeActivityContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetProperty", 
      new JSIL.MethodSignature("!!0", null, ["THandle"])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Track", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncCodeActivityContext */ 

(function AsyncCodeActivityContext$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivityContext"), 
      Name: "System.Activities.AsyncCodeActivityContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.AsyncOperationContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCancellationRequested", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UserState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkCanceled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UserState", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "asyncContext", $asm0B.TypeRef("System.Activities.AsyncOperationContext"));

    $.Property({Static:false, Public:true }, "IsCancellationRequested", $.Boolean);

    $.Property({Static:false, Public:true }, "UserState", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncInvokeContext */ 

(function AsyncInvokeContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowInvoker)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.AsyncInvokeOperation)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm07.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication)) ();
  };



  function AsyncInvokeContext_get_Invoker () {
    return this.AsyncInvokeContext$Invoker$value;
  }; 

  function AsyncInvokeContext_get_Operation () {
    return this.AsyncInvokeContext$Operation$value;
  }; 

  function AsyncInvokeContext_get_Outputs () {
    return this.AsyncInvokeContext$Outputs$value;
  }; 

  function AsyncInvokeContext_get_UserState () {
    return this.AsyncInvokeContext$UserState$value;
  }; 

  function AsyncInvokeContext_get_WorkflowApplication () {
    return this.AsyncInvokeContext$WorkflowApplication$value;
  }; 

  function AsyncInvokeContext_set_Invoker (value) {
    this.AsyncInvokeContext$Invoker$value = value;
  }; 

  function AsyncInvokeContext_set_Operation (value) {
    this.AsyncInvokeContext$Operation$value = value;
  }; 

  function AsyncInvokeContext_set_Outputs (value) {
    this.AsyncInvokeContext$Outputs$value = value;
  }; 

  function AsyncInvokeContext_set_UserState (value) {
    this.AsyncInvokeContext$UserState$value = value;
  }; 

  function AsyncInvokeContext_set_WorkflowApplication (value) {
    this.AsyncInvokeContext$WorkflowApplication$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.AsyncInvokeContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.WorkflowInvoker")])
    );

    $.Method({Static:false, Public:true }, "get_Invoker", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowInvoker")), 
      AsyncInvokeContext_get_Invoker
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Operation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.AsyncInvokeOperation")), 
      AsyncInvokeContext_get_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Outputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      AsyncInvokeContext_get_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UserState", 
      JSIL.MethodSignature.Return($.Object), 
      AsyncInvokeContext_get_UserState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_WorkflowApplication", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      AsyncInvokeContext_get_WorkflowApplication
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Invoker", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowInvoker")), 
      AsyncInvokeContext_set_Invoker
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Operation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncInvokeOperation")), 
      AsyncInvokeContext_set_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Outputs", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      AsyncInvokeContext_set_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_UserState", 
      JSIL.MethodSignature.Action($.Object), 
      AsyncInvokeContext_set_UserState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_WorkflowApplication", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      AsyncInvokeContext_set_WorkflowApplication
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeContext$UserState$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeContext$Operation$value", $asm0B.TypeRef("System.Activities.AsyncInvokeOperation"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeContext$WorkflowApplication$value", $asm0B.TypeRef("System.Activities.WorkflowApplication"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeContext$Invoker$value", $asm0B.TypeRef("System.Activities.WorkflowInvoker"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeContext$Outputs$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "UserState", $.Object);

    $.Property({Static:false, Public:true }, "Operation", $asm0B.TypeRef("System.Activities.AsyncInvokeOperation"));

    $.Property({Static:false, Public:true }, "WorkflowApplication", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Property({Static:false, Public:true }, "Invoker", $asm0B.TypeRef("System.Activities.WorkflowInvoker"));

    $.Property({Static:false, Public:true }, "Outputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.AsyncInvokeOperation */ 

(function AsyncInvokeOperation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Threading.SynchronizationContext)) ();
  };



  function AsyncInvokeOperation_get_Completed () {
    return this.AsyncInvokeOperation$Completed$value;
  }; 

  function AsyncInvokeOperation_get_SyncContext () {
    return this.AsyncInvokeOperation$SyncContext$value;
  }; 




  function AsyncInvokeOperation_set_Completed (value) {
    this.AsyncInvokeOperation$Completed$value = value;
  }; 

  function AsyncInvokeOperation_set_SyncContext (value) {
    this.AsyncInvokeOperation$SyncContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.AsyncInvokeOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.Method({Static:false, Public:false}, "get_Completed", 
      JSIL.MethodSignature.Return($.Boolean), 
      AsyncInvokeOperation_get_Completed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SyncContext", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.SynchronizationContext")), 
      AsyncInvokeOperation_get_SyncContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "OperationCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "OperationStarted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PostOperationCompleted", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.Method({Static:false, Public:false}, "set_Completed", 
      JSIL.MethodSignature.Action($.Boolean), 
      AsyncInvokeOperation_set_Completed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SyncContext", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.SynchronizationContext")), 
      AsyncInvokeOperation_set_SyncContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "AsyncInvokeOperation$SyncContext$value", $asm07.TypeRef("System.Threading.SynchronizationContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AsyncInvokeOperation$Completed$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SyncContext", $asm07.TypeRef("System.Threading.SynchronizationContext"));

    $.Property({Static:false, Public:false}, "Completed", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Bookmark */ 

(function Bookmark$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.BookmarkScope)) ();
  };














  function Bookmark_get_Scope () {
    return this.Bookmark$Scope$value;
  }; 






  function Bookmark_set_Scope (value) {
    this.Bookmark$Scope$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Bookmark", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($.Type, [$.Int64])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateBookmarkInfo", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo"), [$asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AsyncOperationCompletionBookmark", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Comparer", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ExclusiveHandles", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsNamed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Scope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope")), 
      Bookmark_get_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExclusiveHandlesThatReferenceThis", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExternalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ExclusiveHandles", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"))
    );

    $.Method({Static:false, Public:false}, "set_Scope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope")), 
      Bookmark_set_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExclusiveHandlesThatReferenceThis", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExternalName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:true , Public:false}, "asyncOperationCompletionBookmark", $.Type);

    $.Field({Static:true , Public:false}, "comparer", $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.Type]));

    $.Field({Static:false, Public:false}, "exclusiveHandlesThatReferenceThis", $asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"));

    $.Field({Static:false, Public:false}, "id", $.Int64);

    $.Field({Static:false, Public:false}, "externalName", $.String);

    $.Field({Static:false, Public:false}, "Bookmark$Scope$value", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "AsyncOperationCompletionBookmark", $.Type);

    $.Property({Static:true , Public:false}, "Comparer", $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.Type]));

    $.Property({Static:false, Public:false}, "SerializedExclusiveHandlesThatReferenceThis", $asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExternalName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Scope", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsNamed", $.Boolean);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:false}, "Id", $.Int64);

    $.Property({Static:false, Public:false}, "ExclusiveHandles", $asm0B.TypeRef("System.Activities.Runtime.ExclusiveHandleList"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Bookmark+BookmarkComparer */ 

(function BookmarkComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Bookmark+BookmarkComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm0B.TypeRef("System.Activities.Bookmark")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* delegate System.Activities.BookmarkCallback */ 

JSIL.MakeDelegate("System.Activities.BookmarkCallback", true, [], 
  new JSIL.MethodSignature(null, [
      $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
      $asm07.TypeRef("System.Object")
    ]));

/* enum System.Activities.BookmarkOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.BookmarkOptions", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    MultipleResume: 1, 
    NonBlocking: 2, 
  }
);

/* class System.Activities.BookmarkOptionsHelper */ 

(function BookmarkOptionsHelper$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Activities.BookmarkOptionsHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "IsDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsNonBlocking", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SupportsMultipleResumes", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.BookmarkOptions"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.BookmarkResumptionResult */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.BookmarkResumptionResult", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Success: 0, 
    NotFound: 1, 
    NotReady: 2, 
  }
);

/* class System.Activities.BookmarkScope */ 

(function BookmarkScope$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.BookmarkScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementHandleReferenceCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateScopeInfo", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsDefault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedTemporaryId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TemporaryId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementHandleReferenceCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedTemporaryId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.Field({Static:true , Public:false}, "defaultBookmarkScope", $.Type);

    $.Field({Static:false, Public:false}, "temporaryId", $.Int64);

    $.Field({Static:false, Public:false}, "id", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "handleReferenceCount", $.Int32);

    $.Property({Static:false, Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:false, Public:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false}, "SerializedTemporaryId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedId", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "TemporaryId", $.Int64);

    $.Property({Static:true , Public:true }, "Default", $.Type);

    $.Property({Static:false, Public:false}, "IsDefault", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Handle */ 

(function Handle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function Handle_get_CanBeRemovedWithExecutingChildren () {
    return this.Handle$CanBeRemovedWithExecutingChildren$value;
  }; 











  function Handle_set_CanBeRemovedWithExecutingChildren (value) {
    this.Handle$CanBeRemovedWithExecutingChildren$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Handle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_CanBeRemovedWithExecutingChildren", 
      JSIL.MethodSignature.Return($.Boolean), 
      Handle_get_CanBeRemovedWithExecutingChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ExecutionPropertyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsUninitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPropertyName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnUninitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Reinitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.Method({Static:false, Public:false}, "set_CanBeRemovedWithExecutingChildren", 
      JSIL.MethodSignature.Action($.Boolean), 
      Handle_set_CanBeRemovedWithExecutingChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsUninitialized", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfUninitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Uninitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "isUninitialized", $.Boolean);

    $.Field({Static:false, Public:false}, "Handle$CanBeRemovedWithExecutingChildren$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Owner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "ExecutionPropertyName", $.String);

    $.Property({Static:false, Public:false}, "SerializedOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsUninitialized", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "CanBeRemovedWithExecutingChildren", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsInitialized", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.BookmarkScopeHandle */ 

(function BookmarkScopeHandle$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Handle"), 
      Name: "System.Activities.BookmarkScopeHandle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmarkScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmarkScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnUninitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfContextIsNullOrDisposed", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Field({Static:false, Public:false}, "bookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Field({Static:true , Public:false}, "defaultBookmarkScopeHandle", $.Type);

    $.Property({Static:true , Public:true }, "Default", $.Type);

    $.Property({Static:false, Public:true }, "BookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExclusiveHandle */ 

(function ExclusiveHandle$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Handle"), 
      Name: "System.Activities.ExclusiveHandle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToImportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToUnimportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ImportantBookmarks", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RegisteredBookmarkScopes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScopes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScopesListIsDefault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExecutor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedImportantBookmarks", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwningInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedUnimportantBookmarks", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UnimportantBookmarks", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformDefaultRegistration", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterBookmarkScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.BookmarkScopeHandle")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Reinitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ImportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScopes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScopesListIsDefault", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExecutor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedImportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwningInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedUnimportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_UnimportantBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
    );

    $.Field({Static:false, Public:false}, "readOnlyBookmarkScopeCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]));

    $.Field({Static:false, Public:false}, "bookmarkScopes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]));

    $.Field({Static:false, Public:false}, "owningInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "importantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"));

    $.Field({Static:false, Public:false}, "unimportantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"));

    $.Field({Static:false, Public:false}, "bookmarkScopesListIsDefault", $.Boolean);

    $.Property({Static:false, Public:true }, "RegisteredBookmarkScopes", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScopes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScopeHandle")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwningInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExecutor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedImportantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedUnimportantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScopesListIsDefault", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "ImportantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"));

    $.Property({Static:false, Public:false}, "UnimportantBookmarks", $asm0B.TypeRef("System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList */ 

(function ExclusiveHandleBookmarkList$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ExclusiveHandle+ExclusiveHandleBookmarkList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarks", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.Field({Static:false, Public:false}, "bookmarks", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedBookmarks", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.CodeActivity */ 

(function CodeActivity$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.CodeActivity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.CodeActivityMetadata */ 

(function CodeActivityMetadata$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.CodeActivityMetadata", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDefaultExtensionProvider", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationError"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Bind", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Argument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasViolations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetArgumentsWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      new JSIL.MethodSignature(null, null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetArgumentsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValidationErrorsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "createEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:false}, "CreateEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:true }, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false}, "CurrentActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "HasViolations", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.CodeActivityPublicEnvironmentAccessor */ 

(function CodeActivityPublicEnvironmentAccessor$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.CodeActivityPublicEnvironmentAccessor", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, "AddGeneratedArgument", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $asm0B.TypeRef("System.Activities.ActivityWithResult")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AssertIsCodeActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.CodeActivityMetadata")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateArgument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateLocationArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.LocationReference"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateWithoutArgument", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.CodeActivityMetadata")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityMetadata", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfUninitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetAccessToPublicLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetAccessToPublicLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.ArgumentDirection"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetReferenceToPublicLocation", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReference"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetReferenceToPublicLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])
        ])
    );

    $.Field({Static:false, Public:false}, "metadata", $asm0B.TypeRef("System.Activities.CodeActivityMetadata"));

    $.Field({Static:false, Public:false}, "withoutArgument", $.Boolean);

    $.Property({Static:false, Public:true }, "ActivityMetadata", $asm0B.TypeRef("System.Activities.CodeActivityMetadata"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Activities.CompletionCallback */ 

JSIL.MakeDelegate("System.Activities.CompletionCallback", true, [], 
  new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")]));

/* delegate System.Activities.CompletionCallback`1 */ 

JSIL.MakeDelegate("System.Activities.CompletionCallback`1", true, ["TResult"], 
  new JSIL.MethodSignature(null, [
      $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
      new JSIL.GenericParameter("TResult", "System.Activities.CompletionCallback`1")
    ]));

/* class System.Activities.LocationReference */ 

(function LocationReference$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function LocationReference_get_Id () {
    return this.LocationReference$Id$value;
  }; 








  function LocationReference_set_Id (value) {
    this.LocationReference$Id$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.LocationReference", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.Int32), 
      LocationReference_get_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocationForRead", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocationForWrite", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Method({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.Int32), 
      LocationReference_set_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LocationReference$Id$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "Id", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DelegateArgument */ 

(function DelegateArgument$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };










  function DelegateArgument_get_Owner () {
    return this.DelegateArgument$Owner$value;
  }; 






  function DelegateArgument_set_Owner (value) {
    this.DelegateArgument$Owner$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.DelegateArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Bind", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInTree", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      DelegateArgument_get_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalGetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Direction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      DelegateArgument_set_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotInTree", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Field({Static:false, Public:false}, "runtimeArgument", $asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "DelegateArgument$Owner$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:true }, "Direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "IsInTree", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Activities.DelegateCompletionCallback */ 

JSIL.MakeDelegate("System.Activities.DelegateCompletionCallback", true, [], 
  new JSIL.MethodSignature(null, [
      $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
      $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.String"), $asm07.TypeRef("System.Object")])
    ]));

/* class System.Activities.DelegateInArgument */ 

(function DelegateInArgument$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.DelegateArgument"), 
      Name: "System.Activities.DelegateInArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DelegateInArgument`1 */ 

(function DelegateInArgument$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.DelegateInArgument"), 
      Name: "System.Activities.DelegateInArgument`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DelegateOutArgument */ 

(function DelegateOutArgument$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.DelegateArgument"), 
      Name: "System.Activities.DelegateOutArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DelegateOutArgument`1 */ 

(function DelegateOutArgument$b1$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.DelegateOutArgument"), 
      Name: "System.Activities.DelegateOutArgument`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicActivity */ 

(function DynamicActivity$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity"), 
      Name: "System.Activities.DynamicActivity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Constraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadata", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IDynamicActivity.get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.IDynamicActivity"), "get_Properties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.AttributeCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetAttributes");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetClassName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetClassName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetComponentName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetComponentName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetConverter", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.TypeConverter"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetConverter");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptor"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetDefaultEvent");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetDefaultProperty");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEditor", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEditor");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEvents", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEvents");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEvents", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEvents");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetProperties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetProperties", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetProperties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner", 
      new JSIL.MethodSignature($.Object, [$asm0A.TypeRef("System.ComponentModel.PropertyDescriptor")])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetPropertyOwner");

    $.Field({Static:false, Public:false}, "runtimeImplementation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "typeDescriptor", $asm0B.TypeRef("System.Activities.DynamicActivityTypeDescriptor"));

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Attributes"]; });

    $.Property({Static:false, Public:true }, "Constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Properties"]; });

    $.Property({Static:false, Public:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ImplementationVersionConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.XamlDeferLoadAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.FuncDeferringLoader.__Type__, $asm0B.System.Activities.Activity.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.AmbientAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.IDynamicActivity.Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.IDynamicActivity")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Implementation"]; });

})();

/* class System.Activities.DynamicActivity`1 */ 

(function DynamicActivity$b1$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [new JSIL.GenericParameter("TResult", "System.Activities.DynamicActivity`1")]), 
      Name: "System.Activities.DynamicActivity`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Constraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadataExceptResult", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IDynamicActivity.get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.IDynamicActivity"), "get_Properties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.AttributeCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetAttributes");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetClassName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetClassName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetComponentName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetComponentName");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetConverter", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.TypeConverter"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetConverter");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptor"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetDefaultEvent");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetDefaultProperty");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEditor", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEditor");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEvents", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEvents");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetEvents", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetEvents");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetProperties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetProperties", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetProperties");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner", 
      new JSIL.MethodSignature($.Object, [$asm0A.TypeRef("System.ComponentModel.PropertyDescriptor")])
    )
      .Overrides($asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), "GetPropertyOwner");

    $.Field({Static:false, Public:false}, "runtimeImplementation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "typeDescriptor", $asm0B.TypeRef("System.Activities.DynamicActivityTypeDescriptor"));

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Name"]; });

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Attributes"]; });

    $.Property({Static:false, Public:true }, "Constraints", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Properties"]; });

    $.Property({Static:false, Public:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ImplementationVersionConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.XamlDeferLoadAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.FuncDeferringLoader.__Type__, $asm0B.System.Activities.Activity.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.AmbientAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.IDynamicActivity.Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.IDynamicActivity")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Implementation"]; });

})();

/* class System.Activities.DynamicActivityProperty */ 

(function DynamicActivityProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Object)) ();
  };




  function DynamicActivityProperty_get_Name () {
    return this.DynamicActivityProperty$Name$value;
  }; 

  function DynamicActivityProperty_get_Type () {
    return this.DynamicActivityProperty$Type$value;
  }; 

  function DynamicActivityProperty_get_Value () {
    return this.DynamicActivityProperty$Value$value;
  }; 

  function DynamicActivityProperty_set_Name (value) {
    this.DynamicActivityProperty$Name$value = value;
  }; 

  function DynamicActivityProperty_set_Type (value) {
    this.DynamicActivityProperty$Type$value = value;
  }; 

  function DynamicActivityProperty_set_Value (value) {
    this.DynamicActivityProperty$Value$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicActivityProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]))
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      DynamicActivityProperty_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      DynamicActivityProperty_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      DynamicActivityProperty_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      DynamicActivityProperty_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      DynamicActivityProperty_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object), 
      DynamicActivityProperty_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Field({Static:false, Public:false}, "DynamicActivityProperty$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicActivityProperty$Type$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicActivityProperty$Value$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Attributes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Attribute")]));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Value", $.Object)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicActivityTypeDescriptor */ 

(function DynamicActivityTypeDescriptor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.ObjectModel.KeyedCollection$b2.Of($asm07.System.String, $asm0B.System.Activities.DynamicActivityProperty))) ();
  };



  function DynamicActivityTypeDescriptor_get_Name () {
    return this.DynamicActivityTypeDescriptor$Name$value;
  }; 

  function DynamicActivityTypeDescriptor_get_Properties () {
    return this.DynamicActivityTypeDescriptor$Properties$value;
  }; 













  function DynamicActivityTypeDescriptor_set_Name (value) {
    this.DynamicActivityTypeDescriptor$Name$value = value;
  }; 

  function DynamicActivityTypeDescriptor_set_Properties (value) {
    this.DynamicActivityTypeDescriptor$Properties$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicActivityTypeDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      DynamicActivityTypeDescriptor_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")])), 
      DynamicActivityTypeDescriptor_get_Properties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttributes", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.AttributeCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetClassName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetComponentName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetConverter", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.TypeConverter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDefaultEvent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDefaultProperty", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditor", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEvents", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEvents", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.EventDescriptorCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Attribute")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetPropertyOwner", 
      new JSIL.MethodSignature($.Object, [$asm0A.TypeRef("System.ComponentModel.PropertyDescriptor")])
    );

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      DynamicActivityTypeDescriptor_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Properties", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")])), 
      DynamicActivityTypeDescriptor_set_Properties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "cachedProperties", $asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"));

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "DynamicActivityTypeDescriptor$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicActivityTypeDescriptor$Properties$value", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ICustomTypeDescriptor")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicActivityTypeDescriptor+DynamicActivityPropertyDescriptor */ 

(function DynamicActivityPropertyDescriptor$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"), 
      Name: "System.Activities.DynamicActivityTypeDescriptor+DynamicActivityPropertyDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicActivityProperty"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanResetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "FillAttributes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IList"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.AttributeCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ComponentType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ShouldSerializeValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Field({Static:false, Public:false}, "attributes", $asm0A.TypeRef("System.ComponentModel.AttributeCollection"));

    $.Field({Static:false, Public:false}, "activityProperty", $asm0B.TypeRef("System.Activities.DynamicActivityProperty"));

    $.Field({Static:false, Public:false}, "componentType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "ComponentType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "Attributes", $asm0A.TypeRef("System.ComponentModel.AttributeCollection"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicActivityTypeDescriptor+ActivityPropertyCollection */ 

(function ActivityPropertyCollection$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$asm07.TypeRef("System.String"), $asm0B.TypeRef("System.Activities.DynamicActivityProperty")]), 
      Name: "System.Activities.DynamicActivityTypeDescriptor+ActivityPropertyCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicActivityTypeDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetKeyForItem", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DynamicActivityProperty")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InvalidateCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")])
    );

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.DynamicActivityTypeDescriptor"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExceptionPersistenceExtension */ 

(function ExceptionPersistenceExtension$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ExceptionPersistenceExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PersistExceptions", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PersistExceptions", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "persistExceptions", $.Boolean);

    $.Property({Static:false, Public:true }, "PersistExceptions", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExecutionProperties */ 

(function ExecutionProperties$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ExecutionProperties", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Find", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindAtCurrentScope", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EmptyKeyValues", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetKeyValues", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfActivityExecutionContextDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfChildrenAreExecuting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "emptyKeyValues", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]));

    $.Field({Static:false, Public:false}, "context", $asm0B.TypeRef("System.Activities.ActivityContext"));

    $.Field({Static:false, Public:false}, "scope", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "properties", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Field({Static:false, Public:false}, "currentIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:true , Public:false}, "EmptyKeyValues", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities */ 

(function ExpressionUtilities$Members () {
  var $, $thisType;


























  JSIL.MakeStaticClass("System.Activities.ExpressionUtilities", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "Compile", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"]), [$asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")])], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateIdentifierExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm0B.TypeRef("System.Activities.LocationReference")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateLocationFactory", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.LocationFactory`1", ["!!0"]), [$asm10.TypeRef("System.Linq.Expressions.LambdaExpression")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateParentReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.LocationFactory"), [$asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomMemberResolver", 
      new JSIL.MethodSignature($.Boolean, [$asm10.TypeRef("System.Linq.Expressions.Expression"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.ExternalMethod({Static:true , Public:false}, "Evaluate", 
      new JSIL.MethodSignature("!!0", [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $asm0B.TypeRef("System.Activities.ActivityContext")
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PropertyDescriptorGetValue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMemberValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Reflection.MemberInfo"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.LambdaExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RewriteNonCompiledExpressionTree", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm10.TypeRef("System.Linq.Expressions.LambdaExpression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetInlinedArgumentReference", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm10.TypeRef("System.Linq.Expressions.Expression"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetInlinedLocationReference", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm10.TypeRef("System.Linq.Expressions.Expression"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetInlinedReference", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), $asm0B.TypeRef("System.Activities.LocationReference"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteActivityContextGetLocationCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteActivityContextGetValueCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteArgumentGetCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteArgumentGetLocationCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryRewriteLambdaExpression", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteLambdaExpressionBindingsCollection", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.MemberBinding")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.MemberBinding")])]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteLambdaExpressionCollection", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")])]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteLambdaExpressionInitializersCollection", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.ElementInit")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm10.TypeRef("System.Linq.Expressions.ElementInit")])]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteLocationReferenceSubclassGetCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteLocationReferenceSubclassGetLocationCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $asm07.TypeRef("System.Type"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteMemberBinding", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MemberBinding"), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.MemberBinding")]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryRewriteMethodCall", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), 
          $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"), $.Boolean
        ])
    );

    $.Field({Static:true , Public:true }, "RuntimeContextParameter", $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Field({Static:true , Public:false}, "linqAssembly", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Field({Static:true , Public:false}, "createLocationFactoryGenericMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "propertyDescriptorGetValue", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "inArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "outArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.OutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "inOutArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.InOutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Variable$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateInArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateInArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateOutArgumentGenericType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateOutArgument$b1.__Type__;
      });

    $.Field({Static:true , Public:false}, "activityContextType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.ActivityContext.__Type__;
      });

    $.Field({Static:true , Public:false}, "locationReferenceType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.LocationReference.__Type__;
      });

    $.Field({Static:true , Public:false}, "runtimeArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.RuntimeArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "argumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Argument.__Type__;
      });

    $.Field({Static:true , Public:false}, "variableType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Variable.__Type__;
      });

    $.Field({Static:true , Public:false}, "delegateArgumentType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateArgument.__Type__;
      });

    $.Field({Static:true , Public:false}, "activityContextGetValueGenericMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "activityContextGetLocationGenericMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "locationReferenceGetLocationMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "argumentGetLocationMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "variableGetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "delegateArgumentGetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Property({Static:true , Public:false}, "PropertyDescriptorGetValue", $asm07.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.LocationFactory */ 

(function LocationFactory$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.LocationFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocationCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.LocationFactory`1 */ 

(function LocationFactory$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory"), 
      Name: "System.Activities.LocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocationCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+ArrayLocationFactory`1 */ 

(function ArrayLocationFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+ArrayLocationFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+ArrayLocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "arrayFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")])]));

    $.Field({Static:false, Public:false}, "indexFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Location */ 

(function Location$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Location", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BufferGetsOnCollapse", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanBeMapped", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedTemporaryResolutionData", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location+TemporaryResolutionData"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TemporaryResolutionEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedTemporaryResolutionData", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location+TemporaryResolutionData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ValueCore", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetTemporaryResolutionData", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $.Boolean])
    );

    $.Field({Static:false, Public:false}, "temporaryResolutionData", $asm0B.TypeRef("System.Activities.Location+TemporaryResolutionData"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:false}, "SerializedTemporaryResolutionData", $asm0B.TypeRef("System.Activities.Location+TemporaryResolutionData"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanBeMapped", $.Boolean);

    $.Property({Static:false, Public:false}, "TemporaryResolutionEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Property({Static:false, Public:false}, "BufferGetsOnCollapse", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "ValueCore", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"))
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["{Value}"]; });

})();

/* struct System.Activities.Location+TemporaryResolutionData */ 

(function TemporaryResolutionData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Runtime.LocationEnvironment)) ();
  };


  function TemporaryResolutionData_get_BufferGetsOnCollapse () {
    return this.TemporaryResolutionData$BufferGetsOnCollapse$value;
  }; 

  function TemporaryResolutionData_get_TemporaryResolutionEnvironment () {
    return this.TemporaryResolutionData$TemporaryResolutionEnvironment$value;
  }; 

  function TemporaryResolutionData_set_BufferGetsOnCollapse (value) {
    this.TemporaryResolutionData$BufferGetsOnCollapse$value = value;
  }; 

  function TemporaryResolutionData_set_TemporaryResolutionEnvironment (value) {
    this.TemporaryResolutionData$TemporaryResolutionEnvironment$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.Location+TemporaryResolutionData", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_BufferGetsOnCollapse", 
      JSIL.MethodSignature.Return($.Boolean), 
      TemporaryResolutionData_get_BufferGetsOnCollapse
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TemporaryResolutionEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")), 
      TemporaryResolutionData_get_TemporaryResolutionEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BufferGetsOnCollapse", 
      JSIL.MethodSignature.Action($.Boolean), 
      TemporaryResolutionData_set_BufferGetsOnCollapse
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TemporaryResolutionEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")), 
      TemporaryResolutionData_set_TemporaryResolutionEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TemporaryResolutionData$TemporaryResolutionEnvironment$value", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TemporaryResolutionData$BufferGetsOnCollapse$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "TemporaryResolutionEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "BufferGetsOnCollapse", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Location+ReferenceLocation */ 

(function ReferenceLocation$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location"), 
      Name: "System.Activities.Location+ReferenceLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBufferedValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBufferGets", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInnerLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBufferedValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBufferGets", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInnerLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ValueCore", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "innerLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Field({Static:false, Public:false}, "bufferGets", $.Boolean);

    $.Field({Static:false, Public:false}, "bufferedValue", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "LocationType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "ValueCore", $.Object);

    $.Property({Static:false, Public:false}, "SerializedInnerLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBufferGets", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBufferedValue", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Location`1 */ 

(function Location$b1$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location"), 
      Name: "System.Activities.Location`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedValue", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TypedValue", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedValue", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_TypedValue", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ValueCore", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "value", $.GenericParameter("T"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "TypedValue", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "ValueCore", $.Object);

    $.Property({Static:false, Public:false}, "SerializedValue", $.GenericParameter("T"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Location`1+ReferenceLocation */ 

(function ReferenceLocation$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.Location`1+ReferenceLocation")]), 
      Name: "System.Activities.Location`1+ReferenceLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBufferGets", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInnerLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBufferGets", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInnerLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "innerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "bufferGets", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedInnerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBufferGets", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExpressionUtilities+ArrayLocationFactory`1+ArrayLocation */ 

(function ArrayLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+ArrayLocationFactory`1+ArrayLocation")]), 
      Name: "System.Activities.ExpressionUtilities+ArrayLocationFactory`1+ArrayLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArray", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndex", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "array", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "index", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedArray", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndex", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExpressionUtilities+FieldLocationFactory`1 */ 

(function FieldLocationFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+FieldLocationFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+FieldLocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "ownerFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object]));

    $.Field({Static:false, Public:false}, "parentFactory", $asm0B.TypeRef("System.Activities.LocationFactory"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+FieldLocationFactory`1+FieldLocation */ 

(function FieldLocation$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+FieldLocationFactory`1+FieldLocation")]), 
      Name: "System.Activities.ExpressionUtilities+FieldLocationFactory`1+FieldLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.FieldInfo"), $.Object, 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFieldInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedParent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFieldInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedParent", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "owner", $.Object);

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedFieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwner", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedParent", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExpressionUtilities+ArgumentFactory`1 */ 

(function ArgumentFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+ArgumentFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+ArgumentFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "argumentFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+LocationReferenceFactory`1 */ 

(function LocationReferenceFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+LocationReferenceFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+LocationReferenceFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "locationReferenceFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $asm0B.TypeRef("System.Activities.LocationReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+IndexerLocationFactory`1 */ 

(function IndexerLocationFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+IndexerLocationFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+IndexerLocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "getItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "indexerName", $.String);

    $.Field({Static:false, Public:false}, "setItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setItemArgumentFunctions", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object])]));

    $.Field({Static:false, Public:false}, "targetObjectFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+IndexerLocationFactory`1+IndexerLocation */ 

(function IndexerLocation$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+IndexerLocationFactory`1+IndexerLocation")]), 
      Name: "System.Activities.ExpressionUtilities+IndexerLocationFactory`1+IndexerLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm07.TypeRef("System.Reflection.MethodInfo"), $.Object, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedGetItemMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndexerName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSetItemArguments", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSetItemMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedTargetObject", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedGetItemMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndexerName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSetItemArguments", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSetItemMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedTargetObject", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "indexerName", $.String);

    $.Field({Static:false, Public:false}, "getItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "targetObject", $.Object);

    $.Field({Static:false, Public:false}, "setItemArguments", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedIndexerName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedGetItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSetItemMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedTargetObject", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSetItemArguments", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1 */ 

(function MultidimensionalArrayLocationFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "arrayFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $asm07.TypeRef("System.Array")]));

    $.Field({Static:false, Public:false}, "indexFunctions", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Int32])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1+MultidimensionalArrayLocation */ 

(function MultidimensionalArrayLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1+MultidimensionalArrayLocation")]), 
      Name: "System.Activities.ExpressionUtilities+MultidimensionalArrayLocationFactory`1+MultidimensionalArrayLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $jsilcore.TypeRef("System.Array", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArray", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Array"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndicess", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArray", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Array"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndicess", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "array", $asm07.TypeRef("System.Array"));

    $.Field({Static:false, Public:false}, "indices", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedArray", $asm07.TypeRef("System.Array"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndicess", $jsilcore.TypeRef("System.Array", [$.Int32]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.ExpressionUtilities+PropertyLocationFactory`1 */ 

(function PropertyLocationFactory$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationFactory`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+PropertyLocationFactory`1")]), 
      Name: "System.Activities.ExpressionUtilities+PropertyLocationFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.LambdaExpression"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "ownerFunction", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object]));

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "parentFactory", $asm0B.TypeRef("System.Activities.LocationFactory"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.ExpressionUtilities+PropertyLocationFactory`1+PropertyLocation */ 

(function PropertyLocation$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.ExpressionUtilities+PropertyLocationFactory`1+PropertyLocation")]), 
      Name: "System.Activities.ExpressionUtilities+PropertyLocationFactory`1+PropertyLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.PropertyInfo"), $.Object, 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedParent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropertyInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedParent", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropertyInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "owner", $.Object);

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedOwner", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPropertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedParent", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* delegate System.Activities.FaultCallback */ 

JSIL.MakeDelegate("System.Activities.FaultCallback", true, [], 
  new JSIL.MethodSignature(null, [
      $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
      $asm0B.TypeRef("System.Activities.ActivityInstance")
    ]));

/* class System.Activities.HandleInitializationContext */ 

(function HandleInitializationContext$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.HandleInitializationContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateAndInitializeHandle", 
      new JSIL.MethodSignature("!!0", null, ["THandle"])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAndInitializeHandle", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAndRegisterBookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Executor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OwningActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExtension", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "UninitializeHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Handle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UnregisterBookmarkScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "scope", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "isDiposed", $.Boolean);

    $.Property({Static:false, Public:false}, "OwningActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "Executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.HybridDictionary`2 */ 

(function HybridDictionary$b2$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.HybridDictionary`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TKey", "TValue"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TKey"), $.GenericParameter("TValue")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("TKey")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.GenericParameter("TValue"), [$.GenericParameter("TKey")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("TKey")]), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Values", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("TValue")]), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), null)
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.HybridDictionary$b2_$lGetEnumerator$gd__23.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("TKey")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TKey"), $.GenericParameter("TValue")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("TKey"), $jsilcore.TypeRef("JSIL.Reference", [$.GenericParameter("TValue")])])
    );

    $.Field({Static:false, Public:false}, "singleItemKey", $.GenericParameter("TKey"));

    $.Field({Static:false, Public:false}, "singleItemValue", $.GenericParameter("TValue"));

    $.Field({Static:false, Public:false}, "dictionary", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Values", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("TValue")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("TKey")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.GenericParameter("TValue"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), 
      /* 3 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.HybridDictionary`2+<GetEnumerator>d__23 */ 

(function $lGetEnumerator$gd__23$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.HybridDictionary`2+<GetEnumerator>d__23", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TKey", "TValue"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lTKey$cmTValue$g$g.get_Current", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.HybridDictionary`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lTKey$cmTValue$g$g.Current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), 
      /* 1 */ $asm07.TypeRef("System.IDisposable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* interface System.Activities.IAsyncCodeActivity */ 

JSIL.MakeInterface(
  "System.Activities.IAsyncCodeActivity", false, [], function ($) {
    $.Method({}, "FinishExecution", new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")]));
  }, []);

/* interface System.Activities.IDynamicActivity */ 

JSIL.MakeInterface(
  "System.Activities.IDynamicActivity", false, [], function ($) {
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "set_Name", JSIL.MethodSignature.Action($.String));
    $.Method({}, "get_Properties", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$.String, $asm0B.TypeRef("System.Activities.DynamicActivityProperty")])));
    $.Property({}, "Name");
    $.Property({}, "Properties");
  }, []);

/* interface System.Activities.IExecutionProperty */ 

JSIL.MakeInterface(
  "System.Activities.IExecutionProperty", true, [], function ($) {
    $.Method({}, "SetupWorkflowThread", JSIL.MethodSignature.Void);
    $.Method({}, "CleanupWorkflowThread", JSIL.MethodSignature.Void);
  }, []);

/* interface System.Activities.IExpressionContainer */ 

JSIL.MakeInterface(
  "System.Activities.IExpressionContainer", false, [], function ($) {
  }, []);

/* enum System.Activities.PersistableIdleAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.PersistableIdleAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Unload: 1, 
    Persist: 2, 
  }
);

/* class System.Activities.IdSpace */ 

(function IdSpace$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };









  function IdSpace_get_Parent () {
    return this.IdSpace$Parent$value;
  }; 

  function IdSpace_get_ParentId () {
    return this.IdSpace$ParentId$value;
  }; 

  function IdSpace_set_Parent (value) {
    this.IdSpace$Parent$value = value;
  }; 

  function IdSpace_set_ParentId (value) {
    this.IdSpace$ParentId$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.IdSpace", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddMember", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MemberCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      IdSpace_get_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ParentId", 
      JSIL.MethodSignature.Return($.Int32), 
      IdSpace_get_ParentId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      IdSpace_set_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ParentId", 
      JSIL.MethodSignature.Action($.Int32), 
      IdSpace_set_ParentId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "lastId", $.Int32);

    $.Field({Static:false, Public:false}, "members", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "IdSpace$Parent$value", $.Type)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IdSpace$ParentId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Parent", $.Type);

    $.Property({Static:false, Public:true }, "ParentId", $.Int32);

    $.Property({Static:false, Public:true }, "MemberCount", $.Int32);

    $.Property({Static:false, Public:true }, "Owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* interface System.Activities.IInstanceNotificationListener */ 

JSIL.MakeInterface(
  "System.Activities.IInstanceNotificationListener", false, [], function ($) {
    $.Method({}, "AbortInstance", new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean]));
    $.Method({}, "OnIdle", JSIL.MethodSignature.Void);
    $.Method({}, "OnUnhandledException", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity")]));
  }, []);

/* class System.Activities.InOutArgument */ 

(function InOutArgument$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Argument"), 
      Name: "System.Activities.InOutArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$.Type, $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.InOutArgument`1 */ 

(function InOutArgument$b1$Members () {
  var $, $thisType;











  function InOutArgument$b1_get_Expression$00 () {
    return this.InOutArgument$b1$Expression$value;
  }; 






  function InOutArgument$b1_set_Expression$01 (value) {
    this.InOutArgument$b1$Expression$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.InOutArgument"), 
      Name: "System.Activities.InOutArgument`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Declare", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Expression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]), null), 
      InOutArgument$b1_get_Expression$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ExpressionCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.Method({Static:false, Public:true }, "set_Expression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])]), 
      InOutArgument$b1_set_Expression$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ExpressionCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryPopulateValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.Field({Static:false, Public:false}, "InOutArgument$b1$Expression$value", $asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ExpressionCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Expression"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.InOutArgumentConverter.__Type__]; })
    .Attribute($asm0A.TypeRef("System.Windows.Markup.ValueSerializerAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ArgumentValueSerializer.__Type__]; });

})();

/* class System.Activities.InArgument */ 

(function InArgument$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Argument"), 
      Name: "System.Activities.InArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$.Type, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.InOutArgument"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.InArgument`1 */ 

(function InArgument$b1$Members () {
  var $, $thisType;














  function InArgument$b1_get_Expression$00 () {
    return this.InArgument$b1$Expression$value;
  }; 







  function InArgument$b1_set_Expression$01 (value) {
    this.InArgument$b1$Expression$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.InArgument"), 
      Name: "System.Activities.InArgument`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Declare", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromDelegateArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.DelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromValue", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Expression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]), null), 
      InArgument$b1_get_Expression$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ExpressionCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.DelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.Method({Static:false, Public:true }, "set_Expression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])]), 
      InArgument$b1_set_Expression$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ExpressionCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryPopulateValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.Field({Static:false, Public:false}, "InArgument$b1$Expression$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ExpressionCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Expression"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.InArgumentConverter.__Type__]; })
    .Attribute($asm0A.TypeRef("System.Windows.Markup.ValueSerializerAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ArgumentValueSerializer.__Type__]; });

})();

/* class System.Activities.InlinedLocationReference */ 

(function InlinedLocationReference$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.InlinedLocationReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocationCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocationForRead", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocationForWrite", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceWrapper.get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceWrapper"), "get_LocationReference");

    $.ExternalMethod({Static:false, Public:false}, "ValidateAccessor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityContext"))
    );

    $.Field({Static:false, Public:false}, "innerReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.Field({Static:false, Public:false}, "validAccessor", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "allowReads", $.Boolean);

    $.Field({Static:false, Public:false}, "allowWrites", $.Boolean);

    $.Field({Static:false, Public:false}, "allowGetLocation", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceWrapper.LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceWrapper")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.InvalidWorkflowException */ 

(function InvalidWorkflowException$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.InvalidWorkflowException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.InvokeCompletedEventArgs */ 

(function InvokeCompletedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm07.System.Object))) ();
  };



  function InvokeCompletedEventArgs_get_Outputs () {
    return this.InvokeCompletedEventArgs$Outputs$value;
  }; 

  function InvokeCompletedEventArgs_set_Outputs (value) {
    this.InvokeCompletedEventArgs$Outputs$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Activities.InvokeCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.AsyncInvokeContext")
        ])
    );

    $.Method({Static:false, Public:true }, "get_Outputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      InvokeCompletedEventArgs_get_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Outputs", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      InvokeCompletedEventArgs_set_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeCompletedEventArgs$Outputs$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Outputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.IPropertyRegistrationCallback */ 

JSIL.MakeInterface(
  "System.Activities.IPropertyRegistrationCallback", true, [], function ($) {
    $.Method({}, "Register", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext")));
    $.Method({}, "Unregister", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext")));
  }, []);

/* class System.Activities.NativeActivity`1 */ 

(function NativeActivity$b1$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [new JSIL.GenericParameter("TResult", "System.Activities.NativeActivity`1")]), 
      Name: "System.Activities.NativeActivity`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_Implementation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ImplementationVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_InternalCanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalCancel", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCacheMetadataExceptResult", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInternalCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Implementation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ImplementationVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.DynamicUpdate.IInstanceUpdatable.InternalUpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.DynamicUpdate.IInstanceUpdatable"), "InternalUpdateInstance");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "ImplementationVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false, Virtual:true }, "Implementation", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "InternalCanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.DynamicUpdate.IInstanceUpdatable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NativeActivityAbortContext */ 

(function NativeActivityAbortContext$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityContext"), 
      Name: "System.Activities.NativeActivityAbortContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "Reason", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NativeActivityContext */ 

(function NativeActivityContext$Members () {
  var $, $thisType;
































































































  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.ActivityContext"), 
      Name: "System.Activities.NativeActivityContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AbortChildInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AbortChildInstance", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelChildren", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteTransaction", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$.String, $asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkScope")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateBookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateBookmarkScope", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateBookmarkScope", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.BookmarkScopeHandle")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterNoPersist", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NoPersistHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitNoPersist", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NoPersistHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FindDeclaringActivityInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultBookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasRuntimeTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCancellationRequested", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInNoPersistScope", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ExecutionProperties"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RequiresTransactionContextWaiterExists", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExecutionProperties", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ExecutionProperties"), [$asm0B.TypeRef("System.Activities.Handle")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.Variable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeBookmarkScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), 
          $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalScheduleDelegate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkCanceled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterMainRootCompleteCallback", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAllBookmarks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$.String, $asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RequestPersist", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkCallback"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RequestTransactionContext", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), 
          $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "RethrowException", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction"), $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`1", ["!!0"]), "!!0", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`2", ["!!0", "!!1"]), "!!0", 
          "!!1", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`3", [
              "!!0", "!!1", 
              "!!2"
            ]), "!!0", 
          "!!1", "!!2", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`4", [
              "!!0", "!!1", 
              "!!2", "!!3"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3", "T4"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`5", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`6", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`7", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`8", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`9", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`10", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`11", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`12", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`13", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`14", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`15", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityAction`16", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          "!!15", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "T16"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.CompletionCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.FaultCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleDelegate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.DelegateCompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`1", ["!!0"]), $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`2", ["!!0", "!!1"]), "!!0", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!1"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`3", [
              "!!0", "!!1", 
              "!!2"
            ]), "!!0", 
          "!!1", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!2"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`4", [
              "!!0", "!!1", 
              "!!2", "!!3"
            ]), "!!0", 
          "!!1", "!!2", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!3"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`5", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!4"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`6", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!5"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`7", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!6"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`8", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!7"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`9", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!8"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`10", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!9"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`11", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!10"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`12", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!11"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`13", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!12"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`14", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!13"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`15", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!14"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`16", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!15"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityFunc`17", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15", 
              "!!16"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          "!!15", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!16"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "T16", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleSecondaryRoot", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfCanInduceIdleNotSet", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Track", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UnregisterBookmarkScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.Field({Static:false, Public:false}, "bookmarkManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true }, "DefaultBookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Property({Static:false, Public:true }, "IsCancellationRequested", $.Boolean);

    $.Property({Static:false, Public:true }, "Properties", $asm0B.TypeRef("System.Activities.ExecutionProperties"));

    $.Property({Static:false, Public:false}, "HasRuntimeTransaction", $.Boolean);

    $.Property({Static:false, Public:false}, "RequiresTransactionContextWaiterExists", $.Boolean);

    $.Property({Static:false, Public:false}, "IsInNoPersistScope", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NativeActivityContext+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.NativeActivityContext+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lScheduleDelegate$gb__93_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__93_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct System.Activities.NativeActivityMetadata */ 

(function NativeActivityMetadata$Members () {
  var $, $thisType;













































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.NativeActivityMetadata", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddChild", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDefaultExtensionProvider", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImplementationChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImplementationDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImplementationVariable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedChild", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedDelegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddImportedDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "AddValidationError", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Validation.ValidationError"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddVariable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddVariable", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Bind", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Argument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasViolations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetArgumentsWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetChildrenWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDelegatesWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetVariablesWithReflection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      new JSIL.MethodSignature(null, null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireExtension", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetArgumentsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImplementationChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImplementationDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImplementationVariablesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImportedChildrenCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetImportedDelegatesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValidationErrorsCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetVariablesCollection", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "createEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:false}, "CreateEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:true }, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "HasViolations", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NativeActivityFaultContext */ 

(function NativeActivityFaultContext$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
      Name: "System.Activities.NativeActivityFaultContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateFaultContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsFaultHandled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "HandleFault", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "isFaultHandled", $.Boolean);

    $.Field({Static:false, Public:false}, "exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "source", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Property({Static:false, Public:false}, "IsFaultHandled", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NativeActivityTransactionContext */ 

(function NativeActivityTransactionContext$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivityContext"), 
      Name: "System.Activities.NativeActivityTransactionContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetRuntimeTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "transactionHandle", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.NoPersistHandle */ 

(function NoPersistHandle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Handle"), 
      Name: "System.Activities.NoPersistHandle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Enter", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.NoPersistProperty */ 

(function NoPersistProperty$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.NoPersistProperty", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Enter", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Register", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Unregister", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext"))
    );

    $.Constant({Static:true , Public:true }, "Name", $.String, "System.Activities.NoPersistProperty");

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "refCount", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IPropertyRegistrationCallback")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.OutArgument */ 

(function OutArgument$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Argument"), 
      Name: "System.Activities.OutArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$.Type, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReference", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.InOutArgument"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.OutArgument`1 */ 

(function OutArgument$b1$Members () {
  var $, $thisType;












  function OutArgument$b1_get_Expression$00 () {
    return this.OutArgument$b1$Expression$value;
  }; 







  function OutArgument$b1_set_Expression$01 (value) {
    this.OutArgument$b1$Expression$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.OutArgument"), 
      Name: "System.Activities.OutArgument`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateDefaultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Declare", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromDelegateArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.DelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Expression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]), null), 
      OutArgument$b1_get_Expression$00
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ExpressionCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.DelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.Method({Static:false, Public:true }, "set_Expression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])])]), 
      OutArgument$b1_set_Expression$01
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ExpressionCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "TryPopulateValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.Field({Static:false, Public:false}, "OutArgument$b1$Expression$value", $asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ExpressionCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Expression"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.OutArgumentConverter.__Type__]; })
    .Attribute($asm0A.TypeRef("System.Windows.Markup.ValueSerializerAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.ArgumentValueSerializer.__Type__]; });

})();

/* class System.Activities.OverloadGroupAttribute */ 

(function OverloadGroupAttribute$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Activities.OverloadGroupAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GroupName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_TypeId", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_GroupName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "groupName", $.String);

    $.Property({Static:false, Public:true }, "GroupName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "TypeId", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Property]; });

})();

/* class System.Activities.ProcessActivityTreeOptions */ 

(function ProcessActivityTreeOptions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Threading.CancellationToken)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };





  function ProcessActivityTreeOptions_get_CancellationToken () {
    return this.ProcessActivityTreeOptions$CancellationToken$value;
  }; 

  function ProcessActivityTreeOptions_get_CreateEmptyBindings () {
    return this.ProcessActivityTreeOptions$CreateEmptyBindings$value;
  }; 







  function ProcessActivityTreeOptions_get_OnlyCallCallbackForDeclarations () {
    return this.ProcessActivityTreeOptions$OnlyCallCallbackForDeclarations$value;
  }; 

  function ProcessActivityTreeOptions_get_OnlyVisitSingleLevel () {
    return this.ProcessActivityTreeOptions$OnlyVisitSingleLevel$value;
  }; 



  function ProcessActivityTreeOptions_get_SkipConstraints () {
    return this.ProcessActivityTreeOptions$SkipConstraints$value;
  }; 

  function ProcessActivityTreeOptions_get_SkipIfCached () {
    return this.ProcessActivityTreeOptions$SkipIfCached$value;
  }; 

  function ProcessActivityTreeOptions_get_SkipPrivateChildren () {
    return this.ProcessActivityTreeOptions$SkipPrivateChildren$value;
  }; 

  function ProcessActivityTreeOptions_get_SkipRootConfigurationValidation () {
    return this.ProcessActivityTreeOptions$SkipRootConfigurationValidation$value;
  }; 



  function ProcessActivityTreeOptions_get_StoreTempViolations () {
    return this.ProcessActivityTreeOptions$StoreTempViolations$value;
  }; 





  function ProcessActivityTreeOptions_set_CancellationToken (value) {
    this.ProcessActivityTreeOptions$CancellationToken$value = value.MemberwiseClone();
  }; 

  function ProcessActivityTreeOptions_set_CreateEmptyBindings (value) {
    this.ProcessActivityTreeOptions$CreateEmptyBindings$value = value;
  }; 

  function ProcessActivityTreeOptions_set_OnlyCallCallbackForDeclarations (value) {
    this.ProcessActivityTreeOptions$OnlyCallCallbackForDeclarations$value = value;
  }; 

  function ProcessActivityTreeOptions_set_OnlyVisitSingleLevel (value) {
    this.ProcessActivityTreeOptions$OnlyVisitSingleLevel$value = value;
  }; 

  function ProcessActivityTreeOptions_set_SkipConstraints (value) {
    this.ProcessActivityTreeOptions$SkipConstraints$value = value;
  }; 

  function ProcessActivityTreeOptions_set_SkipIfCached (value) {
    this.ProcessActivityTreeOptions$SkipIfCached$value = value;
  }; 

  function ProcessActivityTreeOptions_set_SkipPrivateChildren (value) {
    this.ProcessActivityTreeOptions$SkipPrivateChildren$value = value;
  }; 

  function ProcessActivityTreeOptions_set_SkipRootConfigurationValidation (value) {
    this.ProcessActivityTreeOptions$SkipRootConfigurationValidation$value = value;
  }; 

  function ProcessActivityTreeOptions_set_StoreTempViolations (value) {
    this.ProcessActivityTreeOptions$StoreTempViolations$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.ProcessActivityTreeOptions", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AttachCancellationToken", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm07.TypeRef("System.Threading.CancellationToken")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "get_CancellationToken", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.CancellationToken")), 
      ProcessActivityTreeOptions_get_CancellationToken
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_CreateEmptyBindings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_DynamicUpdateOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DynamicUpdateOptionsForImplementation", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FinishCachingSubtreeOptionsWithCreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FinishCachingSubtreeOptionsWithoutCreateEmptyBindings", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_FullCachingOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsRuntimeReadyOptions", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_OnlyCallCallbackForDeclarations", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_OnlyCallCallbackForDeclarations
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OnlyVisitSingleLevel", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_OnlyVisitSingleLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_SingleLevelSkipRootConfigurationValidationOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SingleLevelValidationOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "get_SkipConstraints", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_SkipConstraints
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SkipIfCached", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_SkipIfCached
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SkipPrivateChildren", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_SkipPrivateChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SkipRootConfigurationValidation", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_SkipRootConfigurationValidation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_SkipRootConfigurationValidationOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SkipRootFinishCachingSubtreeOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "get_StoreTempViolations", 
      JSIL.MethodSignature.Return($.Boolean), 
      ProcessActivityTreeOptions_get_StoreTempViolations
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_ValidationAndPrepareForRuntimeOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ValidationOptions", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetFinishCachingSubtreeOptions", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetValidationOptions", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.Validation.ValidationSettings")])
    );

    $.Method({Static:false, Public:false}, "set_CancellationToken", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.CancellationToken")), 
      ProcessActivityTreeOptions_set_CancellationToken
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CreateEmptyBindings", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_CreateEmptyBindings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OnlyCallCallbackForDeclarations", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_OnlyCallCallbackForDeclarations
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OnlyVisitSingleLevel", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_OnlyVisitSingleLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SkipConstraints", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_SkipConstraints
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SkipIfCached", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_SkipIfCached
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SkipPrivateChildren", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_SkipPrivateChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SkipRootConfigurationValidation", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_SkipRootConfigurationValidation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StoreTempViolations", 
      JSIL.MethodSignature.Action($.Boolean), 
      ProcessActivityTreeOptions_set_StoreTempViolations
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "validationOptions", $.Type);

    $.Field({Static:true , Public:false}, "validationAndPrepareForRuntimeOptions", $.Type);

    $.Field({Static:true , Public:false}, "singleLevelValidationOptions", $.Type);

    $.Field({Static:true , Public:false}, "fullCachingOptions", $.Type);

    $.Field({Static:true , Public:false}, "dynamicUpdateOptions", $.Type);

    $.Field({Static:true , Public:false}, "dynamicUpdateOptionsForImplementation", $.Type);

    $.Field({Static:true , Public:false}, "finishCachingSubtreeOptionsWithCreateEmptyBindings", $.Type);

    $.Field({Static:true , Public:false}, "finishCachingSubtreeOptionsWithoutCreateEmptyBindings", $.Type);

    $.Field({Static:true , Public:false}, "skipRootFinishCachingSubtreeOptions", $.Type);

    $.Field({Static:true , Public:false}, "skipRootConfigurationValidationOptions", $.Type);

    $.Field({Static:true , Public:false}, "singleLevelSkipRootConfigurationValidationOptions", $.Type);

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$CancellationToken$value", $asm07.TypeRef("System.Threading.CancellationToken"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$SkipIfCached$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$CreateEmptyBindings$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$SkipPrivateChildren$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$OnlyCallCallbackForDeclarations$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$SkipConstraints$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$OnlyVisitSingleLevel$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$SkipRootConfigurationValidation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProcessActivityTreeOptions$StoreTempViolations$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CancellationToken", $asm07.TypeRef("System.Threading.CancellationToken"));

    $.Property({Static:false, Public:true }, "SkipIfCached", $.Boolean);

    $.Property({Static:false, Public:true }, "CreateEmptyBindings", $.Boolean);

    $.Property({Static:false, Public:true }, "SkipPrivateChildren", $.Boolean);

    $.Property({Static:false, Public:true }, "OnlyCallCallbackForDeclarations", $.Boolean);

    $.Property({Static:false, Public:true }, "SkipConstraints", $.Boolean);

    $.Property({Static:false, Public:true }, "OnlyVisitSingleLevel", $.Boolean);

    $.Property({Static:false, Public:true }, "SkipRootConfigurationValidation", $.Boolean);

    $.Property({Static:false, Public:true }, "StoreTempViolations", $.Boolean);

    $.Property({Static:false, Public:true }, "IsRuntimeReadyOptions", $.Boolean);

    $.Property({Static:true , Public:true }, "FullCachingOptions", $.Type);

    $.Property({Static:true , Public:true }, "ValidationOptions", $.Type);

    $.Property({Static:true , Public:true }, "ValidationAndPrepareForRuntimeOptions", $.Type);

    $.Property({Static:true , Public:false}, "SkipRootConfigurationValidationOptions", $.Type);

    $.Property({Static:true , Public:false}, "SingleLevelSkipRootConfigurationValidationOptions", $.Type);

    $.Property({Static:true , Public:false}, "SingleLevelValidationOptions", $.Type);

    $.Property({Static:true , Public:false}, "FinishCachingSubtreeOptionsWithoutCreateEmptyBindings", $.Type);

    $.Property({Static:true , Public:false}, "SkipRootFinishCachingSubtreeOptions", $.Type);

    $.Property({Static:true , Public:false}, "FinishCachingSubtreeOptionsWithCreateEmptyBindings", $.Type);

    $.Property({Static:true , Public:true }, "DynamicUpdateOptions", $.Type);

    $.Property({Static:true , Public:true }, "DynamicUpdateOptionsForImplementation", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Quack`1 */ 

(function Quack$b1$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Quack`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Dequeue", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "Enlarge", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Enqueue", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "PushFront", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetCapacity", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "ToArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]), null)
    );

    $.Field({Static:false, Public:false}, "items", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "head", $.Int32);

    $.Field({Static:false, Public:false}, "tail", $.Int32);

    $.Field({Static:false, Public:false}, "count", $.Int32);

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true }, "Item", $.GenericParameter("T"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.QualifiedId */ 

(function QualifiedId$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.QualifiedId", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AsByteArray", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AsIDArray", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:true , Public:false}, "Decode", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Encode", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetEncodedSize", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGetElementFromRoot", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Type, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGetElementFromRoot", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryParse", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Type])])
    );

    $.Field({Static:false, Public:false}, "compressedId", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RegistrationContext */ 

(function RegistrationContext$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.RegistrationContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"), $asm0B.TypeRef("System.Activities.IdSpace")])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindProperty", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.Field({Static:false, Public:false}, "properties", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Field({Static:false, Public:false}, "currentIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RequiredArgumentAttribute */ 

(function RequiredArgumentAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "System.Activities.RequiredArgumentAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_TypeId", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "TypeId", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Property]; });

})();

/* class System.Activities.RuntimeArgument */ 

(function RuntimeArgument$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.ArgumentDirection)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };












  function RuntimeArgument_get_Direction () {
    return this.RuntimeArgument$Direction$value;
  }; 





  function RuntimeArgument_get_IsRequired () {
    return this.RuntimeArgument$IsRequired$value;
  }; 




  function RuntimeArgument_get_Owner () {
    return this.RuntimeArgument$Owner$value;
  }; 








  function RuntimeArgument_set_Direction (value) {
    this.RuntimeArgument$Direction$value = value;
  }; 

  function RuntimeArgument_set_IsRequired (value) {
    this.RuntimeArgument$IsRequired$value = value;
  }; 

  function RuntimeArgument_set_Owner (value) {
    this.RuntimeArgument$Owner$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.RuntimeArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$.String]), $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$.String]), $asm0B.TypeRef("System.Activities.Argument")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureHash", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.ActivityContext")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BoundArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Method({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection")), 
      RuntimeArgument_get_Direction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_EvaluationOrderComparer", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IComparer`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsBound", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsEvaluationOrderSpecified", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInTree", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      RuntimeArgument_get_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsResult", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OverloadGroupNames", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]))
    );

    $.Method({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      RuntimeArgument_get_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalGetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessViolation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationError"), [$asm0B.TypeRef("System.Activities.Activity"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BoundArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Method({Static:false, Public:false}, "set_Direction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection")), 
      RuntimeArgument_set_Direction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      RuntimeArgument_set_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      RuntimeArgument_set_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetupBinding", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotInTree", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryPopulateValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Object, 
          $asm0B.TypeRef("System.Activities.Location"), $.Boolean
        ])
    );

    $.Field({Static:true , Public:false}, "evaluationOrderComparer", $asm0B.TypeRef("System.Activities.RuntimeArgument+InternalEvaluationOrderComparer"));

    $.Field({Static:false, Public:false}, "boundArgument", $asm0B.TypeRef("System.Activities.Argument"));

    $.Field({Static:false, Public:false}, "bindingProperty", $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"));

    $.Field({Static:false, Public:false}, "bindingPropertyOwner", $.Object);

    $.Field({Static:false, Public:false}, "overloadGroupNames", $asm07.TypeRef("System.Collections.Generic.List`1", [$.String]));

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "nameHash", $.UInt32);

    $.Field({Static:false, Public:false}, "isNameHashSet", $.Boolean);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "RuntimeArgument$Direction$value", $asm0B.TypeRef("System.Activities.ArgumentDirection"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeArgument$IsRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeArgument$Owner$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "EvaluationOrderComparer", $asm07.TypeRef("System.Collections.Generic.IComparer`1", [$.Type]));

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

    $.Property({Static:false, Public:true }, "OverloadGroupNames", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "IsInTree", $.Boolean);

    $.Property({Static:false, Public:false}, "IsBound", $.Boolean);

    $.Property({Static:false, Public:false}, "IsEvaluationOrderSpecified", $.Boolean);

    $.Property({Static:false, Public:false}, "BoundArgument", $asm0B.TypeRef("System.Activities.Argument"));

    $.Property({Static:false, Public:false}, "IsResult", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RuntimeArgument+CRCHashCode */ 

(function CRCHashCode$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.RuntimeArgument+CRCHashCode", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Calculate", 
      new JSIL.MethodSignature($.UInt32, [$.String])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Constant({Static:true , Public:false}, "polynomial", $.UInt32, 2197175160);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RuntimeArgument+InternalEvaluationOrderComparer */ 

(function InternalEvaluationOrderComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.RuntimeArgument+InternalEvaluationOrderComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompareNameHashes", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IComparer`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RuntimeDelegateArgument */ 

(function RuntimeDelegateArgument$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.DelegateArgument)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.ArgumentDirection)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function RuntimeDelegateArgument_get_BoundArgument () {
    return this.RuntimeDelegateArgument$BoundArgument$value;
  }; 

  function RuntimeDelegateArgument_get_Direction () {
    return this.RuntimeDelegateArgument$Direction$value;
  }; 

  function RuntimeDelegateArgument_get_Name () {
    return this.RuntimeDelegateArgument$Name$value;
  }; 

  function RuntimeDelegateArgument_get_Type () {
    return this.RuntimeDelegateArgument$Type$value;
  }; 

  function RuntimeDelegateArgument_set_BoundArgument (value) {
    this.RuntimeDelegateArgument$BoundArgument$value = value;
  }; 

  function RuntimeDelegateArgument_set_Direction (value) {
    this.RuntimeDelegateArgument$Direction$value = value;
  }; 

  function RuntimeDelegateArgument_set_Name (value) {
    this.RuntimeDelegateArgument$Name$value = value;
  }; 

  function RuntimeDelegateArgument_set_Type (value) {
    this.RuntimeDelegateArgument$Type$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.RuntimeDelegateArgument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.ArgumentDirection"), $asm0B.TypeRef("System.Activities.DelegateArgument")
        ])
    );

    $.Method({Static:false, Public:true }, "get_BoundArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      RuntimeDelegateArgument_get_BoundArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection")), 
      RuntimeDelegateArgument_get_Direction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      RuntimeDelegateArgument_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      RuntimeDelegateArgument_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_BoundArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      RuntimeDelegateArgument_set_BoundArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Direction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection")), 
      RuntimeDelegateArgument_set_Direction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      RuntimeDelegateArgument_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Type", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      RuntimeDelegateArgument_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeDelegateArgument$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeDelegateArgument$Type$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeDelegateArgument$Direction$value", $asm0B.TypeRef("System.Activities.ArgumentDirection"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeDelegateArgument$BoundArgument$value", $asm0B.TypeRef("System.Activities.DelegateArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:true }, "BoundArgument", $asm0B.TypeRef("System.Activities.DelegateArgument"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.RuntimeTransactionHandle */ 

(function RuntimeTransactionHandle$Members () {
  var $, $thisType;




































  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Handle"), 
      Name: "System.Activities.RuntimeTransactionHandle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteTransaction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteTransaction", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteTransactionCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AbortInstanceOnTransactionFailure", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsRuntimeOwnedTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDoNotAbort", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExecutor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsHandleInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsPropertyRegistered", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsSuppressed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SuppressTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCurrentTransaction", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCurrentTransaction", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCurrentTransaction", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCurrentTransactionCore", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.Transaction"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnUninitialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.HandleInitializationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RequestOrRequireTransactionContextCore", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), 
          $.Object, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequestTransactionContext", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequireTransactionContext", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AbortInstanceOnTransactionFailure", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDoNotAbort", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExecutor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsHandleInitialized", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsPropertyRegistered", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsSuppressed", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SuppressTransaction", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IExecutionProperty.CleanupWorkflowThread", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0B.TypeRef("System.Activities.IExecutionProperty"), "CleanupWorkflowThread");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IExecutionProperty.SetupWorkflowThread", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm0B.TypeRef("System.Activities.IExecutionProperty"), "SetupWorkflowThread");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IPropertyRegistrationCallback.Register", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.IPropertyRegistrationCallback"), "Register");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.IPropertyRegistrationCallback.Unregister", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RegistrationContext"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.IPropertyRegistrationCallback"), "Unregister");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotRegistered", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfRegistered", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "isHandleInitialized", $.Boolean);

    $.Field({Static:false, Public:false}, "doNotAbort", $.Boolean);

    $.Field({Static:false, Public:false}, "isPropertyRegistered", $.Boolean);

    $.Field({Static:false, Public:false}, "isSuppressed", $.Boolean);

    $.Field({Static:false, Public:false}, "scope", $asm27.TypeRef("System.Transactions.TransactionScope"));

    $.Field({Static:false, Public:false}, "rootTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "AbortInstanceOnTransactionFailure", $.Boolean);

    $.Property({Static:false, Public:true }, "SuppressTransaction", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedExecutor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsHandleInitialized", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedDoNotAbort", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsPropertyRegistered", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsSuppressed", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsRuntimeOwnedTransaction", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExecutionProperty"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.IPropertyRegistrationCallback")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.SynchronizationContextHelper */ 

(function SynchronizationContextHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.SynchronizationContextHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CloneSynchronizationContext", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Threading.SynchronizationContext"), [$asm07.TypeRef("System.Threading.SynchronizationContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDefaultSynchronizationContext", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.Field({Static:true , Public:false}, "defaultContext", $asm0B.TypeRef("System.Activities.SynchronizationContextHelper+WFDefaultSynchronizationContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.SynchronizationContextHelper+WFDefaultSynchronizationContext */ 

(function WFDefaultSynchronizationContext$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Threading.SynchronizationContext"), 
      Name: "System.Activities.SynchronizationContextHelper+WFDefaultSynchronizationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Post", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Send", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.SynchronizationContextHelper+WFDefaultSynchronizationContext+<>c__DisplayClass1_0 */ 

(function $l$gc__DisplayClass1_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.SynchronizationContextHelper+WFDefaultSynchronizationContext+<>c__DisplayClass1_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lPost$gb__0", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:true }, "d", $asm07.TypeRef("System.Threading.SendOrPostCallback"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum System.Activities.UnhandledExceptionAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.UnhandledExceptionAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Abort: 0, 
    Cancel: 1, 
    Terminate: 2, 
  }
);

/* class System.Activities.ValidationException */ 

(function ValidationException$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.SystemException"), 
      Name: "System.Activities.ValidationException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Variable */ 

(function Variable$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };










  function Variable_get_IsHandle () {
    return this.Variable$IsHandle$value;
  }; 


  function Variable_get_IsPublic () {
    return this.Variable$IsPublic$value;
  }; 




  function Variable_get_Origin () {
    return this.Variable$Origin$value;
  }; 

  function Variable_get_Owner () {
    return this.Variable$Owner$value;
  }; 








  function Variable_set_IsHandle (value) {
    this.Variable$IsHandle$value = value;
  }; 

  function Variable_set_IsPublic (value) {
    this.Variable$IsPublic$value = value;
  }; 



  function Variable_set_Origin (value) {
    this.Variable$Origin$value = value;
  }; 

  function Variable_set_Owner (value) {
    this.Variable$Owner$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.Variable", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.VariableModifiers")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeclareLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CacheId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DefaultCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.Method({Static:false, Public:false}, "get_IsHandle", 
      JSIL.MethodSignature.Return($.Boolean), 
      Variable_get_IsHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsInTree", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_IsPublic", 
      JSIL.MethodSignature.Return($.Boolean), 
      Variable_get_IsPublic
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Modifiers", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.VariableModifiers"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Origin", 
      JSIL.MethodSignature.Return($.Object), 
      Variable_get_Origin
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      Variable_get_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeRelationship", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalGetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PopulateDefault", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Default", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_DefaultCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.Method({Static:false, Public:false}, "set_IsHandle", 
      JSIL.MethodSignature.Action($.Boolean), 
      Variable_set_IsHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsPublic", 
      JSIL.MethodSignature.Action($.Boolean), 
      Variable_set_IsPublic
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Modifiers", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.VariableModifiers"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_Origin", 
      JSIL.MethodSignature.Action($.Object), 
      Variable_set_Origin
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      Variable_set_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetIsWaitingOnDefaultValue", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfHandle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotInTree", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "modifiers", $asm0B.TypeRef("System.Activities.VariableModifiers"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "Variable$IsHandle$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Variable$IsPublic$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Variable$Origin$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Variable$Owner$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IsHandle", $.Boolean);

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Modifiers", $asm0B.TypeRef("System.Activities.VariableModifiers"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm0B.System.Activities.VariableModifiers.None]; });

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.ActivityWithResult"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.IgnoreDataMemberAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false}, "CacheId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "DefaultCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));

    $.Property({Static:false, Public:false}, "IsPublic", $.Boolean);

    $.Property({Static:false, Public:false}, "Origin", $.Object);

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "IsInTree", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["Name = {Name}, Type = {Type}"]; });

})();

/* class System.Activities.Variable`1 */ 

(function Variable$b1$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Variable"), 
      Name: "System.Activities.Variable`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeclareLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Default", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_DefaultCore", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PopulateDefault", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Set", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Default", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_DefaultCore", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityWithResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetIsWaitingOnDefaultValue", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.Field({Static:false, Public:false}, "defaultExpression", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "DefaultCore", $asm0B.TypeRef("System.Activities.ActivityWithResult"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Variable`1+VariableLocation */ 

(function VariableLocation$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.Variable`1+VariableLocation")]), 
      Name: "System.Activities.Variable`1+VariableLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.VariableModifiers"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_PropertyChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanBeMapped", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsWaitingOnDefaultValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedModifiers", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.VariableModifiers"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ValueCollectionChangedHandler", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ValuePropertyChangedHandler", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyPropertyChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyValueCollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyValuePropertyChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_PropertyChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsHandle", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsWaitingOnDefaultValue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedModifiers", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.VariableModifiers"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetInitialValue", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetIsWaitingOnDefaultValue", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "modifiers", $asm0B.TypeRef("System.Activities.VariableModifiers"));

    $.Field({Static:false, Public:false}, "isHandle", $.Boolean);

    $.Field({Static:false, Public:false}, "isWaitingOnDefaultValue", $.Boolean);

    $.Field({Static:false, Public:false}, "propertyChanged", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.Field({Static:false, Public:false}, "valueCollectionChanged", $asm0A.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventHandler"));

    $.Field({Static:false, Public:false}, "valuePropertyChanged", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.Property({Static:false, Public:false}, "SerializedModifiers", $asm0B.TypeRef("System.Activities.VariableModifiers"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsHandle", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsWaitingOnDefaultValue", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanBeMapped", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "ValueCollectionChangedHandler", $asm0A.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventHandler"));

    $.Property({Static:false, Public:false}, "ValuePropertyChangedHandler", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.Event({Static:false, Public:true , Virtual:true }, "PropertyChanged", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.INotifyPropertyChanged")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* enum System.Activities.VariableModifiers */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.VariableModifiers", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    ReadOnly: 1, 
    Mapped: 2, 
  }
);

/* class System.Activities.VariableModifiersHelper */ 

(function VariableModifiersHelper$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Activities.VariableModifiersHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "IsDefined", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.VariableModifiers")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsMappable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.VariableModifiers")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsReadOnly", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.VariableModifiers")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.VariableModifiers"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.VersionMismatchException */ 

(function VersionMismatchException$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };









  function VersionMismatchException_get_ActualVersion () {
    return this.VersionMismatchException$ActualVersion$value;
  }; 

  function VersionMismatchException_get_ExpectedVersion () {
    return this.VersionMismatchException$ExpectedVersion$value;
  }; 



  function VersionMismatchException_set_ActualVersion (value) {
    this.VersionMismatchException$ActualVersion$value = value;
  }; 

  function VersionMismatchException_set_ExpectedVersion (value) {
    this.VersionMismatchException$ExpectedVersion$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.VersionMismatchException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Method({Static:false, Public:true }, "get_ActualVersion", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      VersionMismatchException_get_ActualVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ExpectedVersion", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      VersionMismatchException_get_ExpectedVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetMessage", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Method({Static:false, Public:false}, "set_ActualVersion", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      VersionMismatchException_set_ActualVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExpectedVersion", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      VersionMismatchException_set_ExpectedVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VersionMismatchException$ExpectedVersion$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "VersionMismatchException$ActualVersion$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ExpectedVersion", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Property({Static:false, Public:true }, "ActualVersion", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationEventArgs */ 

(function WorkflowApplicationEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication)) ();
  };




  function WorkflowApplicationEventArgs_get_Owner () {
    return this.WorkflowApplicationEventArgs$Owner$value;
  }; 


  function WorkflowApplicationEventArgs_set_Owner (value) {
    this.WorkflowApplicationEventArgs$Owner$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Activities.WorkflowApplicationEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.Method({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WorkflowApplicationEventArgs_get_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetInstanceExtensions", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    );

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WorkflowApplicationEventArgs_set_Owner
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationEventArgs$Owner$value", $asm0B.TypeRef("System.Activities.WorkflowApplication"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationAbortedEventArgs */ 

(function WorkflowApplicationAbortedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Exception)) ();
  };



  function WorkflowApplicationAbortedEventArgs_get_Reason () {
    return this.WorkflowApplicationAbortedEventArgs$Reason$value;
  }; 

  function WorkflowApplicationAbortedEventArgs_set_Reason (value) {
    this.WorkflowApplicationAbortedEventArgs$Reason$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs"), 
      Name: "System.Activities.WorkflowApplicationAbortedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception")])
    );

    $.Method({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      WorkflowApplicationAbortedEventArgs_get_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      WorkflowApplicationAbortedEventArgs_set_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationAbortedEventArgs$Reason$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Reason", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationException */ 

(function WorkflowApplicationException$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.WorkflowApplicationException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Constant({Static:true , Public:false}, "InstanceIdName", $.String, "instanceId");

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationAbortedException */ 

(function WorkflowApplicationAbortedException$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationException"), 
      Name: "System.Activities.WorkflowApplicationAbortedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Hosting");
/* class System.Activities.Hosting.WorkflowInstance */ 

(function WorkflowInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };














  function WorkflowInstance_get_DefinitionIdentity () {
    return this.WorkflowInstance$DefinitionIdentity$value;
  }; 

  function WorkflowInstance_get_HasPersistenceModule () {
    return this.WorkflowInstance$HasPersistenceModule$value;
  }; 

  function WorkflowInstance_get_HasTrackedStarted () {
    return this.WorkflowInstance$HasTrackedStarted$value;
  }; 

  function WorkflowInstance_get_HasTrackingParticipant () {
    return this.WorkflowInstance$HasTrackingParticipant$value;
  }; 







  function WorkflowInstance_get_WorkflowDefinition () {
    return this.WorkflowInstance$WorkflowDefinition$value;
  }; 




























  function WorkflowInstance_set_DefinitionIdentity (value) {
    this.WorkflowInstance$DefinitionIdentity$value = value;
  }; 

  function WorkflowInstance_set_HasPersistenceModule (value) {
    this.WorkflowInstance$HasPersistenceModule$value = value;
  }; 

  function WorkflowInstance_set_HasTrackedStarted (value) {
    this.WorkflowInstance$HasTrackedStarted$value = value;
  }; 

  function WorkflowInstance_set_HasTrackingParticipant (value) {
    this.WorkflowInstance$HasTrackingParticipant$value = value;
  }; 



  function WorkflowInstance_set_WorkflowDefinition (value) {
    this.WorkflowInstance$WorkflowDefinition$value = value;
  }; 
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstance", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Abort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginFlushTrackingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginFlushTrackingRecordsInternal", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposeExtensions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EndFlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndFlushTrackingRecordsInternal", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureDefinitionReady", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishOperation", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Controller", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl"))
    );

    $.Method({Static:false, Public:true }, "get_DefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowInstance_get_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_HasPersistenceModule", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstance_get_HasPersistenceModule
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_HasTrackedStarted", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstance_get_HasTrackedStarted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_HasTrackingParticipant", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstance_get_HasTrackingParticipant
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_HostEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_SupportsInstanceKeys", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SynchronizationContext", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TrackingProvider", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingProvider"))
    );

    $.Method({Static:false, Public:true }, "get_WorkflowDefinition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowInstance_get_WorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetActivitiesBlockingUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]), [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExtension", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExtensions", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Handle")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeCore", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Handle")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyPaused", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyUnhandledException", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginAssociateKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginFlushTrackingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDeserialized", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnDisassociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndAssociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndFlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyPaused", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyUnhandledException", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRequestAbort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterExtensionManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleBookmarkResumption", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleBookmarkResumption", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm0B.TypeRef("System.Activities.BookmarkScope")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleCancel", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_DefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowInstance_set_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasPersistenceModule", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstance_set_HasPersistenceModule
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasTrackedStarted", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstance_set_HasTrackedStarted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasTrackingParticipant", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstance_set_HasTrackingParticipant
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_HostEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SynchronizationContext", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.Method({Static:false, Public:false}, "set_WorkflowDefinition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowInstance_set_WorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "StartOperation", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "StartReadOnlyOperation", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDynamicUpdateErrorExists", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNotIdle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackCompletion", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackResumed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateGetBookmarks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateGetMappedVariables", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidatePauseWhenPersistable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidatePrepareForSerialization", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateScheduleResumeBookmark", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateWorkflow", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyMappedVariablesDictionary", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Hosting.LocationInfo")]));

    $.Constant({Static:true , Public:false}, "True", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "False", $.Int32, 0);

    $.Field({Static:false, Public:false}, "controller", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl"));

    $.Field({Static:false, Public:false}, "trackingProvider", $asm0B.TypeRef("System.Activities.Tracking.TrackingProvider"));

    $.Field({Static:false, Public:false}, "syncContext", $asm07.TypeRef("System.Threading.SynchronizationContext"));

    $.Field({Static:false, Public:false}, "hostEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "isPerformingOperation", $.Int32);

    $.Field({Static:false, Public:false}, "isInitialized", $.Boolean);

    $.Field({Static:false, Public:false}, "extensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionCollection"));

    $.Field({Static:false, Public:false}, "hasTrackedResumed", $.Boolean);

    $.Field({Static:false, Public:false}, "hasTrackedCompletion", $.Boolean);

    $.Field({Static:false, Public:false}, "isAborted", $.Boolean);

    $.Field({Static:false, Public:false}, "abortedException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "WorkflowInstance$HasTrackingParticipant$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstance$HasTrackedStarted$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstance$HasPersistenceModule$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstance$WorkflowDefinition$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstance$DefinitionIdentity$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false}, "HasTrackingParticipant", $.Boolean);

    $.Property({Static:false, Public:false}, "HasTrackedStarted", $.Boolean);

    $.Property({Static:false, Public:false}, "HasPersistenceModule", $.Boolean);

    $.Property({Static:false, Public:true }, "SynchronizationContext", $asm07.TypeRef("System.Threading.SynchronizationContext"));

    $.Property({Static:false, Public:true }, "HostEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "WorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "DefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Property({Static:false, Public:false}, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "SupportsInstanceKeys", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackingProvider", $asm0B.TypeRef("System.Activities.Tracking.TrackingProvider"));

    $.Property({Static:false, Public:false}, "Controller", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl */ 

(function WorkflowInstanceControl$Members () {
  var $, $thisType;































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginFlushTrackingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndFlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushTrackingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasPendingTrackingRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPersistable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TrackingEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAbortReason", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBookmarks", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]), [$asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCompletionState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCompletionState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstanceState"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Exception")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCompletionState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstanceState"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Exception")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMappedVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Hosting.LocationInfo")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "PauseWhenPersistable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PrepareForSerialization", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "RequestPause", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleBookmarkResumption", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleBookmarkResumption", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm0B.TypeRef("System.Activities.BookmarkScope")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleCancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Track", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"));

    $.Property({Static:false, Public:true }, "IsPersistable", $.Boolean);

    $.Property({Static:false, Public:true }, "HasPendingTrackingRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "TrackingEnabled", $.Boolean);

    $.Property({Static:false, Public:true }, "State", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceState"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication */ 

(function WorkflowApplication$Members () {
  var $, $thisType;








































































































































































































  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"), 
      Name: "System.Activities.WorkflowApplication", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Handle")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Abort", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortDueToException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortInstance", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortPersistence", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInitialInstanceValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToPending", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AreBookmarksInvalid", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.BookmarkResumptionResult")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginCancel", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginCreateDefaultInstanceOwner", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentityFilter"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginCreateDefaultInstanceOwner", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentityFilter"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginDeleteDefaultInstanceOwner", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginDeleteDefaultInstanceOwner", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginDiscardInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetRunnableInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetRunnableInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginInternalPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"), $asm07.TypeRef("System.TimeSpan"), 
          $.Boolean, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginInternalRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $.Boolean, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.Threading.SynchronizationContext"), $asm0B.TypeRef("System.Activities.AsyncInvokeContext"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoadRunnableInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoadRunnableInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginRun", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTerminate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnload", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnload", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelCore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CompletePersistenceContext", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowPersistenceContext"), $asm27.TypeRef("System.Transactions.TransactionScope"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateDefaultInstanceOwner", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentityFilter")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateDefaultInstanceOwner", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentityFilter"), $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateInstance", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.Threading.SynchronizationContext"), 
          $asm07.TypeRef("System.Action")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreatePersistenceManager", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DecrementPendingUnenqueud", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "DeleteDefaultInstanceOwner", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.ExternalMethod({Static:true , Public:true }, "DeleteDefaultInstanceOwner", 
      new JSIL.MethodSignature(null, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:true , Public:false}, "DiscardInstance", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndCancel", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndCreateDefaultInstanceOwner", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndDeleteDefaultInstanceOwner", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EndDiscardInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndGetInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndGetRunnableInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndInternalPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EndInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndLoadRunnableInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndRun", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTerminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUnload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Enqueue", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Enqueue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureInitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "EventFrame", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteInstanceCommandWithTemporaryHandle", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractRuntimeState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindOperation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ForceNotifyOperationComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Aborted", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationAbortedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Completed", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EventData", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication+WorkflowEventData"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EventFrameCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Extensions", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasPersistenceProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Idle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsHandlerThread", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsInTerminalState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OnUnhandledException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationUnhandledExceptionEventArgs"), $asm0B.TypeRef("System.Activities.UnhandledExceptionAction")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PersistableIdle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs"), $asm0B.TypeRef("System.Activities.PersistableIdleAction")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_SupportsInstanceKeys", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Unloaded", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetActivitiesBlockingUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]), [$asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBookmarks", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetBookmarksForIdle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCompletionStatus", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Exception")]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCreateOwnerCommand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityCommand"), [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentityFilter")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm07.TypeRef("System.Guid"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [
          $asm07.TypeRef("System.Guid"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceMetadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetRunnableInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetRunnableInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementPendingUnenqueud", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializePersistenceContext", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.WorkflowPersistenceContext")]), $jsilcore.TypeRef("JSIL.Reference", [$asm27.TypeRef("System.Transactions.TransactionScope")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalGetExtensions", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalRun", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsLoadTransactionRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadCore", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $.Boolean, $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [
          $asm07.TypeRef("System.TimeSpan"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "LoadRunnableInstance", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "LoadRunnableInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadValues", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"), $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkUnloaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyOperationComplete", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbortTrackingComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAbortWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginAssociateKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginPersist", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnBeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnDisassociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndAssociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndPersist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnEndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyPaused", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNotifyUnhandledException", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRequestAbort", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitAsyncComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Persist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Persist", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PersistCore", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm25.TypeRef("System.Runtime.TimeoutHelper")]), $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessInstanceValues", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.PersistencePipeline"), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseAborted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseIdleEvent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $.String, $.Object, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResumeBookmarkCore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RunCore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "RunInstance", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleTrackAndRaiseAborted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Aborted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationAbortedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Completed", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Idle", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceStore", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_OnUnhandledException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationUnhandledExceptionEventArgs"), $asm0B.TypeRef("System.Activities.UnhandledExceptionAction")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PersistableIdle", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs"), $asm0B.TypeRef("System.Activities.PersistableIdleAction")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Unloaded", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetPersistenceManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldRaiseComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceState")])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartInvoke", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.Threading.SynchronizationContext"), 
          $asm07.TypeRef("System.Action"), $asm0B.TypeRef("System.Activities.AsyncInvokeContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TerminateCore", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfAborted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfHandlerThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfMulticast", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Delegate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfNoInstanceStore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfTerminatedOrCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfUnloaded", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackAndRaiseAborted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackPersistence", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Unload", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Unload", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UnlockInstance", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"), $asm25.TypeRef("System.Runtime.TimeoutHelper")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateInstanceMetadata", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForCancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForGetAllBookmarks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForLoad", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForPersist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForRun", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForTerminate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateForUnload", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurn", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurnAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurnAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurnNoEnqueue", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurnNoEnqueueAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), $.Object
        ])
    );

    $.Field({Static:true , Public:false}, "eventFrameCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "idleHandler", $asm0B.TypeRef("System.Activities.WorkflowApplication+IdleEventHandler"));

    $.Field({Static:true , Public:false}, "completedHandler", $asm0B.TypeRef("System.Activities.WorkflowApplication+CompletedEventHandler"));

    $.Field({Static:true , Public:false}, "unhandledExceptionHandler", $asm0B.TypeRef("System.Activities.WorkflowApplication+UnhandledExceptionEventHandler"));

    $.Field({Static:true , Public:false}, "waitAsyncCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "unknownIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Field({Static:false, Public:false}, "onAborted", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationAbortedEventArgs")]));

    $.Field({Static:false, Public:false}, "onUnloaded", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs")]));

    $.Field({Static:false, Public:false}, "onCompleted", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationCompletedEventArgs")]));

    $.Field({Static:false, Public:false}, "onUnhandledException", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationUnhandledExceptionEventArgs"), $asm0B.TypeRef("System.Activities.UnhandledExceptionAction")]));

    $.Field({Static:false, Public:false}, "onPersistableIdle", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs"), $asm0B.TypeRef("System.Activities.PersistableIdleAction")]));

    $.Field({Static:false, Public:false}, "onIdle", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs")]));

    $.Field({Static:false, Public:false}, "eventData", $asm0B.TypeRef("System.Activities.WorkflowApplication+WorkflowEventData"));

    $.Field({Static:false, Public:false}, "extensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Field({Static:false, Public:false}, "persistencePipelineInUse", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "instanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false}, "persistenceManager", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"));

    $.Field({Static:false, Public:false}, "state", $asm0B.TypeRef("System.Activities.WorkflowApplication+WorkflowApplicationState"));

    $.Field({Static:false, Public:false}, "handlerThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "isInHandler", $.Boolean);

    $.Field({Static:false, Public:false}, "invokeCompletedCallback", $asm07.TypeRef("System.Action"));

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "instanceIdSet", $.Boolean);

    $.Field({Static:false, Public:false}, "hasCalledAbort", $.Boolean);

    $.Field({Static:false, Public:false}, "hasCalledRun", $.Boolean);

    $.Field({Static:false, Public:false}, "hasRaisedCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "pendingOperations", $asm0B.TypeRef("System.Activities.Quack`1", [$asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation")]));

    $.Field({Static:false, Public:false}, "isBusy", $.Boolean);

    $.Field({Static:false, Public:false}, "hasExecutionOccurredSinceLastIdle", $.Boolean);

    $.Field({Static:false, Public:false}, "pendingUnenqueued", $.Int32);

    $.Field({Static:false, Public:false}, "actionCount", $.Int32);

    $.Field({Static:false, Public:false}, "initialWorkflowArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "rootExecutionProperties", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Handle")]));

    $.Field({Static:false, Public:false}, "instanceMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Property({Static:false, Public:true }, "Extensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Property({Static:false, Public:true }, "Aborted", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationAbortedEventArgs")]));

    $.Property({Static:false, Public:true }, "Unloaded", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs")]));

    $.Property({Static:false, Public:true }, "Completed", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationCompletedEventArgs")]));

    $.Property({Static:false, Public:true }, "OnUnhandledException", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationUnhandledExceptionEventArgs"), $asm0B.TypeRef("System.Activities.UnhandledExceptionAction")]));

    $.Property({Static:false, Public:true }, "Idle", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs")]));

    $.Property({Static:false, Public:true }, "PersistableIdle", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.WorkflowApplicationIdleEventArgs"), $asm0B.TypeRef("System.Activities.PersistableIdleAction")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false, Virtual:true }, "SupportsInstanceKeys", $.Boolean);

    $.Property({Static:true , Public:false}, "EventFrameCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:false, Public:false}, "EventData", $asm0B.TypeRef("System.Activities.WorkflowApplication+WorkflowEventData"));

    $.Property({Static:false, Public:false}, "HasPersistenceProvider", $.Boolean);

    $.Property({Static:false, Public:false}, "IsHandlerThread", $.Boolean);

    $.Property({Static:false, Public:false}, "IsInTerminalState", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.WorkflowApplication+PersistenceOperation */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.WorkflowApplication+PersistenceOperation", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Complete: 0, 
    Save: 1, 
    Unload: 2, 
  }
);

/* enum System.Activities.WorkflowApplication+WorkflowApplicationState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.WorkflowApplication+WorkflowApplicationState", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Paused: 0, 
    Runnable: 1, 
    Unloaded: 2, 
    Aborted: 3, 
  }
);

/* class System.Activities.WorkflowApplication+SynchronousSynchronizationContext */ 

(function SynchronousSynchronizationContext$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Threading.SynchronizationContext"), 
      Name: "System.Activities.WorkflowApplication+SynchronousSynchronizationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Post", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Send", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.Field({Static:true , Public:false}, "value", $.Type);

    $.Property({Static:true , Public:true }, "Value", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+InvokeAsyncResult */ 

(function InvokeAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.WorkflowApplication+InvokeAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.Threading.SynchronizationContext"), $asm0B.TypeRef("System.Activities.AsyncInvokeContext"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WaitCompleteCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnInvokeComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnWorkflowCompletion", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "waitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Field({Static:false, Public:false}, "completionWaiter", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "outputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "completionException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:true , Public:false}, "WaitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+ResumeBookmarkAsyncResult */ 

(function ResumeBookmarkAsyncResult$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.WorkflowApplication+ResumeBookmarkAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object, $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckIfBookmarksAreInvalid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearPendedUnenqueued", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyOperationComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnResumed", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessResumption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "StartResumptionLoop", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitOnCurrentOperation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "resumedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnResumed", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "waitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnWaitComplete", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:true , Public:false}, "trackingCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnTrackingComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Field({Static:false, Public:false}, "resumptionResult", $asm0B.TypeRef("System.Activities.BookmarkResumptionResult"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "isFromExtension", $.Boolean);

    $.Field({Static:false, Public:false}, "pendedUnenqueued", $.Boolean);

    $.Field({Static:false, Public:false}, "currentOperation", $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+UnloadOrPersistAsyncResult */ 

(function UnloadOrPersistAsyncResult$Members () {
  var $, $thisType;























  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+UnloadOrPersistAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.TimeSpan"), 
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"), $.Boolean, 
          $.Boolean, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CloseInstance", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectAndMap", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteOwner", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureProviderReadyness", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyOperationComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnCompleteContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnOwnerDeleted", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnPersisted", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnProviderInitialized", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnProviderReadynessEnsured", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnSaved", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Persist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Save", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Track", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "waitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnWaitComplete", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:true , Public:false}, "savedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnSaved", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "persistedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnPersisted", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "initializedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnProviderInitialized", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "readynessEnsuredCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnProviderReadynessEnsured", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "trackingCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnTrackingComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "deleteOwnerCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnOwnerDeleted", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeContextCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnCompleteContext", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Field({Static:false, Public:false}, "isUnloaded", $.Boolean);

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "operation", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"));

    $.Field({Static:false, Public:false}, "instanceOperation", $asm0B.TypeRef("System.Activities.WorkflowApplication+RequiresPersistenceOperation"));

    $.Field({Static:false, Public:false}, "context", $asm0B.TypeRef("System.Activities.WorkflowPersistenceContext"));

    $.Field({Static:false, Public:false}, "data", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "pipeline", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "isInternalPersist", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+SimpleOperationAsyncResult */ 

(function SimpleOperationAsyncResult$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.WorkflowApplication+SimpleOperationAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformOperationAndTrack", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Run", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "waitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnWaitComplete", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:true , Public:false}, "trackingCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Property({Static:false, Public:false}, "Instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+TerminateAsyncResult */ 

(function TerminateAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+SimpleOperationAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+TerminateAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+CancelAsyncResult */ 

(function CancelAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+SimpleOperationAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+CancelAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+RunAsyncResult */ 

(function RunAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+SimpleOperationAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+RunAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $.Boolean, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $.Boolean, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PerformOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateState", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "isUserRun", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+UnlockInstanceAsyncResult */ 

(function UnlockInstanceAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+UnlockInstanceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"), $asm25.TypeRef("System.Runtime.TimeoutHelper"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnInstanceUnlocked", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnOwnerDeleted", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "instanceUnlockedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnInstanceUnlocked", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "ownerDeletedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnOwnerDeleted", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceManager", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+LoadAsyncResult */ 

(function LoadAsyncResult$Members () {
  var $, $thisType;





















  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+LoadAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"), 
          $.Boolean, $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Abort", 
      new JSIL.MethodSignature(null, [$.Type, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndAndCreateInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Finish", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Load", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadValues", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyOperationComplete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnCompleteContext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLoadComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnLoadPipeline", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnProviderRegistered", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnWaitComplete", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForTurn", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "waitCompleteCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnWaitComplete", new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")]), true, false));
      });

    $.Field({Static:true , Public:false}, "providerRegisteredCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnProviderRegistered", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "loadCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLoadComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "loadPipelineCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnLoadPipeline", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeContextCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnCompleteContext", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "application", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "persistenceManager", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManager"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "loadAny", $.Boolean);

    $.Field({Static:false, Public:false}, "deserializedRuntimeState", $.Object);

    $.Field({Static:false, Public:false}, "pipeline", $asm35.TypeRef("System.Runtime.PersistencePipeline"));

    $.Field({Static:false, Public:false}, "context", $asm0B.TypeRef("System.Activities.WorkflowPersistenceContext"));

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "values", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "updateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "instanceOperation", $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+PumpBasedSynchronizationContext */ 

(function PumpBasedSynchronizationContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function PumpBasedSynchronizationContext_get_IsInvokeCompleted () {
    return this.PumpBasedSynchronizationContext$IsInvokeCompleted$value;
  }; 





  function PumpBasedSynchronizationContext_set_IsInvokeCompleted (value) {
    this.PumpBasedSynchronizationContext$IsInvokeCompleted$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Threading.SynchronizationContext"), 
      Name: "System.Activities.WorkflowApplication+PumpBasedSynchronizationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "DoPump", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_IsInvokeCompleted", 
      JSIL.MethodSignature.Return($.Boolean), 
      PumpBasedSynchronizationContext_get_IsInvokeCompleted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "OnInvokeCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Post", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleWorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+PumpBasedSynchronizationContext+WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Send", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.Method({Static:false, Public:false}, "set_IsInvokeCompleted", 
      JSIL.MethodSignature.Action($.Boolean), 
      PumpBasedSynchronizationContext_set_IsInvokeCompleted
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "WaitForNextItem", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitOne", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Threading.AutoResetEvent"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.Field({Static:true , Public:false}, "waitObject", $asm07.TypeRef("System.Threading.AutoResetEvent"))
      .Attribute($asm07.TypeRef("System.ThreadStaticAttribute"));

    $.Field({Static:false, Public:false}, "queueWaiter", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:false}, "currentWorkItem", $asm0B.TypeRef("System.Activities.WorkflowApplication+PumpBasedSynchronizationContext+WorkItem"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "PumpBasedSynchronizationContext$IsInvokeCompleted$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IsInvokeCompleted", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+PumpBasedSynchronizationContext+WorkItem */ 

(function WorkItem$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+PumpBasedSynchronizationContext+WorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Threading.SendOrPostCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "callback", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "state", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+WorkflowEventData */ 

(function WorkflowEventData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Func$b4.Of(
        $asm07.System.IAsyncResult, $asm0B.System.Activities.WorkflowApplication, 
        $asm07.System.Boolean, $asm07.System.Boolean
    ))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.String)) ();
  };



  function WorkflowEventData_get_Instance () {
    return this.WorkflowEventData$Instance$value;
  }; 

  function WorkflowEventData_get_NextCallback () {
    return this.WorkflowEventData$NextCallback$value;
  }; 

  function WorkflowEventData_get_UnhandledException () {
    return this.WorkflowEventData$UnhandledException$value;
  }; 

  function WorkflowEventData_get_UnhandledExceptionSource () {
    return this.WorkflowEventData$UnhandledExceptionSource$value;
  }; 

  function WorkflowEventData_get_UnhandledExceptionSourceInstance () {
    return this.WorkflowEventData$UnhandledExceptionSourceInstance$value;
  }; 

  function WorkflowEventData_set_Instance (value) {
    this.WorkflowEventData$Instance$value = value;
  }; 

  function WorkflowEventData_set_NextCallback (value) {
    this.WorkflowEventData$NextCallback$value = value;
  }; 

  function WorkflowEventData_set_UnhandledException (value) {
    this.WorkflowEventData$UnhandledException$value = value;
  }; 

  function WorkflowEventData_set_UnhandledExceptionSource (value) {
    this.WorkflowEventData$UnhandledExceptionSource$value = value;
  }; 

  function WorkflowEventData_set_UnhandledExceptionSourceInstance (value) {
    this.WorkflowEventData$UnhandledExceptionSourceInstance$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+WorkflowEventData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication"))
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WorkflowEventData_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NextCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ])), 
      WorkflowEventData_get_NextCallback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UnhandledException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      WorkflowEventData_get_UnhandledException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UnhandledExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowEventData_get_UnhandledExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UnhandledExceptionSourceInstance", 
      JSIL.MethodSignature.Return($.String), 
      WorkflowEventData_get_UnhandledExceptionSourceInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WorkflowEventData_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NextCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ])), 
      WorkflowEventData_set_NextCallback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UnhandledException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      WorkflowEventData_set_UnhandledException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UnhandledExceptionSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowEventData_set_UnhandledExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UnhandledExceptionSourceInstance", 
      JSIL.MethodSignature.Action($.String), 
      WorkflowEventData_set_UnhandledExceptionSourceInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowEventData$Instance$value", $asm0B.TypeRef("System.Activities.WorkflowApplication"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowEventData$NextCallback$value", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowEventData$UnhandledException$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowEventData$UnhandledExceptionSource$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowEventData$UnhandledExceptionSourceInstance$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));

    $.Property({Static:false, Public:true }, "NextCallback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:true }, "UnhandledException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "UnhandledExceptionSource", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "UnhandledExceptionSourceInstance", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+IdleEventHandler */ 

(function IdleEventHandler$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+IdleEventHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stage1Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stage2Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage1Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage2Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );

    $.Field({Static:false, Public:false}, "stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Field({Static:false, Public:false}, "stage2Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:false}, "Stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:false}, "Stage2Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+CompletedEventHandler */ 

(function CompletedEventHandler$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+CompletedEventHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stage1Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stage2Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage1Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage2Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );

    $.Field({Static:false, Public:false}, "stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Field({Static:false, Public:false}, "stage2Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:false}, "Stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:false}, "Stage2Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+UnhandledExceptionEventHandler */ 

(function UnhandledExceptionEventHandler$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+UnhandledExceptionEventHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Stage1Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`4", [
            $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
            $.Boolean, $.Boolean
          ]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage1Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStage1Complete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.Activity"), $.String
        ])
    );

    $.Field({Static:false, Public:false}, "stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));

    $.Property({Static:false, Public:false}, "Stage1Callback", $asm07.TypeRef("System.Func`4", [
          $asm07.TypeRef("System.IAsyncResult"), $asm0B.TypeRef("System.Activities.WorkflowApplication"), 
          $.Boolean, $.Boolean
        ]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+InstanceCommandWithTemporaryHandleAsyncResult */ 

(function InstanceCommandWithTemporaryHandleAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.WorkflowApplication+InstanceCommandWithTemporaryHandleAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnCommandCompleted", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnComplete", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.Field({Static:true , Public:false}, "commandCompletedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnCommandCompleted", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "completeCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnComplete", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:false, Public:false}, "command", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"));

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "instanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false}, "temporaryHandle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "commandResult", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+InstanceOperation */ 

(function InstanceOperation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function InstanceOperation_get_ActionId () {
    return this.InstanceOperation$ActionId$value;
  }; 

  function InstanceOperation_get_InterruptsScheduler () {
    return this.InstanceOperation$InterruptsScheduler$value;
  }; 

  function InstanceOperation_get_Notified () {
    return this.InstanceOperation$Notified$value;
  }; 

  function InstanceOperation_get_RequiresInitialized () {
    return this.InstanceOperation$RequiresInitialized$value;
  }; 



  function InstanceOperation_set_ActionId (value) {
    this.InstanceOperation$ActionId$value = (value | 0);
  }; 

  function InstanceOperation_set_InterruptsScheduler (value) {
    this.InstanceOperation$InterruptsScheduler$value = value;
  }; 

  function InstanceOperation_set_Notified (value) {
    this.InstanceOperation$Notified$value = value;
  }; 

  function InstanceOperation_set_RequiresInitialized (value) {
    this.InstanceOperation$RequiresInitialized$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+InstanceOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRun", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );

    $.Method({Static:false, Public:true }, "get_ActionId", 
      JSIL.MethodSignature.Return($.Int32), 
      InstanceOperation_get_ActionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InterruptsScheduler", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceOperation_get_InterruptsScheduler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Notified", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceOperation_get_Notified
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RequiresInitialized", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceOperation_get_RequiresInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "NotifyTurn", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "OnEnqueued", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_ActionId", 
      JSIL.MethodSignature.Action($.Int32), 
      InstanceOperation_set_ActionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InterruptsScheduler", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceOperation_set_InterruptsScheduler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Notified", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceOperation_set_Notified
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RequiresInitialized", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceOperation_set_RequiresInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "WaitForTurn", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "WaitForTurnAsync", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), 
          $.Object
        ])
    );

    $.Field({Static:false, Public:false}, "waitHandle", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Field({Static:false, Public:false}, "InstanceOperation$Notified$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceOperation$ActionId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceOperation$InterruptsScheduler$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceOperation$RequiresInitialized$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Notified", $.Boolean);

    $.Property({Static:false, Public:true }, "ActionId", $.Int32);

    $.Property({Static:false, Public:true }, "InterruptsScheduler", $.Boolean);

    $.Property({Static:false, Public:true }, "RequiresInitialized", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+RequiresIdleOperation */ 

(function RequiresIdleOperation$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), 
      Name: "System.Activities.WorkflowApplication+RequiresIdleOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRun", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );

    $.Field({Static:false, Public:false}, "requiresRunnableInstance", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+DeferredRequiresIdleOperation */ 

(function DeferredRequiresIdleOperation$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), 
      Name: "System.Activities.WorkflowApplication+DeferredRequiresIdleOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRun", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+RequiresPersistenceOperation */ 

(function RequiresPersistenceOperation$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), 
      Name: "System.Activities.WorkflowApplication+RequiresPersistenceOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRun", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+WaitForTurnData */ 

(function WaitForTurnData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Action$b2.Of($asm07.System.Object, $asm07.System.TimeoutException))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication_InstanceOperation)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Object)) ();
  };



  function WaitForTurnData_get_Callback () {
    return this.WaitForTurnData$Callback$value;
  }; 

  function WaitForTurnData_get_Instance () {
    return this.WaitForTurnData$Instance$value;
  }; 

  function WaitForTurnData_get_Operation () {
    return this.WaitForTurnData$Operation$value;
  }; 

  function WaitForTurnData_get_State () {
    return this.WaitForTurnData$State$value;
  }; 

  function WaitForTurnData_set_Callback (value) {
    this.WaitForTurnData$Callback$value = value;
  }; 

  function WaitForTurnData_set_Instance (value) {
    this.WaitForTurnData$Instance$value = value;
  }; 

  function WaitForTurnData_set_Operation (value) {
    this.WaitForTurnData$Operation$value = value;
  }; 

  function WaitForTurnData_set_State (value) {
    this.WaitForTurnData$State$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+WaitForTurnData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]), $.Object, 
          $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"), $asm0B.TypeRef("System.Activities.WorkflowApplication")
        ])
    );

    $.Method({Static:false, Public:true }, "get_Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")])), 
      WaitForTurnData_get_Callback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WaitForTurnData_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Operation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation")), 
      WaitForTurnData_get_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.Object), 
      WaitForTurnData_get_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Callback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")])), 
      WaitForTurnData_set_Callback
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication")), 
      WaitForTurnData_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Operation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation")), 
      WaitForTurnData_set_Operation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_State", 
      JSIL.MethodSignature.Action($.Object), 
      WaitForTurnData_set_State
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitForTurnData$Callback$value", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitForTurnData$State$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitForTurnData$Operation$value", $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WaitForTurnData$Instance$value", $asm0B.TypeRef("System.Activities.WorkflowApplication"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Callback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Property({Static:false, Public:true }, "State", $.Object);

    $.Property({Static:false, Public:true }, "Operation", $asm0B.TypeRef("System.Activities.WorkflowApplication+InstanceOperation"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.WorkflowApplication"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+PersistenceManagerBase */ 

(function PersistenceManagerBase$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+PersistenceManagerBase", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Property({Static:false, Public:true , Virtual:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Property({Static:false, Public:true , Virtual:true }, "InstanceId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+PersistenceManager */ 

(function PersistenceManager$Members () {
  var $, $thisType;







































  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"), 
      Name: "System.Activities.WorkflowApplication+PersistenceManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), 
          $asm07.TypeRef("System.Guid")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginDeleteOwner", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginEnsureReadyness", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginInitialize", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTryLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginUnlock", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateSaveCommand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), 
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateTemporaryHandle", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner"))
    );

    $.ExternalMethod({Static:false, Public:true }, "DeleteOwner", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndDeleteOwner", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndEnsureReadyness", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndInitialize", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTryLoad", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndUnlock", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EnsureReadyness", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FreeTemporaryHandle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GenerateInitialData", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$asm0B.TypeRef("System.Activities.WorkflowApplication")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLocked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OwnerWasCreated", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCreateOwnerCommand", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), [$asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeInstanceMetadata", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Save", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceOperation"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetInstanceMetadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetMutablemetadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryLoad", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.TimeSpan"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryLoadHelper", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Unlock", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Field({Static:false, Public:false}, "handle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "temporaryHandle", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"));

    $.Field({Static:false, Public:false}, "owner", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner"));

    $.Field({Static:false, Public:false}, "ownerWasCreated", $.Boolean);

    $.Field({Static:false, Public:false}, "isLocked", $.Boolean);

    $.Field({Static:false, Public:false}, "aborted", $.Boolean);

    $.Field({Static:false, Public:false}, "isTryLoad", $.Boolean);

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "store", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Field({Static:false, Public:false}, "instanceMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "mutableMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true , Virtual:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true , Virtual:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Property({Static:false, Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

    $.Property({Static:false, Public:true }, "OwnerWasCreated", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplication+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplication+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsLoadTransactionRequired$gb__139_0", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__139_0", $asm07.TypeRef("System.Func`2", [$asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.WorkflowApplicationCompletedEventArgs */ 

(function WorkflowApplicationCompletedEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs"), 
      Name: "System.Activities.WorkflowApplicationCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstanceState"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompletionState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Outputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TerminationException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:false, Public:false}, "completionState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Field({Static:false, Public:false}, "terminationException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "outputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "CompletionState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Property({Static:false, Public:true }, "Outputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "TerminationException", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationCompletedException */ 

(function WorkflowApplicationCompletedException$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationException"), 
      Name: "System.Activities.WorkflowApplicationCompletedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationInstance */ 

(function WorkflowApplicationInstance$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.WorkflowApplication_PersistenceManagerBase)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm30.System.Xml.Linq.XName, $asm35.System.Runtime.DurableInstancing.InstanceValue))) ();
  };









  function WorkflowApplicationInstance_get_DefinitionIdentity () {
    return this.WorkflowApplicationInstance$DefinitionIdentity$value;
  }; 



  function WorkflowApplicationInstance_get_PersistenceManager () {
    return this.WorkflowApplicationInstance$PersistenceManager$value;
  }; 

  function WorkflowApplicationInstance_get_Values () {
    return this.WorkflowApplicationInstance$Values$value;
  }; 



  function WorkflowApplicationInstance_set_DefinitionIdentity (value) {
    this.WorkflowApplicationInstance$DefinitionIdentity$value = value;
  }; 

  function WorkflowApplicationInstance_set_PersistenceManager (value) {
    this.WorkflowApplicationInstance$PersistenceManager$value = value;
  }; 

  function WorkflowApplicationInstance_set_Values (value) {
    this.WorkflowApplicationInstance$Values$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowApplicationInstance", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Abandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAbandon", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CanApplyUpdate", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAbandon", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true }, "get_DefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowApplicationInstance_get_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"))
    );

    $.Method({Static:false, Public:false}, "get_PersistenceManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase")), 
      WorkflowApplicationInstance_get_PersistenceManager
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Values", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])), 
      WorkflowApplicationInstance_get_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "MarkAsAbandoned", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkAsLoaded", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_DefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      WorkflowApplicationInstance_set_DefinitionIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PersistenceManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase")), 
      WorkflowApplicationInstance_set_PersistenceManager
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Values", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])), 
      WorkflowApplicationInstance_set_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfLoadedOrAbandoned", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplicationInstance+State"))
    );

    $.Field({Static:false, Public:false}, "state", $.Int32);

    $.Field({Static:false, Public:false}, "WorkflowApplicationInstance$DefinitionIdentity$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationInstance$PersistenceManager$value", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationInstance$Values$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Property({Static:false, Public:true }, "InstanceStore", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false}, "PersistenceManager", $asm0B.TypeRef("System.Activities.WorkflowApplication+PersistenceManagerBase"));

    $.Property({Static:false, Public:false}, "Values", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.WorkflowApplicationInstance+State */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.WorkflowApplicationInstance+State", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Initialized: 0, 
    Loaded: 1, 
    Aborted: 2, 
  }
);

/* class System.Activities.WorkflowApplicationIdleEventArgs */ 

(function WorkflowApplicationIdleEventArgs$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs"), 
      Name: "System.Activities.WorkflowApplicationIdleEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowApplication"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.Field({Static:false, Public:false}, "bookmarks", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));

    $.Property({Static:false, Public:true }, "Bookmarks", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationTerminatedException */ 

(function WorkflowApplicationTerminatedException$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationCompletedException"), 
      Name: "System.Activities.WorkflowApplicationTerminatedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs */ 

(function WorkflowApplicationUnhandledExceptionEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Exception)) ();
  };



  function WorkflowApplicationUnhandledExceptionEventArgs_get_ExceptionSource () {
    return this.WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSource$value;
  }; 

  function WorkflowApplicationUnhandledExceptionEventArgs_get_ExceptionSourceInstanceId () {
    return this.WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSourceInstanceId$value;
  }; 

  function WorkflowApplicationUnhandledExceptionEventArgs_get_UnhandledException () {
    return this.WorkflowApplicationUnhandledExceptionEventArgs$UnhandledException$value;
  }; 

  function WorkflowApplicationUnhandledExceptionEventArgs_set_ExceptionSource (value) {
    this.WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSource$value = value;
  }; 

  function WorkflowApplicationUnhandledExceptionEventArgs_set_ExceptionSourceInstanceId (value) {
    this.WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSourceInstanceId$value = value;
  }; 

  function WorkflowApplicationUnhandledExceptionEventArgs_set_UnhandledException (value) {
    this.WorkflowApplicationUnhandledExceptionEventArgs$UnhandledException$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationEventArgs"), 
      Name: "System.Activities.WorkflowApplicationUnhandledExceptionEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.WorkflowApplication"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.Activity"), $.String
        ])
    );

    $.Method({Static:false, Public:true }, "get_ExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowApplicationUnhandledExceptionEventArgs_get_ExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ExceptionSourceInstanceId", 
      JSIL.MethodSignature.Return($.String), 
      WorkflowApplicationUnhandledExceptionEventArgs_get_ExceptionSourceInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UnhandledException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      WorkflowApplicationUnhandledExceptionEventArgs_get_UnhandledException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExceptionSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowApplicationUnhandledExceptionEventArgs_set_ExceptionSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExceptionSourceInstanceId", 
      JSIL.MethodSignature.Action($.String), 
      WorkflowApplicationUnhandledExceptionEventArgs_set_ExceptionSourceInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_UnhandledException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      WorkflowApplicationUnhandledExceptionEventArgs_set_UnhandledException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationUnhandledExceptionEventArgs$UnhandledException$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSource$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowApplicationUnhandledExceptionEventArgs$ExceptionSourceInstanceId$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "UnhandledException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "ExceptionSource", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ExceptionSourceInstanceId", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowApplicationUnloadedException */ 

(function WorkflowApplicationUnloadedException$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.WorkflowApplicationException"), 
      Name: "System.Activities.WorkflowApplicationUnloadedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowDataContext */ 

(function WorkflowDataContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };









  function WorkflowDataContext_get_IncludesLocalVariables () {
    return this.WorkflowDataContext$IncludesLocalVariables$value;
  }; 






  function WorkflowDataContext_set_IncludesLocalVariables (value) {
    this.WorkflowDataContext$IncludesLocalVariables$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CustomTypeDescriptor"), 
      Name: "System.Activities.WorkflowDataContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_PropertyChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AddNotifyHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowDataContext+PropertyDescriptorImpl"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddProperty", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.WorkflowDataContext+PropertyDescriptorImpl")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposeEnvironment", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_IncludesLocalVariables", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowDataContext_get_IncludesLocalVariables
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_PropertyChangedEventHandler", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ResolutionContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnLocationChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_PropertyChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IncludesLocalVariables", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowDataContext_set_IncludesLocalVariables
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfEnvironmentDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "activityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "locationMapping", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.Location"), $asm0B.TypeRef("System.Activities.WorkflowDataContext+PropertyDescriptorImpl")]));

    $.Field({Static:false, Public:false}, "propertyChangedEventHandler", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.Field({Static:false, Public:false}, "properties", $asm0A.TypeRef("System.ComponentModel.PropertyDescriptorCollection"));

    $.Field({Static:false, Public:false}, "cachedResolutionContext", $asm0B.TypeRef("System.Activities.ActivityContext"));

    $.Field({Static:false, Public:false}, "WorkflowDataContext$IncludesLocalVariables$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyChanged", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IncludesLocalVariables", $.Boolean);

    $.Property({Static:false, Public:false}, "ResolutionContext", $asm0B.TypeRef("System.Activities.ActivityContext"));

    $.Property({Static:false, Public:false}, "PropertyChangedEventHandler", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.Event({Static:false, Public:true , Virtual:true }, "PropertyChanged", $asm0A.TypeRef("System.ComponentModel.PropertyChangedEventHandler"));

    $.ImplementInterfaces(
      /* 1 */ $asm0A.TypeRef("System.ComponentModel.INotifyPropertyChanged"), 
      /* 2 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowDataContext+PropertyDescriptorImpl */ 

(function PropertyDescriptorImpl$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"), 
      Name: "System.Activities.WorkflowDataContext+PropertyDescriptorImpl", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanResetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ComponentType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ShouldSerializeValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Field({Static:false, Public:false}, "reference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.Property({Static:false, Public:true , Virtual:true }, "ComponentType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowIdentity */ 

(function WorkflowIdentity$Members () {
  var $, $thisType;



























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowIdentity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Version"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Package", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPackage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedVersion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "HasControlCharacter", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "HasLeadingOrTrailingWhitespace", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "Normalize", 
      new JSIL.MethodSignature($.String, [
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Package", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPackage", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedVersion", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Version", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "TryParse", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Type])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateName", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidatePackage", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrapInSerializationException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:true , Public:false}, "identityString", $asm0A.TypeRef("System.Text.RegularExpressions.Regex"));

    $.Constant({Static:true , Public:false}, "versionString", $.String, "; Version=");

    $.Constant({Static:true , Public:false}, "packageString", $.String, "; Package=");

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "version", $asm07.TypeRef("System.Version"));

    $.Field({Static:false, Public:false}, "$package", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Version", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "Package", $.String);

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedVersion", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPackage", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"))
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.WorkflowIdentityConverter.__Type__]; });

})();

/* struct System.Activities.WorkflowIdentity+IdentityParser */ 

(function IdentityParser$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.WorkflowIdentity+IdentityParser", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, "ExtractName", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ExtractPackage", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ExtractVersion", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "Parse", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.WorkflowIdentity"), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "Parse", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.Constant({Static:true , Public:false}, "paramName", $.String, "identity");

    $.Field({Static:false, Public:false}, "throwOnError", $.Boolean);

    $.Field({Static:false, Public:false}, "match", $asm0A.TypeRef("System.Text.RegularExpressions.Match"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "version", $asm07.TypeRef("System.Version"));

    $.Field({Static:false, Public:false}, "$package", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.WorkflowIdentityFilter */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.WorkflowIdentityFilter", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Exact: 0, 
    Any: 1, 
    AnyRevision: 2, 
  }
);

/* class System.Activities.WorkflowIdentityFilterExtensions */ 

(function WorkflowIdentityFilterExtensions$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.WorkflowIdentityFilterExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "IsValid", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.WorkflowIdentityFilter")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.WorkflowInspectionServices */ 

(function WorkflowInspectionServices$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.Activities.WorkflowInspectionServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:true , Public:true }, "CacheMetadata", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CanInduceIdle", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetActivities", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.Activity")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.WorkflowInspectionServices_$lGetActivities$gd__3.__Type__]; });

    $.ExternalMethod({Static:true , Public:true }, "GetImplementationVersion", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Version"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Resolve", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity"), $.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowInspectionServices+<GetActivities>d__3 */ 

(function $lGetActivities$gd__3$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowInspectionServices+<GetActivities>d__3", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Activities.Activity$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Activities.Activity$g.get_Current", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("System.Activities.Activity")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:true }, "$l$g3__activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "$li$g5__1", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Activities.Activity$g.Current", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm0B.TypeRef("System.Activities.Activity")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.WorkflowInvoker */ 

(function WorkflowInvoker$Members () {
  var $, $thisType;















































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowInvoker", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_InvokeCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.InvokeCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AddToPendingInvokes", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.AsyncInvokeContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.TimeSpan"), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Extensions", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PendingInvokes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.AsyncInvokeContext")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RaiseInvokeCompletedCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.SendOrPostCallback"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalInvokeAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature("!!0", [
          $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.TimeSpan")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "Invoke", 
      new JSIL.MethodSignature("!!0", [
          $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])]), $asm07.TypeRef("System.TimeSpan")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.TimeSpan"), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Invoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeAsync", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "InvokeCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PostInvokeCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncInvokeContext"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PostInvokeCompleted", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.AsyncInvokeContext"), $.Boolean, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PostInvokeCompletedAndRemove", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncInvokeContext"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseInvokeCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_InvokeCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.InvokeCompletedEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveFromPendingInvokes", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.AsyncInvokeContext"), [$.Object])
    );

    $.Field({Static:true , Public:false}, "cancelCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "invokeCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "extensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Field({Static:false, Public:false}, "pendingInvokes", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.AsyncInvokeContext")]));

    $.Field({Static:false, Public:false}, "raiseInvokeCompletedCallback", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "workflow", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "InvokeCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.InvokeCompletedEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Extensions", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Property({Static:false, Public:false}, "PendingInvokes", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.AsyncInvokeContext")]));

    $.Property({Static:false, Public:false}, "RaiseInvokeCompletedCallback", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);

    $.Event({Static:false, Public:true }, "InvokeCompleted", $asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.InvokeCompletedEventArgs")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.WorkflowPersistenceContext */ 

(function WorkflowPersistenceContext$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.WorkflowPersistenceContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CloneAmbientTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PublicTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryBeginComplete", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.AsyncCallback"), $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.IAsyncResult")])
        ])
    );

    $.Field({Static:false, Public:false}, "contextOwnedTransaction", $asm27.TypeRef("System.Transactions.CommittableTransaction"));

    $.Field({Static:false, Public:false}, "clonedTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "PublicTransaction", $asm27.TypeRef("System.Transactions.Transaction"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD */ 

(function XD$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD", false, [], function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD+Runtime */ 

(function Runtime$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD+Runtime", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Namespace", $.String, "http://schemas.datacontract.org/2010/02/System.Activities");

    $.Constant({Static:true , Public:true }, "BookmarkManager", $.String, "BookmarkManager");

    $.Constant({Static:true , Public:true }, "ActivityInstanceMap", $.String, "InstanceMap");

    $.Constant({Static:true , Public:true }, "Scheduler", $.String, "Scheduler");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD+WorkflowApplication */ 

(function WorkflowApplication$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD+WorkflowApplication", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "InstanceState", $.String, "WFApplication");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD+ActivityInstance */ 

(function ActivityInstance$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD+ActivityInstance", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Name", $.String, "ActivityInstance");

    $.Constant({Static:true , Public:true }, "Children", $.String, "children");

    $.Constant({Static:true , Public:true }, "Owner", $.String, "owner");

    $.Constant({Static:true , Public:true }, "PropertyManager", $.String, "propertyManager");

    $.Constant({Static:true , Public:true }, "BlockingBookmarkCount", $.String, "blockingBookmarkCount");

    $.Constant({Static:true , Public:true }, "WaitingForTransactionContext", $.String, "waitingForTransactionContext");

    $.Constant({Static:true , Public:true }, "FaultBookmark", $.String, "faultBookmark");

    $.Constant({Static:true , Public:true }, "Bookmarks", $.String, "bookmarks");

    $.Constant({Static:true , Public:true }, "ActivityReferences", $.String, "activityReferences");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD+Executor */ 

(function Executor$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD+Executor", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Name", $.String, "Executor");

    $.Constant({Static:true , Public:true }, "BookmarkManager", $.String, "bookmarkMgr");

    $.Constant({Static:true , Public:true }, "RootInstance", $.String, "rootInstance");

    $.Constant({Static:true , Public:true }, "RootEnvironment", $.String, "rootEnvironment");

    $.Constant({Static:true , Public:true }, "SchedulerMember", $.String, "scheduler");

    $.Constant({Static:true , Public:true }, "ActivityInstanceMap", $.String, "activities");

    $.Constant({Static:true , Public:true }, "LastInstanceId", $.String, "lastInstanceId");

    $.Constant({Static:true , Public:true }, "NextTrackingRecordNumber", $.String, "nextTrackingRecordNumber");

    $.Constant({Static:true , Public:true }, "ExecutionState", $.String, "state");

    $.Constant({Static:true , Public:true }, "BookmarkScopeManager", $.String, "bookmarkScopeManager");

    $.Constant({Static:true , Public:true }, "IsolationBlockWaiters", $.String, "isolationBlockWaiters");

    $.Constant({Static:true , Public:true }, "TransactionContextWaiters", $.String, "transactionContextWaiters");

    $.Constant({Static:true , Public:true }, "PersistenceWaiters", $.String, "persistenceWaiters");

    $.Constant({Static:true , Public:true }, "SecondaryRootInstances", $.String, "secondaryRootInstances");

    $.Constant({Static:true , Public:true }, "MappableObjectManager", $.String, "mappableObjectManager");

    $.Constant({Static:true , Public:true }, "CompletionException", $.String, "completionException");

    $.Constant({Static:true , Public:true }, "ShouldRaiseMainBodyComplete", $.String, "shouldRaiseMainBodyComplete");

    $.Constant({Static:true , Public:true }, "ExtensionParticipantObjects", $.String, "extensionParticipantObjects");

    $.Constant({Static:true , Public:true }, "WorkflowOutputs", $.String, "workflowOutputs");

    $.Constant({Static:true , Public:true }, "MainRootCompleteBookmark", $.String, "mainRootCompleteBookmark");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XD+CompiledLocation */ 

(function CompiledLocation$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.XD+CompiledLocation", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Name", $.String, "CompiledLocation");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.TypedLocationWrapper`1 */ 

(function TypedLocationWrapper$b1$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.TypedLocationWrapper`1")]), 
      Name: "System.Activities.TypedLocationWrapper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanBeMapped", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInnerLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInnerLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "innerLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanBeMapped", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedInnerLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.EtwTrackingParticipantTrackRecords */ 

(function EtwTrackingParticipantTrackRecords$Members () {
  var $, $thisType;






















































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.EtwTrackingParticipantTrackRecords", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityScheduledRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityScheduledRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityStateRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityStateRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkResumptionRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkResumptionRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CancelRequestedRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CancelRequestedRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateEventDescriptors", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordError", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordErrorIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordInfo", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordInfoIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordWarning", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CustomTrackingRecordWarningIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureEventDescriptors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FaultPropagationRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FaultPropagationRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsEtwEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAbortedRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAbortedRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAbortedRecordWithId", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAbortedRecordWithIdIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceRecordWithId", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceRecordWithIdIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceSuspendedRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceSuspendedRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceSuspendedRecordWithId", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceSuspendedRecordWithIdIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceTerminatedRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceTerminatedRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceTerminatedRecordWithId", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceTerminatedRecordWithIdIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnhandledExceptionRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnhandledExceptionRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnhandledExceptionRecordWithId", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnhandledExceptionRecordWithIdIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUpdatedRecord", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.Int64, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUpdatedRecordIsEnabled", 
      new JSIL.MethodSignature($.Boolean, [$asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $asm07.TypeRef("System.Guid"), 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"), $.Int32, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm07.TypeRef("System.Guid"), 
          $.Int64, $.Int64, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "syncLock", $.Object);

    $.Field({Static:true , Public:false}, "eventDescriptorsCreated", $asm07.TypeRef("System.Boolean"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.SR */ 

(function SR$Members () {
  var $, $thisType;



































































































































































































































































































































































































































































































































































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityBlockingUpdate", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityCannotBeReferenced", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityCannotBeReferencedWithoutTarget", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityCannotReferenceItself", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDefinitionCannotBeShared", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateAlreadyOpened", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateCannotBeReferenced", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateCannotBeReferencedNoHandler", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateCannotBeReferencedWithoutTarget", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateCannotBeReferencedWithoutTargetNoHandler", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateHandlersMustBeDeclarations", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateNotOpened", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateOwnerEnvironmentMissing", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateOwnerMissing", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityDelegateOwnerNotInParentScope", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityHasNoImplementation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityNotPartOfThisTree", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityPropertyMustBeSet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityPropertyNotSet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityPropertyRequiresName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityPropertyRequiresType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityXamlServicesCompilationFailed", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityXamlServicesRequiresActivity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddedIdleArgumentBlockDU", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddedIdleVariableDefaultBlockDU", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchActivityNewAndOldParentMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchActivityNewParentMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchActivityPrivateChild", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchVariableNewAndOldParentMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchVariableNewParentMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchVariablePrivateChild", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMatchVariableSignatureMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddValidationErrorMustBeCalledFromConstraint", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "AmbiguousVBVariableReference", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentAlreadyInitialized", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentAlreadyInUse", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentDirectionMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentDoesNotExist", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentDoesNotExistInEnvironment", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentIsAddedMoreThanOnce", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentLocationExpressionTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentNotInTree", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentNumberRequiresTheSameAsParameterNumber", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentRequired", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentTypeMustBeCompatible", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentValueExpressionTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentViolationsFound", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BinaryExpressionActivityRequiresArgument", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkAlreadyExists", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkNotRegistered", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkScopeNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkScopeWithIdAlreadyExists", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CallbackExceptionFromHostAbort", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CallbackExceptionFromHostGetExtension", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CancellationHandlerFatalException", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanInduceIdleActivityInArgumentExpression", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanInduceIdleNotSpecified", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotDereferenceNull", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotGenerateSchemaForXmlSerializable", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotNestTransactionScopeWhenAmbientHandleIsSuppressed", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotPropagateExceptionWhileCanceling", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotRemoveExecutingActivityUpdateError", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotSaveOriginalValueForNewActivity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotSerializeExpression", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotSetValueToLocation", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotValidateNullObject", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanOnlyGetOwnedArguments", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanOnlyScheduleDirectChildren", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CatchOrFinallyExpected", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectionActivityRequiresCollection", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ColumnNumberTooLarge", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompensateWithoutCompensableActivity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompensationHandlerFatalException", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionIdNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionsActivityException", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionsCacheMetadataException", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionsDuplicateName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionsIgnoringInvalidIdentifierVariable", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledExpressionsNoCompiledRoot", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompiledLocationNoDefaultConstructor", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompilerErrorSpecificExpression", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompletionConditionSetButNoBody", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConfirmationHandlerFatalException", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConfirmWithoutCompensableActivity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConstructorInfoNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertVariableToValueExpressionFailed", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DebugInfoCannotEvaluateExpression", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DebugInfoExceptionCaught", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DebugInstrumentationFailed", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateArgumentAlreadyInUseOnActivity", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateArgumentDoesNotExist", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateArgumentMustBeReferenced", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateArgumentNotVisible", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateArgumentTypeInvalid", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateHandlersCannotBeScheduledDirectly", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateInArgumentTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateOutArgumentTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateParameterCannotBeModifiedAfterOpen", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DelegateParameterDirectionalityMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoNotSupportArrayIndexerOnNonArrayType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoNotSupportArrayIndexerReferenceWithDifferentArrayTypeAndResultType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoNotSupportArrayIndexerValueWithIncompatibleArrayTypeAndResultType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoNotSupportArrayIndexerWithDifferentArrayTypeAndResultType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoNotSupportArrayIndexerWithNonIntIndex", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DoWhileRequiresCondition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DUActivityTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateAnnotationName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateCatchClause", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateEvaluationOrderValues", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateImportAttribute", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateInstrumentation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateMethodFound", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateOriginActivityActivity", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateOriginActivityVariable", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DuplicateOriginVariableVariable", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DurationIsNegative", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DynamicActivityDuplicatePropertyDetected", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DynamicActivityMultipleExpressionLanguages", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "EmptyIdReturnedFromHost", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ErrorExtractingValuesForLambdaRewrite", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecutionPropertyAlreadyDefined", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtraOverloadGroupPropertiesConfigured", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FaultContextNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FinalStateCannotHaveProperty", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FinalStateCannotHaveTransition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartContainsUnconnectedNodes", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartMissingStartNode", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowDecisionRequiresCondition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowNodeCannotBeShared", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowNodeLockedForRuntime", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowSwitchRequiresExpression", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ForEachRequiresNonNullValues", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AbortingDueToDynamicUpdateFailure", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AbortingDueToInstanceTimeout", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AbortingDueToLoadFailure", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AbortingDueToVersionMismatch", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AbortInstanceOnTransactionFailureDoesNotMatch", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityFailedToOpenBefore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityInstanceFixupFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityIsNotRoot", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityIsUncached", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityMapIsCorrupt", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityNotICompiledExpressionRoot", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ActivityXamlServiceLineString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AddedIdleExpressionBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AECDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AECForPropertiesHasBeenDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AlreadySetupNoPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentMustbePropertyofWorkflowElement", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentNameRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ArgumentTypeCannotBeNull", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AssemblyReferenceIsImmutable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AsyncMethodsMustAllBeStaticOrInstance", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_AsyncMethodsMustFromSameType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BadCopyToArray", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BadWorkflowIdentityFormat", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BeforeInitializeComponentXBTExtensionResourceNotFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BeginExecuteMustNotReturnANullAsyncResult", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BeginExecuteMustUseProvidedStateAsAsyncResultState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BlockedUpdateInsideActivityUpdateByUserError", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BlockedUpdateInsideActivityUpdateError", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkNotFoundGeneric", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkScopeAlreadyInitialized", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkScopeHasBookmarks", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkScopeNotRegisteredForInitialize", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkScopeNotRegisteredForUnregister", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarkScopesRequireKeys", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BookmarksOnlyResumableWhileIdle", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotAddHandlesUpdateError", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotAddOrRemoveWithChildren", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotCallAbortInstanceFromWorkflowThread", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotChangeAbortInstanceFlagAfterPropertyRegistration", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotChangeMatchesInImplementation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotCompleteRuntimeOwnedTransaction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotCreateOwnerWithoutIdentity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotEnlistMultipleTransactions", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CanNotFindSymbolResolverInWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotGetValueOfOutArgument", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotInvokeOpenedActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotModifyCatchAfterOpen", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotMoveChildAcrossDifferentFlowNodeTypes", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotPerformOperationFromHandlerThread", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotPerformOperationOnHandle", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotPersistInsideIsolation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotPersistInsideNoPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotPersistWhileDetached", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotResetPropertyInDataContext", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSaveOriginalValueForActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSaveOriginalValuesForReferencedChildren", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotScheduleChildrenWhileEnteringIsolation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSerializeVariableExpression", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSetRuntimeTransactionInNoPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSetupIsolationInsideIsolation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSetupIsolationInsideNoPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSetupIsolationWithChildren", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSetValueOfInArgument", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotSuppressAlreadyRegisteredHandle", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUnregisterDefaultBookmarkScope", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUnregisterNullBookmarkScope", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUpdateEnvironmentInTheMiddleOfResolvingArguments", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUpdateEnvironmentInTheMiddleOfResolvingVariables", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotUseInputsWithLoad", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotWaitForIdleSynchronously", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CanOnlyAbortDirectChildren", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CanOnlyCancelDirectChildren", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CantFindTimerExtension", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ChangeConditionalTransitionToUnconditionalBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ChangeTransitionTypeDuringTransitioningBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ChangingTriggerOrUseOriginalConditionActionBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompensableActivityAlreadyConfirmedOrCompensated", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompensableActivityInsideTransactionScopeActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompensateWithNoTargetConstraint", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompiledExpressionsIgnoringUnnamedVariable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompiledLocationReferenceGetLocation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CompilerError", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ConfirmWithNoTargetConstraint", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ConstVariableCannotBeSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ControllerInvalidBeforeInitialize", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CopyToIndexOutOfRange", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CopyToNotEnoughSpaceInArray", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CopyToRankMustBeOne", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CreateBookmarkScopeFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CSharpExpressionsMustBeCompiled", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DebugInfoNotSkipArgumentResolution", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DebugInfoTryGetValueFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DebugSymbolChecksumValueInvalid", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultAbortReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultCancelationRequiresCancelHasBeenRequested", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultInvalidWorkflowExceptionMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultWorkflowApplicationExceptionMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DelegateArgumentChangeBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DelegateArgumentMustBeSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DictionaryIsReadOnly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DirectLambdaParameterReference", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DUActivityTypeMismatchRuntime", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DUDisallowIfCannotFindingMatchingCondition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DUTriggerOrConditionChangedDuringTransitioning", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EmptyGuidOnDeserializedInstance", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EnlistedTransactionPropertiesRequireIsolationBlocks", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EnumeratorNotStarted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EnvironmentDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ErrorsEncounteredWhileProcessingTree", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExclusiveHandleRegisterBookmarkScopeFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExclusiveHandleReinitializeFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExpressionRequiredForConversion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExtensionsCannotBeModified", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ExternalLocationsGetOnly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_FlowchartContainsReferences", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_GeneratedAndProvidedMapConflict", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_GeneratedAndProvidedMapConflictRuntime", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_GetRunnableRequiresOwner", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HandleInitializationContextDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HandleNotInitialized", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HasExecutingChildrenNoPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IdentityControlCharacter", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IdentityNameSemicolon", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IdentityWhitespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InitializationIncomplete", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceMethodCallRequiresTargetObject", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceMustBePaused", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceMustNotBePaused", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceStoreDoesntMatchWorkflowApplication", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceStoreFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceStoreHasDefaultOwner", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceStoreRequiredToPersist", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidActivityIdFormat", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidEvaluationOrderValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidIdleAction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidImplementationAsWorkflowRoot", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidImplementationAsWorkflowRootForRuntimeState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidImplementationAsWorkflowRootForRuntimeStateBecauseArgumentsChanged", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidImplementationMapRuntime", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidLocationExpression", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidLValueExpression", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidMergeMapArgumentsChanged", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidOriginalWorkflowDefinitionForImplementationMapCreation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidPrepareForRuntimeValidationSettings", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidRuntimeState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidStateForAsyncCallback", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidTypeConverterUsage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidUnhandledExceptionAction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidUpdatedWorkflowDefinitionForImplementationMapCreation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidVisualBasicSettingsValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IsolationLevelValidation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ITextExpressionParameterMustBeActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LambdaExpressionReturnTypeInvalid", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LambdaExpressionTypeRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LambdaNotXamlSerializable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_LoadingWorkflowApplicationRequiresInstanceStore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MarkCanceledOnlyCallableIfCancelRequested", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MovingActivitiesInStateBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MultiDimensionalArraysNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MultipleFlowNodesSharingSameChildBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MustCallPrepareBeforeFinalize", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MustMatchReferenceExpressionReturnType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NAUCDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NewArrayBoundsRequiresIntegralArguments", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NewArrayRequiresArrayTypeAsResultType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoCAInSecondaryRoot", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoChangesMapQueryNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoDynamicArgumentsInActivityDefinitionChange", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoDynamicArgumentsInActivityDefinitionChangeRuntime", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoOverloadGroupsAreConfigured", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoRunnableInstances", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NoRuntimeTransactionExists", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OnlyBookmarkOwnerCanRemove", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OnlyOneOperationPerActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OnlyOneRequireTransactionContextAllowed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OnlySingleCastDelegatesAllowed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OperationAlreadyCompleted", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OutOfIdSpaceIds", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OutOfInstanceIds", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OutOfInternalBookmarks", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OverloadingMethodMustBeStatic", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OverloadOnlyCallableFromWorkflowThread", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PauseWhenPersistableInvalidIfPersistable", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PickBranchTriggerActionSwapped", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PrepareForSerializationRequiresPersistability", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PrivateMembersHaveChanged", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ProvidedStateInitializedForExecution", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PublicChildrenChangeBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PublicEnvironmentAccessToNonGenericActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_QueryActivityIsNotInDefinition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_QueryVariableIsNotInDefinition", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_QueryVariableIsNotPublic", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReadonlyNameScopeCannotBeUpdated", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReferencedChildInIsNewlyAdded", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RegisteredBookmarkScopeRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RemovingTransitionsBlockDU", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResultArgumentMustBeBoundToResultProperty", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResultCannotBeSetOnArgumentExpressions", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RootArgumentViolationsFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RootArgumentViolationsFoundNoInputs", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeArgumentNotCreated", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeDelegateArgumentDirectionIncorrect", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeDelegateArgumentTypeIncorrect", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeOperationInProgress", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeRunning", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeTransactionAlreadyExists", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_RuntimeTransactionIsSuppressed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SameUserStateUsedForMultipleInvokes", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SavingActivityToXamlNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SavingFuncToXamlNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SendNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SequenceDuplicateReferences", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SetupOrCleanupWorkflowThreadThrew", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SymbolResolverAlreadyExists", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SymbolResolverMustBeSingleton", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerActivityNameRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerActivityNamespaceRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerActivityRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerAddGeneratedFileRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerLanguageRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TextExpressionCompilerOutputPathRequired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TimerExtensionAlreadyAttached", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TimerExtensionRequiresWorkflowInstance", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TooManyViolationsForExceptionMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TrackingRelatedWorkflowAbort", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TransactionHandleAlreadyHasTransaction", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TriggerOrConditionChangedDuringTransitioning", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TriggerOrConditionIsReferenced", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TryLoadRequiresOwner", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnInitializedRuntimeTransactionHandle", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnmatchedNoPersistExit", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnsupportedLocationReferenceValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UpdateSymbolsMustMatch", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ValueMustBeAssignableToType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_VariableMustBeSet", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_VariableOrArgumentAdditionToReferencedEnvironmentNoDUSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WDCDisposed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowApplicationAlreadyHasId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowApplicationInstanceAbandoned", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowApplicationInstanceLoaded", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkflowTerminatedExceptionDefaultMessage", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WorkItemAbortedInstance", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WrongCacheMetadataForCodeActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WrongCacheMetadataForNativeActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WrongNumberOfArgumentsForActivityDelegate", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_WrongOnCreateDynamicUpdateMapForNativeActivity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_XamlElementExpected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLocationOnPublicAccessReference", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "HostIdDoesNotMatchInstance", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "IdNotFoundInWorkflow", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ImplementationVersionMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IncompatibleTypeForMultidimensionalArrayItemReference", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "IncorrectIndexForArgument", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IndexOutOfBounds", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "IndicesAreNeeded", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitialStateCannotBeFinalState", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitialStateNotInStatesCollection", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InlinedLocationReferenceOnlyAccessibleByOwner", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InputParametersCountMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InputParametersMissing", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InputParametersTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InsufficientArraySize", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalConstraintException", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidActivityToBlockUpdate", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidActivityToBlockUpdateServices", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidArgumentExpression", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidAsyncBeginMethodSignature", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidAsyncCancelMethodSignature", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidAsyncEndMethodSignature", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidCallbackState", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidCompensateActivityUsage", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidCompensationToken", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidConfirmActivityUsage", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidDirectionForArgument", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidDynamicActivityProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidExecutionCallback", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidExpressionForLocation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidExpressionProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidFileName", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidGenericTypeInfo", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidImplementationMap", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidImplementationMapAssociation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidImplementationMapAssociationServices", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMergeMap", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMergeMapArgumentCount", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMergeMapEnvironmentCount", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMergeMapForImplementation", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMergeMapMemberCount", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidParameterInfo", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidPropertyType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidRootMergeMap", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidSourceLocationColumn", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidSourceLocationLineNumber", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidTypeForArgument", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidUpdateMap", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidXamlMember", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "LineNumberTooLarge", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "LiteralsMustBeValueTypesOrImmutableTypes", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "LocationExpressionCouldNotBeResolved", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "LocationTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapEntryNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MemberCannotBeNull", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MemberIsReadOnly", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MemberNotFound", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MemberNotSupportedByActivityXamlServices", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MethodInfoRequired", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MethodNameRequired", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingArgument", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingNameProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MissingSetAccessorForIndexer", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MultipleOverloadGroupsConfigured", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NativeActivityUpdateInstanceThrewException", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NoNamespace", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NoOutputLocationWasFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NoPersistScopeCannotContainPersist", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NullReferencedMemberAccess", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OneOfTwoPropertiesMustBeSet", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "OptionalExtensionTypeMatchedMultiple", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OriginalActivityReusedInModifiedDefinition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OriginalVariableReusedInModifiedDefinition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OriginCannotBeRuntimeIntrinsic", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OutArgumentCannotHaveInputValue", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OutOfRangeSourceLocationEndColumn", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OutOfRangeSourceLocationEndLine", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OverloadGroupHasSubsets", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "OverloadGroupsAreEquivalent", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParallelForEachRequiresNonNullValues", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PermissionArgumentWrongType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PickBranchRequiresTrigger", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PropertyCannotBeModified", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PropertyMemberNotSupportedByActivityXamlServices", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PropertyReadOnlyInWorkflowDataContext", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PropertyReferenceNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PublicMethodWithMatchingParameterDoesNotExist", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PublicReferencesOnActivityRequiringArgumentResolution", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryActivityIsInImplementation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryActivityIsPublic", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryVariableIsInImplementation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryVariableIsPublic", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadAccessToWriteOnlyPublicReference", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadonlyPropertyCannotBeSet", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequiredArgumentValueNotSupplied", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequiredExtensionTypeNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequiredVariableCoundNotBeExtracted", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequireExtensionOnlyAcceptsReferenceTypes", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ResultArgumentHasRequiredTypeAndDirection", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ResultArgumentMustBeSpecificType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RethrowMustBeAPublicChild", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RethrowNotInATryCatch", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReturnTypeIncompatible", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RootActivityAlreadyAssociatedWithInstance", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RootActivityCannotBeReferenced", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeArgumentBindingInvalid", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeArgumentChangeBlockDU", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeArgumentNotOpen", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionHandleNotRegisteredAsExecutionProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SchemaContextFromBeforeInitializeComponentXBTExtensionCannotBeGeneric", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SchemaContextFromBeforeInitializeComponentXBTExtensionNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SimpleStateMustHaveOneTransition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SpecialMethodNotFound", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "StateCannotBeAddedTwice", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "StateCannotBeSerialized", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "StateMachineMustHaveInitialState", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "StateNotBelongToAnyParent", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SubexpressionResultWasNotVisible", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SubexpressionResultWasNull", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SwitchCaseKeyTypesMustMatchExpressionType", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SwitchCaseNullWithValueType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SwitchCaseTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SymbolNamesMustBeUnique", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SymbolResolverDoesNotHaveSymbol", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TargetTypeAndTargetObjectAreMutuallyExclusive", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TargetTypeCannotBeEnum", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TargetTypeIsValueType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TextExpressionCompilerNoCodebase", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TextExpressionCompilerUnableToLoadAssembly", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TextExpressionMetadataRequiresCompilation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutOnOperation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TransitionCannotBeAddedTwice", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TransitionTargetCannotBeNull", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchInvalidStateForUpdate", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeConverterHelperCacheAddFailed", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeMismatchForAssign", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeMustbeValueType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeNotAssignableTo", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnableToLocateCompiledLocationContext", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnconditionalTransitionShouldNotShareNullTriggersWithOthers", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnconditionalTransitionShouldNotShareTriggersWithOthers", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnexpectedArgumentCount", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnexpectedExpressionNodeType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnknownExpressionCompilationError", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnknownLanguage", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnopenedActivitiesCannotBeExecuted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsupportedExpressionType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsupportedMemberExpressionWithType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsupportedReferenceExpressionType", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnusedInputArguments", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateMapBuilderRequiredProperty", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidationContextCannotBeNull", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidationErrorPrefixForHiddenActivity", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidationErrorPrefixForPublicActivityWithHiddenParent", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableAlreadyInUseOnActivity", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableCannotBePopulatedInLocationEnvironment", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableDoesNotExist", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableExpressionTypeMismatch", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableIsReadOnly", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableNameNotAnIdentifier", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableNotOpen", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableNotVisible", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableOnlyAccessibleAtScopeOfDeclaration", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableOrArgumentDoesNotExist", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableShouldBeOpen", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableTypeInvalid", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariableTypeNotMatchLocationType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VBExpressionTamperedSinceLastCompiled", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WhileRequiresCondition", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowAbortedReason", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationAborted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationCompleted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationTerminated", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationUnloaded", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowIdentityNullHostId", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowIdentityNullStateId", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowIdentityStateIdHostIdMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAborted", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceIsReadOnly", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceNotFoundInStore", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceUnlocked", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteAccessToReadOnlyPublicReference", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteonlyPropertyCannotBeRead", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrongArgumentType", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrongEnvironmentCount", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrongMemberCount", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WrongOriginalEnvironmentCount", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "XamlBuildTaskResourceNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "XamlElementExpectedAt", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ActivityInstanceFixupFailed", $.String);

    $.Property({Static:true , Public:false}, "ActivityMapIsCorrupt", $.String);

    $.Property({Static:true , Public:false}, "AECDisposed", $.String);

    $.Property({Static:true , Public:false}, "HandleInitializationContextDisposed", $.String);

    $.Property({Static:true , Public:false}, "CannotGetValueOfOutArgument", $.String);

    $.Property({Static:true , Public:false}, "OverloadOnlyCallableFromWorkflowThread", $.String);

    $.Property({Static:true , Public:false}, "SameUserStateUsedForMultipleInvokes", $.String);

    $.Property({Static:true , Public:false}, "SendNotSupported", $.String);

    $.Property({Static:true , Public:false}, "InitializationIncomplete", $.String);

    $.Property({Static:true , Public:false}, "CannotSetValueOfInArgument", $.String);

    $.Property({Static:true , Public:false}, "CanOnlyCancelDirectChildren", $.String);

    $.Property({Static:true , Public:false}, "DictionaryIsReadOnly", $.String);

    $.Property({Static:true , Public:false}, "EnvironmentDisposed", $.String);

    $.Property({Static:true , Public:false}, "ResultCannotBeSetOnArgumentExpressions", $.String);

    $.Property({Static:true , Public:false}, "OutOfInternalBookmarks", $.String);

    $.Property({Static:true , Public:false}, "ConstVariableCannotBeSet", $.String);

    $.Property({Static:true , Public:false}, "InstanceStoreRequiredToPersist", $.String);

    $.Property({Static:true , Public:false}, "ControllerInvalidBeforeInitialize", $.String);

    $.Property({Static:true , Public:false}, "OperationAlreadyCompleted", $.String);

    $.Property({Static:true , Public:false}, "OnlyOneOperationPerActivity", $.String);

    $.Property({Static:true , Public:false}, "TrackingRelatedWorkflowAbort", $.String);

    $.Property({Static:true , Public:false}, "CannotUnregisterDefaultBookmarkScope", $.String);

    $.Property({Static:true , Public:false}, "DefaultAbortReason", $.String);

    $.Property({Static:true , Public:false}, "InstanceMustBePaused", $.String);

    $.Property({Static:true , Public:false}, "InstanceMustNotBePaused", $.String);

    $.Property({Static:true , Public:false}, "CannotSerializeVariableExpression", $.String);

    $.Property({Static:true , Public:false}, "RuntimeOperationInProgress", $.String);

    $.Property({Static:true , Public:false}, "RuntimeRunning", $.String);

    $.Property({Static:true , Public:false}, "BookmarksOnlyResumableWhileIdle", $.String);

    $.Property({Static:true , Public:false}, "CannotCompleteRuntimeOwnedTransaction", $.String);

    $.Property({Static:true , Public:false}, "OnlySingleCastDelegatesAllowed", $.String);

    $.Property({Static:true , Public:false}, "CannotPerformOperationFromHandlerThread", $.String);

    $.Property({Static:true , Public:false}, "InvalidIdleAction", $.String);

    $.Property({Static:true , Public:false}, "InvalidUnhandledExceptionAction", $.String);

    $.Property({Static:true , Public:false}, "MultiDimensionalArraysNotSupported", $.String);

    $.Property({Static:true , Public:false}, "WrongCacheMetadataForNativeActivity", $.String);

    $.Property({Static:true , Public:false}, "WrongOnCreateDynamicUpdateMapForNativeActivity", $.String);

    $.Property({Static:true , Public:false}, "WrongCacheMetadataForCodeActivity", $.String);

    $.Property({Static:true , Public:false}, "AsyncMethodsMustAllBeStaticOrInstance", $.String);

    $.Property({Static:true , Public:false}, "AsyncMethodsMustFromSameType", $.String);

    $.Property({Static:true , Public:false}, "InvalidStateForAsyncCallback", $.String);

    $.Property({Static:true , Public:false}, "EnumeratorNotStarted", $.String);

    $.Property({Static:true , Public:false}, "CannotInvokeOpenedActivity", $.String);

    $.Property({Static:true , Public:false}, "CannotPersistWhileDetached", $.String);

    $.Property({Static:true , Public:false}, "DirectLambdaParameterReference", $.String);

    $.Property({Static:true , Public:false}, "ActivityFailedToOpenBefore", $.String);

    $.Property({Static:true , Public:false}, "CannotAddHandlesUpdateError", $.String);

    $.Property({Static:true , Public:false}, "CopyToIndexOutOfRange", $.String);

    $.Property({Static:true , Public:false}, "CopyToRankMustBeOne", $.String);

    $.Property({Static:true , Public:false}, "CopyToNotEnoughSpaceInArray", $.String);

    $.Property({Static:true , Public:false}, "ArgumentNameRequired", $.String);

    $.Property({Static:true , Public:false}, "ProvidedStateInitializedForExecution", $.String);

    $.Property({Static:true , Public:false}, "OutOfIdSpaceIds", $.String);

    $.Property({Static:true , Public:false}, "InvalidActivityIdFormat", $.String);

    $.Property({Static:true , Public:false}, "InvalidLocationExpression", $.String);

    $.Property({Static:true , Public:false}, "InvalidTypeConverterUsage", $.String);

    $.Property({Static:true , Public:false}, "TooManyViolationsForExceptionMessage", $.String);

    $.Property({Static:true , Public:false}, "DefaultInvalidWorkflowExceptionMessage", $.String);

    $.Property({Static:true , Public:false}, "WrongNumberOfArgumentsForActivityDelegate", $.String);

    $.Property({Static:true , Public:false}, "AECForPropertiesHasBeenDisposed", $.String);

    $.Property({Static:true , Public:false}, "CannotAddOrRemoveWithChildren", $.String);

    $.Property({Static:true , Public:false}, "SetupOrCleanupWorkflowThreadThrew", $.String);

    $.Property({Static:true , Public:false}, "WorkItemAbortedInstance", $.String);

    $.Property({Static:true , Public:false}, "ValueMustBeAssignableToType", $.String);

    $.Property({Static:true , Public:false}, "ExternalLocationsGetOnly", $.String);

    $.Property({Static:true , Public:false}, "ResultArgumentMustBeBoundToResultProperty", $.String);

    $.Property({Static:true , Public:false}, "RootArgumentViolationsFoundNoInputs", $.String);

    $.Property({Static:true , Public:false}, "RootArgumentViolationsFound", $.String);

    $.Property({Static:true , Public:false}, "DefaultCancelationRequiresCancelHasBeenRequested", $.String);

    $.Property({Static:true , Public:false}, "AlreadySetupNoPersist", $.String);

    $.Property({Static:true , Public:false}, "HasExecutingChildrenNoPersist", $.String);

    $.Property({Static:true , Public:false}, "OutOfInstanceIds", $.String);

    $.Property({Static:true , Public:false}, "DelegateArgumentMustBeSet", $.String);

    $.Property({Static:true , Public:false}, "VariableMustBeSet", $.String);

    $.Property({Static:true , Public:false}, "CannotEnlistMultipleTransactions", $.String);

    $.Property({Static:true , Public:false}, "CannotPersistInsideIsolation", $.String);

    $.Property({Static:true , Public:false}, "CannotPersistInsideNoPersist", $.String);

    $.Property({Static:true , Public:false}, "CannotScheduleChildrenWhileEnteringIsolation", $.String);

    $.Property({Static:true , Public:false}, "CannotSetupIsolationInsideIsolation", $.String);

    $.Property({Static:true , Public:false}, "CannotSetupIsolationInsideNoPersist", $.String);

    $.Property({Static:true , Public:false}, "CannotSetupIsolationWithChildren", $.String);

    $.Property({Static:true , Public:false}, "EnlistedTransactionPropertiesRequireIsolationBlocks", $.String);

    $.Property({Static:true , Public:false}, "PrepareForSerializationRequiresPersistability", $.String);

    $.Property({Static:true , Public:false}, "PauseWhenPersistableInvalidIfPersistable", $.String);

    $.Property({Static:true , Public:false}, "CannotResetPropertyInDataContext", $.String);

    $.Property({Static:true , Public:false}, "CompilerError", $.String);

    $.Property({Static:true , Public:false}, "CannotModifyCatchAfterOpen", $.String);

    $.Property({Static:true , Public:false}, "BookmarkNotFoundGeneric", $.String);

    $.Property({Static:true , Public:false}, "BookmarkScopeAlreadyInitialized", $.String);

    $.Property({Static:true , Public:false}, "ExclusiveHandleRegisterBookmarkScopeFailed", $.String);

    $.Property({Static:true , Public:false}, "ExclusiveHandleReinitializeFailed", $.String);

    $.Property({Static:true , Public:false}, "CreateBookmarkScopeFailed", $.String);

    $.Property({Static:true , Public:false}, "CannotUnregisterNullBookmarkScope", $.String);

    $.Property({Static:true , Public:false}, "RegisteredBookmarkScopeRequired", $.String);

    $.Property({Static:true , Public:false}, "BookmarkScopesRequireKeys", $.String);

    $.Property({Static:true , Public:false}, "DebugInfoNotSkipArgumentResolution", $.String);

    $.Property({Static:true , Public:false}, "DebugInfoTryGetValueFailed", $.String);

    $.Property({Static:true , Public:false}, "RuntimeTransactionAlreadyExists", $.String);

    $.Property({Static:true , Public:false}, "RuntimeTransactionIsSuppressed", $.String);

    $.Property({Static:true , Public:false}, "NoRuntimeTransactionExists", $.String);

    $.Property({Static:true , Public:false}, "CannotSuppressAlreadyRegisteredHandle", $.String);

    $.Property({Static:true , Public:false}, "CannotSetRuntimeTransactionInNoPersist", $.String);

    $.Property({Static:true , Public:false}, "OnlyOneRequireTransactionContextAllowed", $.String);

    $.Property({Static:true , Public:false}, "ExtensionsCannotBeModified", $.String);

    $.Property({Static:true , Public:false}, "CannotWaitForIdleSynchronously", $.String);

    $.Property({Static:true , Public:false}, "BookmarkScopeHasBookmarks", $.String);

    $.Property({Static:true , Public:false}, "BookmarkScopeNotRegisteredForInitialize", $.String);

    $.Property({Static:true , Public:false}, "BookmarkScopeNotRegisteredForUnregister", $.String);

    $.Property({Static:true , Public:false}, "MarkCanceledOnlyCallableIfCancelRequested", $.String);

    $.Property({Static:true , Public:false}, "OnlyBookmarkOwnerCanRemove", $.String);

    $.Property({Static:true , Public:false}, "CanOnlyAbortDirectChildren", $.String);

    $.Property({Static:true , Public:false}, "DefaultWorkflowApplicationExceptionMessage", $.String);

    $.Property({Static:true , Public:false}, "BeginExecuteMustUseProvidedStateAsAsyncResultState", $.String);

    $.Property({Static:true , Public:false}, "BeginExecuteMustNotReturnANullAsyncResult", $.String);

    $.Property({Static:true , Public:false}, "CompensableActivityAlreadyConfirmedOrCompensated", $.String);

    $.Property({Static:true , Public:false}, "CannotCallAbortInstanceFromWorkflowThread", $.String);

    $.Property({Static:true , Public:false}, "BadCopyToArray", $.String);

    $.Property({Static:true , Public:false}, "ReadonlyNameScopeCannotBeUpdated", $.String);

    $.Property({Static:true , Public:false}, "SymbolResolverMustBeSingleton", $.String);

    $.Property({Static:true , Public:false}, "SymbolResolverAlreadyExists", $.String);

    $.Property({Static:true , Public:false}, "CanNotFindSymbolResolverInWorkflowInstanceExtensions", $.String);

    $.Property({Static:true , Public:false}, "UnmatchedNoPersistExit", $.String);

    $.Property({Static:true , Public:false}, "HandleNotInitialized", $.String);

    $.Property({Static:true , Public:false}, "TransactionHandleAlreadyHasTransaction", $.String);

    $.Property({Static:true , Public:false}, "CannotPerformOperationOnHandle", $.String);

    $.Property({Static:true , Public:false}, "SavingActivityToXamlNotSupported", $.String);

    $.Property({Static:true , Public:false}, "NoOverloadGroupsAreConfigured", $.String);

    $.Property({Static:true , Public:false}, "ErrorsEncounteredWhileProcessingTree", $.String);

    $.Property({Static:true , Public:false}, "RuntimeDelegateArgumentTypeIncorrect", $.String);

    $.Property({Static:true , Public:false}, "RuntimeDelegateArgumentDirectionIncorrect", $.String);

    $.Property({Static:true , Public:false}, "NoCAInSecondaryRoot", $.String);

    $.Property({Static:true , Public:false}, "CompensateWithNoTargetConstraint", $.String);

    $.Property({Static:true , Public:false}, "ConfirmWithNoTargetConstraint", $.String);

    $.Property({Static:true , Public:false}, "UnInitializedRuntimeTransactionHandle", $.String);

    $.Property({Static:true , Public:false}, "ArgumentTypeCannotBeNull", $.String);

    $.Property({Static:true , Public:false}, "AbortingDueToInstanceTimeout", $.String);

    $.Property({Static:true , Public:false}, "InvalidLValueExpression", $.String);

    $.Property({Static:true , Public:false}, "CantFindTimerExtension", $.String);

    $.Property({Static:true , Public:false}, "InstanceMethodCallRequiresTargetObject", $.String);

    $.Property({Static:true , Public:false}, "NewArrayBoundsRequiresIntegralArguments", $.String);

    $.Property({Static:true , Public:false}, "NewArrayRequiresArrayTypeAsResultType", $.String);

    $.Property({Static:true , Public:false}, "ExpressionRequiredForConversion", $.String);

    $.Property({Static:true , Public:false}, "OverloadingMethodMustBeStatic", $.String);

    $.Property({Static:true , Public:false}, "IsolationLevelValidation", $.String);

    $.Property({Static:true , Public:false}, "AbortInstanceOnTransactionFailureDoesNotMatch", $.String);

    $.Property({Static:true , Public:false}, "CannotChangeAbortInstanceFlagAfterPropertyRegistration", $.String);

    $.Property({Static:true , Public:false}, "CompensableActivityInsideTransactionScopeActivity", $.String);

    $.Property({Static:true , Public:false}, "WorkflowTerminatedExceptionDefaultMessage", $.String);

    $.Property({Static:true , Public:false}, "XamlElementExpected", $.String);

    $.Property({Static:true , Public:false}, "InvalidRuntimeState", $.String);

    $.Property({Static:true , Public:false}, "InstanceStoreFailed", $.String);

    $.Property({Static:true , Public:false}, "LoadingWorkflowApplicationRequiresInstanceStore", $.String);

    $.Property({Static:true , Public:false}, "WorkflowApplicationAlreadyHasId", $.String);

    $.Property({Static:true , Public:false}, "CannotUseInputsWithLoad", $.String);

    $.Property({Static:true , Public:false}, "ArgumentMustbePropertyofWorkflowElement", $.String);

    $.Property({Static:true , Public:false}, "TimerExtensionAlreadyAttached", $.String);

    $.Property({Static:true , Public:false}, "TimerExtensionRequiresWorkflowInstance", $.String);

    $.Property({Static:true , Public:false}, "RuntimeArgumentNotCreated", $.String);

    $.Property({Static:true , Public:false}, "InvalidEvaluationOrderValue", $.String);

    $.Property({Static:true , Public:false}, "LambdaNotXamlSerializable", $.String);

    $.Property({Static:true , Public:false}, "InvalidVisualBasicSettingsValue", $.String);

    $.Property({Static:true , Public:false}, "EmptyGuidOnDeserializedInstance", $.String);

    $.Property({Static:true , Public:false}, "NoRunnableInstances", $.String);

    $.Property({Static:true , Public:false}, "AbortingDueToLoadFailure", $.String);

    $.Property({Static:true , Public:false}, "TryLoadRequiresOwner", $.String);

    $.Property({Static:true , Public:false}, "GetRunnableRequiresOwner", $.String);

    $.Property({Static:true , Public:false}, "MustMatchReferenceExpressionReturnType", $.String);

    $.Property({Static:true , Public:false}, "PublicEnvironmentAccessToNonGenericActivity", $.String);

    $.Property({Static:true , Public:false}, "SavingFuncToXamlNotSupported", $.String);

    $.Property({Static:true , Public:false}, "CSharpExpressionsMustBeCompiled", $.String);

    $.Property({Static:true , Public:false}, "ActivityNotICompiledExpressionRoot", $.String);

    $.Property({Static:true , Public:false}, "BadWorkflowIdentityFormat", $.String);

    $.Property({Static:true , Public:false}, "IdentityNameSemicolon", $.String);

    $.Property({Static:true , Public:false}, "IdentityControlCharacter", $.String);

    $.Property({Static:true , Public:false}, "IdentityWhitespace", $.String);

    $.Property({Static:true , Public:false}, "CompiledExpressionsIgnoringUnnamedVariable", $.String);

    $.Property({Static:true , Public:false}, "PublicChildrenChangeBlockDU", $.String);

    $.Property({Static:true , Public:false}, "CannotSaveOriginalValueForActivity", $.String);

    $.Property({Static:true , Public:false}, "DelegateArgumentChangeBlockDU", $.String);

    $.Property({Static:true , Public:false}, "BlockedUpdateInsideActivityUpdateError", $.String);

    $.Property({Static:true , Public:false}, "CannotUpdateEnvironmentInTheMiddleOfResolvingVariables", $.String);

    $.Property({Static:true , Public:false}, "InstanceStoreDoesntMatchWorkflowApplication", $.String);

    $.Property({Static:true , Public:false}, "WorkflowApplicationInstanceLoaded", $.String);

    $.Property({Static:true , Public:false}, "WorkflowApplicationInstanceAbandoned", $.String);

    $.Property({Static:true , Public:false}, "MustCallPrepareBeforeFinalize", $.String);

    $.Property({Static:true , Public:false}, "ActivityIsUncached", $.String);

    $.Property({Static:true , Public:false}, "ActivityIsNotRoot", $.String);

    $.Property({Static:true , Public:false}, "QueryActivityIsNotInDefinition", $.String);

    $.Property({Static:true , Public:false}, "QueryVariableIsNotInDefinition", $.String);

    $.Property({Static:true , Public:false}, "QueryVariableIsNotPublic", $.String);

    $.Property({Static:true , Public:false}, "UpdateSymbolsMustMatch", $.String);

    $.Property({Static:true , Public:false}, "AssemblyReferenceIsImmutable", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerActivityNameRequired", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerActivityNamespaceRequired", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerActivityRequired", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerAddGeneratedFileRequired", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerLanguageRequired", $.String);

    $.Property({Static:true , Public:false}, "TextExpressionCompilerOutputPathRequired", $.String);

    $.Property({Static:true , Public:false}, "ITextExpressionParameterMustBeActivity", $.String);

    $.Property({Static:true , Public:false}, "BlockedUpdateInsideActivityUpdateByUserError", $.String);

    $.Property({Static:true , Public:false}, "CannotUpdateEnvironmentInTheMiddleOfResolvingArguments", $.String);

    $.Property({Static:true , Public:false}, "InvalidImplementationAsWorkflowRoot", $.String);

    $.Property({Static:true , Public:false}, "InvalidOriginalWorkflowDefinitionForImplementationMapCreation", $.String);

    $.Property({Static:true , Public:false}, "InvalidUpdatedWorkflowDefinitionForImplementationMapCreation", $.String);

    $.Property({Static:true , Public:false}, "NoDynamicArgumentsInActivityDefinitionChange", $.String);

    $.Property({Static:true , Public:false}, "NoDynamicArgumentsInActivityDefinitionChangeRuntime", $.String);

    $.Property({Static:true , Public:false}, "InvalidImplementationMapRuntime", $.String);

    $.Property({Static:true , Public:false}, "InvalidImplementationAsWorkflowRootForRuntimeState", $.String);

    $.Property({Static:true , Public:false}, "InvalidImplementationAsWorkflowRootForRuntimeStateBecauseArgumentsChanged", $.String);

    $.Property({Static:true , Public:false}, "PrivateMembersHaveChanged", $.String);

    $.Property({Static:true , Public:false}, "BeforeInitializeComponentXBTExtensionResourceNotFound", $.String);

    $.Property({Static:true , Public:false}, "ActivityXamlServiceLineString", $.String);

    $.Property({Static:true , Public:false}, "NAUCDisposed", $.String);

    $.Property({Static:true , Public:false}, "WDCDisposed", $.String);

    $.Property({Static:true , Public:false}, "AddedIdleExpressionBlockDU", $.String);

    $.Property({Static:true , Public:false}, "AbortingDueToDynamicUpdateFailure", $.String);

    $.Property({Static:true , Public:false}, "AbortingDueToVersionMismatch", $.String);

    $.Property({Static:true , Public:false}, "CompiledLocationReferenceGetLocation", $.String);

    $.Property({Static:true , Public:false}, "InvalidMergeMapArgumentsChanged", $.String);

    $.Property({Static:true , Public:false}, "MultipleFlowNodesSharingSameChildBlockDU", $.String);

    $.Property({Static:true , Public:false}, "DUActivityTypeMismatchRuntime", $.String);

    $.Property({Static:true , Public:false}, "InstanceStoreHasDefaultOwner", $.String);

    $.Property({Static:true , Public:false}, "CannotCreateOwnerWithoutIdentity", $.String);

    $.Property({Static:true , Public:false}, "CannotSaveOriginalValuesForReferencedChildren", $.String);

    $.Property({Static:true , Public:false}, "ReferencedChildInIsNewlyAdded", $.String);

    $.Property({Static:true , Public:false}, "CannotChangeMatchesInImplementation", $.String);

    $.Property({Static:true , Public:false}, "GeneratedAndProvidedMapConflict", $.String);

    $.Property({Static:true , Public:false}, "GeneratedAndProvidedMapConflictRuntime", $.String);

    $.Property({Static:true , Public:false}, "SequenceDuplicateReferences", $.String);

    $.Property({Static:true , Public:false}, "FlowchartContainsReferences", $.String);

    $.Property({Static:true , Public:false}, "CannotMoveChildAcrossDifferentFlowNodeTypes", $.String);

    $.Property({Static:true , Public:false}, "PickBranchTriggerActionSwapped", $.String);

    $.Property({Static:true , Public:false}, "NoChangesMapQueryNotSupported", $.String);

    $.Property({Static:true , Public:false}, "LambdaExpressionReturnTypeInvalid", $.String);

    $.Property({Static:true , Public:false}, "LambdaExpressionTypeRequired", $.String);

    $.Property({Static:true , Public:false}, "UnsupportedLocationReferenceValue", $.String);

    $.Property({Static:true , Public:false}, "VariableOrArgumentAdditionToReferencedEnvironmentNoDUSupported", $.String);

    $.Property({Static:true , Public:false}, "InvalidPrepareForRuntimeValidationSettings", $.String);

    $.Property({Static:true , Public:false}, "DebugSymbolChecksumValueInvalid", $.String);

    $.Property({Static:true , Public:false}, "ChangeConditionalTransitionToUnconditionalBlockDU", $.String);

    $.Property({Static:true , Public:false}, "ChangeTransitionTypeDuringTransitioningBlockDU", $.String);

    $.Property({Static:true , Public:false}, "ChangingTriggerOrUseOriginalConditionActionBlockDU", $.String);

    $.Property({Static:true , Public:false}, "DUDisallowIfCannotFindingMatchingCondition", $.String);

    $.Property({Static:true , Public:false}, "DUTriggerOrConditionChangedDuringTransitioning", $.String);

    $.Property({Static:true , Public:false}, "RemovingTransitionsBlockDU", $.String);

    $.Property({Static:true , Public:false}, "TriggerOrConditionChangedDuringTransitioning", $.String);

    $.Property({Static:true , Public:false}, "TriggerOrConditionIsReferenced", $.String);

    $.Property({Static:true , Public:false}, "MovingActivitiesInStateBlockDU", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.TD */ 

(function TD$Members () {
  var $, $thisType;







































































































































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.TD", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityCompleted", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityCompletedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityScheduled", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ActivityScheduledIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkScopeInitialized", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "BookmarkScopeInitializedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CacheRootMetadataStart", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CacheRootMetadataStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CacheRootMetadataStop", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CacheRootMetadataStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompensationState", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompensationStateIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompileVbExpressionStart", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompileVbExpressionStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompileVbExpressionStop", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CompileVbExpressionStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteBookmarkWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteBookmarkWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteCancelActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteCancelActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteCompletionWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteCompletionWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteExecuteActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteExecuteActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteFaultWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteFaultWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteRuntimeWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteRuntimeWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteTransactionContextWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompleteTransactionContextWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateBookmark", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateBookmarkIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateBookmarkScope", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateBookmarkScopeIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateEventDescriptors", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "EnsureEventDescriptors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "EnterNoPersistBlock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "EnterNoPersistBlockIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteWorkItemStart", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteWorkItemStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteWorkItemStop", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteWorkItemStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ExitNoPersistBlock", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ExitNoPersistBlockIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartEmpty", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartEmptyIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartNextNull", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartNextNullIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartStart", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchCase", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchCaseIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchCaseNotFound", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchCaseNotFoundIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchDefault", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlowchartSwitchDefaultIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "InArgumentBound", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InArgumentBoundIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalCacheMetadataStart", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalCacheMetadataStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalCacheMetadataStop", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalCacheMetadataStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokedMethodThrewException", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokedMethodThrewExceptionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodDoesNotUseAsyncPattern", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodDoesNotUseAsyncPatternIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodIsNotStatic", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodIsNotStaticIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodIsStatic", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodIsStaticIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodUseAsyncPattern", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvokeMethodUseAsyncPatternIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsEtwEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionComplete", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionCompleteIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionCompletionRequested", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionCompletionRequestedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionSet", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RuntimeTransactionSetIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleBookmarkWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleBookmarkWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleCancelActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleCancelActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleCompletionWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleCompletionWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleExecuteActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleExecuteActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleFaultWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleFaultWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleRuntimeWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleRuntimeWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleTransactionContextWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScheduleTransactionContextWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StartBookmarkWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartBookmarkWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCancelActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCancelActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCompletionWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCompletionWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartExecuteActivityWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartExecuteActivityWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartFaultWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartFaultWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartRuntimeWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartRuntimeWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartTransactionContextWorkItem", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "StartTransactionContextWorkItemIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "SwitchCaseNotFound", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "SwitchCaseNotFoundIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingDataExtracted", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingDataExtractedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordDropped", 
      new JSIL.MethodSignature(null, [$.Int64, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordDroppedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordRaised", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordRaisedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordTruncated", 
      new JSIL.MethodSignature(null, [$.Int64, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingRecordTruncatedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingValueNotSerializable", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "TrackingValueNotSerializableIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionDuringCancelation", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionDuringCancelationIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionFromCatchOrFinally", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionFromCatchOrFinallyIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionFromTry", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryCatchExceptionFromTryIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityResume", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityResumeIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityStart", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityStartIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityStop", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivityStopIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivitySuspend", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowActivitySuspendIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationCompleted", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationCompletedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationIdled", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationIdledIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationPersistableIdle", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationPersistableIdleIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationPersisted", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationPersistedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationTerminated", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationTerminatedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationUnhandledException", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationUnhandledExceptionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationUnloaded", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowApplicationUnloadedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAborted", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceAbortedIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceCanceled", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "WorkflowInstanceCanceledIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.Int64, $asm07.TypeRef("System.Guid"), 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $asm07.TypeRef("System.Guid"), $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteTraceSource", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $asm25.TypeRef("System.Runtime.TracePayload")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "syncLock", $.Object);

    $.Field({Static:true , Public:false}, "eventDescriptorsCreated", $asm07.TypeRef("System.Boolean"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.FxTrace */ 

(function FxTrace$Members () {
  var $, $thisType;























  JSIL.MakeStaticClass("System.Activities.FxTrace", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureEtwProviderInitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EventLog", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EventSourceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.ExceptionTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCritical", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCriticalToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceErrorToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformationToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerbose", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerboseToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarningToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Trace", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_TracingEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeTracing", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IsEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateEnabledEventsList", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "UpdateEventDefinitions", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]), $jsilcore.TypeRef("System.Array", [$.UInt16])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "baseEventSourceName", $.String, "System.Activities");

    $.Constant({Static:true , Public:false}, "EventSourceVersion", $.String, "4.0.0.0");

    $.Field({Static:true , Public:false}, "etwProviderId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "eventSourceName", $.String);

    $.Field({Static:true , Public:false}, "exceptionTrace", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Field({Static:true , Public:false}, "enabledEvents", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Field({Static:true , Public:false}, "end2EndEvents", $asm0A.TypeRef("System.Collections.Generic.SortedSet`1", [$.UInt16]));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "lockObject", $.Object);

    $.Field({Static:true , Public:false}, "tracingEnabled", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerbose", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformation", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarning", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceError", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCritical", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerboseToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformationToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarningToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceErrorToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCriticalToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "diagnosticTrace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));


    function FxTrace__cctor () {
      $thisType.etwProviderId = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FxTrace__cctor
    );

    $.Property({Static:true , Public:true }, "ShouldTraceCritical", $.Boolean);

    $.Property({Static:true , Public:true }, "TracingEnabled", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceError", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformation", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerbose", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarning", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceCriticalToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceErrorToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformationToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerboseToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarningToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "Exception", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Property({Static:true , Public:true }, "Trace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));

    $.Property({Static:true , Public:true }, "EventLog", $asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"));

    $.Property({Static:true , Public:false}, "EventSourceName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.FxTrace+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.FxTrace+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lInitializeTracing$gb__54_0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__54_0", $asm07.TypeRef("System.Action"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Activities.Expressions");
/* class System.Activities.Expressions.ExpressionServices */ 

(function ExpressionServices$Members () {
  var $, $thisType;




































  JSIL.MakeStaticClass("System.Activities.Expressions.ExpressionServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Convert", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])]), [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryConvert", 
      new JSIL.MethodSignature($.Boolean, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvert", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArgumentExpressionWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $.Boolean, 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Argument")])
        ], ["TArgument"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArgumentReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArguments", 
      new JSIL.MethodSignature($.String, [
          $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), $asm07.TypeRef("System.Collections.IList"), 
          $asm07.TypeRef("System.Type"), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterInfo")]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArgumentValue", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArrayItemReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.BinaryExpression"), $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertArrayItemValue", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.BinaryExpression"), $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertBinaryExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.BinaryExpression"), $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertBinaryExpressionWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.BinaryExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!2"])])
        ], ["TLeft", "TRight", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertDelegateArgumentReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertDelegateArgumentValue", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertIndexerReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertIndexerReferenceWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!1"])])])
        ], ["TOperand", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertInvocationExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.InvocationExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertLocationReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertMemberExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $asm07.TypeRef("System.Type"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertMemberExpressionWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!1"])])
        ], ["TOperand", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertMethodCallExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertMultiDimensionalArrayItemReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertNewArrayExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.NewArrayExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertNewExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.NewExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertOverloadingBinaryOperator", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.BinaryExpression"), $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.Activity`1", ["!!1"]), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!2"])])
        ], ["TLeft", "TRight", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertOverloadingUnaryOperator", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.UnaryExpression"), $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!1"])])
        ], ["TOperand", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryConvertReference", 
      new JSIL.MethodSignature($.Boolean, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), "!!0"])]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertReferenceLocationReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertReferenceMemberExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $asm07.TypeRef("System.Type"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertReferenceMemberExpressionWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!1"])])])
        ], ["TOperand", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertUnaryExpression", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.UnaryExpression"), $asm07.TypeRef("System.Type"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertUnaryExpressionWorker", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.UnaryExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!1"])])
        ], ["TOperand", "TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertVariableReference", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])])])
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryConvertVariableValue", 
      new JSIL.MethodSignature($.String, [
          $asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])])
        ], ["TResult"])
    );

    $.Field({Static:true , Public:false}, "TryConvertBinaryExpressionHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "TryConvertUnaryExpressionHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "TryConvertMemberExpressionHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "TryConvertArgumentExpressionHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "TryConvertReferenceMemberExpressionHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "TryConvertIndexerReferenceHandle", $asm07.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.BinaryExpressionHelper */ 

(function BinaryExpressionHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.Expressions.BinaryExpressionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "OnGetArguments", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm0B.TypeRef("System.Activities.InArgument`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.InArgument`1", ["!!1"])
        ], ["TLeft", "TRight"])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGenerateLinqDelegate", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`3", [
                "!!0", "!!1", 
                "!!2"
              ])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])
        ], ["TLeft", "TRight", "TResult"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.CompiledExpressionInvoker */ 

(function CompiledExpressionInvoker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };







  function CompiledExpressionInvoker_get_IsStaticallyCompiled () {
    return this.CompiledExpressionInvoker$IsStaticallyCompiled$value;
  }; 






  function CompiledExpressionInvoker_set_IsStaticallyCompiled (value) {
    this.CompiledExpressionInvoker$IsStaticallyCompiled$value = value;
  }; 







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.CompiledExpressionInvoker", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Expressions.ITextExpression"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CanExecuteExpression", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateRequiredArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "FindCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindLocationReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.LocationReference"), [$.String])
    );

    $.Method({Static:false, Public:true }, "get_IsStaticallyCompiled", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompiledExpressionInvoker_get_IsStaticallyCompiled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetCompiledExpressionRootForImplementation", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExpressionTree", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.ExternalMethod({Static:false, Public:true }, "InvokeExpression", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessLocationReferences", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_IsStaticallyCompiled", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompiledExpressionInvoker_set_IsStaticallyCompiled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "SetCompiledExpressionRoot", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetCompiledExpressionRootForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCompiledExpressionRootAtDesignTime", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCurrentCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.ActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "compiledExpressionRootProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "compiledExpressionRootForImplementationProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:false, Public:false}, "expressionId", $.Int32);

    $.Field({Static:false, Public:false}, "expressionActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "isReference", $.Boolean);

    $.Field({Static:false, Public:false}, "textExpression", $asm0B.TypeRef("System.Activities.Expressions.ITextExpression"));

    $.Field({Static:false, Public:false}, "metadataRoot", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "compiledRoot", $asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot"));

    $.Field({Static:false, Public:false}, "locationReferences", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "metadata", $asm0B.TypeRef("System.Activities.CodeActivityMetadata"));

    $.Field({Static:false, Public:false}, "accessor", $asm0B.TypeRef("System.Activities.CodeActivityPublicEnvironmentAccessor"));

    $.Field({Static:false, Public:false}, "CompiledExpressionInvoker$IsStaticallyCompiled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IsStaticallyCompiled", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.UnaryExpressionHelper */ 

(function UnaryExpressionHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.Expressions.UnaryExpressionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "OnGetArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm0B.TypeRef("System.Activities.InArgument`1", ["!!0"])], ["TOperand"])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGenerateLinqDelegate", 
      new JSIL.MethodSignature($.Boolean, [
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`2", ["!!0", "!!1"])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])
        ], ["TOperand", "TResult"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Add`3 */ 

(function Add$b3$Members () {
  var $, $thisType;






  function Add$b3_get_Left () {
    return this.Add$b3$Left$value;
  }; 

  function Add$b3_get_Right () {
    return this.Add$b3$Right$value;
  }; 


  function Add$b3_set_Left (value) {
    this.Add$b3$Left$value = value;
  }; 

  function Add$b3_set_Right (value) {
    this.Add$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Add`3")]), 
      Name: "System.Activities.Expressions.Add`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureOperationFunction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`3", [
                $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
                $.GenericParameter("TResult")
              ])]), 
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Checked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Add$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Add$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Checked", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Add$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Add$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "checkedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:true , Public:false}, "uncheckedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "checkedOperation", $.Boolean);

    $.Field({Static:false, Public:false}, "Add$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Add$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Checked", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.AssemblyNameEqualityComparer */ 

(function AssemblyNameEqualityComparer$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.AssemblyNameEqualityComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.AssemblyName"), $asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsSameKeyToken", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEqualityComparer"), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.AssemblyReference */ 

(function AssemblyReference$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.AssemblyReference", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Reflection.Assembly"), $asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AssemblySatisfiesReference", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.AssemblyName"), $asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assembly", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AssemblyName", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.AssemblyName"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAssembly", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.Assembly"), [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFastAssemblyName", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.AssemblyName"), [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:false, Public:true }, "LoadAssembly", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "LoadAssembly", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.Assembly"), [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Reflection.AssemblyName")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Assembly", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AssemblyName", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.AssemblyName"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfImmutable", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "AssemblyToAssemblyNameCacheInitSize", $.Int32, 100);

    $.Constant({Static:true , Public:false}, "AssemblyCacheInitialSize", $.Int32, 100);

    $.Field({Static:true , Public:false}, "assemblyToAssemblyNameCacheLock", $.Object);

    $.Field({Static:true , Public:false}, "assemblyToAssemblyNameCache", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "assemblyCache", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false}, "assemblyCacheLock", $.Object);

    $.Field({Static:false, Public:false}, "assembly", $asm07.TypeRef("System.Reflection.Assembly"));

    $.Field({Static:false, Public:false}, "assemblyName", $asm07.TypeRef("System.Reflection.AssemblyName"));

    $.Field({Static:false, Public:false}, "isImmutable", $.Boolean);

    $.Property({Static:false, Public:true }, "Assembly", $asm07.TypeRef("System.Reflection.Assembly"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "AssemblyName", $asm07.TypeRef("System.Reflection.AssemblyName"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.AssemblyReferenceConverter.__Type__]; });

})();

/* class System.Activities.Expressions.Subtract`3 */ 

(function Subtract$b3$Members () {
  var $, $thisType;






  function Subtract$b3_get_Left () {
    return this.Subtract$b3$Left$value;
  }; 

  function Subtract$b3_get_Right () {
    return this.Subtract$b3$Right$value;
  }; 


  function Subtract$b3_set_Left (value) {
    this.Subtract$b3$Left$value = value;
  }; 

  function Subtract$b3_set_Right (value) {
    this.Subtract$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Subtract`3")]), 
      Name: "System.Activities.Expressions.Subtract`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureOperationFunction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`3", [
                $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
                $.GenericParameter("TResult")
              ])]), 
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Checked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Subtract$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Subtract$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Checked", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Subtract$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Subtract$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "checkedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:true , Public:false}, "uncheckedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "checkedOperation", $.Boolean);

    $.Field({Static:false, Public:false}, "Subtract$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Subtract$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Checked", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Multiply`3 */ 

(function Multiply$b3$Members () {
  var $, $thisType;






  function Multiply$b3_get_Left () {
    return this.Multiply$b3$Left$value;
  }; 

  function Multiply$b3_get_Right () {
    return this.Multiply$b3$Right$value;
  }; 


  function Multiply$b3_set_Left (value) {
    this.Multiply$b3$Left$value = value;
  }; 

  function Multiply$b3_set_Right (value) {
    this.Multiply$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Multiply`3")]), 
      Name: "System.Activities.Expressions.Multiply`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureOperationFunction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`3", [
                $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
                $.GenericParameter("TResult")
              ])]), 
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Checked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Multiply$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Multiply$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Checked", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Multiply$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Multiply$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "checkedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:true , Public:false}, "uncheckedOperationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "checkedOperation", $.Boolean);

    $.Field({Static:false, Public:false}, "Multiply$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Multiply$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Checked", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Divide`3 */ 

(function Divide$b3$Members () {
  var $, $thisType;




  function Divide$b3_get_Left () {
    return this.Divide$b3$Left$value;
  }; 

  function Divide$b3_get_Right () {
    return this.Divide$b3$Right$value;
  }; 

  function Divide$b3_set_Left (value) {
    this.Divide$b3$Left$value = value;
  }; 

  function Divide$b3_set_Right (value) {
    this.Divide$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Divide`3")]), 
      Name: "System.Activities.Expressions.Divide`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Divide$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Divide$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Divide$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Divide$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "Divide$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Divide$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.AndAlso */ 

(function AndAlso$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };





  function AndAlso_get_Left () {
    return this.AndAlso$Left$value;
  }; 

  function AndAlso_get_Right () {
    return this.AndAlso$Right$value;
  }; 


  function AndAlso_set_Left (value) {
    this.AndAlso$Left$value = value;
  }; 

  function AndAlso_set_Right (value) {
    this.AndAlso$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Expressions.AndAlso", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      AndAlso_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      AndAlso_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      AndAlso_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      AndAlso_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AndAlso$Left$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AndAlso$Right$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.OrElse */ 

(function OrElse$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };





  function OrElse_get_Left () {
    return this.OrElse$Left$value;
  }; 

  function OrElse_get_Right () {
    return this.OrElse$Right$value;
  }; 


  function OrElse_set_Left (value) {
    this.OrElse$Left$value = value;
  }; 

  function OrElse_set_Right (value) {
    this.OrElse$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Activity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Expressions.OrElse", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0_0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      OrElse_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      OrElse_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      OrElse_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      OrElse_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OrElse$Left$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "OrElse$Right$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Not`2 */ 

(function Not$b2$Members () {
  var $, $thisType;




  function Not$b2_get_Operand () {
    return this.Not$b2$Operand$value;
  }; 

  function Not$b2_set_Operand (value) {
    this.Not$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Not`2")]), 
      Name: "System.Activities.Expressions.Not`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      Not$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      Not$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "Not$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.PropertyReference`2 */ 

(function PropertyReference$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function PropertyReference$b2_get_Operand () {
    return this.PropertyReference$b2$Operand$value;
  }; 

  function PropertyReference$b2_get_PropertyName () {
    return this.PropertyReference$b2$PropertyName$value;
  }; 

  function PropertyReference$b2_set_Operand (value) {
    this.PropertyReference$b2$Operand$value = value;
  }; 

  function PropertyReference$b2_set_PropertyName (value) {
    this.PropertyReference$b2$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.PropertyReference`2")])]), 
      Name: "System.Activities.Expressions.PropertyReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      PropertyReference$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($.String), 
      PropertyReference$b2_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      PropertyReference$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($.String), 
      PropertyReference$b2_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "PropertyReference$b2$PropertyName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyReference$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.PropertyReference`2+PropertyLocation`1 */ 

(function PropertyLocation$b1$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.PropertyReference`2+PropertyLocation`1")]), 
      Name: "System.Activities.Expressions.PropertyReference`2+PropertyLocation`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult", "T"], 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.PropertyInfo"), $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), 
          $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropertyInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropertyInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "owner", $.Object);

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedOwner", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPropertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.PropertyValue`2 */ 

(function PropertyValue$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function PropertyValue$b2_get_Operand () {
    return this.PropertyValue$b2$Operand$value;
  }; 

  function PropertyValue$b2_get_PropertyName () {
    return this.PropertyValue$b2$PropertyName$value;
  }; 

  function PropertyValue$b2_set_Operand (value) {
    this.PropertyValue$b2$Operand$value = value;
  }; 

  function PropertyValue$b2_set_PropertyName (value) {
    this.PropertyValue$b2$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.PropertyValue`2")]), 
      Name: "System.Activities.Expressions.PropertyValue`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      PropertyValue$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($.String), 
      PropertyValue$b2_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      PropertyValue$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($.String), 
      PropertyValue$b2_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "operationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "isOperationFunctionStatic", $.Boolean);

    $.Field({Static:false, Public:false}, "PropertyValue$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyValue$b2$PropertyName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]));

    $.Property({Static:false, Public:true }, "PropertyName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.And`3 */ 

(function And$b3$Members () {
  var $, $thisType;




  function And$b3_get_Left () {
    return this.And$b3$Left$value;
  }; 

  function And$b3_get_Right () {
    return this.And$b3$Right$value;
  }; 

  function And$b3_set_Left (value) {
    this.And$b3$Left$value = value;
  }; 

  function And$b3_set_Right (value) {
    this.And$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.And`3")]), 
      Name: "System.Activities.Expressions.And`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      And$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      And$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      And$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      And$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "And$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "And$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Equal`3 */ 

(function Equal$b3$Members () {
  var $, $thisType;




  function Equal$b3_get_Left () {
    return this.Equal$b3$Left$value;
  }; 

  function Equal$b3_get_Right () {
    return this.Equal$b3$Right$value;
  }; 

  function Equal$b3_set_Left (value) {
    this.Equal$b3$Left$value = value;
  }; 

  function Equal$b3_set_Right (value) {
    this.Equal$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Equal`3")]), 
      Name: "System.Activities.Expressions.Equal`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Equal$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Equal$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Equal$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Equal$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "Equal$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Equal$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.GreaterThan`3 */ 

(function GreaterThan$b3$Members () {
  var $, $thisType;




  function GreaterThan$b3_get_Left () {
    return this.GreaterThan$b3$Left$value;
  }; 

  function GreaterThan$b3_get_Right () {
    return this.GreaterThan$b3$Right$value;
  }; 

  function GreaterThan$b3_set_Left (value) {
    this.GreaterThan$b3$Left$value = value;
  }; 

  function GreaterThan$b3_set_Right (value) {
    this.GreaterThan$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.GreaterThan`3")]), 
      Name: "System.Activities.Expressions.GreaterThan`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      GreaterThan$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      GreaterThan$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      GreaterThan$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      GreaterThan$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "GreaterThan$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "GreaterThan$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.GreaterThanOrEqual`3 */ 

(function GreaterThanOrEqual$b3$Members () {
  var $, $thisType;




  function GreaterThanOrEqual$b3_get_Left () {
    return this.GreaterThanOrEqual$b3$Left$value;
  }; 

  function GreaterThanOrEqual$b3_get_Right () {
    return this.GreaterThanOrEqual$b3$Right$value;
  }; 

  function GreaterThanOrEqual$b3_set_Left (value) {
    this.GreaterThanOrEqual$b3$Left$value = value;
  }; 

  function GreaterThanOrEqual$b3_set_Right (value) {
    this.GreaterThanOrEqual$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.GreaterThanOrEqual`3")]), 
      Name: "System.Activities.Expressions.GreaterThanOrEqual`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      GreaterThanOrEqual$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      GreaterThanOrEqual$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      GreaterThanOrEqual$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      GreaterThanOrEqual$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "GreaterThanOrEqual$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "GreaterThanOrEqual$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.LessThan`3 */ 

(function LessThan$b3$Members () {
  var $, $thisType;




  function LessThan$b3_get_Left () {
    return this.LessThan$b3$Left$value;
  }; 

  function LessThan$b3_get_Right () {
    return this.LessThan$b3$Right$value;
  }; 

  function LessThan$b3_set_Left (value) {
    this.LessThan$b3$Left$value = value;
  }; 

  function LessThan$b3_set_Right (value) {
    this.LessThan$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.LessThan`3")]), 
      Name: "System.Activities.Expressions.LessThan`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      LessThan$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      LessThan$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      LessThan$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      LessThan$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "LessThan$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LessThan$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.LessThanOrEqual`3 */ 

(function LessThanOrEqual$b3$Members () {
  var $, $thisType;




  function LessThanOrEqual$b3_get_Left () {
    return this.LessThanOrEqual$b3$Left$value;
  }; 

  function LessThanOrEqual$b3_get_Right () {
    return this.LessThanOrEqual$b3$Right$value;
  }; 

  function LessThanOrEqual$b3_set_Left (value) {
    this.LessThanOrEqual$b3$Left$value = value;
  }; 

  function LessThanOrEqual$b3_set_Right (value) {
    this.LessThanOrEqual$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.LessThanOrEqual`3")]), 
      Name: "System.Activities.Expressions.LessThanOrEqual`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      LessThanOrEqual$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      LessThanOrEqual$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      LessThanOrEqual$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      LessThanOrEqual$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "LessThanOrEqual$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LessThanOrEqual$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.NotEqual`3 */ 

(function NotEqual$b3$Members () {
  var $, $thisType;




  function NotEqual$b3_get_Left () {
    return this.NotEqual$b3$Left$value;
  }; 

  function NotEqual$b3_get_Right () {
    return this.NotEqual$b3$Right$value;
  }; 

  function NotEqual$b3_set_Left (value) {
    this.NotEqual$b3$Left$value = value;
  }; 

  function NotEqual$b3_set_Right (value) {
    this.NotEqual$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.NotEqual`3")]), 
      Name: "System.Activities.Expressions.NotEqual`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      NotEqual$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      NotEqual$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      NotEqual$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      NotEqual$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "NotEqual$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NotEqual$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Or`3 */ 

(function Or$b3$Members () {
  var $, $thisType;




  function Or$b3_get_Left () {
    return this.Or$b3$Left$value;
  }; 

  function Or$b3_get_Right () {
    return this.Or$b3$Right$value;
  }; 

  function Or$b3_set_Left (value) {
    this.Or$b3$Left$value = value;
  }; 

  function Or$b3_set_Right (value) {
    this.Or$b3$Right$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Or`3")]), 
      Name: "System.Activities.Expressions.Or`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TLeft", "TRight", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]), null), 
      Or$b3_get_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Right", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]), null), 
      Or$b3_get_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")])]), 
      Or$b3_set_Left
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Right", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")])]), 
      Or$b3_set_Right
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`3", [
          $.GenericParameter("TLeft"), $.GenericParameter("TRight"), 
          $.GenericParameter("TResult")
        ]));

    $.Field({Static:false, Public:false}, "Or$b3$Left$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Or$b3$Right$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Left", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TLeft")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Right", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TRight")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ArrayItemValue`1 */ 

(function ArrayItemValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Int32))) ();
  };





  function ArrayItemValue$b1_get_Array () {
    return this.ArrayItemValue$b1$Array$value;
  }; 

  function ArrayItemValue$b1_get_Index () {
    return this.ArrayItemValue$b1$Index$value;
  }; 

  function ArrayItemValue$b1_set_Array (value) {
    this.ArrayItemValue$b1$Array$value = value;
  }; 

  function ArrayItemValue$b1_set_Index (value) {
    this.ArrayItemValue$b1$Index$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.ArrayItemValue`1")]), 
      Name: "System.Activities.Expressions.ArrayItemValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Array", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]), null), 
      ArrayItemValue$b1_get_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Index", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      ArrayItemValue$b1_get_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Array", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])])]), 
      ArrayItemValue$b1_set_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Index", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      ArrayItemValue$b1_set_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ArrayItemValue$b1$Array$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ArrayItemValue$b1$Index$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Array", $asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Index", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ArrayItemReference`1 */ 

(function ArrayItemReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Int32))) ();
  };





  function ArrayItemReference$b1_get_Array () {
    return this.ArrayItemReference$b1$Array$value;
  }; 

  function ArrayItemReference$b1_get_Index () {
    return this.ArrayItemReference$b1$Index$value;
  }; 

  function ArrayItemReference$b1_set_Array (value) {
    this.ArrayItemReference$b1$Array$value = value;
  }; 

  function ArrayItemReference$b1_set_Index (value) {
    this.ArrayItemReference$b1$Index$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.ArrayItemReference`1")])]), 
      Name: "System.Activities.Expressions.ArrayItemReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TItem")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Array", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]), null), 
      ArrayItemReference$b1_get_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Index", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      ArrayItemReference$b1_get_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Array", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])])]), 
      ArrayItemReference$b1_set_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Index", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      ArrayItemReference$b1_set_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ArrayItemReference$b1$Array$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ArrayItemReference$b1$Index$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Array", $asm0B.TypeRef("System.Activities.InArgument`1", [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Index", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ArrayItemReference`1+ArrayLocation */ 

(function ArrayLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.ArrayItemReference`1+ArrayLocation")]), 
      Name: "System.Activities.Expressions.ArrayItemReference`1+ArrayLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArray", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndex", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TItem")])
    );

    $.Field({Static:false, Public:false}, "array", $jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")]));

    $.Field({Static:false, Public:false}, "index", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TItem"));

    $.Property({Static:false, Public:false}, "SerializedArray", $jsilcore.TypeRef("System.Array", [$.GenericParameter("TItem")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndex", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.EnvironmentLocationValue`1 */ 

(function EnvironmentLocationValue$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.EnvironmentLocationValue`1")]), 
      Name: "System.Activities.Expressions.EnvironmentLocationValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceExpression.CreateNewInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.LocationReference")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression"), "CreateNewInstance");

    $.Field({Static:false, Public:false}, "locationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.EnvironmentLocationReference`1 */ 

(function EnvironmentLocationReference$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.EnvironmentLocationReference`1")])]), 
      Name: "System.Activities.Expressions.EnvironmentLocationReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceExpression.CreateNewInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.LocationReference")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression"), "CreateNewInstance");

    $.Field({Static:false, Public:false}, "locationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.Expressions.ILocationReferenceExpression */ 

JSIL.MakeInterface(
  "System.Activities.Expressions.ILocationReferenceExpression", false, [], function ($) {
    $.Method({}, "CreateNewInstance", new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.LocationReference")]));
  }, []);

/* class System.Activities.Expressions.FieldReference`2 */ 

(function FieldReference$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function FieldReference$b2_get_FieldName () {
    return this.FieldReference$b2$FieldName$value;
  }; 

  function FieldReference$b2_get_Operand () {
    return this.FieldReference$b2$Operand$value;
  }; 

  function FieldReference$b2_set_FieldName (value) {
    this.FieldReference$b2$FieldName$value = value;
  }; 

  function FieldReference$b2_set_Operand (value) {
    this.FieldReference$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.FieldReference`2")])]), 
      Name: "System.Activities.Expressions.FieldReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String), 
      FieldReference$b2_get_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      FieldReference$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FieldName", 
      JSIL.MethodSignature.Action($.String), 
      FieldReference$b2_set_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      FieldReference$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "FieldReference$b2$FieldName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FieldReference$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FieldName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.FieldReference`2+FieldLocation */ 

(function FieldLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.FieldReference`2+FieldLocation")]), 
      Name: "System.Activities.Expressions.FieldReference`2+FieldLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Reflection.FieldInfo"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFieldInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFieldInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TResult")])
    );

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "owner", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TResult"));

    $.Property({Static:false, Public:false}, "SerializedFieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwner", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.FieldValue`2 */ 

(function FieldValue$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function FieldValue$b2_get_FieldName () {
    return this.FieldValue$b2$FieldName$value;
  }; 

  function FieldValue$b2_get_Operand () {
    return this.FieldValue$b2$Operand$value;
  }; 

  function FieldValue$b2_set_FieldName (value) {
    this.FieldValue$b2$FieldName$value = value;
  }; 

  function FieldValue$b2_set_Operand (value) {
    this.FieldValue$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.FieldValue`2")]), 
      Name: "System.Activities.Expressions.FieldValue`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String), 
      FieldValue$b2_get_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      FieldValue$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FieldName", 
      JSIL.MethodSignature.Action($.String), 
      FieldValue$b2_set_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      FieldValue$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "operationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "isOperationFunctionStatic", $.Boolean);

    $.Field({Static:false, Public:false}, "FieldValue$b2$FieldName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FieldValue$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FieldName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.Cast`2 */ 

(function Cast$b2$Members () {
  var $, $thisType;






  function Cast$b2_get_Operand () {
    return this.Cast$b2$Operand$value;
  }; 


  function Cast$b2_set_Operand (value) {
    this.Cast$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.Cast`2")]), 
      Name: "System.Activities.Expressions.Cast`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureOperationFunction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")])]), 
          $asm10.TypeRef("System.Linq.Expressions.ExpressionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Checked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      Cast$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Checked", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      Cast$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "checkedOperationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:true , Public:false}, "uncheckedOperationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "checkedOperation", $.Boolean);

    $.Field({Static:false, Public:false}, "Cast$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Checked", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.As`2 */ 

(function As$b2$Members () {
  var $, $thisType;




  function As$b2_get_Operand () {
    return this.As$b2$Operand$value;
  }; 

  function As$b2_set_Operand (value) {
    this.As$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.As`2")]), 
      Name: "System.Activities.Expressions.As`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      As$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      As$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "operationFunction", $asm07.TypeRef("System.Func`2", [$.GenericParameter("TOperand"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "As$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.New`1 */ 

(function New$b1$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.New`1")]), 
      Name: "System.Activities.Expressions.New`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]))
    );

    $.Field({Static:false, Public:false}, "$arguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "$function", $asm07.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "constructorInfo", $asm07.TypeRef("System.Reflection.ConstructorInfo"));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.ConstructorInfo"), $asm07.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), $.GenericParameter("TResult")])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Property({Static:false, Public:true }, "Arguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Arguments"]; });

})();

/* class System.Activities.Expressions.New`1+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.New`1+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Arguments$gb__6_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.New`1+<>c", [$.GenericParameter("TResult")]));

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Expressions.NewArray`1 */ 

(function NewArray$b1$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.NewArray`1")]), 
      Name: "System.Activities.Expressions.NewArray`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bounds", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "isIntegralType", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type")])
    );

    $.Field({Static:false, Public:false}, "bounds", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "constructorInfo", $asm07.TypeRef("System.Reflection.ConstructorInfo"));

    $.Property({Static:false, Public:true }, "Bounds", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Bounds"]; });

})();

/* class System.Activities.Expressions.NewArray`1+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.NewArray`1+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Bounds$gb__3_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.NewArray`1+<>c", [$.GenericParameter("TResult")]));

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Expressions.LambdaSerializationException */ 

(function LambdaSerializationException$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.Expressions.LambdaSerializationException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.LambdaReference`1 */ 

(function LambdaReference$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.LambdaReference`1")])]), 
      Name: "System.Activities.Expressions.LambdaReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LambdaExpression", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Field({Static:false, Public:false}, "locationExpression", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])]));

    $.Field({Static:false, Public:false}, "rewrittenTree", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])]));

    $.Field({Static:false, Public:false}, "locationFactory", $asm0B.TypeRef("System.Activities.LocationFactory`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false}, "LambdaExpression", $asm10.TypeRef("System.Linq.Expressions.Expression"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.XamlIntegration.IValueSerializableExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"));

})();

/* class System.Activities.Expressions.LambdaValue`1 */ 

(function LambdaValue$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.LambdaValue`1")]), 
      Name: "System.Activities.Expressions.LambdaValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LambdaExpression", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.Field({Static:false, Public:false}, "compiledLambdaValue", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")]));

    $.Field({Static:false, Public:false}, "lambdaValue", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])]));

    $.Field({Static:false, Public:false}, "rewrittenTree", $asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("TResult")])]));

    $.Property({Static:false, Public:false}, "LambdaExpression", $asm10.TypeRef("System.Linq.Expressions.Expression"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.XamlIntegration.IValueSerializableExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"));

})();

/* class System.Activities.Expressions.Literal`1 */ 

(function Literal$b1$Members () {
  var $, $thisType;







  function Literal$b1_get_Value () {
    return this.Literal$b1$Value$value;
  }; 



  function Literal$b1_set_Value (value) {
    this.Literal$b1$Value$value = JSIL.CloneParameter($thisType.T.get(this), value);
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.Literal`1")]), 
      Name: "System.Activities.Expressions.Literal`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null), 
      Literal$b1_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "IsShortTimeFormattingSafe", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsShortTimeFormattingSafe", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.DateTimeOffset")])
    );

    $.Method({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")]), 
      Literal$b1_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeValue", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:true , Public:false}, "ExpressionEscapeRegex", $asm0A.TypeRef("System.Text.RegularExpressions.Regex"));

    $.Field({Static:false, Public:false}, "Literal$b1$Value$value", $.GenericParameter("T"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.GenericParameter("T"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.XamlIntegration.IValueSerializableExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"))
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Value"]; });

})();

/* class System.Activities.Expressions.LocationReferenceValue`1 */ 

(function LocationReferenceValue$b1$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.LocationReferenceValue`1")]), 
      Name: "System.Activities.Expressions.LocationReferenceValue`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceExpression.CreateNewInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.LocationReference")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression"), "CreateNewInstance");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceWrapper.get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceWrapper"), "get_LocationReference");

    $.Field({Static:false, Public:false}, "locationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Expressions.ILocationReferenceWrapper.LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.IExpressionContainer"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceWrapper"), 
      /* 2 */ $asm0B.TypeRef("System.Activities.Expressions.ILocationReferenceExpression")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ArgumentReference`1 */ 

(function ArgumentReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function ArgumentReference$b1_get_ArgumentName () {
    return this.ArgumentReference$b1$ArgumentName$value;
  }; 


  function ArgumentReference$b1_set_ArgumentName (value) {
    this.ArgumentReference$b1$ArgumentName$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationReference`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.ArgumentReference`1")]), 
      Name: "System.Activities.Expressions.ArgumentReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_ArgumentName", 
      JSIL.MethodSignature.Return($.String), 
      ArgumentReference$b1_get_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "set_ArgumentName", 
      JSIL.MethodSignature.Action($.String), 
      ArgumentReference$b1_set_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "targetArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:false, Public:false}, "ArgumentReference$b1$ArgumentName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ArgumentName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ArgumentValue`1 */ 

(function ArgumentValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function ArgumentValue$b1_get_ArgumentName () {
    return this.ArgumentValue$b1$ArgumentName$value;
  }; 


  function ArgumentValue$b1_set_ArgumentName (value) {
    this.ArgumentValue$b1$ArgumentName$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationValue`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.ArgumentValue`1")]), 
      Name: "System.Activities.Expressions.ArgumentValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_ArgumentName", 
      JSIL.MethodSignature.Return($.String), 
      ArgumentValue$b1_get_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "set_ArgumentName", 
      JSIL.MethodSignature.Action($.String), 
      ArgumentValue$b1_set_ArgumentName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "targetArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:false, Public:false}, "ArgumentValue$b1$ArgumentName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ArgumentName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.DelegateArgumentReference`1 */ 

(function DelegateArgumentReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.DelegateArgument)) ();
  };





  function DelegateArgumentReference$b1_get_DelegateArgument () {
    return this.DelegateArgumentReference$b1$DelegateArgument$value;
  }; 


  function DelegateArgumentReference$b1_set_DelegateArgument (value) {
    this.DelegateArgumentReference$b1$DelegateArgument$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationReference`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.DelegateArgumentReference`1")]), 
      Name: "System.Activities.Expressions.DelegateArgumentReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_DelegateArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      DelegateArgumentReference$b1_get_DelegateArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "set_DelegateArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      DelegateArgumentReference$b1_set_DelegateArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DelegateArgumentReference$b1$DelegateArgument$value", $asm0B.TypeRef("System.Activities.DelegateArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DelegateArgument", $asm0B.TypeRef("System.Activities.DelegateArgument"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["DelegateArgument"]; });

})();

/* class System.Activities.Expressions.DelegateArgumentValue`1 */ 

(function DelegateArgumentValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.DelegateArgument)) ();
  };





  function DelegateArgumentValue$b1_get_DelegateArgument () {
    return this.DelegateArgumentValue$b1$DelegateArgument$value;
  }; 


  function DelegateArgumentValue$b1_set_DelegateArgument (value) {
    this.DelegateArgumentValue$b1$DelegateArgument$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationValue`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.DelegateArgumentValue`1")]), 
      Name: "System.Activities.Expressions.DelegateArgumentValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_DelegateArgument", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      DelegateArgumentValue$b1_get_DelegateArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "set_DelegateArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DelegateArgument")), 
      DelegateArgumentValue$b1_set_DelegateArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DelegateArgumentValue$b1$DelegateArgument$value", $asm0B.TypeRef("System.Activities.DelegateArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DelegateArgument", $asm0B.TypeRef("System.Activities.DelegateArgument"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["DelegateArgument"]; });

})();

/* class System.Activities.Expressions.VariableReference`1 */ 

(function VariableReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Variable)) ();
  };






  function VariableReference$b1_get_Variable () {
    return this.VariableReference$b1$Variable$value;
  }; 

  function VariableReference$b1_set_Variable (value) {
    this.VariableReference$b1$Variable$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationReference`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.VariableReference`1")]), 
      Name: "System.Activities.Expressions.VariableReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "get_Variable", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Variable")), 
      VariableReference$b1_get_Variable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Variable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable")), 
      VariableReference$b1_set_Variable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "VariableReference$b1$Variable$value", $asm0B.TypeRef("System.Activities.Variable"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variable", $asm0B.TypeRef("System.Activities.Variable"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.VariableValue`1 */ 

(function VariableValue$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Variable)) ();
  };






  function VariableValue$b1_get_Variable () {
    return this.VariableValue$b1$Variable$value;
  }; 

  function VariableValue$b1_set_Variable (value) {
    this.VariableValue$b1$Variable$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Expressions.EnvironmentLocationValue`1", [new JSIL.GenericParameter("T", "System.Activities.Expressions.VariableValue`1")]), 
      Name: "System.Activities.Expressions.VariableValue`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationReference", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference"))
    );

    $.Method({Static:false, Public:true }, "get_Variable", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Variable")), 
      VariableValue$b1_get_Variable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Variable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable")), 
      VariableValue$b1_set_Variable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "VariableValue$b1$Variable$value", $asm0B.TypeRef("System.Activities.Variable"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variable", $asm0B.TypeRef("System.Activities.Variable"));

    $.Property({Static:false, Public:true , Virtual:true }, "LocationReference", $asm0B.TypeRef("System.Activities.LocationReference"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.InvokeMethod`1 */ 

(function InvokeMethod$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Type)) ();
  };








  function InvokeMethod$b1_get_MethodName () {
    return this.InvokeMethod$b1$MethodName$value;
  }; 


  function InvokeMethod$b1_get_RunAsynchronously () {
    return this.InvokeMethod$b1$RunAsynchronously$value;
  }; 

  function InvokeMethod$b1_get_TargetObject () {
    return this.InvokeMethod$b1$TargetObject$value;
  }; 

  function InvokeMethod$b1_get_TargetType () {
    return this.InvokeMethod$b1$TargetType$value;
  }; 

  function InvokeMethod$b1_set_MethodName (value) {
    this.InvokeMethod$b1$MethodName$value = value;
  }; 

  function InvokeMethod$b1_set_RunAsynchronously (value) {
    this.InvokeMethod$b1$RunAsynchronously$value = value;
  }; 

  function InvokeMethod$b1_set_TargetObject (value) {
    this.InvokeMethod$b1$TargetObject$value = value;
  }; 

  function InvokeMethod$b1_set_TargetType (value) {
    this.InvokeMethod$b1$TargetType$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeMethod`1")]), 
      Name: "System.Activities.Expressions.InvokeMethod`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateMethodResolver", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.MethodResolver"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GenericTypeArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.Method({Static:false, Public:true }, "get_MethodName", 
      JSIL.MethodSignature.Return($.String), 
      InvokeMethod$b1_get_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]))
    );

    $.Method({Static:false, Public:true }, "get_RunAsynchronously", 
      JSIL.MethodSignature.Return($.Boolean), 
      InvokeMethod$b1_get_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetObject", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      InvokeMethod$b1_get_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      InvokeMethod$b1_get_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MethodName", 
      JSIL.MethodSignature.Action($.String), 
      InvokeMethod$b1_set_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RunAsynchronously", 
      JSIL.MethodSignature.Action($.Boolean), 
      InvokeMethod$b1_set_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetObject", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      InvokeMethod$b1_set_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      InvokeMethod$b1_set_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "genericTypeArguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "methodResolver", $asm0B.TypeRef("System.Activities.Statements.MethodResolver"));

    $.Field({Static:false, Public:false}, "methodExecutor", $asm0B.TypeRef("System.Activities.Statements.MethodExecutor"));

    $.Field({Static:false, Public:false}, "resultArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "InvokeMethod$b1$MethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$b1$TargetObject$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$b1$TargetType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$b1$RunAsynchronously$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "GenericTypeArguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:true }, "MethodName", $.String);

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Property({Static:false, Public:true }, "TargetObject", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "TargetType", $asm07.TypeRef("System.Type"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "RunAsynchronously", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Parameters"]; });

})();

/* class System.Activities.Expressions.InvokeMethod`1+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.InvokeMethod`1+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_GenericTypeArguments$gb__8_0", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Parameters$gb__14_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.InvokeMethod`1+<>c", [$.GenericParameter("TResult")]));

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Action`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Expressions.InvokeFunc`1 */ 

(function InvokeFunc$b1$Members () {
  var $, $thisType;



  function InvokeFunc$b1_get_Func () {
    return this.InvokeFunc$b1$Func$value;
  }; 


  function InvokeFunc$b1_set_Func (value) {
    this.InvokeFunc$b1$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`1")]), 
      Name: "System.Activities.Expressions.InvokeFunc`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`1", [$.GenericParameter("TResult")]), null), 
      InvokeFunc$b1_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`1", [$.GenericParameter("TResult")])]), 
      InvokeFunc$b1_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b1$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`1", [$.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`1", [$.GenericParameter("TResult")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`2 */ 

(function InvokeFunc$b2$Members () {
  var $, $thisType;



  function InvokeFunc$b2_get_Argument () {
    return this.InvokeFunc$b2$Argument$value;
  }; 

  function InvokeFunc$b2_get_Func () {
    return this.InvokeFunc$b2$Func$value;
  }; 



  function InvokeFunc$b2_set_Argument (value) {
    this.InvokeFunc$b2$Argument$value = value;
  }; 

  function InvokeFunc$b2_set_Func (value) {
    this.InvokeFunc$b2$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`2")]), 
      Name: "System.Activities.Expressions.InvokeFunc`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      InvokeFunc$b2_get_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`2", [$.GenericParameter("T"), $.GenericParameter("TResult")]), null), 
      InvokeFunc$b2_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      InvokeFunc$b2_set_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`2", [$.GenericParameter("T"), $.GenericParameter("TResult")])]), 
      InvokeFunc$b2_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b2$Argument$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b2$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`2", [$.GenericParameter("T"), $.GenericParameter("TResult")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`2", [$.GenericParameter("T"), $.GenericParameter("TResult")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`3 */ 

(function InvokeFunc$b3$Members () {
  var $, $thisType;



  function InvokeFunc$b3_get_Argument1 () {
    return this.InvokeFunc$b3$Argument1$value;
  }; 

  function InvokeFunc$b3_get_Argument2 () {
    return this.InvokeFunc$b3$Argument2$value;
  }; 

  function InvokeFunc$b3_get_Func () {
    return this.InvokeFunc$b3$Func$value;
  }; 



  function InvokeFunc$b3_set_Argument1 (value) {
    this.InvokeFunc$b3$Argument1$value = value;
  }; 

  function InvokeFunc$b3_set_Argument2 (value) {
    this.InvokeFunc$b3$Argument2$value = value;
  }; 

  function InvokeFunc$b3_set_Func (value) {
    this.InvokeFunc$b3$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`3")]), 
      Name: "System.Activities.Expressions.InvokeFunc`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b3_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b3_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`3", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b3_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b3_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b3_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`3", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b3_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b3$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b3$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b3$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`3", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`3", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`4 */ 

(function InvokeFunc$b4$Members () {
  var $, $thisType;



  function InvokeFunc$b4_get_Argument1 () {
    return this.InvokeFunc$b4$Argument1$value;
  }; 

  function InvokeFunc$b4_get_Argument2 () {
    return this.InvokeFunc$b4$Argument2$value;
  }; 

  function InvokeFunc$b4_get_Argument3 () {
    return this.InvokeFunc$b4$Argument3$value;
  }; 

  function InvokeFunc$b4_get_Func () {
    return this.InvokeFunc$b4$Func$value;
  }; 



  function InvokeFunc$b4_set_Argument1 (value) {
    this.InvokeFunc$b4$Argument1$value = value;
  }; 

  function InvokeFunc$b4_set_Argument2 (value) {
    this.InvokeFunc$b4$Argument2$value = value;
  }; 

  function InvokeFunc$b4_set_Argument3 (value) {
    this.InvokeFunc$b4$Argument3$value = value;
  }; 

  function InvokeFunc$b4_set_Func (value) {
    this.InvokeFunc$b4$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`4")]), 
      Name: "System.Activities.Expressions.InvokeFunc`4", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b4_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b4_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b4_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`4", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b4_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b4_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b4_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b4_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`4", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b4_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b4$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b4$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b4$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b4$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`4", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`4", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`5 */ 

(function InvokeFunc$b5$Members () {
  var $, $thisType;



  function InvokeFunc$b5_get_Argument1 () {
    return this.InvokeFunc$b5$Argument1$value;
  }; 

  function InvokeFunc$b5_get_Argument2 () {
    return this.InvokeFunc$b5$Argument2$value;
  }; 

  function InvokeFunc$b5_get_Argument3 () {
    return this.InvokeFunc$b5$Argument3$value;
  }; 

  function InvokeFunc$b5_get_Argument4 () {
    return this.InvokeFunc$b5$Argument4$value;
  }; 

  function InvokeFunc$b5_get_Func () {
    return this.InvokeFunc$b5$Func$value;
  }; 



  function InvokeFunc$b5_set_Argument1 (value) {
    this.InvokeFunc$b5$Argument1$value = value;
  }; 

  function InvokeFunc$b5_set_Argument2 (value) {
    this.InvokeFunc$b5$Argument2$value = value;
  }; 

  function InvokeFunc$b5_set_Argument3 (value) {
    this.InvokeFunc$b5$Argument3$value = value;
  }; 

  function InvokeFunc$b5_set_Argument4 (value) {
    this.InvokeFunc$b5$Argument4$value = value;
  }; 

  function InvokeFunc$b5_set_Func (value) {
    this.InvokeFunc$b5$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`5")]), 
      Name: "System.Activities.Expressions.InvokeFunc`5", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b5_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b5_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b5_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b5_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`5", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b5_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b5_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b5_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b5_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b5_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`5", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b5_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b5$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b5$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b5$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b5$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b5$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`5", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`5", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`6 */ 

(function InvokeFunc$b6$Members () {
  var $, $thisType;



  function InvokeFunc$b6_get_Argument1 () {
    return this.InvokeFunc$b6$Argument1$value;
  }; 

  function InvokeFunc$b6_get_Argument2 () {
    return this.InvokeFunc$b6$Argument2$value;
  }; 

  function InvokeFunc$b6_get_Argument3 () {
    return this.InvokeFunc$b6$Argument3$value;
  }; 

  function InvokeFunc$b6_get_Argument4 () {
    return this.InvokeFunc$b6$Argument4$value;
  }; 

  function InvokeFunc$b6_get_Argument5 () {
    return this.InvokeFunc$b6$Argument5$value;
  }; 

  function InvokeFunc$b6_get_Func () {
    return this.InvokeFunc$b6$Func$value;
  }; 



  function InvokeFunc$b6_set_Argument1 (value) {
    this.InvokeFunc$b6$Argument1$value = value;
  }; 

  function InvokeFunc$b6_set_Argument2 (value) {
    this.InvokeFunc$b6$Argument2$value = value;
  }; 

  function InvokeFunc$b6_set_Argument3 (value) {
    this.InvokeFunc$b6$Argument3$value = value;
  }; 

  function InvokeFunc$b6_set_Argument4 (value) {
    this.InvokeFunc$b6$Argument4$value = value;
  }; 

  function InvokeFunc$b6_set_Argument5 (value) {
    this.InvokeFunc$b6$Argument5$value = value;
  }; 

  function InvokeFunc$b6_set_Func (value) {
    this.InvokeFunc$b6$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`6")]), 
      Name: "System.Activities.Expressions.InvokeFunc`6", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b6_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b6_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b6_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b6_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b6_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`6", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b6_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b6_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b6_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b6_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b6_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b6_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`6", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b6_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b6$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`6", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`6", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`7 */ 

(function InvokeFunc$b7$Members () {
  var $, $thisType;



  function InvokeFunc$b7_get_Argument1 () {
    return this.InvokeFunc$b7$Argument1$value;
  }; 

  function InvokeFunc$b7_get_Argument2 () {
    return this.InvokeFunc$b7$Argument2$value;
  }; 

  function InvokeFunc$b7_get_Argument3 () {
    return this.InvokeFunc$b7$Argument3$value;
  }; 

  function InvokeFunc$b7_get_Argument4 () {
    return this.InvokeFunc$b7$Argument4$value;
  }; 

  function InvokeFunc$b7_get_Argument5 () {
    return this.InvokeFunc$b7$Argument5$value;
  }; 

  function InvokeFunc$b7_get_Argument6 () {
    return this.InvokeFunc$b7$Argument6$value;
  }; 

  function InvokeFunc$b7_get_Func () {
    return this.InvokeFunc$b7$Func$value;
  }; 



  function InvokeFunc$b7_set_Argument1 (value) {
    this.InvokeFunc$b7$Argument1$value = value;
  }; 

  function InvokeFunc$b7_set_Argument2 (value) {
    this.InvokeFunc$b7$Argument2$value = value;
  }; 

  function InvokeFunc$b7_set_Argument3 (value) {
    this.InvokeFunc$b7$Argument3$value = value;
  }; 

  function InvokeFunc$b7_set_Argument4 (value) {
    this.InvokeFunc$b7$Argument4$value = value;
  }; 

  function InvokeFunc$b7_set_Argument5 (value) {
    this.InvokeFunc$b7$Argument5$value = value;
  }; 

  function InvokeFunc$b7_set_Argument6 (value) {
    this.InvokeFunc$b7$Argument6$value = value;
  }; 

  function InvokeFunc$b7_set_Func (value) {
    this.InvokeFunc$b7$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`7")]), 
      Name: "System.Activities.Expressions.InvokeFunc`7", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b7_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b7_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b7_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b7_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b7_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b7_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`7", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b7_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b7_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b7_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b7_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b7_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b7_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b7_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`7", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b7_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b7$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`7", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`7", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`8 */ 

(function InvokeFunc$b8$Members () {
  var $, $thisType;



  function InvokeFunc$b8_get_Argument1 () {
    return this.InvokeFunc$b8$Argument1$value;
  }; 

  function InvokeFunc$b8_get_Argument2 () {
    return this.InvokeFunc$b8$Argument2$value;
  }; 

  function InvokeFunc$b8_get_Argument3 () {
    return this.InvokeFunc$b8$Argument3$value;
  }; 

  function InvokeFunc$b8_get_Argument4 () {
    return this.InvokeFunc$b8$Argument4$value;
  }; 

  function InvokeFunc$b8_get_Argument5 () {
    return this.InvokeFunc$b8$Argument5$value;
  }; 

  function InvokeFunc$b8_get_Argument6 () {
    return this.InvokeFunc$b8$Argument6$value;
  }; 

  function InvokeFunc$b8_get_Argument7 () {
    return this.InvokeFunc$b8$Argument7$value;
  }; 

  function InvokeFunc$b8_get_Func () {
    return this.InvokeFunc$b8$Func$value;
  }; 



  function InvokeFunc$b8_set_Argument1 (value) {
    this.InvokeFunc$b8$Argument1$value = value;
  }; 

  function InvokeFunc$b8_set_Argument2 (value) {
    this.InvokeFunc$b8$Argument2$value = value;
  }; 

  function InvokeFunc$b8_set_Argument3 (value) {
    this.InvokeFunc$b8$Argument3$value = value;
  }; 

  function InvokeFunc$b8_set_Argument4 (value) {
    this.InvokeFunc$b8$Argument4$value = value;
  }; 

  function InvokeFunc$b8_set_Argument5 (value) {
    this.InvokeFunc$b8$Argument5$value = value;
  }; 

  function InvokeFunc$b8_set_Argument6 (value) {
    this.InvokeFunc$b8$Argument6$value = value;
  }; 

  function InvokeFunc$b8_set_Argument7 (value) {
    this.InvokeFunc$b8$Argument7$value = value;
  }; 

  function InvokeFunc$b8_set_Func (value) {
    this.InvokeFunc$b8$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`8")]), 
      Name: "System.Activities.Expressions.InvokeFunc`8", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b8_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b8_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b8_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b8_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b8_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b8_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b8_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`8", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b8_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b8_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b8_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b8_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b8_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b8_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b8_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b8_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`8", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b8_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b8$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`8", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`8", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`9 */ 

(function InvokeFunc$b9$Members () {
  var $, $thisType;



  function InvokeFunc$b9_get_Argument1 () {
    return this.InvokeFunc$b9$Argument1$value;
  }; 

  function InvokeFunc$b9_get_Argument2 () {
    return this.InvokeFunc$b9$Argument2$value;
  }; 

  function InvokeFunc$b9_get_Argument3 () {
    return this.InvokeFunc$b9$Argument3$value;
  }; 

  function InvokeFunc$b9_get_Argument4 () {
    return this.InvokeFunc$b9$Argument4$value;
  }; 

  function InvokeFunc$b9_get_Argument5 () {
    return this.InvokeFunc$b9$Argument5$value;
  }; 

  function InvokeFunc$b9_get_Argument6 () {
    return this.InvokeFunc$b9$Argument6$value;
  }; 

  function InvokeFunc$b9_get_Argument7 () {
    return this.InvokeFunc$b9$Argument7$value;
  }; 

  function InvokeFunc$b9_get_Argument8 () {
    return this.InvokeFunc$b9$Argument8$value;
  }; 

  function InvokeFunc$b9_get_Func () {
    return this.InvokeFunc$b9$Func$value;
  }; 



  function InvokeFunc$b9_set_Argument1 (value) {
    this.InvokeFunc$b9$Argument1$value = value;
  }; 

  function InvokeFunc$b9_set_Argument2 (value) {
    this.InvokeFunc$b9$Argument2$value = value;
  }; 

  function InvokeFunc$b9_set_Argument3 (value) {
    this.InvokeFunc$b9$Argument3$value = value;
  }; 

  function InvokeFunc$b9_set_Argument4 (value) {
    this.InvokeFunc$b9$Argument4$value = value;
  }; 

  function InvokeFunc$b9_set_Argument5 (value) {
    this.InvokeFunc$b9$Argument5$value = value;
  }; 

  function InvokeFunc$b9_set_Argument6 (value) {
    this.InvokeFunc$b9$Argument6$value = value;
  }; 

  function InvokeFunc$b9_set_Argument7 (value) {
    this.InvokeFunc$b9$Argument7$value = value;
  }; 

  function InvokeFunc$b9_set_Argument8 (value) {
    this.InvokeFunc$b9$Argument8$value = value;
  }; 

  function InvokeFunc$b9_set_Func (value) {
    this.InvokeFunc$b9$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`9")]), 
      Name: "System.Activities.Expressions.InvokeFunc`9", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b9_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b9_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b9_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b9_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b9_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b9_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b9_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b9_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`9", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b9_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b9_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b9_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b9_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b9_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b9_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b9_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b9_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b9_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`9", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b9_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b9$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`9", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`9", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`10 */ 

(function InvokeFunc$b10$Members () {
  var $, $thisType;



  function InvokeFunc$b10_get_Argument1 () {
    return this.InvokeFunc$b10$Argument1$value;
  }; 

  function InvokeFunc$b10_get_Argument2 () {
    return this.InvokeFunc$b10$Argument2$value;
  }; 

  function InvokeFunc$b10_get_Argument3 () {
    return this.InvokeFunc$b10$Argument3$value;
  }; 

  function InvokeFunc$b10_get_Argument4 () {
    return this.InvokeFunc$b10$Argument4$value;
  }; 

  function InvokeFunc$b10_get_Argument5 () {
    return this.InvokeFunc$b10$Argument5$value;
  }; 

  function InvokeFunc$b10_get_Argument6 () {
    return this.InvokeFunc$b10$Argument6$value;
  }; 

  function InvokeFunc$b10_get_Argument7 () {
    return this.InvokeFunc$b10$Argument7$value;
  }; 

  function InvokeFunc$b10_get_Argument8 () {
    return this.InvokeFunc$b10$Argument8$value;
  }; 

  function InvokeFunc$b10_get_Argument9 () {
    return this.InvokeFunc$b10$Argument9$value;
  }; 

  function InvokeFunc$b10_get_Func () {
    return this.InvokeFunc$b10$Func$value;
  }; 



  function InvokeFunc$b10_set_Argument1 (value) {
    this.InvokeFunc$b10$Argument1$value = value;
  }; 

  function InvokeFunc$b10_set_Argument2 (value) {
    this.InvokeFunc$b10$Argument2$value = value;
  }; 

  function InvokeFunc$b10_set_Argument3 (value) {
    this.InvokeFunc$b10$Argument3$value = value;
  }; 

  function InvokeFunc$b10_set_Argument4 (value) {
    this.InvokeFunc$b10$Argument4$value = value;
  }; 

  function InvokeFunc$b10_set_Argument5 (value) {
    this.InvokeFunc$b10$Argument5$value = value;
  }; 

  function InvokeFunc$b10_set_Argument6 (value) {
    this.InvokeFunc$b10$Argument6$value = value;
  }; 

  function InvokeFunc$b10_set_Argument7 (value) {
    this.InvokeFunc$b10$Argument7$value = value;
  }; 

  function InvokeFunc$b10_set_Argument8 (value) {
    this.InvokeFunc$b10$Argument8$value = value;
  }; 

  function InvokeFunc$b10_set_Argument9 (value) {
    this.InvokeFunc$b10$Argument9$value = value;
  }; 

  function InvokeFunc$b10_set_Func (value) {
    this.InvokeFunc$b10$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`10")]), 
      Name: "System.Activities.Expressions.InvokeFunc`10", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b10_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b10_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b10_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b10_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b10_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b10_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b10_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b10_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b10_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`10", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b10_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b10_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b10_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b10_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b10_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b10_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b10_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b10_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b10_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b10_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`10", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b10_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b10$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`10", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`10", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`11 */ 

(function InvokeFunc$b11$Members () {
  var $, $thisType;



  function InvokeFunc$b11_get_Argument1 () {
    return this.InvokeFunc$b11$Argument1$value;
  }; 

  function InvokeFunc$b11_get_Argument10 () {
    return this.InvokeFunc$b11$Argument10$value;
  }; 

  function InvokeFunc$b11_get_Argument2 () {
    return this.InvokeFunc$b11$Argument2$value;
  }; 

  function InvokeFunc$b11_get_Argument3 () {
    return this.InvokeFunc$b11$Argument3$value;
  }; 

  function InvokeFunc$b11_get_Argument4 () {
    return this.InvokeFunc$b11$Argument4$value;
  }; 

  function InvokeFunc$b11_get_Argument5 () {
    return this.InvokeFunc$b11$Argument5$value;
  }; 

  function InvokeFunc$b11_get_Argument6 () {
    return this.InvokeFunc$b11$Argument6$value;
  }; 

  function InvokeFunc$b11_get_Argument7 () {
    return this.InvokeFunc$b11$Argument7$value;
  }; 

  function InvokeFunc$b11_get_Argument8 () {
    return this.InvokeFunc$b11$Argument8$value;
  }; 

  function InvokeFunc$b11_get_Argument9 () {
    return this.InvokeFunc$b11$Argument9$value;
  }; 

  function InvokeFunc$b11_get_Func () {
    return this.InvokeFunc$b11$Func$value;
  }; 



  function InvokeFunc$b11_set_Argument1 (value) {
    this.InvokeFunc$b11$Argument1$value = value;
  }; 

  function InvokeFunc$b11_set_Argument10 (value) {
    this.InvokeFunc$b11$Argument10$value = value;
  }; 

  function InvokeFunc$b11_set_Argument2 (value) {
    this.InvokeFunc$b11$Argument2$value = value;
  }; 

  function InvokeFunc$b11_set_Argument3 (value) {
    this.InvokeFunc$b11$Argument3$value = value;
  }; 

  function InvokeFunc$b11_set_Argument4 (value) {
    this.InvokeFunc$b11$Argument4$value = value;
  }; 

  function InvokeFunc$b11_set_Argument5 (value) {
    this.InvokeFunc$b11$Argument5$value = value;
  }; 

  function InvokeFunc$b11_set_Argument6 (value) {
    this.InvokeFunc$b11$Argument6$value = value;
  }; 

  function InvokeFunc$b11_set_Argument7 (value) {
    this.InvokeFunc$b11$Argument7$value = value;
  }; 

  function InvokeFunc$b11_set_Argument8 (value) {
    this.InvokeFunc$b11$Argument8$value = value;
  }; 

  function InvokeFunc$b11_set_Argument9 (value) {
    this.InvokeFunc$b11$Argument9$value = value;
  }; 

  function InvokeFunc$b11_set_Func (value) {
    this.InvokeFunc$b11$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`11")]), 
      Name: "System.Activities.Expressions.InvokeFunc`11", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b11_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b11_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b11_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b11_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b11_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b11_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b11_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b11_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b11_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b11_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`11", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b11_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b11_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b11_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b11_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b11_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b11_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b11_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b11_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b11_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b11_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b11_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`11", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b11_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b11$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`11", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`11", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`12 */ 

(function InvokeFunc$b12$Members () {
  var $, $thisType;



  function InvokeFunc$b12_get_Argument1 () {
    return this.InvokeFunc$b12$Argument1$value;
  }; 

  function InvokeFunc$b12_get_Argument10 () {
    return this.InvokeFunc$b12$Argument10$value;
  }; 

  function InvokeFunc$b12_get_Argument11 () {
    return this.InvokeFunc$b12$Argument11$value;
  }; 

  function InvokeFunc$b12_get_Argument2 () {
    return this.InvokeFunc$b12$Argument2$value;
  }; 

  function InvokeFunc$b12_get_Argument3 () {
    return this.InvokeFunc$b12$Argument3$value;
  }; 

  function InvokeFunc$b12_get_Argument4 () {
    return this.InvokeFunc$b12$Argument4$value;
  }; 

  function InvokeFunc$b12_get_Argument5 () {
    return this.InvokeFunc$b12$Argument5$value;
  }; 

  function InvokeFunc$b12_get_Argument6 () {
    return this.InvokeFunc$b12$Argument6$value;
  }; 

  function InvokeFunc$b12_get_Argument7 () {
    return this.InvokeFunc$b12$Argument7$value;
  }; 

  function InvokeFunc$b12_get_Argument8 () {
    return this.InvokeFunc$b12$Argument8$value;
  }; 

  function InvokeFunc$b12_get_Argument9 () {
    return this.InvokeFunc$b12$Argument9$value;
  }; 

  function InvokeFunc$b12_get_Func () {
    return this.InvokeFunc$b12$Func$value;
  }; 



  function InvokeFunc$b12_set_Argument1 (value) {
    this.InvokeFunc$b12$Argument1$value = value;
  }; 

  function InvokeFunc$b12_set_Argument10 (value) {
    this.InvokeFunc$b12$Argument10$value = value;
  }; 

  function InvokeFunc$b12_set_Argument11 (value) {
    this.InvokeFunc$b12$Argument11$value = value;
  }; 

  function InvokeFunc$b12_set_Argument2 (value) {
    this.InvokeFunc$b12$Argument2$value = value;
  }; 

  function InvokeFunc$b12_set_Argument3 (value) {
    this.InvokeFunc$b12$Argument3$value = value;
  }; 

  function InvokeFunc$b12_set_Argument4 (value) {
    this.InvokeFunc$b12$Argument4$value = value;
  }; 

  function InvokeFunc$b12_set_Argument5 (value) {
    this.InvokeFunc$b12$Argument5$value = value;
  }; 

  function InvokeFunc$b12_set_Argument6 (value) {
    this.InvokeFunc$b12$Argument6$value = value;
  }; 

  function InvokeFunc$b12_set_Argument7 (value) {
    this.InvokeFunc$b12$Argument7$value = value;
  }; 

  function InvokeFunc$b12_set_Argument8 (value) {
    this.InvokeFunc$b12$Argument8$value = value;
  }; 

  function InvokeFunc$b12_set_Argument9 (value) {
    this.InvokeFunc$b12$Argument9$value = value;
  }; 

  function InvokeFunc$b12_set_Func (value) {
    this.InvokeFunc$b12$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`12")]), 
      Name: "System.Activities.Expressions.InvokeFunc`12", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b12_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b12_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b12_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b12_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b12_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b12_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b12_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b12_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b12_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b12_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b12_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`12", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b12_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b12_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b12_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b12_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b12_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b12_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b12_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b12_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b12_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b12_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b12_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b12_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`12", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b12_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b12$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`12", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`12", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`13 */ 

(function InvokeFunc$b13$Members () {
  var $, $thisType;



  function InvokeFunc$b13_get_Argument1 () {
    return this.InvokeFunc$b13$Argument1$value;
  }; 

  function InvokeFunc$b13_get_Argument10 () {
    return this.InvokeFunc$b13$Argument10$value;
  }; 

  function InvokeFunc$b13_get_Argument11 () {
    return this.InvokeFunc$b13$Argument11$value;
  }; 

  function InvokeFunc$b13_get_Argument12 () {
    return this.InvokeFunc$b13$Argument12$value;
  }; 

  function InvokeFunc$b13_get_Argument2 () {
    return this.InvokeFunc$b13$Argument2$value;
  }; 

  function InvokeFunc$b13_get_Argument3 () {
    return this.InvokeFunc$b13$Argument3$value;
  }; 

  function InvokeFunc$b13_get_Argument4 () {
    return this.InvokeFunc$b13$Argument4$value;
  }; 

  function InvokeFunc$b13_get_Argument5 () {
    return this.InvokeFunc$b13$Argument5$value;
  }; 

  function InvokeFunc$b13_get_Argument6 () {
    return this.InvokeFunc$b13$Argument6$value;
  }; 

  function InvokeFunc$b13_get_Argument7 () {
    return this.InvokeFunc$b13$Argument7$value;
  }; 

  function InvokeFunc$b13_get_Argument8 () {
    return this.InvokeFunc$b13$Argument8$value;
  }; 

  function InvokeFunc$b13_get_Argument9 () {
    return this.InvokeFunc$b13$Argument9$value;
  }; 

  function InvokeFunc$b13_get_Func () {
    return this.InvokeFunc$b13$Func$value;
  }; 



  function InvokeFunc$b13_set_Argument1 (value) {
    this.InvokeFunc$b13$Argument1$value = value;
  }; 

  function InvokeFunc$b13_set_Argument10 (value) {
    this.InvokeFunc$b13$Argument10$value = value;
  }; 

  function InvokeFunc$b13_set_Argument11 (value) {
    this.InvokeFunc$b13$Argument11$value = value;
  }; 

  function InvokeFunc$b13_set_Argument12 (value) {
    this.InvokeFunc$b13$Argument12$value = value;
  }; 

  function InvokeFunc$b13_set_Argument2 (value) {
    this.InvokeFunc$b13$Argument2$value = value;
  }; 

  function InvokeFunc$b13_set_Argument3 (value) {
    this.InvokeFunc$b13$Argument3$value = value;
  }; 

  function InvokeFunc$b13_set_Argument4 (value) {
    this.InvokeFunc$b13$Argument4$value = value;
  }; 

  function InvokeFunc$b13_set_Argument5 (value) {
    this.InvokeFunc$b13$Argument5$value = value;
  }; 

  function InvokeFunc$b13_set_Argument6 (value) {
    this.InvokeFunc$b13$Argument6$value = value;
  }; 

  function InvokeFunc$b13_set_Argument7 (value) {
    this.InvokeFunc$b13$Argument7$value = value;
  }; 

  function InvokeFunc$b13_set_Argument8 (value) {
    this.InvokeFunc$b13$Argument8$value = value;
  }; 

  function InvokeFunc$b13_set_Argument9 (value) {
    this.InvokeFunc$b13$Argument9$value = value;
  }; 

  function InvokeFunc$b13_set_Func (value) {
    this.InvokeFunc$b13$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`13")]), 
      Name: "System.Activities.Expressions.InvokeFunc`13", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b13_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b13_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b13_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeFunc$b13_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b13_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b13_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b13_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b13_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b13_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b13_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b13_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b13_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`13", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b13_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b13_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b13_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b13_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeFunc$b13_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b13_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b13_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b13_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b13_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b13_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b13_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b13_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b13_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`13", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b13_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b13$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`13", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`13", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`14 */ 

(function InvokeFunc$b14$Members () {
  var $, $thisType;



  function InvokeFunc$b14_get_Argument1 () {
    return this.InvokeFunc$b14$Argument1$value;
  }; 

  function InvokeFunc$b14_get_Argument10 () {
    return this.InvokeFunc$b14$Argument10$value;
  }; 

  function InvokeFunc$b14_get_Argument11 () {
    return this.InvokeFunc$b14$Argument11$value;
  }; 

  function InvokeFunc$b14_get_Argument12 () {
    return this.InvokeFunc$b14$Argument12$value;
  }; 

  function InvokeFunc$b14_get_Argument13 () {
    return this.InvokeFunc$b14$Argument13$value;
  }; 

  function InvokeFunc$b14_get_Argument2 () {
    return this.InvokeFunc$b14$Argument2$value;
  }; 

  function InvokeFunc$b14_get_Argument3 () {
    return this.InvokeFunc$b14$Argument3$value;
  }; 

  function InvokeFunc$b14_get_Argument4 () {
    return this.InvokeFunc$b14$Argument4$value;
  }; 

  function InvokeFunc$b14_get_Argument5 () {
    return this.InvokeFunc$b14$Argument5$value;
  }; 

  function InvokeFunc$b14_get_Argument6 () {
    return this.InvokeFunc$b14$Argument6$value;
  }; 

  function InvokeFunc$b14_get_Argument7 () {
    return this.InvokeFunc$b14$Argument7$value;
  }; 

  function InvokeFunc$b14_get_Argument8 () {
    return this.InvokeFunc$b14$Argument8$value;
  }; 

  function InvokeFunc$b14_get_Argument9 () {
    return this.InvokeFunc$b14$Argument9$value;
  }; 

  function InvokeFunc$b14_get_Func () {
    return this.InvokeFunc$b14$Func$value;
  }; 



  function InvokeFunc$b14_set_Argument1 (value) {
    this.InvokeFunc$b14$Argument1$value = value;
  }; 

  function InvokeFunc$b14_set_Argument10 (value) {
    this.InvokeFunc$b14$Argument10$value = value;
  }; 

  function InvokeFunc$b14_set_Argument11 (value) {
    this.InvokeFunc$b14$Argument11$value = value;
  }; 

  function InvokeFunc$b14_set_Argument12 (value) {
    this.InvokeFunc$b14$Argument12$value = value;
  }; 

  function InvokeFunc$b14_set_Argument13 (value) {
    this.InvokeFunc$b14$Argument13$value = value;
  }; 

  function InvokeFunc$b14_set_Argument2 (value) {
    this.InvokeFunc$b14$Argument2$value = value;
  }; 

  function InvokeFunc$b14_set_Argument3 (value) {
    this.InvokeFunc$b14$Argument3$value = value;
  }; 

  function InvokeFunc$b14_set_Argument4 (value) {
    this.InvokeFunc$b14$Argument4$value = value;
  }; 

  function InvokeFunc$b14_set_Argument5 (value) {
    this.InvokeFunc$b14$Argument5$value = value;
  }; 

  function InvokeFunc$b14_set_Argument6 (value) {
    this.InvokeFunc$b14$Argument6$value = value;
  }; 

  function InvokeFunc$b14_set_Argument7 (value) {
    this.InvokeFunc$b14$Argument7$value = value;
  }; 

  function InvokeFunc$b14_set_Argument8 (value) {
    this.InvokeFunc$b14$Argument8$value = value;
  }; 

  function InvokeFunc$b14_set_Argument9 (value) {
    this.InvokeFunc$b14$Argument9$value = value;
  }; 

  function InvokeFunc$b14_set_Func (value) {
    this.InvokeFunc$b14$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`14")]), 
      Name: "System.Activities.Expressions.InvokeFunc`14", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b14_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b14_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b14_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeFunc$b14_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeFunc$b14_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b14_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b14_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b14_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b14_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b14_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b14_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b14_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b14_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`14", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b14_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b14_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b14_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b14_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeFunc$b14_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeFunc$b14_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b14_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b14_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b14_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b14_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b14_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b14_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b14_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b14_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`14", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b14_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b14$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`14", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`14", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`15 */ 

(function InvokeFunc$b15$Members () {
  var $, $thisType;



  function InvokeFunc$b15_get_Argument1 () {
    return this.InvokeFunc$b15$Argument1$value;
  }; 

  function InvokeFunc$b15_get_Argument10 () {
    return this.InvokeFunc$b15$Argument10$value;
  }; 

  function InvokeFunc$b15_get_Argument11 () {
    return this.InvokeFunc$b15$Argument11$value;
  }; 

  function InvokeFunc$b15_get_Argument12 () {
    return this.InvokeFunc$b15$Argument12$value;
  }; 

  function InvokeFunc$b15_get_Argument13 () {
    return this.InvokeFunc$b15$Argument13$value;
  }; 

  function InvokeFunc$b15_get_Argument14 () {
    return this.InvokeFunc$b15$Argument14$value;
  }; 

  function InvokeFunc$b15_get_Argument2 () {
    return this.InvokeFunc$b15$Argument2$value;
  }; 

  function InvokeFunc$b15_get_Argument3 () {
    return this.InvokeFunc$b15$Argument3$value;
  }; 

  function InvokeFunc$b15_get_Argument4 () {
    return this.InvokeFunc$b15$Argument4$value;
  }; 

  function InvokeFunc$b15_get_Argument5 () {
    return this.InvokeFunc$b15$Argument5$value;
  }; 

  function InvokeFunc$b15_get_Argument6 () {
    return this.InvokeFunc$b15$Argument6$value;
  }; 

  function InvokeFunc$b15_get_Argument7 () {
    return this.InvokeFunc$b15$Argument7$value;
  }; 

  function InvokeFunc$b15_get_Argument8 () {
    return this.InvokeFunc$b15$Argument8$value;
  }; 

  function InvokeFunc$b15_get_Argument9 () {
    return this.InvokeFunc$b15$Argument9$value;
  }; 

  function InvokeFunc$b15_get_Func () {
    return this.InvokeFunc$b15$Func$value;
  }; 



  function InvokeFunc$b15_set_Argument1 (value) {
    this.InvokeFunc$b15$Argument1$value = value;
  }; 

  function InvokeFunc$b15_set_Argument10 (value) {
    this.InvokeFunc$b15$Argument10$value = value;
  }; 

  function InvokeFunc$b15_set_Argument11 (value) {
    this.InvokeFunc$b15$Argument11$value = value;
  }; 

  function InvokeFunc$b15_set_Argument12 (value) {
    this.InvokeFunc$b15$Argument12$value = value;
  }; 

  function InvokeFunc$b15_set_Argument13 (value) {
    this.InvokeFunc$b15$Argument13$value = value;
  }; 

  function InvokeFunc$b15_set_Argument14 (value) {
    this.InvokeFunc$b15$Argument14$value = value;
  }; 

  function InvokeFunc$b15_set_Argument2 (value) {
    this.InvokeFunc$b15$Argument2$value = value;
  }; 

  function InvokeFunc$b15_set_Argument3 (value) {
    this.InvokeFunc$b15$Argument3$value = value;
  }; 

  function InvokeFunc$b15_set_Argument4 (value) {
    this.InvokeFunc$b15$Argument4$value = value;
  }; 

  function InvokeFunc$b15_set_Argument5 (value) {
    this.InvokeFunc$b15$Argument5$value = value;
  }; 

  function InvokeFunc$b15_set_Argument6 (value) {
    this.InvokeFunc$b15$Argument6$value = value;
  }; 

  function InvokeFunc$b15_set_Argument7 (value) {
    this.InvokeFunc$b15$Argument7$value = value;
  }; 

  function InvokeFunc$b15_set_Argument8 (value) {
    this.InvokeFunc$b15$Argument8$value = value;
  }; 

  function InvokeFunc$b15_set_Argument9 (value) {
    this.InvokeFunc$b15$Argument9$value = value;
  }; 

  function InvokeFunc$b15_set_Func (value) {
    this.InvokeFunc$b15$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`15")]), 
      Name: "System.Activities.Expressions.InvokeFunc`15", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b15_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b15_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b15_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeFunc$b15_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeFunc$b15_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeFunc$b15_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b15_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b15_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b15_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b15_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b15_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b15_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b15_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b15_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`15", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b15_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b15_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b15_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b15_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeFunc$b15_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeFunc$b15_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeFunc$b15_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b15_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b15_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b15_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b15_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b15_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b15_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b15_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b15_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`15", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b15_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b15$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`15", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`15", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`16 */ 

(function InvokeFunc$b16$Members () {
  var $, $thisType;



  function InvokeFunc$b16_get_Argument1 () {
    return this.InvokeFunc$b16$Argument1$value;
  }; 

  function InvokeFunc$b16_get_Argument10 () {
    return this.InvokeFunc$b16$Argument10$value;
  }; 

  function InvokeFunc$b16_get_Argument11 () {
    return this.InvokeFunc$b16$Argument11$value;
  }; 

  function InvokeFunc$b16_get_Argument12 () {
    return this.InvokeFunc$b16$Argument12$value;
  }; 

  function InvokeFunc$b16_get_Argument13 () {
    return this.InvokeFunc$b16$Argument13$value;
  }; 

  function InvokeFunc$b16_get_Argument14 () {
    return this.InvokeFunc$b16$Argument14$value;
  }; 

  function InvokeFunc$b16_get_Argument15 () {
    return this.InvokeFunc$b16$Argument15$value;
  }; 

  function InvokeFunc$b16_get_Argument2 () {
    return this.InvokeFunc$b16$Argument2$value;
  }; 

  function InvokeFunc$b16_get_Argument3 () {
    return this.InvokeFunc$b16$Argument3$value;
  }; 

  function InvokeFunc$b16_get_Argument4 () {
    return this.InvokeFunc$b16$Argument4$value;
  }; 

  function InvokeFunc$b16_get_Argument5 () {
    return this.InvokeFunc$b16$Argument5$value;
  }; 

  function InvokeFunc$b16_get_Argument6 () {
    return this.InvokeFunc$b16$Argument6$value;
  }; 

  function InvokeFunc$b16_get_Argument7 () {
    return this.InvokeFunc$b16$Argument7$value;
  }; 

  function InvokeFunc$b16_get_Argument8 () {
    return this.InvokeFunc$b16$Argument8$value;
  }; 

  function InvokeFunc$b16_get_Argument9 () {
    return this.InvokeFunc$b16$Argument9$value;
  }; 

  function InvokeFunc$b16_get_Func () {
    return this.InvokeFunc$b16$Func$value;
  }; 



  function InvokeFunc$b16_set_Argument1 (value) {
    this.InvokeFunc$b16$Argument1$value = value;
  }; 

  function InvokeFunc$b16_set_Argument10 (value) {
    this.InvokeFunc$b16$Argument10$value = value;
  }; 

  function InvokeFunc$b16_set_Argument11 (value) {
    this.InvokeFunc$b16$Argument11$value = value;
  }; 

  function InvokeFunc$b16_set_Argument12 (value) {
    this.InvokeFunc$b16$Argument12$value = value;
  }; 

  function InvokeFunc$b16_set_Argument13 (value) {
    this.InvokeFunc$b16$Argument13$value = value;
  }; 

  function InvokeFunc$b16_set_Argument14 (value) {
    this.InvokeFunc$b16$Argument14$value = value;
  }; 

  function InvokeFunc$b16_set_Argument15 (value) {
    this.InvokeFunc$b16$Argument15$value = value;
  }; 

  function InvokeFunc$b16_set_Argument2 (value) {
    this.InvokeFunc$b16$Argument2$value = value;
  }; 

  function InvokeFunc$b16_set_Argument3 (value) {
    this.InvokeFunc$b16$Argument3$value = value;
  }; 

  function InvokeFunc$b16_set_Argument4 (value) {
    this.InvokeFunc$b16$Argument4$value = value;
  }; 

  function InvokeFunc$b16_set_Argument5 (value) {
    this.InvokeFunc$b16$Argument5$value = value;
  }; 

  function InvokeFunc$b16_set_Argument6 (value) {
    this.InvokeFunc$b16$Argument6$value = value;
  }; 

  function InvokeFunc$b16_set_Argument7 (value) {
    this.InvokeFunc$b16$Argument7$value = value;
  }; 

  function InvokeFunc$b16_set_Argument8 (value) {
    this.InvokeFunc$b16$Argument8$value = value;
  }; 

  function InvokeFunc$b16_set_Argument9 (value) {
    this.InvokeFunc$b16$Argument9$value = value;
  }; 

  function InvokeFunc$b16_set_Func (value) {
    this.InvokeFunc$b16$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`16")]), 
      Name: "System.Activities.Expressions.InvokeFunc`16", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b16_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b16_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b16_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeFunc$b16_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeFunc$b16_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeFunc$b16_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]), null), 
      InvokeFunc$b16_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b16_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b16_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b16_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b16_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b16_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b16_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b16_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b16_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`16", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b16_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b16_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b16_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b16_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeFunc$b16_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeFunc$b16_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeFunc$b16_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")])]), 
      InvokeFunc$b16_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b16_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b16_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b16_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b16_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b16_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b16_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b16_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b16_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`16", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b16_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Argument15$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b16$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`16", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`16", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.InvokeFunc`17 */ 

(function InvokeFunc$b17$Members () {
  var $, $thisType;



  function InvokeFunc$b17_get_Argument1 () {
    return this.InvokeFunc$b17$Argument1$value;
  }; 

  function InvokeFunc$b17_get_Argument10 () {
    return this.InvokeFunc$b17$Argument10$value;
  }; 

  function InvokeFunc$b17_get_Argument11 () {
    return this.InvokeFunc$b17$Argument11$value;
  }; 

  function InvokeFunc$b17_get_Argument12 () {
    return this.InvokeFunc$b17$Argument12$value;
  }; 

  function InvokeFunc$b17_get_Argument13 () {
    return this.InvokeFunc$b17$Argument13$value;
  }; 

  function InvokeFunc$b17_get_Argument14 () {
    return this.InvokeFunc$b17$Argument14$value;
  }; 

  function InvokeFunc$b17_get_Argument15 () {
    return this.InvokeFunc$b17$Argument15$value;
  }; 

  function InvokeFunc$b17_get_Argument16 () {
    return this.InvokeFunc$b17$Argument16$value;
  }; 

  function InvokeFunc$b17_get_Argument2 () {
    return this.InvokeFunc$b17$Argument2$value;
  }; 

  function InvokeFunc$b17_get_Argument3 () {
    return this.InvokeFunc$b17$Argument3$value;
  }; 

  function InvokeFunc$b17_get_Argument4 () {
    return this.InvokeFunc$b17$Argument4$value;
  }; 

  function InvokeFunc$b17_get_Argument5 () {
    return this.InvokeFunc$b17$Argument5$value;
  }; 

  function InvokeFunc$b17_get_Argument6 () {
    return this.InvokeFunc$b17$Argument6$value;
  }; 

  function InvokeFunc$b17_get_Argument7 () {
    return this.InvokeFunc$b17$Argument7$value;
  }; 

  function InvokeFunc$b17_get_Argument8 () {
    return this.InvokeFunc$b17$Argument8$value;
  }; 

  function InvokeFunc$b17_get_Argument9 () {
    return this.InvokeFunc$b17$Argument9$value;
  }; 

  function InvokeFunc$b17_get_Func () {
    return this.InvokeFunc$b17$Func$value;
  }; 



  function InvokeFunc$b17_set_Argument1 (value) {
    this.InvokeFunc$b17$Argument1$value = value;
  }; 

  function InvokeFunc$b17_set_Argument10 (value) {
    this.InvokeFunc$b17$Argument10$value = value;
  }; 

  function InvokeFunc$b17_set_Argument11 (value) {
    this.InvokeFunc$b17$Argument11$value = value;
  }; 

  function InvokeFunc$b17_set_Argument12 (value) {
    this.InvokeFunc$b17$Argument12$value = value;
  }; 

  function InvokeFunc$b17_set_Argument13 (value) {
    this.InvokeFunc$b17$Argument13$value = value;
  }; 

  function InvokeFunc$b17_set_Argument14 (value) {
    this.InvokeFunc$b17$Argument14$value = value;
  }; 

  function InvokeFunc$b17_set_Argument15 (value) {
    this.InvokeFunc$b17$Argument15$value = value;
  }; 

  function InvokeFunc$b17_set_Argument16 (value) {
    this.InvokeFunc$b17$Argument16$value = value;
  }; 

  function InvokeFunc$b17_set_Argument2 (value) {
    this.InvokeFunc$b17$Argument2$value = value;
  }; 

  function InvokeFunc$b17_set_Argument3 (value) {
    this.InvokeFunc$b17$Argument3$value = value;
  }; 

  function InvokeFunc$b17_set_Argument4 (value) {
    this.InvokeFunc$b17$Argument4$value = value;
  }; 

  function InvokeFunc$b17_set_Argument5 (value) {
    this.InvokeFunc$b17$Argument5$value = value;
  }; 

  function InvokeFunc$b17_set_Argument6 (value) {
    this.InvokeFunc$b17$Argument6$value = value;
  }; 

  function InvokeFunc$b17_set_Argument7 (value) {
    this.InvokeFunc$b17$Argument7$value = value;
  }; 

  function InvokeFunc$b17_set_Argument8 (value) {
    this.InvokeFunc$b17$Argument8$value = value;
  }; 

  function InvokeFunc$b17_set_Argument9 (value) {
    this.InvokeFunc$b17$Argument9$value = value;
  }; 

  function InvokeFunc$b17_set_Func (value) {
    this.InvokeFunc$b17$Func$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.InvokeFunc`17")]), 
      Name: "System.Activities.Expressions.InvokeFunc`17", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "T16", 
        "TResult"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeFunc$b17_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeFunc$b17_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeFunc$b17_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeFunc$b17_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeFunc$b17_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeFunc$b17_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]), null), 
      InvokeFunc$b17_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument16", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]), null), 
      InvokeFunc$b17_get_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeFunc$b17_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeFunc$b17_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeFunc$b17_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeFunc$b17_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeFunc$b17_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeFunc$b17_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeFunc$b17_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeFunc$b17_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Func", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityFunc`17", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("T16"), 
            $.GenericParameter("TResult")
          ]), null), 
      InvokeFunc$b17_get_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnActivityFuncComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.GenericParameter("TResult")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeFunc$b17_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeFunc$b17_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeFunc$b17_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeFunc$b17_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeFunc$b17_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeFunc$b17_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")])]), 
      InvokeFunc$b17_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument16", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")])]), 
      InvokeFunc$b17_set_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeFunc$b17_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeFunc$b17_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeFunc$b17_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeFunc$b17_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeFunc$b17_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeFunc$b17_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeFunc$b17_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeFunc$b17_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Func", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityFunc`17", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("T16"), 
            $.GenericParameter("TResult")
          ])]), 
      InvokeFunc$b17_set_Func
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument15$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Argument16$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeFunc$b17$Func$value", $asm0B.TypeRef("System.Activities.ActivityFunc`17", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("T16"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument16", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Func", $asm0B.TypeRef("System.Activities.ActivityFunc`17", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("T16"), 
          $.GenericParameter("TResult")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Func"]; });

})();

/* class System.Activities.Expressions.IndexerReference`2 */ 

(function IndexerReference$b2$Members () {
  var $, $thisType;





  function IndexerReference$b2_get_Operand () {
    return this.IndexerReference$b2$Operand$value;
  }; 

  function IndexerReference$b2_set_Operand (value) {
    this.IndexerReference$b2$Operand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.IndexerReference`2")])]), 
      Name: "System.Activities.Expressions.IndexerReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TItem")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Indices", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
    );

    $.Method({Static:false, Public:true }, "get_Operand", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]), null), 
      IndexerReference$b2_get_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Operand", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")])]), 
      IndexerReference$b2_set_Operand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "IndexerReference$b2$Operand$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Operand", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Indices"]; });

})();

/* class System.Activities.Expressions.IndexerReference`2+IndexerLocation */ 

(function IndexerLocation$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.IndexerReference`2+IndexerLocation")]), 
      Name: "System.Activities.Expressions.IndexerReference`2+IndexerLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.GenericParameter("TOperand"), $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedGetMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndices", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOperand", 
      new JSIL.MethodSignature($.GenericParameter("TOperand"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedParameters", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSetMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedGetMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndices", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOperand", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TOperand")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedParameters", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSetMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TItem")])
    );

    $.Field({Static:false, Public:false}, "operand", $.GenericParameter("TOperand"));

    $.Field({Static:false, Public:false}, "indices", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "parameters", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TItem"));

    $.Property({Static:false, Public:false}, "SerializedOperand", $.GenericParameter("TOperand"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndices", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedParameters", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedGetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.IndexerReference`2+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.IndexerReference`2+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Indices$gb__12_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.IndexerReference`2+<>c", [$.GenericParameter("TOperand"), $.GenericParameter("TItem")]));

    $.Field({Static:true , Public:true }, "$l$g9__12_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.InArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* interface System.Activities.Expressions.ITextExpression */ 

JSIL.MakeInterface(
  "System.Activities.Expressions.ITextExpression", true, [], function ($) {
    $.Method({}, "get_ExpressionText", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Language", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_RequiresCompilation", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "GetExpressionTree", JSIL.MethodSignature.Return($asm10.TypeRef("System.Linq.Expressions.Expression")));
    $.Property({}, "ExpressionText");
    $.Property({}, "Language");
    $.Property({}, "RequiresCompilation");
  }, []);

/* interface System.Activities.Expressions.ILocationReferenceWrapper */ 

JSIL.MakeInterface(
  "System.Activities.Expressions.ILocationReferenceWrapper", false, [], function ($) {
    $.Method({}, "get_LocationReference", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReference")));
    $.Property({}, "LocationReference");
  }, []);

/* class System.Activities.Expressions.MemberExpressionHelper */ 

(function MemberExpressionHelper$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Activities.Expressions.MemberExpressionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AddOperandArgument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm0B.TypeRef("System.Activities.InArgument`1", ["!!0"]), 
          $.Boolean
        ], ["TOperand"])
    );

    $.ExternalMethod({Static:true , Public:true }, "AddOperandLocationArgument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm0B.TypeRef("System.Activities.InOutArgument`1", ["!!0"]), 
          $.Boolean
        ], ["TOperand"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMemberInfo", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MemberInfo"), [$.String, $.Boolean], ["TOperand"])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryGenerateLinqDelegate", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Boolean, 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Func`2", ["!!0", "!!1"])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])
        ], ["TOperand", "TResult"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.MultidimensionalArrayItemReference`1 */ 

(function MultidimensionalArrayItemReference$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Array))) ();
  };





  function MultidimensionalArrayItemReference$b1_get_Array () {
    return this.MultidimensionalArrayItemReference$b1$Array$value;
  }; 


  function MultidimensionalArrayItemReference$b1_set_Array (value) {
    this.MultidimensionalArrayItemReference$b1$Array$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.MultidimensionalArrayItemReference`1")])]), 
      Name: "System.Activities.Expressions.MultidimensionalArrayItemReference`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TItem")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Array", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Array")])), 
      MultidimensionalArrayItemReference$b1_get_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Indices", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])]))
    );

    $.Method({Static:false, Public:true }, "set_Array", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Array")])), 
      MultidimensionalArrayItemReference$b1_set_Array
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])]));

    $.Field({Static:false, Public:false}, "MultidimensionalArrayItemReference$b1$Array$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Array")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Array", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Array")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Indices"]; });

})();

/* class System.Activities.Expressions.MultidimensionalArrayItemReference`1+MultidimensionArrayLocation */ 

(function MultidimensionArrayLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.MultidimensionalArrayItemReference`1+MultidimensionArrayLocation")]), 
      Name: "System.Activities.Expressions.MultidimensionalArrayItemReference`1+MultidimensionArrayLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Array"), $jsilcore.TypeRef("System.Array", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Serializedarray", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Array"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndices", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Serializedarray", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Array"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndices", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TItem")])
    );

    $.Field({Static:false, Public:false}, "array", $asm07.TypeRef("System.Array"));

    $.Field({Static:false, Public:false}, "indices", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TItem"));

    $.Property({Static:false, Public:false}, "Serializedarray", $asm07.TypeRef("System.Array"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndices", $jsilcore.TypeRef("System.Array", [$.Int32]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.MultidimensionalArrayItemReference`1+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.MultidimensionalArrayItemReference`1+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Indices$gb__6_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.MultidimensionalArrayItemReference`1+<>c", [$.GenericParameter("TItem")]));

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Expressions.TextExpression */ 

(function TextExpression$Members () {
  var $, $thisType;


























  JSIL.MakeStaticClass("System.Activities.Expressions.TextExpression", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "get_DefaultNamespaces", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DefaultReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCollection", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), [$.Object, $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetNamespaces", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetNamespacesForImplementation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetNamespacesInScope", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetReferences", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetReferencesForImplementation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetReferencesInScope", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRoot", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:true , Public:false}, "LanguagesAreEqual", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetCollection", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetNamespaces", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetNamespaces", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$.String])])
    )
      .Parameter(1, "namespaces", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SetNamespacesForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetNamespacesForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$.String])])
    )
      .Parameter(1, "namespaces", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SetReferences", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetReferences", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])])
    )
      .Parameter(1, "references", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "SetReferencesForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetReferencesForImplementation", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")])])
    )
      .Parameter(1, "references", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "ShouldSerializeCollection", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializeNamespaces", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializeNamespacesForImplementation", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializeReferences", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShouldSerializeReferencesForImplementation", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "namespacesProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "namespacesForImplementationProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "referencesProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "referencesForImplementationProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultNamespaces", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultReferences", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]));

    $.Property({Static:true , Public:true }, "DefaultNamespaces", $asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]));

    $.Property({Static:true , Public:true }, "DefaultReferences", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Expressions.AssemblyReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ValueTypeFieldReference`2 */ 

(function ValueTypeFieldReference$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function ValueTypeFieldReference$b2_get_FieldName () {
    return this.ValueTypeFieldReference$b2$FieldName$value;
  }; 

  function ValueTypeFieldReference$b2_get_OperandLocation () {
    return this.ValueTypeFieldReference$b2$OperandLocation$value;
  }; 

  function ValueTypeFieldReference$b2_set_FieldName (value) {
    this.ValueTypeFieldReference$b2$FieldName$value = value;
  }; 

  function ValueTypeFieldReference$b2_set_OperandLocation (value) {
    this.ValueTypeFieldReference$b2$OperandLocation$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.ValueTypeFieldReference`2")])]), 
      Name: "System.Activities.Expressions.ValueTypeFieldReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_FieldName", 
      JSIL.MethodSignature.Return($.String), 
      ValueTypeFieldReference$b2_get_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OperandLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]), null), 
      ValueTypeFieldReference$b2_get_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FieldName", 
      JSIL.MethodSignature.Action($.String), 
      ValueTypeFieldReference$b2_set_FieldName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperandLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")])]), 
      ValueTypeFieldReference$b2_set_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "ValueTypeFieldReference$b2$FieldName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValueTypeFieldReference$b2$OperandLocation$value", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FieldName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "OperandLocation", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ValueTypeFieldReference`2+FieldLocation */ 

(function FieldLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.ValueTypeFieldReference`2+FieldLocation")]), 
      Name: "System.Activities.Expressions.ValueTypeFieldReference`2+FieldLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Reflection.FieldInfo"), $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFieldInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwnerLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFieldInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.FieldInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwnerLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TResult")])
    );

    $.Field({Static:false, Public:false}, "fieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"));

    $.Field({Static:false, Public:false}, "ownerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TResult"));

    $.Property({Static:false, Public:false}, "SerializedFieldInfo", $asm07.TypeRef("System.Reflection.FieldInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwnerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.ValueTypeIndexerReference`2 */ 

(function ValueTypeIndexerReference$b2$Members () {
  var $, $thisType;





  function ValueTypeIndexerReference$b2_get_OperandLocation () {
    return this.ValueTypeIndexerReference$b2$OperandLocation$value;
  }; 

  function ValueTypeIndexerReference$b2_set_OperandLocation (value) {
    this.ValueTypeIndexerReference$b2$OperandLocation$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.ValueTypeIndexerReference`2")])]), 
      Name: "System.Activities.Expressions.ValueTypeIndexerReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TItem")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Indices", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
    );

    $.Method({Static:false, Public:true }, "get_OperandLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]), null), 
      ValueTypeIndexerReference$b2_get_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperandLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")])]), 
      ValueTypeIndexerReference$b2_set_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "ValueTypeIndexerReference$b2$OperandLocation$value", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "OperandLocation", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Indices", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Indices"]; });

})();

/* class System.Activities.Expressions.ValueTypeIndexerReference`2+IndexerLocation */ 

(function IndexerLocation$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TItem", "System.Activities.Expressions.ValueTypeIndexerReference`2+IndexerLocation")]), 
      Name: "System.Activities.Expressions.ValueTypeIndexerReference`2+IndexerLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]), $jsilcore.TypeRef("System.Array", [$.Object]), 
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedGetMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIndices", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOperandLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedParameters", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSetMethod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedGetMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIndices", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOperandLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedParameters", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSetMethod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.MethodInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TItem")])
    );

    $.Field({Static:false, Public:false}, "operandLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]));

    $.Field({Static:false, Public:false}, "indices", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "parameters", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TItem"));

    $.Property({Static:false, Public:false}, "SerializedOperandLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIndices", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedParameters", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedGetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSetMethod", $asm07.TypeRef("System.Reflection.MethodInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.ValueTypeIndexerReference`2+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Expressions.ValueTypeIndexerReference`2+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Indices$gb__12_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $asm0B.TypeRef("System.Activities.Expressions.ValueTypeIndexerReference`2+<>c", [$.GenericParameter("TOperand"), $.GenericParameter("TItem")]));

    $.Field({Static:true , Public:true }, "$l$g9__12_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.InArgument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Expressions.ValueTypePropertyReference`2 */ 

(function ValueTypePropertyReference$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function ValueTypePropertyReference$b2_get_OperandLocation () {
    return this.ValueTypePropertyReference$b2$OperandLocation$value;
  }; 

  function ValueTypePropertyReference$b2_get_PropertyName () {
    return this.ValueTypePropertyReference$b2$PropertyName$value;
  }; 

  function ValueTypePropertyReference$b2_set_OperandLocation (value) {
    this.ValueTypePropertyReference$b2$OperandLocation$value = value;
  }; 

  function ValueTypePropertyReference$b2_set_PropertyName (value) {
    this.ValueTypePropertyReference$b2$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.ValueTypePropertyReference`2")])]), 
      Name: "System.Activities.Expressions.ValueTypePropertyReference`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TResult")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_OperandLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]), null), 
      ValueTypePropertyReference$b2_get_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($.String), 
      ValueTypePropertyReference$b2_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OperandLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")])]), 
      ValueTypePropertyReference$b2_set_OperandLocation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($.String), 
      ValueTypePropertyReference$b2_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "ValueTypePropertyReference$b2$PropertyName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValueTypePropertyReference$b2$OperandLocation$value", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "OperandLocation", $asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.ValueTypePropertyReference`2+PropertyLocation */ 

(function PropertyLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("TResult", "System.Activities.Expressions.ValueTypePropertyReference`2+PropertyLocation")]), 
      Name: "System.Activities.Expressions.ValueTypePropertyReference`2+PropertyLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TOperand", "TResult"], 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.PropertyInfo"), $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), 
          $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwnerLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropertyInfo", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TResult"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwnerLocation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropertyInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Reflection.PropertyInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TResult")])
    );

    $.Field({Static:false, Public:false}, "ownerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]));

    $.Field({Static:false, Public:false}, "propertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"));

    $.Field({Static:false, Public:false}, "getFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "setFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("TResult"));

    $.Property({Static:false, Public:false}, "SerializedOwnerLocation", $asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("TOperand")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPropertyInfo", $asm07.TypeRef("System.Reflection.PropertyInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Expressions.IndexerHelper */ 

(function IndexerHelper$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.Expressions.IndexerHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CacheMethod", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Reflection.MethodInfo")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Reflection.MethodInfo")])
        ], ["TOperand", "TItem"])
    );

    $.ExternalMethod({Static:true , Public:true }, "OnGetArguments", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.InArgument")]), $asm0B.TypeRef("System.Activities.OutArgument`1", [$asm0B.TypeRef("System.Activities.Location`1", ["!!0"])]), 
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata")
        ], ["TItem"])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.MethodCallExpressionHelper */ 

(function MethodCallExpressionHelper$Members () {
  var $, $thisType;












  JSIL.MakeStaticClass("System.Activities.Expressions.MethodCallExpressionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ComposeBlockExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), 
          $asm10.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), 
          $asm07.TypeRef("System.Type"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComposeLinqExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), 
          $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), $asm07.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComposeLinqExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm07.TypeRef("System.Reflection.ConstructorInfo"), $asm10.TypeRef("System.Linq.Expressions.ParameterExpression")], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ]), [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), "!!0"]), [$asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.ConstructorInfo")], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ]), [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
                $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
                $.Object
              ])]), $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), "!!0"]), [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.ConstructorInfo"), 
          $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.ConstructorInfo"), $asm07.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), "!!0"])]), $asm10.TypeRef("System.Threading.ReaderWriterLockSlim")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:true , Public:false}, "NeedRetrieve", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Reflection.MethodBase"), $asm07.TypeRef("System.Reflection.MethodBase"), 
          $asm07.TypeRef("System.Delegate")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PrepareForCallExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), [
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PrepareForCallExpression", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.MethodCallExpression"), [
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "PrepareForVariables", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.MethodBase"), $asm10.TypeRef("System.Linq.Expressions.ParameterExpression"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.ParameterExpression")]), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")]), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm10.TypeRef("System.Linq.Expressions.Expression")])
        ])
    );

    $.Constant({Static:true , Public:true }, "FuncCacheCapacity", $.Int32, 500);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Expressions.OperatorPermissionHelper */ 

(function OperatorPermissionHelper$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.Expressions.OperatorPermissionHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "InjectReflectionPermissionIfNecessary", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm10.TypeRef("System.Linq.Expressions.Expression")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Statements");
/* class System.Activities.Statements.InvokeAction */ 

(function InvokeAction$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.ActivityAction)) ();
  };





  function InvokeAction_get_Action () {
    return this.InvokeAction$Action$value;
  }; 

  function InvokeAction_set_Action (value) {
    this.InvokeAction$Action$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityAction")), 
      InvokeAction_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityAction")), 
      InvokeAction_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "actionArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "InvokeAction$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.InvokeAction+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__1_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__1_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.InvokeAction`1 */ 

(function InvokeAction$b1$Members () {
  var $, $thisType;




  function InvokeAction$b1_get_Action () {
    return this.InvokeAction$b1$Action$value;
  }; 

  function InvokeAction$b1_get_Argument () {
    return this.InvokeAction$b1$Argument$value;
  }; 


  function InvokeAction$b1_set_Action (value) {
    this.InvokeAction$b1$Action$value = value;
  }; 

  function InvokeAction$b1_set_Argument (value) {
    this.InvokeAction$b1$Argument$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]), null), 
      InvokeAction$b1_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      InvokeAction$b1_get_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")])]), 
      InvokeAction$b1_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      InvokeAction$b1_set_Argument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b1$Argument$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b1$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`2 */ 

(function InvokeAction$b2$Members () {
  var $, $thisType;



  function InvokeAction$b2_get_Action () {
    return this.InvokeAction$b2$Action$value;
  }; 

  function InvokeAction$b2_get_Argument1 () {
    return this.InvokeAction$b2$Argument1$value;
  }; 

  function InvokeAction$b2_get_Argument2 () {
    return this.InvokeAction$b2$Argument2$value;
  }; 


  function InvokeAction$b2_set_Action (value) {
    this.InvokeAction$b2$Action$value = value;
  }; 

  function InvokeAction$b2_set_Argument1 (value) {
    this.InvokeAction$b2$Argument1$value = value;
  }; 

  function InvokeAction$b2_set_Argument2 (value) {
    this.InvokeAction$b2$Argument2$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T1"), $.GenericParameter("T2")]), null), 
      InvokeAction$b2_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b2_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b2_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T1"), $.GenericParameter("T2")])]), 
      InvokeAction$b2_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b2_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b2_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b2$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b2$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b2$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T1"), $.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T1"), $.GenericParameter("T2")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`3 */ 

(function InvokeAction$b3$Members () {
  var $, $thisType;



  function InvokeAction$b3_get_Action () {
    return this.InvokeAction$b3$Action$value;
  }; 

  function InvokeAction$b3_get_Argument1 () {
    return this.InvokeAction$b3$Argument1$value;
  }; 

  function InvokeAction$b3_get_Argument2 () {
    return this.InvokeAction$b3$Argument2$value;
  }; 

  function InvokeAction$b3_get_Argument3 () {
    return this.InvokeAction$b3$Argument3$value;
  }; 


  function InvokeAction$b3_set_Action (value) {
    this.InvokeAction$b3$Action$value = value;
  }; 

  function InvokeAction$b3_set_Argument1 (value) {
    this.InvokeAction$b3$Argument1$value = value;
  }; 

  function InvokeAction$b3_set_Argument2 (value) {
    this.InvokeAction$b3$Argument2$value = value;
  }; 

  function InvokeAction$b3_set_Argument3 (value) {
    this.InvokeAction$b3$Argument3$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`3", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`3", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3")
          ]), null), 
      InvokeAction$b3_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b3_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b3_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b3_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`3", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3")
          ])]), 
      InvokeAction$b3_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b3_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b3_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b3_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b3$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b3$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b3$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b3$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`3", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`3", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`4 */ 

(function InvokeAction$b4$Members () {
  var $, $thisType;



  function InvokeAction$b4_get_Action () {
    return this.InvokeAction$b4$Action$value;
  }; 

  function InvokeAction$b4_get_Argument1 () {
    return this.InvokeAction$b4$Argument1$value;
  }; 

  function InvokeAction$b4_get_Argument2 () {
    return this.InvokeAction$b4$Argument2$value;
  }; 

  function InvokeAction$b4_get_Argument3 () {
    return this.InvokeAction$b4$Argument3$value;
  }; 

  function InvokeAction$b4_get_Argument4 () {
    return this.InvokeAction$b4$Argument4$value;
  }; 


  function InvokeAction$b4_set_Action (value) {
    this.InvokeAction$b4$Action$value = value;
  }; 

  function InvokeAction$b4_set_Argument1 (value) {
    this.InvokeAction$b4$Argument1$value = value;
  }; 

  function InvokeAction$b4_set_Argument2 (value) {
    this.InvokeAction$b4$Argument2$value = value;
  }; 

  function InvokeAction$b4_set_Argument3 (value) {
    this.InvokeAction$b4$Argument3$value = value;
  }; 

  function InvokeAction$b4_set_Argument4 (value) {
    this.InvokeAction$b4$Argument4$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`4", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T1", "T2", "T3", "T4"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`4", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4")
          ]), null), 
      InvokeAction$b4_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b4_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b4_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b4_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b4_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`4", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4")
          ])]), 
      InvokeAction$b4_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b4_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b4_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b4_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b4_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b4$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b4$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b4$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b4$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b4$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`4", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`4", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`5 */ 

(function InvokeAction$b5$Members () {
  var $, $thisType;



  function InvokeAction$b5_get_Action () {
    return this.InvokeAction$b5$Action$value;
  }; 

  function InvokeAction$b5_get_Argument1 () {
    return this.InvokeAction$b5$Argument1$value;
  }; 

  function InvokeAction$b5_get_Argument2 () {
    return this.InvokeAction$b5$Argument2$value;
  }; 

  function InvokeAction$b5_get_Argument3 () {
    return this.InvokeAction$b5$Argument3$value;
  }; 

  function InvokeAction$b5_get_Argument4 () {
    return this.InvokeAction$b5$Argument4$value;
  }; 

  function InvokeAction$b5_get_Argument5 () {
    return this.InvokeAction$b5$Argument5$value;
  }; 


  function InvokeAction$b5_set_Action (value) {
    this.InvokeAction$b5$Action$value = value;
  }; 

  function InvokeAction$b5_set_Argument1 (value) {
    this.InvokeAction$b5$Argument1$value = value;
  }; 

  function InvokeAction$b5_set_Argument2 (value) {
    this.InvokeAction$b5$Argument2$value = value;
  }; 

  function InvokeAction$b5_set_Argument3 (value) {
    this.InvokeAction$b5$Argument3$value = value;
  }; 

  function InvokeAction$b5_set_Argument4 (value) {
    this.InvokeAction$b5$Argument4$value = value;
  }; 

  function InvokeAction$b5_set_Argument5 (value) {
    this.InvokeAction$b5$Argument5$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`5", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`5", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5")
          ]), null), 
      InvokeAction$b5_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b5_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b5_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b5_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b5_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b5_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`5", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5")
          ])]), 
      InvokeAction$b5_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b5_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b5_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b5_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b5_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b5_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b5$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`5", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`5", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`6 */ 

(function InvokeAction$b6$Members () {
  var $, $thisType;



  function InvokeAction$b6_get_Action () {
    return this.InvokeAction$b6$Action$value;
  }; 

  function InvokeAction$b6_get_Argument1 () {
    return this.InvokeAction$b6$Argument1$value;
  }; 

  function InvokeAction$b6_get_Argument2 () {
    return this.InvokeAction$b6$Argument2$value;
  }; 

  function InvokeAction$b6_get_Argument3 () {
    return this.InvokeAction$b6$Argument3$value;
  }; 

  function InvokeAction$b6_get_Argument4 () {
    return this.InvokeAction$b6$Argument4$value;
  }; 

  function InvokeAction$b6_get_Argument5 () {
    return this.InvokeAction$b6$Argument5$value;
  }; 

  function InvokeAction$b6_get_Argument6 () {
    return this.InvokeAction$b6$Argument6$value;
  }; 


  function InvokeAction$b6_set_Action (value) {
    this.InvokeAction$b6$Action$value = value;
  }; 

  function InvokeAction$b6_set_Argument1 (value) {
    this.InvokeAction$b6$Argument1$value = value;
  }; 

  function InvokeAction$b6_set_Argument2 (value) {
    this.InvokeAction$b6$Argument2$value = value;
  }; 

  function InvokeAction$b6_set_Argument3 (value) {
    this.InvokeAction$b6$Argument3$value = value;
  }; 

  function InvokeAction$b6_set_Argument4 (value) {
    this.InvokeAction$b6$Argument4$value = value;
  }; 

  function InvokeAction$b6_set_Argument5 (value) {
    this.InvokeAction$b6$Argument5$value = value;
  }; 

  function InvokeAction$b6_set_Argument6 (value) {
    this.InvokeAction$b6$Argument6$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`6", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`6", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6")
          ]), null), 
      InvokeAction$b6_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b6_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b6_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b6_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b6_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b6_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b6_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`6", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6")
          ])]), 
      InvokeAction$b6_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b6_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b6_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b6_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b6_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b6_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b6_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b6$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`6", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`6", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`7 */ 

(function InvokeAction$b7$Members () {
  var $, $thisType;



  function InvokeAction$b7_get_Action () {
    return this.InvokeAction$b7$Action$value;
  }; 

  function InvokeAction$b7_get_Argument1 () {
    return this.InvokeAction$b7$Argument1$value;
  }; 

  function InvokeAction$b7_get_Argument2 () {
    return this.InvokeAction$b7$Argument2$value;
  }; 

  function InvokeAction$b7_get_Argument3 () {
    return this.InvokeAction$b7$Argument3$value;
  }; 

  function InvokeAction$b7_get_Argument4 () {
    return this.InvokeAction$b7$Argument4$value;
  }; 

  function InvokeAction$b7_get_Argument5 () {
    return this.InvokeAction$b7$Argument5$value;
  }; 

  function InvokeAction$b7_get_Argument6 () {
    return this.InvokeAction$b7$Argument6$value;
  }; 

  function InvokeAction$b7_get_Argument7 () {
    return this.InvokeAction$b7$Argument7$value;
  }; 


  function InvokeAction$b7_set_Action (value) {
    this.InvokeAction$b7$Action$value = value;
  }; 

  function InvokeAction$b7_set_Argument1 (value) {
    this.InvokeAction$b7$Argument1$value = value;
  }; 

  function InvokeAction$b7_set_Argument2 (value) {
    this.InvokeAction$b7$Argument2$value = value;
  }; 

  function InvokeAction$b7_set_Argument3 (value) {
    this.InvokeAction$b7$Argument3$value = value;
  }; 

  function InvokeAction$b7_set_Argument4 (value) {
    this.InvokeAction$b7$Argument4$value = value;
  }; 

  function InvokeAction$b7_set_Argument5 (value) {
    this.InvokeAction$b7$Argument5$value = value;
  }; 

  function InvokeAction$b7_set_Argument6 (value) {
    this.InvokeAction$b7$Argument6$value = value;
  }; 

  function InvokeAction$b7_set_Argument7 (value) {
    this.InvokeAction$b7$Argument7$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`7", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`7", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7")
          ]), null), 
      InvokeAction$b7_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b7_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b7_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b7_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b7_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b7_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b7_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b7_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`7", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7")
          ])]), 
      InvokeAction$b7_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b7_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b7_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b7_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b7_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b7_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b7_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b7_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b7$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`7", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`7", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`8 */ 

(function InvokeAction$b8$Members () {
  var $, $thisType;



  function InvokeAction$b8_get_Action () {
    return this.InvokeAction$b8$Action$value;
  }; 

  function InvokeAction$b8_get_Argument1 () {
    return this.InvokeAction$b8$Argument1$value;
  }; 

  function InvokeAction$b8_get_Argument2 () {
    return this.InvokeAction$b8$Argument2$value;
  }; 

  function InvokeAction$b8_get_Argument3 () {
    return this.InvokeAction$b8$Argument3$value;
  }; 

  function InvokeAction$b8_get_Argument4 () {
    return this.InvokeAction$b8$Argument4$value;
  }; 

  function InvokeAction$b8_get_Argument5 () {
    return this.InvokeAction$b8$Argument5$value;
  }; 

  function InvokeAction$b8_get_Argument6 () {
    return this.InvokeAction$b8$Argument6$value;
  }; 

  function InvokeAction$b8_get_Argument7 () {
    return this.InvokeAction$b8$Argument7$value;
  }; 

  function InvokeAction$b8_get_Argument8 () {
    return this.InvokeAction$b8$Argument8$value;
  }; 


  function InvokeAction$b8_set_Action (value) {
    this.InvokeAction$b8$Action$value = value;
  }; 

  function InvokeAction$b8_set_Argument1 (value) {
    this.InvokeAction$b8$Argument1$value = value;
  }; 

  function InvokeAction$b8_set_Argument2 (value) {
    this.InvokeAction$b8$Argument2$value = value;
  }; 

  function InvokeAction$b8_set_Argument3 (value) {
    this.InvokeAction$b8$Argument3$value = value;
  }; 

  function InvokeAction$b8_set_Argument4 (value) {
    this.InvokeAction$b8$Argument4$value = value;
  }; 

  function InvokeAction$b8_set_Argument5 (value) {
    this.InvokeAction$b8$Argument5$value = value;
  }; 

  function InvokeAction$b8_set_Argument6 (value) {
    this.InvokeAction$b8$Argument6$value = value;
  }; 

  function InvokeAction$b8_set_Argument7 (value) {
    this.InvokeAction$b8$Argument7$value = value;
  }; 

  function InvokeAction$b8_set_Argument8 (value) {
    this.InvokeAction$b8$Argument8$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`8", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`8", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8")
          ]), null), 
      InvokeAction$b8_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b8_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b8_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b8_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b8_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b8_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b8_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b8_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b8_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`8", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8")
          ])]), 
      InvokeAction$b8_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b8_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b8_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b8_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b8_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b8_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b8_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b8_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b8_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b8$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`8", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`8", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`9 */ 

(function InvokeAction$b9$Members () {
  var $, $thisType;



  function InvokeAction$b9_get_Action () {
    return this.InvokeAction$b9$Action$value;
  }; 

  function InvokeAction$b9_get_Argument1 () {
    return this.InvokeAction$b9$Argument1$value;
  }; 

  function InvokeAction$b9_get_Argument2 () {
    return this.InvokeAction$b9$Argument2$value;
  }; 

  function InvokeAction$b9_get_Argument3 () {
    return this.InvokeAction$b9$Argument3$value;
  }; 

  function InvokeAction$b9_get_Argument4 () {
    return this.InvokeAction$b9$Argument4$value;
  }; 

  function InvokeAction$b9_get_Argument5 () {
    return this.InvokeAction$b9$Argument5$value;
  }; 

  function InvokeAction$b9_get_Argument6 () {
    return this.InvokeAction$b9$Argument6$value;
  }; 

  function InvokeAction$b9_get_Argument7 () {
    return this.InvokeAction$b9$Argument7$value;
  }; 

  function InvokeAction$b9_get_Argument8 () {
    return this.InvokeAction$b9$Argument8$value;
  }; 

  function InvokeAction$b9_get_Argument9 () {
    return this.InvokeAction$b9$Argument9$value;
  }; 


  function InvokeAction$b9_set_Action (value) {
    this.InvokeAction$b9$Action$value = value;
  }; 

  function InvokeAction$b9_set_Argument1 (value) {
    this.InvokeAction$b9$Argument1$value = value;
  }; 

  function InvokeAction$b9_set_Argument2 (value) {
    this.InvokeAction$b9$Argument2$value = value;
  }; 

  function InvokeAction$b9_set_Argument3 (value) {
    this.InvokeAction$b9$Argument3$value = value;
  }; 

  function InvokeAction$b9_set_Argument4 (value) {
    this.InvokeAction$b9$Argument4$value = value;
  }; 

  function InvokeAction$b9_set_Argument5 (value) {
    this.InvokeAction$b9$Argument5$value = value;
  }; 

  function InvokeAction$b9_set_Argument6 (value) {
    this.InvokeAction$b9$Argument6$value = value;
  }; 

  function InvokeAction$b9_set_Argument7 (value) {
    this.InvokeAction$b9$Argument7$value = value;
  }; 

  function InvokeAction$b9_set_Argument8 (value) {
    this.InvokeAction$b9$Argument8$value = value;
  }; 

  function InvokeAction$b9_set_Argument9 (value) {
    this.InvokeAction$b9$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`9", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`9", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9")
          ]), null), 
      InvokeAction$b9_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b9_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b9_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b9_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b9_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b9_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b9_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b9_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b9_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b9_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`9", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9")
          ])]), 
      InvokeAction$b9_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b9_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b9_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b9_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b9_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b9_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b9_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b9_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b9_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b9_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b9$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`9", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`9", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`10 */ 

(function InvokeAction$b10$Members () {
  var $, $thisType;



  function InvokeAction$b10_get_Action () {
    return this.InvokeAction$b10$Action$value;
  }; 

  function InvokeAction$b10_get_Argument1 () {
    return this.InvokeAction$b10$Argument1$value;
  }; 

  function InvokeAction$b10_get_Argument10 () {
    return this.InvokeAction$b10$Argument10$value;
  }; 

  function InvokeAction$b10_get_Argument2 () {
    return this.InvokeAction$b10$Argument2$value;
  }; 

  function InvokeAction$b10_get_Argument3 () {
    return this.InvokeAction$b10$Argument3$value;
  }; 

  function InvokeAction$b10_get_Argument4 () {
    return this.InvokeAction$b10$Argument4$value;
  }; 

  function InvokeAction$b10_get_Argument5 () {
    return this.InvokeAction$b10$Argument5$value;
  }; 

  function InvokeAction$b10_get_Argument6 () {
    return this.InvokeAction$b10$Argument6$value;
  }; 

  function InvokeAction$b10_get_Argument7 () {
    return this.InvokeAction$b10$Argument7$value;
  }; 

  function InvokeAction$b10_get_Argument8 () {
    return this.InvokeAction$b10$Argument8$value;
  }; 

  function InvokeAction$b10_get_Argument9 () {
    return this.InvokeAction$b10$Argument9$value;
  }; 


  function InvokeAction$b10_set_Action (value) {
    this.InvokeAction$b10$Action$value = value;
  }; 

  function InvokeAction$b10_set_Argument1 (value) {
    this.InvokeAction$b10$Argument1$value = value;
  }; 

  function InvokeAction$b10_set_Argument10 (value) {
    this.InvokeAction$b10$Argument10$value = value;
  }; 

  function InvokeAction$b10_set_Argument2 (value) {
    this.InvokeAction$b10$Argument2$value = value;
  }; 

  function InvokeAction$b10_set_Argument3 (value) {
    this.InvokeAction$b10$Argument3$value = value;
  }; 

  function InvokeAction$b10_set_Argument4 (value) {
    this.InvokeAction$b10$Argument4$value = value;
  }; 

  function InvokeAction$b10_set_Argument5 (value) {
    this.InvokeAction$b10$Argument5$value = value;
  }; 

  function InvokeAction$b10_set_Argument6 (value) {
    this.InvokeAction$b10$Argument6$value = value;
  }; 

  function InvokeAction$b10_set_Argument7 (value) {
    this.InvokeAction$b10$Argument7$value = value;
  }; 

  function InvokeAction$b10_set_Argument8 (value) {
    this.InvokeAction$b10$Argument8$value = value;
  }; 

  function InvokeAction$b10_set_Argument9 (value) {
    this.InvokeAction$b10$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`10", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`10", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10")
          ]), null), 
      InvokeAction$b10_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b10_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b10_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b10_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b10_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b10_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b10_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b10_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b10_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b10_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b10_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`10", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10")
          ])]), 
      InvokeAction$b10_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b10_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b10_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b10_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b10_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b10_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b10_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b10_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b10_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b10_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b10_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b10$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`10", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`10", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`11 */ 

(function InvokeAction$b11$Members () {
  var $, $thisType;



  function InvokeAction$b11_get_Action () {
    return this.InvokeAction$b11$Action$value;
  }; 

  function InvokeAction$b11_get_Argument1 () {
    return this.InvokeAction$b11$Argument1$value;
  }; 

  function InvokeAction$b11_get_Argument10 () {
    return this.InvokeAction$b11$Argument10$value;
  }; 

  function InvokeAction$b11_get_Argument11 () {
    return this.InvokeAction$b11$Argument11$value;
  }; 

  function InvokeAction$b11_get_Argument2 () {
    return this.InvokeAction$b11$Argument2$value;
  }; 

  function InvokeAction$b11_get_Argument3 () {
    return this.InvokeAction$b11$Argument3$value;
  }; 

  function InvokeAction$b11_get_Argument4 () {
    return this.InvokeAction$b11$Argument4$value;
  }; 

  function InvokeAction$b11_get_Argument5 () {
    return this.InvokeAction$b11$Argument5$value;
  }; 

  function InvokeAction$b11_get_Argument6 () {
    return this.InvokeAction$b11$Argument6$value;
  }; 

  function InvokeAction$b11_get_Argument7 () {
    return this.InvokeAction$b11$Argument7$value;
  }; 

  function InvokeAction$b11_get_Argument8 () {
    return this.InvokeAction$b11$Argument8$value;
  }; 

  function InvokeAction$b11_get_Argument9 () {
    return this.InvokeAction$b11$Argument9$value;
  }; 


  function InvokeAction$b11_set_Action (value) {
    this.InvokeAction$b11$Action$value = value;
  }; 

  function InvokeAction$b11_set_Argument1 (value) {
    this.InvokeAction$b11$Argument1$value = value;
  }; 

  function InvokeAction$b11_set_Argument10 (value) {
    this.InvokeAction$b11$Argument10$value = value;
  }; 

  function InvokeAction$b11_set_Argument11 (value) {
    this.InvokeAction$b11$Argument11$value = value;
  }; 

  function InvokeAction$b11_set_Argument2 (value) {
    this.InvokeAction$b11$Argument2$value = value;
  }; 

  function InvokeAction$b11_set_Argument3 (value) {
    this.InvokeAction$b11$Argument3$value = value;
  }; 

  function InvokeAction$b11_set_Argument4 (value) {
    this.InvokeAction$b11$Argument4$value = value;
  }; 

  function InvokeAction$b11_set_Argument5 (value) {
    this.InvokeAction$b11$Argument5$value = value;
  }; 

  function InvokeAction$b11_set_Argument6 (value) {
    this.InvokeAction$b11$Argument6$value = value;
  }; 

  function InvokeAction$b11_set_Argument7 (value) {
    this.InvokeAction$b11$Argument7$value = value;
  }; 

  function InvokeAction$b11_set_Argument8 (value) {
    this.InvokeAction$b11$Argument8$value = value;
  }; 

  function InvokeAction$b11_set_Argument9 (value) {
    this.InvokeAction$b11$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`11", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`11", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11")
          ]), null), 
      InvokeAction$b11_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b11_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b11_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b11_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b11_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b11_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b11_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b11_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b11_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b11_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b11_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b11_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`11", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11")
          ])]), 
      InvokeAction$b11_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b11_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b11_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b11_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b11_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b11_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b11_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b11_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b11_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b11_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b11_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b11_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b11$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`11", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`11", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`12 */ 

(function InvokeAction$b12$Members () {
  var $, $thisType;



  function InvokeAction$b12_get_Action () {
    return this.InvokeAction$b12$Action$value;
  }; 

  function InvokeAction$b12_get_Argument1 () {
    return this.InvokeAction$b12$Argument1$value;
  }; 

  function InvokeAction$b12_get_Argument10 () {
    return this.InvokeAction$b12$Argument10$value;
  }; 

  function InvokeAction$b12_get_Argument11 () {
    return this.InvokeAction$b12$Argument11$value;
  }; 

  function InvokeAction$b12_get_Argument12 () {
    return this.InvokeAction$b12$Argument12$value;
  }; 

  function InvokeAction$b12_get_Argument2 () {
    return this.InvokeAction$b12$Argument2$value;
  }; 

  function InvokeAction$b12_get_Argument3 () {
    return this.InvokeAction$b12$Argument3$value;
  }; 

  function InvokeAction$b12_get_Argument4 () {
    return this.InvokeAction$b12$Argument4$value;
  }; 

  function InvokeAction$b12_get_Argument5 () {
    return this.InvokeAction$b12$Argument5$value;
  }; 

  function InvokeAction$b12_get_Argument6 () {
    return this.InvokeAction$b12$Argument6$value;
  }; 

  function InvokeAction$b12_get_Argument7 () {
    return this.InvokeAction$b12$Argument7$value;
  }; 

  function InvokeAction$b12_get_Argument8 () {
    return this.InvokeAction$b12$Argument8$value;
  }; 

  function InvokeAction$b12_get_Argument9 () {
    return this.InvokeAction$b12$Argument9$value;
  }; 


  function InvokeAction$b12_set_Action (value) {
    this.InvokeAction$b12$Action$value = value;
  }; 

  function InvokeAction$b12_set_Argument1 (value) {
    this.InvokeAction$b12$Argument1$value = value;
  }; 

  function InvokeAction$b12_set_Argument10 (value) {
    this.InvokeAction$b12$Argument10$value = value;
  }; 

  function InvokeAction$b12_set_Argument11 (value) {
    this.InvokeAction$b12$Argument11$value = value;
  }; 

  function InvokeAction$b12_set_Argument12 (value) {
    this.InvokeAction$b12$Argument12$value = value;
  }; 

  function InvokeAction$b12_set_Argument2 (value) {
    this.InvokeAction$b12$Argument2$value = value;
  }; 

  function InvokeAction$b12_set_Argument3 (value) {
    this.InvokeAction$b12$Argument3$value = value;
  }; 

  function InvokeAction$b12_set_Argument4 (value) {
    this.InvokeAction$b12$Argument4$value = value;
  }; 

  function InvokeAction$b12_set_Argument5 (value) {
    this.InvokeAction$b12$Argument5$value = value;
  }; 

  function InvokeAction$b12_set_Argument6 (value) {
    this.InvokeAction$b12$Argument6$value = value;
  }; 

  function InvokeAction$b12_set_Argument7 (value) {
    this.InvokeAction$b12$Argument7$value = value;
  }; 

  function InvokeAction$b12_set_Argument8 (value) {
    this.InvokeAction$b12$Argument8$value = value;
  }; 

  function InvokeAction$b12_set_Argument9 (value) {
    this.InvokeAction$b12$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`12", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`12", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12")
          ]), null), 
      InvokeAction$b12_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b12_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b12_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b12_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeAction$b12_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b12_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b12_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b12_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b12_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b12_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b12_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b12_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b12_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`12", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12")
          ])]), 
      InvokeAction$b12_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b12_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b12_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b12_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeAction$b12_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b12_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b12_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b12_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b12_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b12_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b12_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b12_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b12_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b12$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`12", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`12", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`13 */ 

(function InvokeAction$b13$Members () {
  var $, $thisType;



  function InvokeAction$b13_get_Action () {
    return this.InvokeAction$b13$Action$value;
  }; 

  function InvokeAction$b13_get_Argument1 () {
    return this.InvokeAction$b13$Argument1$value;
  }; 

  function InvokeAction$b13_get_Argument10 () {
    return this.InvokeAction$b13$Argument10$value;
  }; 

  function InvokeAction$b13_get_Argument11 () {
    return this.InvokeAction$b13$Argument11$value;
  }; 

  function InvokeAction$b13_get_Argument12 () {
    return this.InvokeAction$b13$Argument12$value;
  }; 

  function InvokeAction$b13_get_Argument13 () {
    return this.InvokeAction$b13$Argument13$value;
  }; 

  function InvokeAction$b13_get_Argument2 () {
    return this.InvokeAction$b13$Argument2$value;
  }; 

  function InvokeAction$b13_get_Argument3 () {
    return this.InvokeAction$b13$Argument3$value;
  }; 

  function InvokeAction$b13_get_Argument4 () {
    return this.InvokeAction$b13$Argument4$value;
  }; 

  function InvokeAction$b13_get_Argument5 () {
    return this.InvokeAction$b13$Argument5$value;
  }; 

  function InvokeAction$b13_get_Argument6 () {
    return this.InvokeAction$b13$Argument6$value;
  }; 

  function InvokeAction$b13_get_Argument7 () {
    return this.InvokeAction$b13$Argument7$value;
  }; 

  function InvokeAction$b13_get_Argument8 () {
    return this.InvokeAction$b13$Argument8$value;
  }; 

  function InvokeAction$b13_get_Argument9 () {
    return this.InvokeAction$b13$Argument9$value;
  }; 


  function InvokeAction$b13_set_Action (value) {
    this.InvokeAction$b13$Action$value = value;
  }; 

  function InvokeAction$b13_set_Argument1 (value) {
    this.InvokeAction$b13$Argument1$value = value;
  }; 

  function InvokeAction$b13_set_Argument10 (value) {
    this.InvokeAction$b13$Argument10$value = value;
  }; 

  function InvokeAction$b13_set_Argument11 (value) {
    this.InvokeAction$b13$Argument11$value = value;
  }; 

  function InvokeAction$b13_set_Argument12 (value) {
    this.InvokeAction$b13$Argument12$value = value;
  }; 

  function InvokeAction$b13_set_Argument13 (value) {
    this.InvokeAction$b13$Argument13$value = value;
  }; 

  function InvokeAction$b13_set_Argument2 (value) {
    this.InvokeAction$b13$Argument2$value = value;
  }; 

  function InvokeAction$b13_set_Argument3 (value) {
    this.InvokeAction$b13$Argument3$value = value;
  }; 

  function InvokeAction$b13_set_Argument4 (value) {
    this.InvokeAction$b13$Argument4$value = value;
  }; 

  function InvokeAction$b13_set_Argument5 (value) {
    this.InvokeAction$b13$Argument5$value = value;
  }; 

  function InvokeAction$b13_set_Argument6 (value) {
    this.InvokeAction$b13$Argument6$value = value;
  }; 

  function InvokeAction$b13_set_Argument7 (value) {
    this.InvokeAction$b13$Argument7$value = value;
  }; 

  function InvokeAction$b13_set_Argument8 (value) {
    this.InvokeAction$b13$Argument8$value = value;
  }; 

  function InvokeAction$b13_set_Argument9 (value) {
    this.InvokeAction$b13$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`13", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`13", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13")
          ]), null), 
      InvokeAction$b13_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b13_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b13_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b13_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeAction$b13_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeAction$b13_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b13_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b13_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b13_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b13_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b13_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b13_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b13_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b13_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`13", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13")
          ])]), 
      InvokeAction$b13_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b13_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b13_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b13_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeAction$b13_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeAction$b13_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b13_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b13_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b13_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b13_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b13_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b13_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b13_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b13_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b13$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`13", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`13", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`14 */ 

(function InvokeAction$b14$Members () {
  var $, $thisType;



  function InvokeAction$b14_get_Action () {
    return this.InvokeAction$b14$Action$value;
  }; 

  function InvokeAction$b14_get_Argument1 () {
    return this.InvokeAction$b14$Argument1$value;
  }; 

  function InvokeAction$b14_get_Argument10 () {
    return this.InvokeAction$b14$Argument10$value;
  }; 

  function InvokeAction$b14_get_Argument11 () {
    return this.InvokeAction$b14$Argument11$value;
  }; 

  function InvokeAction$b14_get_Argument12 () {
    return this.InvokeAction$b14$Argument12$value;
  }; 

  function InvokeAction$b14_get_Argument13 () {
    return this.InvokeAction$b14$Argument13$value;
  }; 

  function InvokeAction$b14_get_Argument14 () {
    return this.InvokeAction$b14$Argument14$value;
  }; 

  function InvokeAction$b14_get_Argument2 () {
    return this.InvokeAction$b14$Argument2$value;
  }; 

  function InvokeAction$b14_get_Argument3 () {
    return this.InvokeAction$b14$Argument3$value;
  }; 

  function InvokeAction$b14_get_Argument4 () {
    return this.InvokeAction$b14$Argument4$value;
  }; 

  function InvokeAction$b14_get_Argument5 () {
    return this.InvokeAction$b14$Argument5$value;
  }; 

  function InvokeAction$b14_get_Argument6 () {
    return this.InvokeAction$b14$Argument6$value;
  }; 

  function InvokeAction$b14_get_Argument7 () {
    return this.InvokeAction$b14$Argument7$value;
  }; 

  function InvokeAction$b14_get_Argument8 () {
    return this.InvokeAction$b14$Argument8$value;
  }; 

  function InvokeAction$b14_get_Argument9 () {
    return this.InvokeAction$b14$Argument9$value;
  }; 


  function InvokeAction$b14_set_Action (value) {
    this.InvokeAction$b14$Action$value = value;
  }; 

  function InvokeAction$b14_set_Argument1 (value) {
    this.InvokeAction$b14$Argument1$value = value;
  }; 

  function InvokeAction$b14_set_Argument10 (value) {
    this.InvokeAction$b14$Argument10$value = value;
  }; 

  function InvokeAction$b14_set_Argument11 (value) {
    this.InvokeAction$b14$Argument11$value = value;
  }; 

  function InvokeAction$b14_set_Argument12 (value) {
    this.InvokeAction$b14$Argument12$value = value;
  }; 

  function InvokeAction$b14_set_Argument13 (value) {
    this.InvokeAction$b14$Argument13$value = value;
  }; 

  function InvokeAction$b14_set_Argument14 (value) {
    this.InvokeAction$b14$Argument14$value = value;
  }; 

  function InvokeAction$b14_set_Argument2 (value) {
    this.InvokeAction$b14$Argument2$value = value;
  }; 

  function InvokeAction$b14_set_Argument3 (value) {
    this.InvokeAction$b14$Argument3$value = value;
  }; 

  function InvokeAction$b14_set_Argument4 (value) {
    this.InvokeAction$b14$Argument4$value = value;
  }; 

  function InvokeAction$b14_set_Argument5 (value) {
    this.InvokeAction$b14$Argument5$value = value;
  }; 

  function InvokeAction$b14_set_Argument6 (value) {
    this.InvokeAction$b14$Argument6$value = value;
  }; 

  function InvokeAction$b14_set_Argument7 (value) {
    this.InvokeAction$b14$Argument7$value = value;
  }; 

  function InvokeAction$b14_set_Argument8 (value) {
    this.InvokeAction$b14$Argument8$value = value;
  }; 

  function InvokeAction$b14_set_Argument9 (value) {
    this.InvokeAction$b14$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`14", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`14", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14")
          ]), null), 
      InvokeAction$b14_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b14_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b14_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b14_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeAction$b14_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeAction$b14_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeAction$b14_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b14_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b14_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b14_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b14_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b14_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b14_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b14_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b14_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`14", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14")
          ])]), 
      InvokeAction$b14_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b14_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b14_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b14_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeAction$b14_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeAction$b14_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeAction$b14_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b14_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b14_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b14_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b14_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b14_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b14_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b14_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b14_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b14$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`14", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`14", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`15 */ 

(function InvokeAction$b15$Members () {
  var $, $thisType;



  function InvokeAction$b15_get_Action () {
    return this.InvokeAction$b15$Action$value;
  }; 

  function InvokeAction$b15_get_Argument1 () {
    return this.InvokeAction$b15$Argument1$value;
  }; 

  function InvokeAction$b15_get_Argument10 () {
    return this.InvokeAction$b15$Argument10$value;
  }; 

  function InvokeAction$b15_get_Argument11 () {
    return this.InvokeAction$b15$Argument11$value;
  }; 

  function InvokeAction$b15_get_Argument12 () {
    return this.InvokeAction$b15$Argument12$value;
  }; 

  function InvokeAction$b15_get_Argument13 () {
    return this.InvokeAction$b15$Argument13$value;
  }; 

  function InvokeAction$b15_get_Argument14 () {
    return this.InvokeAction$b15$Argument14$value;
  }; 

  function InvokeAction$b15_get_Argument15 () {
    return this.InvokeAction$b15$Argument15$value;
  }; 

  function InvokeAction$b15_get_Argument2 () {
    return this.InvokeAction$b15$Argument2$value;
  }; 

  function InvokeAction$b15_get_Argument3 () {
    return this.InvokeAction$b15$Argument3$value;
  }; 

  function InvokeAction$b15_get_Argument4 () {
    return this.InvokeAction$b15$Argument4$value;
  }; 

  function InvokeAction$b15_get_Argument5 () {
    return this.InvokeAction$b15$Argument5$value;
  }; 

  function InvokeAction$b15_get_Argument6 () {
    return this.InvokeAction$b15$Argument6$value;
  }; 

  function InvokeAction$b15_get_Argument7 () {
    return this.InvokeAction$b15$Argument7$value;
  }; 

  function InvokeAction$b15_get_Argument8 () {
    return this.InvokeAction$b15$Argument8$value;
  }; 

  function InvokeAction$b15_get_Argument9 () {
    return this.InvokeAction$b15$Argument9$value;
  }; 


  function InvokeAction$b15_set_Action (value) {
    this.InvokeAction$b15$Action$value = value;
  }; 

  function InvokeAction$b15_set_Argument1 (value) {
    this.InvokeAction$b15$Argument1$value = value;
  }; 

  function InvokeAction$b15_set_Argument10 (value) {
    this.InvokeAction$b15$Argument10$value = value;
  }; 

  function InvokeAction$b15_set_Argument11 (value) {
    this.InvokeAction$b15$Argument11$value = value;
  }; 

  function InvokeAction$b15_set_Argument12 (value) {
    this.InvokeAction$b15$Argument12$value = value;
  }; 

  function InvokeAction$b15_set_Argument13 (value) {
    this.InvokeAction$b15$Argument13$value = value;
  }; 

  function InvokeAction$b15_set_Argument14 (value) {
    this.InvokeAction$b15$Argument14$value = value;
  }; 

  function InvokeAction$b15_set_Argument15 (value) {
    this.InvokeAction$b15$Argument15$value = value;
  }; 

  function InvokeAction$b15_set_Argument2 (value) {
    this.InvokeAction$b15$Argument2$value = value;
  }; 

  function InvokeAction$b15_set_Argument3 (value) {
    this.InvokeAction$b15$Argument3$value = value;
  }; 

  function InvokeAction$b15_set_Argument4 (value) {
    this.InvokeAction$b15$Argument4$value = value;
  }; 

  function InvokeAction$b15_set_Argument5 (value) {
    this.InvokeAction$b15$Argument5$value = value;
  }; 

  function InvokeAction$b15_set_Argument6 (value) {
    this.InvokeAction$b15$Argument6$value = value;
  }; 

  function InvokeAction$b15_set_Argument7 (value) {
    this.InvokeAction$b15$Argument7$value = value;
  }; 

  function InvokeAction$b15_set_Argument8 (value) {
    this.InvokeAction$b15$Argument8$value = value;
  }; 

  function InvokeAction$b15_set_Argument9 (value) {
    this.InvokeAction$b15$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`15", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`15", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15")
          ]), null), 
      InvokeAction$b15_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b15_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b15_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b15_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeAction$b15_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeAction$b15_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeAction$b15_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]), null), 
      InvokeAction$b15_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b15_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b15_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b15_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b15_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b15_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b15_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b15_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b15_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`15", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15")
          ])]), 
      InvokeAction$b15_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b15_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b15_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b15_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeAction$b15_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeAction$b15_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeAction$b15_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")])]), 
      InvokeAction$b15_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b15_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b15_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b15_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b15_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b15_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b15_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b15_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b15_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Argument15$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b15$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`15", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`15", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeAction`16 */ 

(function InvokeAction$b16$Members () {
  var $, $thisType;



  function InvokeAction$b16_get_Action () {
    return this.InvokeAction$b16$Action$value;
  }; 

  function InvokeAction$b16_get_Argument1 () {
    return this.InvokeAction$b16$Argument1$value;
  }; 

  function InvokeAction$b16_get_Argument10 () {
    return this.InvokeAction$b16$Argument10$value;
  }; 

  function InvokeAction$b16_get_Argument11 () {
    return this.InvokeAction$b16$Argument11$value;
  }; 

  function InvokeAction$b16_get_Argument12 () {
    return this.InvokeAction$b16$Argument12$value;
  }; 

  function InvokeAction$b16_get_Argument13 () {
    return this.InvokeAction$b16$Argument13$value;
  }; 

  function InvokeAction$b16_get_Argument14 () {
    return this.InvokeAction$b16$Argument14$value;
  }; 

  function InvokeAction$b16_get_Argument15 () {
    return this.InvokeAction$b16$Argument15$value;
  }; 

  function InvokeAction$b16_get_Argument16 () {
    return this.InvokeAction$b16$Argument16$value;
  }; 

  function InvokeAction$b16_get_Argument2 () {
    return this.InvokeAction$b16$Argument2$value;
  }; 

  function InvokeAction$b16_get_Argument3 () {
    return this.InvokeAction$b16$Argument3$value;
  }; 

  function InvokeAction$b16_get_Argument4 () {
    return this.InvokeAction$b16$Argument4$value;
  }; 

  function InvokeAction$b16_get_Argument5 () {
    return this.InvokeAction$b16$Argument5$value;
  }; 

  function InvokeAction$b16_get_Argument6 () {
    return this.InvokeAction$b16$Argument6$value;
  }; 

  function InvokeAction$b16_get_Argument7 () {
    return this.InvokeAction$b16$Argument7$value;
  }; 

  function InvokeAction$b16_get_Argument8 () {
    return this.InvokeAction$b16$Argument8$value;
  }; 

  function InvokeAction$b16_get_Argument9 () {
    return this.InvokeAction$b16$Argument9$value;
  }; 


  function InvokeAction$b16_set_Action (value) {
    this.InvokeAction$b16$Action$value = value;
  }; 

  function InvokeAction$b16_set_Argument1 (value) {
    this.InvokeAction$b16$Argument1$value = value;
  }; 

  function InvokeAction$b16_set_Argument10 (value) {
    this.InvokeAction$b16$Argument10$value = value;
  }; 

  function InvokeAction$b16_set_Argument11 (value) {
    this.InvokeAction$b16$Argument11$value = value;
  }; 

  function InvokeAction$b16_set_Argument12 (value) {
    this.InvokeAction$b16$Argument12$value = value;
  }; 

  function InvokeAction$b16_set_Argument13 (value) {
    this.InvokeAction$b16$Argument13$value = value;
  }; 

  function InvokeAction$b16_set_Argument14 (value) {
    this.InvokeAction$b16$Argument14$value = value;
  }; 

  function InvokeAction$b16_set_Argument15 (value) {
    this.InvokeAction$b16$Argument15$value = value;
  }; 

  function InvokeAction$b16_set_Argument16 (value) {
    this.InvokeAction$b16$Argument16$value = value;
  }; 

  function InvokeAction$b16_set_Argument2 (value) {
    this.InvokeAction$b16$Argument2$value = value;
  }; 

  function InvokeAction$b16_set_Argument3 (value) {
    this.InvokeAction$b16$Argument3$value = value;
  }; 

  function InvokeAction$b16_set_Argument4 (value) {
    this.InvokeAction$b16$Argument4$value = value;
  }; 

  function InvokeAction$b16_set_Argument5 (value) {
    this.InvokeAction$b16$Argument5$value = value;
  }; 

  function InvokeAction$b16_set_Argument6 (value) {
    this.InvokeAction$b16$Argument6$value = value;
  }; 

  function InvokeAction$b16_set_Argument7 (value) {
    this.InvokeAction$b16$Argument7$value = value;
  }; 

  function InvokeAction$b16_set_Argument8 (value) {
    this.InvokeAction$b16$Argument8$value = value;
  }; 

  function InvokeAction$b16_set_Argument9 (value) {
    this.InvokeAction$b16$Argument9$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeAction`16", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: [
        "T1", "T2", "T3", "T4", 
        "T5", "T6", "T7", "T8", 
        "T9", "T10", "T11", "T12", 
        "T13", "T14", "T15", "T16"
      ], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`16", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("T16")
          ]), null), 
      InvokeAction$b16_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]), null), 
      InvokeAction$b16_get_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument10", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]), null), 
      InvokeAction$b16_get_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument11", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]), null), 
      InvokeAction$b16_get_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument12", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]), null), 
      InvokeAction$b16_get_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument13", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]), null), 
      InvokeAction$b16_get_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument14", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]), null), 
      InvokeAction$b16_get_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument15", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]), null), 
      InvokeAction$b16_get_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument16", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]), null), 
      InvokeAction$b16_get_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]), null), 
      InvokeAction$b16_get_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]), null), 
      InvokeAction$b16_get_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument4", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]), null), 
      InvokeAction$b16_get_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument5", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]), null), 
      InvokeAction$b16_get_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument6", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]), null), 
      InvokeAction$b16_get_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument7", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]), null), 
      InvokeAction$b16_get_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument8", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]), null), 
      InvokeAction$b16_get_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Argument9", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]), null), 
      InvokeAction$b16_get_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`16", [
            $.GenericParameter("T1"), $.GenericParameter("T2"), 
            $.GenericParameter("T3"), $.GenericParameter("T4"), 
            $.GenericParameter("T5"), $.GenericParameter("T6"), 
            $.GenericParameter("T7"), $.GenericParameter("T8"), 
            $.GenericParameter("T9"), $.GenericParameter("T10"), 
            $.GenericParameter("T11"), $.GenericParameter("T12"), 
            $.GenericParameter("T13"), $.GenericParameter("T14"), 
            $.GenericParameter("T15"), $.GenericParameter("T16")
          ])]), 
      InvokeAction$b16_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")])]), 
      InvokeAction$b16_set_Argument1
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument10", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")])]), 
      InvokeAction$b16_set_Argument10
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument11", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")])]), 
      InvokeAction$b16_set_Argument11
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument12", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")])]), 
      InvokeAction$b16_set_Argument12
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument13", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")])]), 
      InvokeAction$b16_set_Argument13
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument14", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")])]), 
      InvokeAction$b16_set_Argument14
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument15", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")])]), 
      InvokeAction$b16_set_Argument15
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument16", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")])]), 
      InvokeAction$b16_set_Argument16
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")])]), 
      InvokeAction$b16_set_Argument2
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument3", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")])]), 
      InvokeAction$b16_set_Argument3
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument4", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")])]), 
      InvokeAction$b16_set_Argument4
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")])]), 
      InvokeAction$b16_set_Argument5
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument6", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")])]), 
      InvokeAction$b16_set_Argument6
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument7", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")])]), 
      InvokeAction$b16_set_Argument7
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument8", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")])]), 
      InvokeAction$b16_set_Argument8
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Argument9", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")])]), 
      InvokeAction$b16_set_Argument9
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument1$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument2$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument3$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument4$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument5$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument6$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument7$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument8$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument9$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument10$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument11$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument12$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument13$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument14$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument15$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Argument16$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeAction$b16$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`16", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("T16")
        ]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Argument1", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T1")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument2", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T2")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument3", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T3")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument4", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T4")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument5", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T5")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument6", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T6")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument7", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T7")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument8", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T8")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument9", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T9")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument10", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T10")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument11", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T11")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument12", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T12")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument13", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T13")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument14", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T14")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument15", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T15")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Argument16", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T16")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`16", [
          $.GenericParameter("T1"), $.GenericParameter("T2"), 
          $.GenericParameter("T3"), $.GenericParameter("T4"), 
          $.GenericParameter("T5"), $.GenericParameter("T6"), 
          $.GenericParameter("T7"), $.GenericParameter("T8"), 
          $.GenericParameter("T9"), $.GenericParameter("T10"), 
          $.GenericParameter("T11"), $.GenericParameter("T12"), 
          $.GenericParameter("T13"), $.GenericParameter("T14"), 
          $.GenericParameter("T15"), $.GenericParameter("T16")
        ]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.InvokeDelegate */ 

(function InvokeDelegate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.ActivityDelegate)) ();
  };





  function InvokeDelegate_get_Default () {
    return this.InvokeDelegate$Default$value;
  }; 

  function InvokeDelegate_get_Delegate () {
    return this.InvokeDelegate$Delegate$value;
  }; 




  function InvokeDelegate_set_Default (value) {
    this.InvokeDelegate$Default$value = value;
  }; 

  function InvokeDelegate_set_Delegate (value) {
    this.InvokeDelegate$Delegate$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InvokeDelegate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      InvokeDelegate_get_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Delegate", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityDelegate")), 
      InvokeDelegate_get_Delegate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DelegateArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Argument")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnHandlerComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.Method({Static:false, Public:true }, "set_Default", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      InvokeDelegate_set_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Delegate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityDelegate")), 
      InvokeDelegate_set_Delegate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "delegateArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "hasOutputArguments", $.Boolean);

    $.Field({Static:false, Public:false}, "InvokeDelegate$Delegate$value", $asm0B.TypeRef("System.Activities.ActivityDelegate"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeDelegate$Default$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Delegate", $asm0B.TypeRef("System.Activities.ActivityDelegate"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "DelegateArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Argument")]));

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Delegate"]; });

})();

/* class System.Activities.Statements.BookmarkTable */ 

(function BookmarkTable$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.BookmarkTable", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$asm0B.TypeRef("System.Activities.Statements.CompensationBookmarkName")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkTable", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.CompensationBookmarkName"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkTable", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.Field({Static:true , Public:false}, "tableSize", $.Int32);

    $.Field({Static:false, Public:false}, "bookmarkTable", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkTable", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Bookmark")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.Catch */ 

(function Catch$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Catch", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExceptionType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetAction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ExceptionType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Catch`1 */ 

(function Catch$b1$Members () {
  var $, $thisType;


  function Catch$b1_get_Action () {
    return this.Catch$b1$Action$value;
  }; 




  function Catch$b1_set_Action (value) {
    this.Catch$b1$Action$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.Catch"), 
      Name: "System.Activities.Statements.Catch`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TException"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("TException")]), null), 
      Catch$b1_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ExceptionType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetAction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityDelegate"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("TException")])]), 
      Catch$b1_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Catch$b1$Action$value", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("TException")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "ExceptionType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("TException")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.CompensableActivity */ 

(function CompensableActivity$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };








  function CompensableActivity_get_Body () {
    return this.CompensableActivity$Body$value;
  }; 

  function CompensableActivity_get_CancellationHandler () {
    return this.CompensableActivity$CancellationHandler$value;
  }; 


  function CompensableActivity_get_CompensationHandler () {
    return this.CompensableActivity$CompensationHandler$value;
  }; 


  function CompensableActivity_get_ConfirmationHandler () {
    return this.CompensableActivity$ConfirmationHandler$value;
  }; 











  function CompensableActivity_set_Body (value) {
    this.CompensableActivity$Body$value = value;
  }; 

  function CompensableActivity_set_CancellationHandler (value) {
    this.CompensableActivity$CancellationHandler$value = value;
  }; 

  function CompensableActivity_set_CompensationHandler (value) {
    this.CompensableActivity$CompensationHandler$value = value;
  }; 


  function CompensableActivity_set_ConfirmationHandler (value) {
    this.CompensableActivity$ConfirmationHandler$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]), 
      Name: "System.Activities.Statements.CompensableActivity", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AppCompletionCleanup", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.CompensationExtension"), 
          $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCompensationExtension", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.CompensationExtension"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CancellationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_get_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CompensationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_get_CompensationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_CompensationParticipant", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.CompensationParticipant"))
    );

    $.Method({Static:false, Public:true }, "get_ConfirmationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_get_ConfirmationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "NoCompensableActivityInSecondaryRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBodyExecutionComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCanceledOrCompensated", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSecondaryRootScheduled", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnWorkflowCompensationBehaviorScheduled", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleBody", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.CompensationExtension")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleSecondaryRoot", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.CompensationExtension"), 
          $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CancellationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_set_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompensationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_set_CompensationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_CompensationParticipant", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.CompensationParticipant"))
    );

    $.Method({Static:false, Public:true }, "set_ConfirmationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensableActivity_set_ConfirmationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "noCompensableActivityInSecondaryRoot", $asm0B.TypeRef("System.Activities.Validation.Constraint"));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "compensationParticipant", $asm0B.TypeRef("System.Activities.Statements.CompensationParticipant"));

    $.Field({Static:false, Public:false}, "currentCompensationId", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int64]));

    $.Field({Static:false, Public:false}, "currentCompensationToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "compensationId", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int64]));

    $.Field({Static:false, Public:false}, "CompensableActivity$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensableActivity$CancellationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensableActivity$CompensationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensableActivity$ConfirmationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "CancellationHandler", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Body"]; });

    $.Property({Static:false, Public:true }, "CompensationHandler", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["CancellationHandler"]; });

    $.Property({Static:false, Public:true }, "ConfirmationHandler", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["CompensationHandler"]; });

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "CompensationParticipant", $asm0B.TypeRef("System.Activities.Statements.CompensationParticipant"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.CompensableActivity+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.CompensableActivity+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__8_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.WhileExpression */ 

(function WhileExpression$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Collections.Generic.IEnumerable$b1.Of($asm0B.System.Activities.Activity)))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Int32))) ();
  };





  function WhileExpression_get_AssertFlag () {
    return this.WhileExpression$AssertFlag$value;
  }; 

  function WhileExpression_get_Elements () {
    return this.WhileExpression$Elements$value;
  }; 

  function WhileExpression_get_Index () {
    return this.WhileExpression$Index$value;
  }; 

  function WhileExpression_set_AssertFlag (value) {
    this.WhileExpression$AssertFlag$value = value;
  }; 

  function WhileExpression_set_Elements (value) {
    this.WhileExpression$Elements$value = value;
  }; 

  function WhileExpression_set_Index (value) {
    this.WhileExpression$Index$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.WhileExpression", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_AssertFlag", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      WhileExpression_get_AssertFlag
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Elements", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      WhileExpression_get_Elements
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Index", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      WhileExpression_get_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AssertFlag", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      WhileExpression_set_AssertFlag
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Elements", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      WhileExpression_set_Elements
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Index", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      WhileExpression_set_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WhileExpression$AssertFlag$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WhileExpression$Index$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WhileExpression$Elements$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AssertFlag", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]));

    $.Property({Static:false, Public:true }, "Index", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]));

    $.Property({Static:false, Public:true }, "Elements", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.IfExpression */ 

(function IfExpression$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Collections.Generic.IEnumerable$b1.Of($asm0B.System.Activities.Activity)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Int32))) ();
  };





  function IfExpression_get_Elements () {
    return this.IfExpression$Elements$value;
  }; 

  function IfExpression_get_Index () {
    return this.IfExpression$Index$value;
  }; 

  function IfExpression_set_Elements (value) {
    this.IfExpression$Elements$value = value;
  }; 

  function IfExpression_set_Index (value) {
    this.IfExpression$Index$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.IfExpression", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Elements", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      IfExpression_get_Elements
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Index", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      IfExpression_get_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Elements", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      IfExpression_set_Elements
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Index", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32])), 
      IfExpression_set_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IfExpression$Elements$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IfExpression$Index$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Elements", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]));

    $.Property({Static:false, Public:true }, "Index", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Compensate */ 

(function Compensate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };









  function Compensate_get_Target () {
    return this.Compensate$Target$value;
  }; 


  function Compensate_set_Target (value) {
    this.Compensate$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Compensate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CompensateWithNoTarget", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultCompensation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.DefaultCompensation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalCompensate", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.InternalCompensate"))
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      Compensate_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      Compensate_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "compensateWithNoTarget", $asm0B.TypeRef("System.Activities.Validation.Constraint"));

    $.Field({Static:false, Public:false}, "internalCompensate", $asm0B.TypeRef("System.Activities.Statements.InternalCompensate"));

    $.Field({Static:false, Public:false}, "defaultCompensation", $asm0B.TypeRef("System.Activities.Statements.DefaultCompensation"));

    $.Field({Static:false, Public:false}, "currentCompensationToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "Compensate$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "DefaultCompensation", $asm0B.TypeRef("System.Activities.Statements.DefaultCompensation"));

    $.Property({Static:false, Public:false}, "InternalCompensate", $asm0B.TypeRef("System.Activities.Statements.InternalCompensate"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Compensate+<>c__DisplayClass15_0 */ 

(function $l$gc__DisplayClass15_0$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Compensate+<>c__DisplayClass15_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "element", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Compensate")]));

    $.Field({Static:false, Public:true }, "assertFlag", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:true }, "index", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int32]));

    $.Field({Static:false, Public:true }, "elements", $asm0B.TypeRef("System.Activities.Variable`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.CompensationActivityStrings */ 

(function CompensationActivityStrings$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.Statements.CompensationActivityStrings", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "WorkflowImplicitCompensationBehavior", $.String, "Activities.Compensation.WorkflowImplicitCompensationBehavior");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Statements.CompensationBookmarkName */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Statements.CompensationBookmarkName", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Confirmed: 0, 
    Canceled: 1, 
    Compensated: 2, 
    OnConfirmation: 3, 
    OnCompensation: 4, 
    OnCancellation: 5, 
    OnSecondaryRootScheduled: 6, 
  }
);

JSIL.DeclareNamespace("System.Activities.Persistence");
/* class System.Activities.Persistence.PersistenceParticipant */ 

(function PersistenceParticipant$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Persistence.PersistenceParticipant", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CollectValues", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalBeginOnLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalBeginOnSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalEndOnLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalEndOnSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MapValues", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PublishValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.Abort", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "Abort");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.BeginOnLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "BeginOnLoad");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.BeginOnSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "BeginOnSave");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.CollectValues", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])])
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "CollectValues");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.EndOnLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "EndOnLoad");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.EndOnSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "EndOnSave");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.get_IsIOParticipant", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "get_IsIOParticipant");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.get_IsLoadTransactionRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "get_IsLoadTransactionRequired");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.get_IsSaveTransactionRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "get_IsSaveTransactionRequired");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.MapValues", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "MapValues");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.PublishValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    )
      .Overrides($asm35.TypeRef("System.Runtime.IPersistencePipelineModule"), "PublishValues");

    $.Field({Static:false, Public:false}, "isSaveTransactionRequired", $.Boolean);

    $.Field({Static:false, Public:false}, "isLoadTransactionRequired", $.Boolean);

    $.Field({Static:false, Public:false}, "isIOParticipant", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.IsIOParticipant", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.IsSaveTransactionRequired", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Runtime.IPersistencePipelineModule.IsLoadTransactionRequired", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm35.TypeRef("System.Runtime.IPersistencePipelineModule")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.CompensationExtension */ 

(function CompensationExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int64)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Hosting.WorkflowInstanceProxy)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.Bookmark)) ();
  };








  function CompensationExtension_get_Id () {
    return this.CompensationExtension$Id$value;
  }; 

  function CompensationExtension_get_Instance () {
    return this.CompensationExtension$Instance$value;
  }; 

  function CompensationExtension_get_IsWorkflowCompensationBehaviorScheduled () {
    return this.CompensationExtension$IsWorkflowCompensationBehaviorScheduled$value;
  }; 

  function CompensationExtension_get_WorkflowCompensation () {
    return this.CompensationExtension$WorkflowCompensation$value;
  }; 

  function CompensationExtension_get_WorkflowCompensationScheduled () {
    return this.CompensationExtension$WorkflowCompensationScheduled$value;
  }; 

  function CompensationExtension_get_WorkflowConfirmation () {
    return this.CompensationExtension$WorkflowConfirmation$value;
  }; 






  function CompensationExtension_set_Id (value) {
    this.CompensationExtension$Id$value = value;
  }; 

  function CompensationExtension_set_Instance (value) {
    this.CompensationExtension$Instance$value = value;
  }; 

  function CompensationExtension_set_IsWorkflowCompensationBehaviorScheduled (value) {
    this.CompensationExtension$IsWorkflowCompensationBehaviorScheduled$value = value;
  }; 

  function CompensationExtension_set_WorkflowCompensation (value) {
    this.CompensationExtension$WorkflowCompensation$value = value;
  }; 

  function CompensationExtension_set_WorkflowCompensationScheduled (value) {
    this.CompensationExtension$WorkflowCompensationScheduled$value = value;
  }; 

  function CompensationExtension_set_WorkflowConfirmation (value) {
    this.CompensationExtension$WorkflowConfirmation$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Persistence.PersistenceParticipant"), 
      Name: "System.Activities.Statements.CompensationExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CollectValues", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationBookmarkName")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Get", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.CompensationTokenData"), [$.Int64])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CompensationTokenTable", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]))
    );

    $.Method({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.Int64), 
      CompensationExtension_get_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")), 
      CompensationExtension_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsWorkflowCompensationBehaviorScheduled", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompensationExtension_get_IsWorkflowCompensationBehaviorScheduled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_WorkflowCompensation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_get_WorkflowCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_WorkflowCompensationScheduled", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_get_WorkflowCompensationScheduled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_WorkflowConfirmation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_get_WorkflowConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNextId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyMessage", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Statements.CompensationBookmarkName")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PublishValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CompensationTokenTable", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]))
    );

    $.Method({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.Int64), 
      CompensationExtension_set_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")), 
      CompensationExtension_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsWorkflowCompensationBehaviorScheduled", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompensationExtension_set_IsWorkflowCompensationBehaviorScheduled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_WorkflowCompensation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_set_WorkflowCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_WorkflowCompensationScheduled", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_set_WorkflowCompensationScheduled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_WorkflowConfirmation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      CompensationExtension_set_WorkflowConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetupWorkflowCompensationBehavior", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension"), "GetAdditionalExtensions");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension"), "SetInstance");

    $.Field({Static:true , Public:false, ReadOnly:true }, "compensationNamespace", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "compensationExtensionData", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "compensationTokenTable", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]));

    $.Field({Static:false, Public:false}, "CompensationExtension$Id$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationExtension$WorkflowCompensation$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationExtension$WorkflowConfirmation$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationExtension$WorkflowCompensationScheduled$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationExtension$IsWorkflowCompensationBehaviorScheduled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationExtension$Instance$value", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "CompensationTokenTable", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int64, $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]));

    $.Property({Static:false, Public:false}, "Id", $.Int64);

    $.Property({Static:false, Public:false}, "WorkflowCompensation", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:false}, "WorkflowConfirmation", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:false}, "WorkflowCompensationScheduled", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:false}, "IsWorkflowCompensationBehaviorScheduled", $.Boolean);

    $.Property({Static:false, Public:false}, "Instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"));

    $.ImplementInterfaces(
      /* 1 */ $asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.CompensationToken */ 

(function CompensationToken$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int64)) ();
  };



  function CompensationToken_get_CompensateCalled () {
    return this.CompensationToken$CompensateCalled$value;
  }; 

  function CompensationToken_get_CompensationId () {
    return this.CompensationToken$CompensationId$value;
  }; 

  function CompensationToken_get_ConfirmCalled () {
    return this.CompensationToken$ConfirmCalled$value;
  }; 

  function CompensationToken_set_CompensateCalled (value) {
    this.CompensationToken$CompensateCalled$value = value;
  }; 

  function CompensationToken_set_CompensationId (value) {
    this.CompensationToken$CompensationId$value = value;
  }; 

  function CompensationToken_set_ConfirmCalled (value) {
    this.CompensationToken$ConfirmCalled$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.CompensationToken", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.CompensationTokenData"))
    );

    $.Method({Static:false, Public:false}, "get_CompensateCalled", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompensationToken_get_CompensateCalled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_CompensationId", 
      JSIL.MethodSignature.Return($.Int64), 
      CompensationToken_get_CompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ConfirmCalled", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompensationToken_get_ConfirmCalled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CompensateCalled", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompensationToken_set_CompensateCalled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CompensationId", 
      JSIL.MethodSignature.Action($.Int64), 
      CompensationToken_set_CompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ConfirmCalled", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompensationToken_set_ConfirmCalled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Constant({Static:true , Public:false}, "PropertyName", $.String, "System.Compensation.CompensationToken");

    $.Constant({Static:true , Public:false}, "RootCompensationId", $.Int64, 0);

    $.Field({Static:false, Public:false}, "CompensationToken$CompensationId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationToken$CompensateCalled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationToken$ConfirmCalled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "CompensationId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "CompensateCalled", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "ConfirmCalled", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.CompensationTokenData */ 

(function CompensationTokenData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Statements.BookmarkTable)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int64)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Statements.CompensationState)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.Statements.ExecutionTracker)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function CompensationTokenData_get_BookmarkTable () {
    return this.CompensationTokenData$BookmarkTable$value;
  }; 

  function CompensationTokenData_get_CompensationId () {
    return this.CompensationTokenData$CompensationId$value;
  }; 

  function CompensationTokenData_get_CompensationState () {
    return this.CompensationTokenData$CompensationState$value;
  }; 

  function CompensationTokenData_get_DisplayName () {
    return this.CompensationTokenData$DisplayName$value;
  }; 

  function CompensationTokenData_get_ExecutionTracker () {
    return this.CompensationTokenData$ExecutionTracker$value;
  }; 

  function CompensationTokenData_get_IsTokenValidInSecondaryRoot () {
    return this.CompensationTokenData$IsTokenValidInSecondaryRoot$value;
  }; 

  function CompensationTokenData_get_ParentCompensationId () {
    return this.CompensationTokenData$ParentCompensationId$value;
  }; 


  function CompensationTokenData_set_BookmarkTable (value) {
    this.CompensationTokenData$BookmarkTable$value = value;
  }; 

  function CompensationTokenData_set_CompensationId (value) {
    this.CompensationTokenData$CompensationId$value = value;
  }; 

  function CompensationTokenData_set_CompensationState (value) {
    this.CompensationTokenData$CompensationState$value = value;
  }; 

  function CompensationTokenData_set_DisplayName (value) {
    this.CompensationTokenData$DisplayName$value = value;
  }; 

  function CompensationTokenData_set_ExecutionTracker (value) {
    this.CompensationTokenData$ExecutionTracker$value = value;
  }; 

  function CompensationTokenData_set_IsTokenValidInSecondaryRoot (value) {
    this.CompensationTokenData$IsTokenValidInSecondaryRoot$value = value;
  }; 

  function CompensationTokenData_set_ParentCompensationId (value) {
    this.CompensationTokenData$ParentCompensationId$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.CompensationTokenData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int64, $.Int64])
    );

    $.Method({Static:false, Public:false}, "get_BookmarkTable", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.BookmarkTable")), 
      CompensationTokenData_get_BookmarkTable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_CompensationId", 
      JSIL.MethodSignature.Return($.Int64), 
      CompensationTokenData_get_CompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_CompensationState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.CompensationState")), 
      CompensationTokenData_get_CompensationState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      CompensationTokenData_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ExecutionTracker", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.ExecutionTracker")), 
      CompensationTokenData_get_ExecutionTracker
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsTokenValidInSecondaryRoot", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompensationTokenData_get_IsTokenValidInSecondaryRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ParentCompensationId", 
      JSIL.MethodSignature.Return($.Int64), 
      CompensationTokenData_get_ParentCompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "RemoveBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.CompensationBookmarkName")])
    );

    $.Method({Static:false, Public:false}, "set_BookmarkTable", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.BookmarkTable")), 
      CompensationTokenData_set_BookmarkTable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CompensationId", 
      JSIL.MethodSignature.Action($.Int64), 
      CompensationTokenData_set_CompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CompensationState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.CompensationState")), 
      CompensationTokenData_set_CompensationState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      CompensationTokenData_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExecutionTracker", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.ExecutionTracker")), 
      CompensationTokenData_set_ExecutionTracker
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsTokenValidInSecondaryRoot", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompensationTokenData_set_IsTokenValidInSecondaryRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ParentCompensationId", 
      JSIL.MethodSignature.Action($.Int64), 
      CompensationTokenData_set_ParentCompensationId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$CompensationId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$ParentCompensationId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$BookmarkTable$value", $asm0B.TypeRef("System.Activities.Statements.BookmarkTable"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$ExecutionTracker$value", $asm0B.TypeRef("System.Activities.Statements.ExecutionTracker"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$CompensationState$value", $asm0B.TypeRef("System.Activities.Statements.CompensationState"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationTokenData$IsTokenValidInSecondaryRoot$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "CompensationId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "ParentCompensationId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "BookmarkTable", $asm0B.TypeRef("System.Activities.Statements.BookmarkTable"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "ExecutionTracker", $asm0B.TypeRef("System.Activities.Statements.ExecutionTracker"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "CompensationState", $asm0B.TypeRef("System.Activities.Statements.CompensationState"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm0B.System.Activities.Statements.CompensationState.Active]; })
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "DisplayName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsTokenValidInSecondaryRoot", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.CompensationParticipant */ 

(function CompensationParticipant$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };





  function CompensationParticipant_get_CancellationHandler () {
    return this.CompensationParticipant$CancellationHandler$value;
  }; 


  function CompensationParticipant_get_CompensationHandler () {
    return this.CompensationParticipant$CompensationHandler$value;
  }; 

  function CompensationParticipant_get_ConfirmationHandler () {
    return this.CompensationParticipant$ConfirmationHandler$value;
  }; 

  function CompensationParticipant_get_DefaultCompensation () {
    return this.CompensationParticipant$DefaultCompensation$value;
  }; 

  function CompensationParticipant_get_DefaultConfirmation () {
    return this.CompensationParticipant$DefaultConfirmation$value;
  }; 












  function CompensationParticipant_set_CancellationHandler (value) {
    this.CompensationParticipant$CancellationHandler$value = value;
  }; 

  function CompensationParticipant_set_CompensationHandler (value) {
    this.CompensationParticipant$CompensationHandler$value = value;
  }; 

  function CompensationParticipant_set_ConfirmationHandler (value) {
    this.CompensationParticipant$ConfirmationHandler$value = value;
  }; 

  function CompensationParticipant_set_DefaultCompensation (value) {
    this.CompensationParticipant$DefaultCompensation$value = value;
  }; 

  function CompensationParticipant_set_DefaultConfirmation (value) {
    this.CompensationParticipant$DefaultConfirmation$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.CompensationParticipant", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable`1", [$.Int64]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_CancellationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_get_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CompensationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_get_CompensationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ConfirmationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_get_ConfirmationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_DefaultCompensation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_get_DefaultCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_DefaultConfirmation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_get_DefaultConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "InternalOnCompensationComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.CompensationExtension"), 
          $asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCancellation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCancellationHandlerComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompensation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompensationComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompensationHandlerComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConfirmation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConfirmationComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConfirmationHandlerComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExceptionFromHandler", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.Method({Static:false, Public:true }, "set_CancellationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_set_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompensationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_set_CompensationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ConfirmationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_set_ConfirmationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_DefaultCompensation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_set_DefaultCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_DefaultConfirmation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CompensationParticipant_set_DefaultConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "compensationId", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Int64]));

    $.Field({Static:false, Public:false}, "currentCompensationToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "CompensationParticipant$CompensationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationParticipant$ConfirmationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationParticipant$CancellationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationParticipant$DefaultCompensation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompensationParticipant$DefaultConfirmation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CompensationHandler", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ConfirmationHandler", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "CancellationHandler", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "DefaultCompensation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "DefaultConfirmation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Statements.CompensationState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Statements.CompensationState", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Creating: 0, 
    Active: 1, 
    Completed: 2, 
    Confirming: 3, 
    Confirmed: 4, 
    Compensating: 5, 
    Compensated: 6, 
    Canceling: 7, 
    Canceled: 8, 
  }
);

/* class System.Activities.Statements.CreateBookmarkScope */ 

(function CreateBookmarkScope$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]), 
      Name: "System.Activities.Statements.CreateBookmarkScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Confirm */ 

(function Confirm$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };









  function Confirm_get_Target () {
    return this.Confirm$Target$value;
  }; 


  function Confirm_set_Target (value) {
    this.Confirm$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Confirm", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ConfirmWithNoTarget", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultConfirmation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.DefaultConfirmation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalConfirm", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.InternalConfirm"))
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      Confirm_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalGetConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]))
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      Confirm_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "confirmWithNoTarget", $asm0B.TypeRef("System.Activities.Validation.Constraint"));

    $.Field({Static:false, Public:false}, "internalConfirm", $asm0B.TypeRef("System.Activities.Statements.InternalConfirm"));

    $.Field({Static:false, Public:false}, "defaultConfirmation", $asm0B.TypeRef("System.Activities.Statements.DefaultConfirmation"));

    $.Field({Static:false, Public:false}, "currentCompensationToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "Confirm$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Property({Static:false, Public:false}, "DefaultConfirmation", $asm0B.TypeRef("System.Activities.Statements.DefaultConfirmation"));

    $.Property({Static:false, Public:false}, "InternalConfirm", $asm0B.TypeRef("System.Activities.Statements.InternalConfirm"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Confirm+<>c__DisplayClass15_0 */ 

(function $l$gc__DisplayClass15_0$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Confirm+<>c__DisplayClass15_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "element", $asm0B.TypeRef("System.Activities.DelegateInArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Confirm")]));

    $.Field({Static:false, Public:true }, "assertFlag", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:true }, "index", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int32]));

    $.Field({Static:false, Public:true }, "elements", $asm0B.TypeRef("System.Activities.Variable`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.DefaultCompensation */ 

(function DefaultCompensation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };







  function DefaultCompensation_get_Target () {
    return this.DefaultCompensation$Target$value;
  }; 


  function DefaultCompensation_set_Target (value) {
    this.DefaultCompensation$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.DefaultCompensation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      DefaultCompensation_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "InternalExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      DefaultCompensation_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "body", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "toCompensateToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "onChildCompensated", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "DefaultCompensation$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Property({Static:false, Public:false}, "Body", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DefaultConfirmation */ 

(function DefaultConfirmation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };







  function DefaultConfirmation_get_Target () {
    return this.DefaultConfirmation$Target$value;
  }; 


  function DefaultConfirmation_set_Target (value) {
    this.DefaultConfirmation$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.DefaultConfirmation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      DefaultConfirmation_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "InternalExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      DefaultConfirmation_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "body", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "toConfirmToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "onChildConfirmed", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "DefaultConfirmation$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Property({Static:false, Public:false}, "Body", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DeleteBookmarkScope */ 

(function DeleteBookmarkScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.BookmarkScope))) ();
  };





  function DeleteBookmarkScope_get_Scope () {
    return this.DeleteBookmarkScope$Scope$value;
  }; 

  function DeleteBookmarkScope_set_Scope (value) {
    this.DeleteBookmarkScope$Scope$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.DeleteBookmarkScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Scope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")])), 
      DeleteBookmarkScope_get_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Scope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")])), 
      DeleteBookmarkScope_set_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DeleteBookmarkScope$Scope$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Scope", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.ExecutionTracker */ 

(function ExecutionTracker$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.ExecutionTracker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.CompensationTokenData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.CompensationTokenData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExecutionOrderedList", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.CompensationTokenData"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExecutionOrderedList", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]))
    );

    $.Field({Static:false, Public:false}, "executionOrderedList", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedExecutionOrderedList", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationTokenData")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.HandleScope`1 */ 

(function HandleScope$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };





  function HandleScope$b1_get_Body () {
    return this.HandleScope$b1$Body$value;
  }; 

  function HandleScope$b1_get_Handle () {
    return this.HandleScope$b1$Handle$value;
  }; 

  function HandleScope$b1_set_Body (value) {
    this.HandleScope$b1$Body$value = value;
  }; 

  function HandleScope$b1_set_Handle (value) {
    this.HandleScope$b1$Handle$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.HandleScope`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["THandle"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      HandleScope$b1_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Handle", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("THandle")]), null), 
      HandleScope$b1_get_Handle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      HandleScope$b1_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Handle", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("THandle")])]), 
      HandleScope$b1_set_Handle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "declaredHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$.GenericParameter("THandle")]));

    $.Field({Static:false, Public:false}, "HandleScope$b1$Handle$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("THandle")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "HandleScope$b1$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Handle", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("THandle")]));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* interface System.Activities.Statements.IFlowSwitch */ 

JSIL.MakeInterface(
  "System.Activities.Statements.IFlowSwitch", false, [], function ($) {
    $.Method({}, "Execute", new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.Flowchart")]));
    $.Method({}, "GetNextNode", new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.FlowNode"), [$.Object]));
  }, []);

/* class System.Activities.Statements.InternalCompensate */ 

(function InternalCompensate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };







  function InternalCompensate_get_Target () {
    return this.InternalCompensate$Target$value;
  }; 


  function InternalCompensate_set_Target (value) {
    this.InternalCompensate$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InternalCompensate", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      InternalCompensate_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnCompensated", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      InternalCompensate_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalCompensate$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.InternalConfirm */ 

(function InternalConfirm$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.CompensationToken))) ();
  };







  function InternalConfirm_get_Target () {
    return this.InternalConfirm$Target$value;
  }; 


  function InternalConfirm_set_Target (value) {
    this.InternalConfirm$Target$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.InternalConfirm", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      InternalConfirm_get_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnConfirmed", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.Method({Static:false, Public:true }, "set_Target", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")])), 
      InternalConfirm_set_Target
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalConfirm$Target$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Target", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Persist */ 

(function Persist$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Persist", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnPersistComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.Field({Static:true , Public:false}, "onPersistCompleteCallback", $asm0B.TypeRef("System.Activities.BookmarkCallback"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Rethrow */ 

(function Rethrow$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Rethrow", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Rethrow+RethrowBuildConstraint */ 

(function RethrowBuildConstraint$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Collections.Generic.IEnumerable$b1.Of($asm0B.System.Activities.Activity)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.Rethrow))) ();
  };





  function RethrowBuildConstraint_get_ParentChain () {
    return this.RethrowBuildConstraint$ParentChain$value;
  }; 

  function RethrowBuildConstraint_get_RethrowActivity () {
    return this.RethrowBuildConstraint$RethrowActivity$value;
  }; 

  function RethrowBuildConstraint_set_ParentChain (value) {
    this.RethrowBuildConstraint$ParentChain$value = value;
  }; 

  function RethrowBuildConstraint_set_RethrowActivity (value) {
    this.RethrowBuildConstraint$RethrowActivity$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.Rethrow+RethrowBuildConstraint", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_ParentChain", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      RethrowBuildConstraint_get_ParentChain
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RethrowActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Rethrow")])), 
      RethrowBuildConstraint_get_RethrowActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentChain", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      RethrowBuildConstraint_set_ParentChain
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RethrowActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Rethrow")])), 
      RethrowBuildConstraint_set_RethrowActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RethrowBuildConstraint$ParentChain$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RethrowBuildConstraint$RethrowActivity$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Rethrow")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ParentChain", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "RethrowActivity", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.Rethrow")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TryCatch */ 

(function TryCatch$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };










  function TryCatch_get_Finally () {
    return this.TryCatch$Finally$value;
  }; 

  function TryCatch_get_Try () {
    return this.TryCatch$Try$value;
  }; 








  function TryCatch_set_Finally (value) {
    this.TryCatch$Finally$value = value;
  }; 

  function TryCatch_set_Try (value) {
    this.TryCatch$Try$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.TryCatch", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FindCatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.Catch"), [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindCatchActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.Catch"), [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Statements.Catch")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Catches", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Catch")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ExceptionFromCatchOrFinallyHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.FaultCallback"))
    );

    $.Method({Static:false, Public:true }, "get_Finally", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TryCatch_get_Finally
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Try", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TryCatch_get_Try
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCatchComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExceptionFromCatchOrFinally", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExceptionFromTry", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnFinallyComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTryComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.Method({Static:false, Public:true }, "set_Finally", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TryCatch_set_Finally
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Try", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TryCatch_set_Try
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Field({Static:false, Public:false}, "catches", $asm0B.TypeRef("System.Activities.Statements.TryCatch+CatchList"));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "state", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.TryCatch+TryCatchState")]));

    $.Field({Static:false, Public:false}, "exceptionFromCatchOrFinallyHandler", $asm0B.TypeRef("System.Activities.FaultCallback"));

    $.Constant({Static:true , Public:false}, "FaultContextId", $.String, "{35ABC8C3-9AF1-4426-8293-A6DDBB6ED91D}");

    $.Field({Static:false, Public:false}, "TryCatch$Try$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TryCatch$Finally$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Try", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Catches", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Catch")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Try"]; });

    $.Property({Static:false, Public:true }, "Finally", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Catches"]; });

    $.Property({Static:false, Public:false}, "ExceptionFromCatchOrFinallyHandler", $asm0B.TypeRef("System.Activities.FaultCallback"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TryCatch+TryCatchState */ 

(function TryCatchState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Runtime.FaultContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function TryCatchState_get_CaughtException () {
    return this.TryCatchState$CaughtException$value;
  }; 

  function TryCatchState_get_ExceptionHandled () {
    return this.TryCatchState$ExceptionHandled$value;
  }; 

  function TryCatchState_get_SuppressCancel () {
    return this.TryCatchState$SuppressCancel$value;
  }; 

  function TryCatchState_set_CaughtException (value) {
    this.TryCatchState$CaughtException$value = value;
  }; 

  function TryCatchState_set_ExceptionHandled (value) {
    this.TryCatchState$ExceptionHandled$value = value;
  }; 

  function TryCatchState_set_SuppressCancel (value) {
    this.TryCatchState$SuppressCancel$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TryCatch+TryCatchState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CaughtException", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultContext")), 
      TryCatchState_get_CaughtException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ExceptionHandled", 
      JSIL.MethodSignature.Return($.Boolean), 
      TryCatchState_get_ExceptionHandled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SuppressCancel", 
      JSIL.MethodSignature.Return($.Boolean), 
      TryCatchState_get_SuppressCancel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CaughtException", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultContext")), 
      TryCatchState_set_CaughtException
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ExceptionHandled", 
      JSIL.MethodSignature.Action($.Boolean), 
      TryCatchState_set_ExceptionHandled
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SuppressCancel", 
      JSIL.MethodSignature.Action($.Boolean), 
      TryCatchState_set_SuppressCancel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TryCatchState$SuppressCancel$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TryCatchState$CaughtException$value", $asm0B.TypeRef("System.Activities.Runtime.FaultContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TryCatchState$ExceptionHandled$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "SuppressCancel", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "CaughtException", $asm0B.TypeRef("System.Activities.Runtime.FaultContext"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "ExceptionHandled", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.TryCatch+CatchList */ 

(function CatchList$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.Collections.ValidatingCollection`1", [$asm0B.TypeRef("System.Activities.Statements.Catch")]), 
      Name: "System.Activities.Statements.TryCatch+CatchList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.Statements.Catch")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.Statements.Catch")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TryCatch+CatchList+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TryCatch+CatchList+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.Catch"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__0_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.Catch")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.TryCatch+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TryCatch+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__7_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__7_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.WorkflowCompensationBehavior */ 

(function WorkflowCompensationBehavior$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };







  function WorkflowCompensationBehavior_get_DefaultCompensation () {
    return this.WorkflowCompensationBehavior$DefaultCompensation$value;
  }; 

  function WorkflowCompensationBehavior_get_DefaultConfirmation () {
    return this.WorkflowCompensationBehavior$DefaultConfirmation$value;
  }; 






  function WorkflowCompensationBehavior_set_DefaultCompensation (value) {
    this.WorkflowCompensationBehavior$DefaultCompensation$value = value;
  }; 

  function WorkflowCompensationBehavior_set_DefaultConfirmation (value) {
    this.WorkflowCompensationBehavior$DefaultConfirmation$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.WorkflowCompensationBehavior", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_DefaultCompensation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowCompensationBehavior_get_DefaultCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_DefaultConfirmation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowCompensationBehavior_get_DefaultConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnCompensate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompensationComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConfirm", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConfirmationComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnMainRootComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.Method({Static:false, Public:false}, "set_DefaultCompensation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowCompensationBehavior_set_DefaultCompensation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_DefaultConfirmation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      WorkflowCompensationBehavior_set_DefaultConfirmation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "currentCompensationToken", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.CompensationToken")]));

    $.Field({Static:false, Public:false}, "WorkflowCompensationBehavior$DefaultCompensation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowCompensationBehavior$DefaultConfirmation$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "DefaultCompensation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "DefaultConfirmation", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Assign */ 

(function Assign$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.OutArgument)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };





  function Assign_get_To () {
    return this.Assign$To$value;
  }; 

  function Assign_get_Value () {
    return this.Assign$Value$value;
  }; 

  function Assign_set_To (value) {
    this.Assign$To$value = value;
  }; 

  function Assign_set_Value (value) {
    this.Assign$Value$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.Assign", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_To", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument")), 
      Assign_get_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      Assign_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_To", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument")), 
      Assign_set_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      Assign_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Assign$To$value", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Assign$Value$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "To", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Assign`1 */ 

(function Assign$b1$Members () {
  var $, $thisType;




  function Assign$b1_get_To () {
    return this.Assign$b1$To$value;
  }; 

  function Assign$b1_get_Value () {
    return this.Assign$b1$Value$value;
  }; 

  function Assign$b1_set_To (value) {
    this.Assign$b1$To$value = value;
  }; 

  function Assign$b1_set_Value (value) {
    this.Assign$b1$Value$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.Assign`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_To", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), null), 
      Assign$b1_get_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      Assign$b1_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_To", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")])]), 
      Assign$b1_set_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      Assign$b1_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Assign$b1$To$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Assign$b1$Value$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "To", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.CancellationScope */ 

(function CancellationScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };






  function CancellationScope_get_Body () {
    return this.CancellationScope$Body$value;
  }; 

  function CancellationScope_get_CancellationHandler () {
    return this.CancellationScope$CancellationHandler$value;
  }; 





  function CancellationScope_set_Body (value) {
    this.CancellationScope$Body$value = value;
  }; 

  function CancellationScope_set_CancellationHandler (value) {
    this.CancellationScope$CancellationHandler$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.CancellationScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CancellationScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CancellationHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      CancellationScope_get_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBodyComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExceptionFromCancelHandler", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CancellationScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CancellationHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      CancellationScope_set_CancellationHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "suppressCancel", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "CancellationScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CancellationScope$CancellationHandler$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "CancellationHandler", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Body"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.CancellationScope+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.CancellationScope+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__4_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__4_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Delay */ 

(function Delay$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.TimeSpan))) ();
  };








  function Delay_get_Duration () {
    return this.Delay$Duration$value;
  }; 



  function Delay_set_Duration (value) {
    this.Delay$Duration$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Delay", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Duration", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")])), 
      Delay_get_Duration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetDefaultTimerExtension", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TimerExtension"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTimerExtension", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.TimerExtension"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Method({Static:false, Public:true }, "set_Duration", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")])), 
      Delay_set_Duration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "getDefaultTimerExtension", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Statements.TimerExtension")]), function ($pi) {
        return $asm07.System.Func$b1.Of($asm0B.System.Activities.Statements.TimerExtension).New(null, null, new JSIL.MethodPointerInfo($thisType, "GetDefaultTimerExtension", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TimerExtension")), true, false));
      });

    $.Field({Static:false, Public:false}, "timerBookmark", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "Delay$Duration$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Duration", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Duration"]; });

})();

/* class System.Activities.Statements.DoWhile */ 

(function DoWhile$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };







  function DoWhile_get_Body () {
    return this.DoWhile$Body$value;
  }; 

  function DoWhile_get_Condition () {
    return this.DoWhile$Condition$value;
  }; 






  function DoWhile_set_Body (value) {
    this.DoWhile$Body$value = value;
  }; 

  function DoWhile_set_Condition (value) {
    this.DoWhile$Condition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.DoWhile", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      DoWhile_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      DoWhile_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBodyComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConditionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleCondition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      DoWhile_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      DoWhile_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "onBodyComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "onConditionComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "DoWhile$Condition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DoWhile$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Condition"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.DoWhile+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.DoWhile+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__7_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__7_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Flowchart */ 

(function Flowchart$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Statements.FlowNode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };










  function Flowchart_get_StartNode () {
    return this.Flowchart$StartNode$value;
  }; 

  function Flowchart_get_ValidateUnconnectedNodes () {
    return this.Flowchart$ValidateUnconnectedNodes$value;
  }; 







  function Flowchart_set_StartNode (value) {
    this.Flowchart$StartNode$value = value;
  }; 

  function Flowchart_set_ValidateUnconnectedNodes (value) {
    this.Flowchart$ValidateUnconnectedNodes$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Flowchart", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DepthFirstVisitNodes", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Statements.FlowNode"), $.Boolean]), $asm0B.TypeRef("System.Activities.Statements.FlowNode")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteNodeChain", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.FlowNode"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteSingleNode", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.FlowNode"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GatherReachableNodes", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Nodes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]))
    );

    $.Method({Static:false, Public:true }, "get_StartNode", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      Flowchart_get_StartNode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ValidateUnconnectedNodes", 
      JSIL.MethodSignature.Return($.Boolean), 
      Flowchart_get_ValidateUnconnectedNodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCurrentNode", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.FlowNode"), [$asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDecisionCompleted", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStepCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSwitchCompleted", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          "!!0"
        ], ["T"])
    );

    $.Method({Static:false, Public:true }, "set_StartNode", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      Flowchart_set_StartNode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValidateUnconnectedNodes", 
      JSIL.MethodSignature.Action($.Boolean), 
      Flowchart_set_ValidateUnconnectedNodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitNode", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Statements.FlowNode"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "nodes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]));

    $.Field({Static:false, Public:false}, "reachableNodes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]));

    $.Field({Static:false, Public:false}, "onStepCompleted", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "onDecisionCompleted", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "currentNode", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "Flowchart$ValidateUnconnectedNodes$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Flowchart$StartNode$value", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ValidateUnconnectedNodes", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "StartNode", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Nodes", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["StartNode"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Nodes"]; });

})();

/* class System.Activities.Statements.Flowchart+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Flowchart+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Nodes$gb__18_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__12_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__12_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:true , Public:true }, "$l$g9__18_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Flowchart+<>c__DisplayClass22_0 */ 

(function $l$gc__DisplayClass22_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Flowchart+<>c__DisplayClass22_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGatherReachableNodes$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Statements.FlowNode")])
    );

    $.Field({Static:false, Public:true }, "metadata", $asm0B.TypeRef("System.Activities.NativeActivityMetadata"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Statements.Flowchart"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.ForEach`1 */ 

(function ForEach$b1$Members () {
  var $, $thisType;




  function ForEach$b1_get_Body () {
    return this.ForEach$b1$Body$value;
  }; 


  function ForEach$b1_get_Values () {
    return this.ForEach$b1$Values$value;
  }; 




  function ForEach$b1_set_Body (value) {
    this.ForEach$b1$Body$value = value;
  }; 

  function ForEach$b1_set_Values (value) {
    this.ForEach$b1$Values$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.ForEach`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]), null), 
      ForEach$b1_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_OnChildComplete", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.CompletionCallback"))
    );

    $.Method({Static:false, Public:true }, "get_Values", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]), null), 
      ForEach$b1_get_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetStateAndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")])]), 
      ForEach$b1_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Values", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])])]), 
      ForEach$b1_set_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "valueEnumerator", $asm0B.TypeRef("System.Activities.Variable`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")])]));

    $.Field({Static:false, Public:false}, "onChildComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "ForEach$b1$Body$value", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ForEach$b1$Values$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Values", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "OnChildComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.If */ 

(function If$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };








  function If_get_Condition () {
    return this.If$Condition$value;
  }; 

  function If_get_Else () {
    return this.If$Else$value;
  }; 

  function If_get_Then () {
    return this.If$Then$value;
  }; 


  function If_set_Condition (value) {
    this.If$Condition$value = value;
  }; 

  function If_set_Else (value) {
    this.If$Else$value = value;
  }; 

  function If_set_Then (value) {
    this.If$Then$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.If", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      If_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Else", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      If_get_Else
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Then", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      If_get_Then
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      If_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Else", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      If_set_Else
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Then", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      If_set_Then
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "If$Condition$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "If$Then$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "If$Else$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Then", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Condition"]; });

    $.Property({Static:false, Public:true }, "Else", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Then"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.InvokeMethod */ 

(function InvokeMethod$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.OutArgument)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Type)) ();
  };








  function InvokeMethod_get_MethodName () {
    return this.InvokeMethod$MethodName$value;
  }; 


  function InvokeMethod_get_Result () {
    return this.InvokeMethod$Result$value;
  }; 

  function InvokeMethod_get_RunAsynchronously () {
    return this.InvokeMethod$RunAsynchronously$value;
  }; 

  function InvokeMethod_get_TargetObject () {
    return this.InvokeMethod$TargetObject$value;
  }; 

  function InvokeMethod_get_TargetType () {
    return this.InvokeMethod$TargetType$value;
  }; 

  function InvokeMethod_set_MethodName (value) {
    this.InvokeMethod$MethodName$value = value;
  }; 

  function InvokeMethod_set_Result (value) {
    this.InvokeMethod$Result$value = value;
  }; 

  function InvokeMethod_set_RunAsynchronously (value) {
    this.InvokeMethod$RunAsynchronously$value = value;
  }; 

  function InvokeMethod_set_TargetObject (value) {
    this.InvokeMethod$TargetObject$value = value;
  }; 

  function InvokeMethod_set_TargetType (value) {
    this.InvokeMethod$TargetType$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.AsyncCodeActivity"), 
      Name: "System.Activities.Statements.InvokeMethod", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginExecute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateMethodResolver", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.MethodResolver"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GenericTypeArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
    );

    $.Method({Static:false, Public:true }, "get_MethodName", 
      JSIL.MethodSignature.Return($.String), 
      InvokeMethod_get_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]))
    );

    $.Method({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument")), 
      InvokeMethod_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RunAsynchronously", 
      JSIL.MethodSignature.Return($.Boolean), 
      InvokeMethod_get_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetObject", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      InvokeMethod_get_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      InvokeMethod_get_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MethodName", 
      JSIL.MethodSignature.Action($.String), 
      InvokeMethod_set_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument")), 
      InvokeMethod_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RunAsynchronously", 
      JSIL.MethodSignature.Action($.Boolean), 
      InvokeMethod_set_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetObject", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      InvokeMethod_set_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      InvokeMethod_set_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "genericTypeArguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "methodResolver", $asm0B.TypeRef("System.Activities.Statements.MethodResolver"));

    $.Field({Static:false, Public:false}, "methodExecutor", $asm0B.TypeRef("System.Activities.Statements.MethodExecutor"));

    $.Field({Static:false, Public:false}, "resultArgument", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Field({Static:true , Public:false}, "funcCache", $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
            $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
            $.Object
          ])]));

    $.Field({Static:true , Public:false}, "locker", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "InvokeMethod$MethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$Result$value", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$TargetObject$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$TargetType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethod$RunAsynchronously$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "GenericTypeArguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:true }, "MethodName", $.String);

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.OutArgument"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "TargetObject", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "TargetType", $asm07.TypeRef("System.Type"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "RunAsynchronously", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Parameters"]; });

})();

/* class System.Activities.Statements.InvokeMethod+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.InvokeMethod+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_GenericTypeArguments$gb__8_0", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Parameters$gb__14_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Argument"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Action`1", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.MethodResolver */ 

(function MethodResolver$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.ObjectModel.Collection$b1.Of($asm07.System.Type))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.ObjectModel.Collection$b1.Of($asm0B.System.Activities.Argument))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.RuntimeArgument)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Type)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.System.Activities.InArgument)) ();
  };




  function MethodResolver_get_GenericTypeArguments () {
    return this.MethodResolver$GenericTypeArguments$value;
  }; 

  function MethodResolver_get_MethodName () {
    return this.MethodResolver$MethodName$value;
  }; 

  function MethodResolver_get_Parameters () {
    return this.MethodResolver$Parameters$value;
  }; 

  function MethodResolver_get_Parent () {
    return this.MethodResolver$Parent$value;
  }; 

  function MethodResolver_get_Result () {
    return this.MethodResolver$Result$value;
  }; 

  function MethodResolver_get_ResultType () {
    return this.MethodResolver$ResultType$value;
  }; 

  function MethodResolver_get_RunAsynchronously () {
    return this.MethodResolver$RunAsynchronously$value;
  }; 

  function MethodResolver_get_TargetObject () {
    return this.MethodResolver$TargetObject$value;
  }; 

  function MethodResolver_get_TargetType () {
    return this.MethodResolver$TargetType$value;
  }; 





  function MethodResolver_set_GenericTypeArguments (value) {
    this.MethodResolver$GenericTypeArguments$value = value;
  }; 

  function MethodResolver_set_MethodName (value) {
    this.MethodResolver$MethodName$value = value;
  }; 

  function MethodResolver_set_Parameters (value) {
    this.MethodResolver$Parameters$value = value;
  }; 

  function MethodResolver_set_Parent (value) {
    this.MethodResolver$Parent$value = value;
  }; 

  function MethodResolver_set_Result (value) {
    this.MethodResolver$Result$value = value;
  }; 

  function MethodResolver_set_ResultType (value) {
    this.MethodResolver$ResultType$value = value;
  }; 

  function MethodResolver_set_RunAsynchronously (value) {
    this.MethodResolver$RunAsynchronously$value = value;
  }; 

  function MethodResolver_set_TargetObject (value) {
    this.MethodResolver$TargetObject$value = value;
  }; 

  function MethodResolver_set_TargetType (value) {
    this.MethodResolver$TargetType$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodResolver", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DetermineMethodInfo", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
                $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
                $.Object
              ])]), 
          $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Statements.MethodExecutor")])
        ])
    );

    $.Method({Static:false, Public:true }, "get_GenericTypeArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")])), 
      MethodResolver_get_GenericTypeArguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MethodName", 
      JSIL.MethodSignature.Return($.String), 
      MethodResolver_get_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Parameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")])), 
      MethodResolver_get_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      MethodResolver_get_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeArgument")), 
      MethodResolver_get_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      MethodResolver_get_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RunAsynchronously", 
      JSIL.MethodSignature.Return($.Boolean), 
      MethodResolver_get_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetObject", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument")), 
      MethodResolver_get_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      MethodResolver_get_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "HaveParameterArray", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterInfo")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "Instantiate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [$asm07.TypeRef("System.Reflection.MethodInfo"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterParameters", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Resolve", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [
          $asm07.TypeRef("System.Type"), $.String, 
          $asm07.TypeRef("System.Reflection.BindingFlags"), $asm0B.TypeRef("System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder"), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $.Boolean
        ])
    );

    $.Method({Static:false, Public:true }, "set_GenericTypeArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")])), 
      MethodResolver_set_GenericTypeArguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MethodName", 
      JSIL.MethodSignature.Action($.String), 
      MethodResolver_set_MethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Parameters", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")])), 
      MethodResolver_set_Parameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Parent", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      MethodResolver_set_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Result", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument")), 
      MethodResolver_set_Result
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ResultType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      MethodResolver_set_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RunAsynchronously", 
      JSIL.MethodSignature.Action($.Boolean), 
      MethodResolver_set_RunAsynchronously
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetObject", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument")), 
      MethodResolver_set_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      MethodResolver_set_TargetType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Trace", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "staticBindingFlags", $asm07.TypeRef("System.Reflection.BindingFlags"), function ($pi) {
        return $asm07.System.Reflection.BindingFlags.$Flags("InvokeMethod", "Public", "Static");
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "instanceBindingFlags", $asm07.TypeRef("System.Reflection.BindingFlags"), function ($pi) {
        return $asm07.System.Reflection.BindingFlags.$Flags("Instance", "InvokeMethod", "Public");
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "staticString", $.String, "static");

    $.Field({Static:true , Public:false, ReadOnly:true }, "instanceString", $.String, "instance");

    $.Field({Static:false, Public:false}, "syncMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "beginMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "endMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "MethodResolver$GenericTypeArguments$value", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$MethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$Parameters$value", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$Result$value", $asm0B.TypeRef("System.Activities.RuntimeArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$TargetObject$value", $asm0B.TypeRef("System.Activities.InArgument"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$TargetType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$RunAsynchronously$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$Parent$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MethodResolver$ResultType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "GenericTypeArguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Type")]));

    $.Property({Static:false, Public:true }, "MethodName", $.String);

    $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Property({Static:false, Public:true }, "Result", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Property({Static:false, Public:true }, "TargetObject", $asm0B.TypeRef("System.Activities.InArgument"));

    $.Property({Static:false, Public:true }, "TargetType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "RunAsynchronously", $.Boolean);

    $.Property({Static:false, Public:true }, "Parent", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "ResultType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+InvokeMethodInstanceData */ 

(function InvokeMethodInstanceData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm07.System.Object))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Object)) ();
  };



  function InvokeMethodInstanceData_get_ActualParameters () {
    return this.InvokeMethodInstanceData$ActualParameters$value;
  }; 

  function InvokeMethodInstanceData_get_Exception () {
    return this.InvokeMethodInstanceData$Exception$value;
  }; 

  function InvokeMethodInstanceData_get_ExceptionWasThrown () {
    return this.InvokeMethodInstanceData$ExceptionWasThrown$value;
  }; 

  function InvokeMethodInstanceData_get_ReturnValue () {
    return this.InvokeMethodInstanceData$ReturnValue$value;
  }; 

  function InvokeMethodInstanceData_get_TargetObject () {
    return this.InvokeMethodInstanceData$TargetObject$value;
  }; 

  function InvokeMethodInstanceData_set_ActualParameters (value) {
    this.InvokeMethodInstanceData$ActualParameters$value = value;
  }; 

  function InvokeMethodInstanceData_set_Exception (value) {
    this.InvokeMethodInstanceData$Exception$value = value;
  }; 

  function InvokeMethodInstanceData_set_ExceptionWasThrown (value) {
    this.InvokeMethodInstanceData$ExceptionWasThrown$value = value;
  }; 

  function InvokeMethodInstanceData_set_ReturnValue (value) {
    this.InvokeMethodInstanceData$ReturnValue$value = value;
  }; 

  function InvokeMethodInstanceData_set_TargetObject (value) {
    this.InvokeMethodInstanceData$TargetObject$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodResolver+InvokeMethodInstanceData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActualParameters", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Object])), 
      InvokeMethodInstanceData_get_ActualParameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      InvokeMethodInstanceData_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ExceptionWasThrown", 
      JSIL.MethodSignature.Return($.Boolean), 
      InvokeMethodInstanceData_get_ExceptionWasThrown
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ReturnValue", 
      JSIL.MethodSignature.Return($.Object), 
      InvokeMethodInstanceData_get_ReturnValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TargetObject", 
      JSIL.MethodSignature.Return($.Object), 
      InvokeMethodInstanceData_get_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActualParameters", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Object])), 
      InvokeMethodInstanceData_set_ActualParameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      InvokeMethodInstanceData_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ExceptionWasThrown", 
      JSIL.MethodSignature.Action($.Boolean), 
      InvokeMethodInstanceData_set_ExceptionWasThrown
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReturnValue", 
      JSIL.MethodSignature.Action($.Object), 
      InvokeMethodInstanceData_set_ReturnValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TargetObject", 
      JSIL.MethodSignature.Action($.Object), 
      InvokeMethodInstanceData_set_TargetObject
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethodInstanceData$TargetObject$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethodInstanceData$ActualParameters$value", $jsilcore.TypeRef("System.Array", [$.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethodInstanceData$ReturnValue$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethodInstanceData$ExceptionWasThrown$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InvokeMethodInstanceData$Exception$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "TargetObject", $.Object);

    $.Property({Static:false, Public:true }, "ActualParameters", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Property({Static:false, Public:true }, "ReturnValue", $.Object);

    $.Property({Static:false, Public:true }, "ExceptionWasThrown", $.Boolean);

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder */ 

(function InheritanceAndParamArrayAwareBinder$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Reflection.Binder"), 
      Name: "System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindToField", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.FieldInfo"), [
          $asm07.TypeRef("System.Reflection.BindingFlags"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.FieldInfo")]), 
          $.Object, $asm07.TypeRef("System.Globalization.CultureInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindToMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodBase"), [
          $asm07.TypeRef("System.Reflection.BindingFlags"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodBase")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterModifier")]), 
          $asm07.TypeRef("System.Globalization.CultureInfo"), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ChangeType", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Globalization.CultureInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindMatch", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodBase"), [
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodBase")]), $asm07.TypeRef("System.Reflection.BindingFlags"), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterModifier")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReorderArgumentArray", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Object])]), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SelectMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodBase"), [
          $asm07.TypeRef("System.Reflection.BindingFlags"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.MethodBase")]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterModifier")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SelectProperty", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.PropertyInfo"), [
          $asm07.TypeRef("System.Reflection.BindingFlags"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.PropertyInfo")]), 
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterModifier")])
        ])
    );

    $.Field({Static:false, Public:false}, "genericTypeArguments", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "declaringType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "SelectMethodCalled", $.Boolean);

    $.Field({Static:false, Public:false}, "parentActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder+<>c__DisplayClass9_0 */ 

(function $l$gc__DisplayClass9_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder+<>c__DisplayClass9_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lSelectMethod$gb__1", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodBase")])
    );

    $.Field({Static:false, Public:true }, "declaringType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g9__1", $asm07.TypeRef("System.Func`2", [$asm07.TypeRef("System.Reflection.MethodBase"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodResolver+InheritanceAndParamArrayAwareBinder+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lSelectMethod$gb__9_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodBase")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm07.TypeRef("System.Func`2", [$asm07.TypeRef("System.Reflection.MethodBase"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.MethodExecutor */ 

(function MethodExecutor$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodExecutor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginExecuteMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginMakeMethodCall", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndExecuteMethod", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndMakeMethodCall", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EvaluateAndPackParameters", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Object]), [
          $asm0B.TypeRef("System.Activities.CodeActivityContext"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodIsStatic", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "HaveParameterArray", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Reflection.ParameterInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "InvokeAndUnwrapExceptions", 
      new JSIL.MethodSignature($.Object, [
          $asm07.TypeRef("System.Func`3", [
              $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
              $.Object
            ]), $.Object, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetOutArgumentAndReturnValue", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityContext"), $.Object, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Trace", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:false}, "invokingActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "targetType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "targetObject", $asm0B.TypeRef("System.Activities.InArgument"));

    $.Field({Static:false, Public:false}, "parameters", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]));

    $.Field({Static:false, Public:false}, "returnObject", $asm0B.TypeRef("System.Activities.RuntimeArgument"));

    $.Property({Static:false, Public:true , Virtual:true }, "MethodIsStatic", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+SyncMethodExecutor */ 

(function SyncMethodExecutor$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.MethodExecutor"), 
      Name: "System.Activities.Statements.MethodResolver+SyncMethodExecutor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
                $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
                $.Object
              ])]), 
          $asm10.TypeRef("System.Threading.ReaderWriterLockSlim")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginMakeMethodCall", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndMakeMethodCall", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodIsStatic", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "IsTheSame", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodInfo")])
    );

    $.Field({Static:false, Public:false}, "syncMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "func", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "MethodIsStatic", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+AsyncPatternMethodExecutor */ 

(function AsyncPatternMethodExecutor$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.MethodExecutor"), 
      Name: "System.Activities.Statements.MethodResolver+AsyncPatternMethodExecutor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 10, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.InArgument"), 
          $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), $asm0B.TypeRef("System.Activities.RuntimeArgument"), 
          $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
                $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
                $.Object
              ])]), $asm10.TypeRef("System.Threading.ReaderWriterLockSlim")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginMakeMethodCall", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndMakeMethodCall", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodIsStatic", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "IsTheSame", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Reflection.MethodInfo")])
    );

    $.Field({Static:false, Public:false}, "beginMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "endMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "beginFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Field({Static:false, Public:false}, "endFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "MethodIsStatic", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor */ 

(function AsyncWaitCallbackMethodExecutor$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.MethodExecutor"), 
      Name: "System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.CodeActivityMetadata"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm25.TypeRef("System.Runtime.MruCache`2", [$asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Func`3", [
                $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
                $.Object
              ])]), 
          $asm10.TypeRef("System.Threading.ReaderWriterLockSlim")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.InArgument"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Argument")]), 
          $asm0B.TypeRef("System.Activities.RuntimeArgument")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginMakeMethodCall", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndMakeMethodCall", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.AsyncCodeActivityContext"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_MethodIsStatic", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "IsTheSame", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Reflection.MethodInfo")])
    );

    $.Field({Static:false, Public:false}, "asyncMethod", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "asyncFunc", $asm07.TypeRef("System.Func`3", [
          $.Object, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.Object
        ]));

    $.Property({Static:false, Public:true , Virtual:true }, "MethodIsStatic", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor+ExecuteAsyncResult */ 

(function ExecuteAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor+ExecuteAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Statements.MethodResolver+InvokeMethodInstanceData"), $asm0B.TypeRef("System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AsyncExecute", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "AsyncExecuteCore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.MethodResolver+InvokeMethodInstanceData"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false}, "asyncExecute", $asm07.TypeRef("System.Action`1", [$.Object]), function ($pi) {
        return $asm07.System.Action$b1.Of($asm07.System.Object).New(null, null, new JSIL.MethodPointerInfo($thisType, "AsyncExecute", JSIL.MethodSignature.Action($.Object), true, false));
      });

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.Statements.MethodResolver+InvokeMethodInstanceData"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Statements.MethodResolver+AsyncWaitCallbackMethodExecutor"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.MethodResolver+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.MethodResolver+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lDetermineMethodInfo$gb__47_0", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm0B.TypeRef("System.Activities.Argument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__47_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Argument"), $asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Parallel */ 

(function Parallel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };







  function Parallel_get_CompletionCondition () {
    return this.Parallel$CompletionCondition$value;
  }; 





  function Parallel_set_CompletionCondition (value) {
    this.Parallel$CompletionCondition$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Parallel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Branches", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.Method({Static:false, Public:true }, "get_CompletionCondition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      Parallel_get_CompletionCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBranchComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConditionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_CompletionCondition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      Parallel_set_CompletionCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Field({Static:false, Public:false}, "onConditionComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "branches", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "hasCompleted", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "Parallel$CompletionCondition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "CompletionCondition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Branches", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["CompletionCondition"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Branches"]; });

})();

/* class System.Activities.Statements.Parallel+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Parallel+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Branches$gb__12_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__6_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:true , Public:true }, "$l$g9__12_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.ParallelForEach`1 */ 

(function ParallelForEach$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };





  function ParallelForEach$b1_get_Body () {
    return this.ParallelForEach$b1$Body$value;
  }; 

  function ParallelForEach$b1_get_CompletionCondition () {
    return this.ParallelForEach$b1$CompletionCondition$value;
  }; 

  function ParallelForEach$b1_get_Values () {
    return this.ParallelForEach$b1$Values$value;
  }; 




  function ParallelForEach$b1_set_Body (value) {
    this.ParallelForEach$b1$Body$value = value;
  }; 

  function ParallelForEach$b1_set_CompletionCondition (value) {
    this.ParallelForEach$b1$CompletionCondition$value = value;
  }; 

  function ParallelForEach$b1_set_Values (value) {
    this.ParallelForEach$b1$Values$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.ParallelForEach`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]), null), 
      ParallelForEach$b1_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CompletionCondition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      ParallelForEach$b1_get_CompletionCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Values", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]), null), 
      ParallelForEach$b1_get_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "OnBodyComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConditionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")])]), 
      ParallelForEach$b1_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompletionCondition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      ParallelForEach$b1_set_CompletionCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Values", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])])]), 
      ParallelForEach$b1_set_Values
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "hasCompleted", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "onConditionComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "ParallelForEach$b1$Body$value", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ParallelForEach$b1$CompletionCondition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ParallelForEach$b1$Values$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.ActivityAction`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "CompletionCondition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Values", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.Pick */ 

(function Pick$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Pick", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Branches", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.PickBranch")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBranchComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTriggerComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResumeExecutionActionBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.Pick+PickState"), $asm0B.TypeRef("System.Activities.NativeActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.Constant({Static:true , Public:false}, "pickStateProperty", $.String, "System.Activities.Statements.Pick.PickState");

    $.Field({Static:false, Public:false}, "branches", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.PickBranch")]));

    $.Field({Static:false, Public:false}, "pickStateVariable", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.Pick+PickState")]));

    $.Field({Static:false, Public:false}, "branchBodies", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:true }, "Branches", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.PickBranch")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Branches"]; });

})();

/* class System.Activities.Statements.Pick+PickState */ 

(function PickState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Bookmark)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function PickState_get_ExecuteActionBookmark () {
    return this.PickState$ExecuteActionBookmark$value;
  }; 

  function PickState_get_HasBranchCompletedSuccessfully () {
    return this.PickState$HasBranchCompletedSuccessfully$value;
  }; 

  function PickState_get_TriggerCompletionBookmark () {
    return this.PickState$TriggerCompletionBookmark$value;
  }; 

  function PickState_set_ExecuteActionBookmark (value) {
    this.PickState$ExecuteActionBookmark$value = value;
  }; 

  function PickState_set_HasBranchCompletedSuccessfully (value) {
    this.PickState$HasBranchCompletedSuccessfully$value = value;
  }; 

  function PickState_set_TriggerCompletionBookmark (value) {
    this.PickState$TriggerCompletionBookmark$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Pick+PickState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ExecuteActionBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      PickState_get_ExecuteActionBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HasBranchCompletedSuccessfully", 
      JSIL.MethodSignature.Return($.Boolean), 
      PickState_get_HasBranchCompletedSuccessfully
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TriggerCompletionBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      PickState_get_TriggerCompletionBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ExecuteActionBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      PickState_set_ExecuteActionBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HasBranchCompletedSuccessfully", 
      JSIL.MethodSignature.Action($.Boolean), 
      PickState_set_HasBranchCompletedSuccessfully
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TriggerCompletionBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      PickState_set_TriggerCompletionBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickState$HasBranchCompletedSuccessfully$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickState$TriggerCompletionBookmark$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickState$ExecuteActionBookmark$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "HasBranchCompletedSuccessfully", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "TriggerCompletionBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "ExecuteActionBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.Pick+PickBranchBody */ 

(function PickBranchBody$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.ObjectModel.Collection$b1.Of($asm0B.System.Activities.Variable))) ();
  };





  function PickBranchBody_get_Action () {
    return this.PickBranchBody$Action$value;
  }; 


  function PickBranchBody_get_Trigger () {
    return this.PickBranchBody$Trigger$value;
  }; 

  function PickBranchBody_get_Variables () {
    return this.PickBranchBody$Variables$value;
  }; 




  function PickBranchBody_set_Action (value) {
    this.PickBranchBody$Action$value = value;
  }; 

  function PickBranchBody_set_Trigger (value) {
    this.PickBranchBody$Trigger$value = value;
  }; 

  function PickBranchBody_set_Variables (value) {
    this.PickBranchBody$Variables$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Pick+PickBranchBody", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranchBody_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Trigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranchBody_get_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")])), 
      PickBranchBody_get_Variables
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExecuteAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTriggerCompleted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranchBody_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Trigger", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranchBody_set_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Variables", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")])), 
      PickBranchBody_set_Variables
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickBranchBody$Variables$value", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickBranchBody$Trigger$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickBranchBody$Action$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Trigger", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Pick+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Pick+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Branches$gb__8_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.PickBranch"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.PickBranch")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.PickBranch */ 

(function PickBranch$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };



  function PickBranch_get_Action () {
    return this.PickBranch$Action$value;
  }; 


  function PickBranch_get_Trigger () {
    return this.PickBranch$Trigger$value;
  }; 


  function PickBranch_set_Action (value) {
    this.PickBranch$Action$value = value;
  }; 


  function PickBranch_set_Trigger (value) {
    this.PickBranch$Trigger$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.PickBranch", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranch_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_Trigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranch_get_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranch_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_Trigger", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      PickBranch_set_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "PickBranch$Trigger$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PickBranch$Action$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Trigger", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Trigger"]; });

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return ["PickBranch"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.PickBranch+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.PickBranch+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__4_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__4_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Sequence */ 

(function Sequence$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Sequence", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activities", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalExecute", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:false}, "activities", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "lastIndexHint", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "onChildComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Activities", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Activities"]; });

})();

/* class System.Activities.Statements.Sequence+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Sequence+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Activities$gb__8_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__6_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.Switch`1 */ 

(function Switch$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };









  function Switch$b1_get_Default () {
    return this.Switch$b1$Default$value;
  }; 

  function Switch$b1_get_Expression () {
    return this.Switch$b1$Expression$value;
  }; 


  function Switch$b1_set_Default (value) {
    this.Switch$b1$Default$value = value;
  }; 

  function Switch$b1_set_Expression (value) {
    this.Switch$b1$Expression$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.Switch`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.GenericParameter("T")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Cases", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Activity")]), null)
    );

    $.Method({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      Switch$b1_get_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Expression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      Switch$b1_get_Expression
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:true }, "set_Default", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      Switch$b1_set_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Expression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      Switch$b1_set_Expression
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "cases", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "Switch$b1$Expression$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Switch$b1$Default$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Cases", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Cases"]; });

})();

/* class System.Activities.Statements.TerminateWorkflow */ 

(function TerminateWorkflow$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Exception))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.String))) ();
  };





  function TerminateWorkflow_get_Exception () {
    return this.TerminateWorkflow$Exception$value;
  }; 

  function TerminateWorkflow_get_Reason () {
    return this.TerminateWorkflow$Reason$value;
  }; 

  function TerminateWorkflow_set_Exception (value) {
    this.TerminateWorkflow$Exception$value = value;
  }; 

  function TerminateWorkflow_set_Reason (value) {
    this.TerminateWorkflow$Reason$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.TerminateWorkflow", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")])), 
      TerminateWorkflow_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      TerminateWorkflow_get_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Exception", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")])), 
      TerminateWorkflow_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Reason", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      TerminateWorkflow_set_Reason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TerminateWorkflow$Reason$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TerminateWorkflow$Exception$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Reason", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Exception", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Throw */ 

(function Throw$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Exception))) ();
  };





  function Throw_get_Exception () {
    return this.Throw$Exception$value;
  }; 

  function Throw_set_Exception (value) {
    this.Throw$Exception$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.Throw", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")])), 
      Throw_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Exception", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")])), 
      Throw_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Throw$Exception$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Exception", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Exception")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Exception"]; });

})();

/* class System.Activities.Statements.TransactionScope */ 

(function TransactionScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm27.System.Transactions.IsolationLevel)) ();
  };






  function TransactionScope_get_Body () {
    return this.TransactionScope$Body$value;
  }; 


  function TransactionScope_get_IsolationLevel () {
    return this.TransactionScope$IsolationLevel$value;
  }; 











  function TransactionScope_set_Body (value) {
    this.TransactionScope$Body$value = value;
  }; 

  function TransactionScope_set_IsolationLevel (value) {
    this.TransactionScope$IsolationLevel$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.TransactionScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AbortInstanceOnTransactionFailure", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TransactionScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsolationLevel", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.IsolationLevel")), 
      TransactionScope_get_IsolationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_NestedScopeTimeoutWorkflow", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.Delay"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Timeout", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompletion", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnContextAcquired", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDelayCompletion", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTransactionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessChildSubtreeConstraints", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessParentChainConstraints", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleBody", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AbortInstanceOnTransactionFailure", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TransactionScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsolationLevel", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.IsolationLevel")), 
      TransactionScope_set_IsolationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_Timeout", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeIsolationLevel", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.ExternalMethod({Static:false, Public:true }, "ShouldSerializeTimeout", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm0A.System.ComponentModel.EditorBrowsableState.Never]; });

    $.Constant({Static:true , Public:false}, "defaultIsolationLevel", $asm27.TypeRef("System.Transactions.IsolationLevel"), 0);

    $.Field({Static:false, Public:false}, "timeout", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]));

    $.Field({Static:false, Public:false}, "isTimeoutSetExplicitly", $.Boolean);

    $.Field({Static:false, Public:false}, "runtimeTransactionHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.RuntimeTransactionHandle")]));

    $.Field({Static:false, Public:false}, "abortInstanceOnTransactionFailure", $.Boolean);

    $.Field({Static:false, Public:false}, "abortInstanceFlagWasExplicitlySet", $.Boolean);

    $.Field({Static:false, Public:false}, "nestedScopeTimeoutWorkflow", $asm0B.TypeRef("System.Activities.Statements.Delay"));

    $.Field({Static:false, Public:false}, "delayWasScheduled", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "nestedScopeTimeout", $asm0B.TypeRef("System.Activities.Variable`1", [$asm07.TypeRef("System.TimeSpan")]));

    $.Field({Static:false, Public:false}, "nestedScopeTimeoutActivityInstance", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]));

    $.Field({Static:true , Public:false}, "runtimeTransactionHandlePropertyName", $.String);

    $.Constant({Static:true , Public:false}, "AbortInstanceOnTransactionFailurePropertyName", $.String, "AbortInstanceOnTransactionFailure");

    $.Constant({Static:true , Public:false}, "IsolationLevelPropertyName", $.String, "IsolationLevel");

    $.Constant({Static:true , Public:false}, "BodyPropertyName", $.String, "Body");

    $.Field({Static:false, Public:false}, "TransactionScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TransactionScope$IsolationLevel$value", $asm27.TypeRef("System.Transactions.IsolationLevel"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "AbortInstanceOnTransactionFailure", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "IsolationLevel", $asm27.TypeRef("System.Transactions.IsolationLevel"));

    $.Property({Static:false, Public:true }, "Timeout", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.TimeSpan")]));

    $.Property({Static:false, Public:false}, "NestedScopeTimeoutWorkflow", $asm0B.TypeRef("System.Activities.Statements.Delay"));

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.TransactionScope+ObtainType */ 

(function ObtainType$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };





  function ObtainType_get_Input () {
    return this.ObtainType$Input$value;
  }; 

  function ObtainType_set_Input (value) {
    this.ObtainType$Input$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Type")]), 
      Name: "System.Activities.Statements.TransactionScope+ObtainType", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Type"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Input", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      ObtainType_get_Input
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Input", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      ObtainType_set_Input
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObtainType$Input$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Input", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TransactionScope+IsolationLevelValue */ 

(function IsolationLevelValue$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.TransactionScope))) ();
  };





  function IsolationLevelValue_get_Scope () {
    return this.IsolationLevelValue$Scope$value;
  }; 

  function IsolationLevelValue_set_Scope (value) {
    this.IsolationLevelValue$Scope$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm27.TypeRef("System.Transactions.IsolationLevel")]), 
      Name: "System.Activities.Statements.TransactionScope+IsolationLevelValue", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm27.TypeRef("System.Transactions.IsolationLevel"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Scope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")])), 
      IsolationLevelValue_get_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Scope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")])), 
      IsolationLevelValue_set_Scope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IsolationLevelValue$Scope$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Scope", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TransactionScope+IsolationLevelValidator */ 

(function IsolationLevelValidator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm27.System.Transactions.IsolationLevel))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };





  function IsolationLevelValidator_get_CurrentIsolationLevel () {
    return this.IsolationLevelValidator$CurrentIsolationLevel$value;
  }; 

  function IsolationLevelValidator_get_ParentActivity () {
    return this.IsolationLevelValidator$ParentActivity$value;
  }; 

  function IsolationLevelValidator_set_CurrentIsolationLevel (value) {
    this.IsolationLevelValidator$CurrentIsolationLevel$value = value;
  }; 

  function IsolationLevelValidator_set_ParentActivity (value) {
    this.IsolationLevelValidator$ParentActivity$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.TransactionScope+IsolationLevelValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_CurrentIsolationLevel", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm27.TypeRef("System.Transactions.IsolationLevel")])), 
      IsolationLevelValidator_get_CurrentIsolationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ParentActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      IsolationLevelValidator_get_ParentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CurrentIsolationLevel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm27.TypeRef("System.Transactions.IsolationLevel")])), 
      IsolationLevelValidator_set_CurrentIsolationLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      IsolationLevelValidator_set_ParentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IsolationLevelValidator$ParentActivity$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IsolationLevelValidator$CurrentIsolationLevel$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm27.TypeRef("System.Transactions.IsolationLevel")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ParentActivity", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:true }, "CurrentIsolationLevel", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm27.TypeRef("System.Transactions.IsolationLevel")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TransactionScope+AbortInstanceFlagValidator */ 

(function AbortInstanceFlagValidator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Activity))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.TransactionScope))) ();
  };





  function AbortInstanceFlagValidator_get_ParentActivity () {
    return this.AbortInstanceFlagValidator$ParentActivity$value;
  }; 

  function AbortInstanceFlagValidator_get_TransactionScope () {
    return this.AbortInstanceFlagValidator$TransactionScope$value;
  }; 

  function AbortInstanceFlagValidator_set_ParentActivity (value) {
    this.AbortInstanceFlagValidator$ParentActivity$value = value;
  }; 

  function AbortInstanceFlagValidator_set_TransactionScope (value) {
    this.AbortInstanceFlagValidator$TransactionScope$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.TransactionScope+AbortInstanceFlagValidator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_ParentActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      AbortInstanceFlagValidator_get_ParentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TransactionScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")])), 
      AbortInstanceFlagValidator_get_TransactionScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")])), 
      AbortInstanceFlagValidator_set_ParentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TransactionScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")])), 
      AbortInstanceFlagValidator_set_TransactionScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AbortInstanceFlagValidator$ParentActivity$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AbortInstanceFlagValidator$TransactionScope$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ParentActivity", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:true }, "TransactionScope", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.TransactionScope")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.While */ 

(function While$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };







  function While_get_Body () {
    return this.While$Body$value;
  }; 

  function While_get_Condition () {
    return this.While$Condition$value;
  }; 






  function While_set_Body (value) {
    this.While$Body$value = value;
  }; 

  function While_set_Condition (value) {
    this.While$Condition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.While", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      While_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      While_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBodyComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConditionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleCondition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      While_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      While_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "onBodyComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "onConditionComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "While$Condition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "While$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Variables"]; });

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Condition"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.While+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.While+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__7_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__7_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.WorkflowTerminatedException */ 

(function WorkflowTerminatedException$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.Statements.WorkflowTerminatedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.WriteLine */ 

(function WriteLine$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.IO.TextWriter))) ();
  };





  function WriteLine_get_Text () {
    return this.WriteLine$Text$value;
  }; 

  function WriteLine_get_TextWriter () {
    return this.WriteLine$TextWriter$value;
  }; 

  function WriteLine_set_Text (value) {
    this.WriteLine$Text$value = value;
  }; 

  function WriteLine_set_TextWriter (value) {
    this.WriteLine$TextWriter$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.WriteLine", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      WriteLine_get_Text
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TextWriter", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.IO.TextWriter")])), 
      WriteLine_get_TextWriter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      WriteLine_set_Text
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TextWriter", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.IO.TextWriter")])), 
      WriteLine_set_TextWriter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WriteLine$TextWriter$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.IO.TextWriter")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WriteLine$Text$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "TextWriter", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.IO.TextWriter")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Text", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Text"]; });

})();

/* class System.Activities.Statements.FlowNode */ 

(function FlowNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };




  function FlowNode_get_Index () {
    return this.FlowNode$Index$value;
  }; 







  function FlowNode_set_Index (value) {
    this.FlowNode$Index$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.FlowNode", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ChildActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:false}, "get_Index", 
      JSIL.MethodSignature.Return($.Int32), 
      FlowNode_get_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsOpen", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.Flowchart"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetChildActivities", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetConnectedNodes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnOpen", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.Flowchart"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Open", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Statements.Flowchart"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.Method({Static:false, Public:false}, "set_Index", 
      JSIL.MethodSignature.Action($.Int32), 
      FlowNode_set_Index
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.Statements.Flowchart"));

    $.Field({Static:false, Public:false}, "cacheId", $.Int32);

    $.Field({Static:false, Public:false}, "FlowNode$Index$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "ChildActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "Index", $.Int32);

    $.Property({Static:false, Public:false}, "IsOpen", $.Boolean);

    $.Property({Static:false, Public:false}, "Owner", $asm0B.TypeRef("System.Activities.Statements.Flowchart"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.FlowDecision */ 

(function FlowDecision$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Statements.FlowNode)) ();
  };







  function FlowDecision_get_Condition () {
    return this.FlowDecision$Condition$value;
  }; 


  function FlowDecision_get_False () {
    return this.FlowDecision$False$value;
  }; 

  function FlowDecision_get_True () {
    return this.FlowDecision$True$value;
  }; 



  function FlowDecision_set_Condition (value) {
    this.FlowDecision$Condition$value = value;
  }; 


  function FlowDecision_set_False (value) {
    this.FlowDecision$False$value = value;
  }; 

  function FlowDecision_set_True (value) {
    this.FlowDecision$True$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.FlowNode"), 
      Name: "System.Activities.Statements.FlowDecision", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Linq.Expressions.Expression`1", [$asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityContext"), $.Boolean])]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ChildActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      FlowDecision_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_False", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowDecision_get_False
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_True", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowDecision_get_True
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetConnectedNodes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnOpen", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.Flowchart"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      FlowDecision_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_False", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowDecision_set_False
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_True", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowDecision_set_True
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Constant({Static:true , Public:false}, "DefaultDisplayName", $.String, "Decision");

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "FlowDecision$Condition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FlowDecision$True$value", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FlowDecision$False$value", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "True", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Condition"]; });

    $.Property({Static:false, Public:true }, "False", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["True"]; });

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return ["Decision"]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ChildActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.FlowStep */ 

(function FlowStep$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Statements.FlowNode)) ();
  };




  function FlowStep_get_Action () {
    return this.FlowStep$Action$value;
  }; 


  function FlowStep_get_Next () {
    return this.FlowStep$Next$value;
  }; 



  function FlowStep_set_Action (value) {
    this.FlowStep$Action$value = value;
  }; 

  function FlowStep_set_Next (value) {
    this.FlowStep$Next$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.FlowNode"), 
      Name: "System.Activities.Statements.FlowStep", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Execute", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")])
        ])
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      FlowStep_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ChildActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowStep_get_Next
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetConnectedNodes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnOpen", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.Flowchart"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      FlowStep_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowStep_set_Next
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FlowStep$Action$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FlowStep$Next$value", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Next", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Action"]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ChildActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Action"]; });

})();

/* class System.Activities.Statements.FlowSwitch`1 */ 

(function FlowSwitch$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Statements.FlowNode)) ();
  };





  function FlowSwitch$b1_get_Default () {
    return this.FlowSwitch$b1$Default$value;
  }; 


  function FlowSwitch$b1_get_Expression () {
    return this.FlowSwitch$b1$Expression$value;
  }; 




  function FlowSwitch$b1_set_Default (value) {
    this.FlowSwitch$b1$Default$value = value;
  }; 


  function FlowSwitch$b1_set_Expression (value) {
    this.FlowSwitch$b1$Expression$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.FlowNode"), 
      Name: "System.Activities.Statements.FlowSwitch`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Cases", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Statements.FlowNode")]), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ChildActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowSwitch$b1_get_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_Expression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]), null), 
      FlowSwitch$b1_get_Expression
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetConnectedNodes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Statements.FlowNode")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSwitchCompletedCallback", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.GenericParameter("T")]), [$asm0B.TypeRef("System.Activities.Statements.Flowchart")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnOpen", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.Flowchart"), $asm0B.TypeRef("System.Activities.NativeActivityMetadata")])
    );

    $.Method({Static:false, Public:true }, "set_Default", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.FlowNode")), 
      FlowSwitch$b1_set_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_Expression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")])]), 
      FlowSwitch$b1_set_Expression
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Statements.IFlowSwitch.Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.Flowchart")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Statements.IFlowSwitch"), "Execute");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Statements.IFlowSwitch.GetNextNode", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.FlowNode"), [$.Object])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Statements.IFlowSwitch"), "GetNextNode");

    $.Constant({Static:true , Public:false}, "DefaultDisplayName", $.String, "Switch");

    $.Field({Static:false, Public:false}, "cases", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Statements.FlowNode")]));

    $.Field({Static:false, Public:false}, "onSwitchCompleted", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "FlowSwitch$b1$Expression$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FlowSwitch$b1$Default$value", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Expression", $asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.Statements.FlowNode"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Cases", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Statements.FlowNode")]));

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return ["Switch"]; });

    $.Property({Static:false, Public:false, Virtual:true }, "ChildActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Statements.IFlowSwitch")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Cases"]; });

})();

/* class System.Activities.Statements.TimerExtension */ 

(function TimerExtension$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TimerExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelTimer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCancelTimer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRegisterTimer", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterTimer", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DurableTimerExtension */ 

(function DurableTimerExtension$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Statements.TimerExtension"), 
      Name: "System.Activities.Statements.DurableTimerExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OnTimerFiredCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RegisteredTimers", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TimerTable"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAdditionalExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.Statements.DurableTimerExtension_$lGetAdditionalExtensions$gd__16.__Type__]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCancelTimer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRegisterTimer", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnResumeBookmarkComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSave", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTimerFired", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "PersistenceDone", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessBookmarkResumptionResult", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkResumptionResult")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Runtime.ICancelable.Cancel", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm35.TypeRef("System.Runtime.ICancelable"), "Cancel");

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"));

    $.Field({Static:false, Public:false}, "registeredTimers", $asm0B.TypeRef("System.Activities.Statements.TimerTable"));

    $.Field({Static:false, Public:false}, "onTimerFiredCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:false, Public:false}, "timerPersistenceParticipant", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension+TimerPersistenceParticipant"));

    $.Field({Static:true , Public:false}, "onResumeBookmarkComplete", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "timerTableName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "timerExpirationTimeName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);

    $.Property({Static:false, Public:false}, "OnTimerFiredCallback", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Property({Static:false, Public:false}, "RegisteredTimers", $asm0B.TypeRef("System.Activities.Statements.TimerTable"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension"), 
      /* 1 */ $asm07.TypeRef("System.IDisposable"), 
      /* 2 */ $asm35.TypeRef("System.Runtime.ICancelable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DurableTimerExtension+BookmarkResumptionState */ 

(function BookmarkResumptionState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Hosting.WorkflowInstanceProxy)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Bookmark)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Statements.DurableTimerExtension)) ();
  };



  function BookmarkResumptionState_get_Instance () {
    return this.BookmarkResumptionState$Instance$value;
  }; 

  function BookmarkResumptionState_get_TimerBookmark () {
    return this.BookmarkResumptionState$TimerBookmark$value;
  }; 

  function BookmarkResumptionState_get_TimerExtension () {
    return this.BookmarkResumptionState$TimerExtension$value;
  }; 

  function BookmarkResumptionState_set_Instance (value) {
    this.BookmarkResumptionState$Instance$value = value;
  }; 

  function BookmarkResumptionState_set_TimerBookmark (value) {
    this.BookmarkResumptionState$TimerBookmark$value = value;
  }; 

  function BookmarkResumptionState_set_TimerExtension (value) {
    this.BookmarkResumptionState$TimerExtension$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.DurableTimerExtension+BookmarkResumptionState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"), 
          $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")
        ])
    );

    $.Method({Static:false, Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")), 
      BookmarkResumptionState_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TimerBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      BookmarkResumptionState_get_TimerBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TimerExtension", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension")), 
      BookmarkResumptionState_get_TimerExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")), 
      BookmarkResumptionState_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TimerBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      BookmarkResumptionState_set_TimerBookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TimerExtension", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension")), 
      BookmarkResumptionState_set_TimerExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BookmarkResumptionState$TimerBookmark$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BookmarkResumptionState$TimerExtension$value", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BookmarkResumptionState$Instance$value", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "TimerBookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:true }, "TimerExtension", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"));

    $.Property({Static:false, Public:true }, "Instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Persistence.PersistenceIOParticipant */ 

(function PersistenceIOParticipant$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Persistence.PersistenceParticipant"), 
      Name: "System.Activities.Persistence.PersistenceIOParticipant", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Boolean, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginOnLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginOnSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndOnLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndOnSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalAbort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalBeginOnLoad", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalBeginOnSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalEndOnLoad", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InternalEndOnSave", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DurableTimerExtension+TimerPersistenceParticipant */ 

(function TimerPersistenceParticipant$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Persistence.PersistenceIOParticipant"), 
      Name: "System.Activities.Statements.DurableTimerExtension+TimerPersistenceParticipant", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginOnSave", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CollectValues", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "PublishValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.Field({Static:false, Public:false}, "defaultTimerExtension", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.DurableTimerExtension+<GetAdditionalExtensions>d__16 */ 

(function $lGetAdditionalExtensions$gd__16$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.DurableTimerExtension+<GetAdditionalExtensions>d__16", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.TimerTable */ 

(function TimerTable$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TimerTable", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddTimer", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.TimeSpan"), $asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSortedTimerList", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TimerTable+SortedTimerList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetNextDueTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkAsImmutable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkAsMutable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "OnLoad", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveTimer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RetryTimer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSortedTimerList", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.TimerTable+SortedTimerList"))
    );

    $.Field({Static:false, Public:false}, "sortedTimerList", $asm0B.TypeRef("System.Activities.Statements.TimerTable+SortedTimerList"));

    $.Field({Static:false, Public:false}, "isImmutable", $.Boolean);

    $.Field({Static:false, Public:false}, "timerExtension", $asm0B.TypeRef("System.Activities.Statements.DurableTimerExtension"));

    $.Field({Static:false, Public:false}, "pendingRemoveBookmark", $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "pendingRetryBookmark", $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedSortedTimerList", $asm0B.TypeRef("System.Activities.Statements.TimerTable+SortedTimerList"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.TimerTable+TimerData */ 

(function TimerData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm25.System.Runtime.IOThreadTimer)) ();
  };





  function TimerData_get_IOThreadTimer () {
    return this.TimerData$IOThreadTimer$value;
  }; 





  function TimerData_set_IOThreadTimer (value) {
    this.TimerData$IOThreadTimer$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TimerTable+TimerData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm07.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExpirationTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.Method({Static:false, Public:true }, "get_IOThreadTimer", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.IOThreadTimer")), 
      TimerData_get_IOThreadTimer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExpirationTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Bookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ExpirationTime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.Method({Static:false, Public:true }, "set_IOThreadTimer", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.IOThreadTimer")), 
      TimerData_set_IOThreadTimer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExpirationTime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "expirationTime", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "TimerData$IOThreadTimer$value", $asm25.TypeRef("System.Runtime.IOThreadTimer"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:true }, "ExpirationTime", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "IOThreadTimer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));

    $.Property({Static:false, Public:false}, "SerializedBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExpirationTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.TimerTable+SortedTimerList */ 

(function SortedTimerList$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TimerTable+SortedTimerList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDictionary", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedList", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Timers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnLoad", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDictionary", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedList", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")])])
    );

    $.Field({Static:false, Public:false}, "list", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]));

    $.Field({Static:false, Public:false}, "dictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]));

    $.Property({Static:false, Public:true }, "Timers", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedList", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.TimerTable+TimerComparer */ 

(function TimerComparer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TimerTable+TimerComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData"), $asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "Instance", $.Type);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IComparer`1", [$asm0B.TypeRef("System.Activities.Statements.TimerTable+TimerData")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.AddToCollection`1 */ 

(function AddToCollection$b1$Members () {
  var $, $thisType;




  function AddToCollection$b1_get_Collection () {
    return this.AddToCollection$b1$Collection$value;
  }; 

  function AddToCollection$b1_get_Item () {
    return this.AddToCollection$b1$Item$value;
  }; 

  function AddToCollection$b1_set_Collection (value) {
    this.AddToCollection$b1$Collection$value = value;
  }; 

  function AddToCollection$b1_set_Item (value) {
    this.AddToCollection$b1$Item$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.AddToCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Collection", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]), null), 
      AddToCollection$b1_get_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      AddToCollection$b1_get_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Collection", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])])]), 
      AddToCollection$b1_set_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      AddToCollection$b1_set_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AddToCollection$b1$Collection$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AddToCollection$b1$Item$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Collection", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Collection"]; });

})();

/* class System.Activities.Statements.ClearCollection`1 */ 

(function ClearCollection$b1$Members () {
  var $, $thisType;




  function ClearCollection$b1_get_Collection () {
    return this.ClearCollection$b1$Collection$value;
  }; 

  function ClearCollection$b1_set_Collection (value) {
    this.ClearCollection$b1$Collection$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.ClearCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Collection", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]), null), 
      ClearCollection$b1_get_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Collection", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])])]), 
      ClearCollection$b1_set_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ClearCollection$b1$Collection$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Collection", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Collection"]; });

})();

/* class System.Activities.Statements.ExistsInCollection`1 */ 

(function ExistsInCollection$b1$Members () {
  var $, $thisType;




  function ExistsInCollection$b1_get_Collection () {
    return this.ExistsInCollection$b1$Collection$value;
  }; 

  function ExistsInCollection$b1_get_Item () {
    return this.ExistsInCollection$b1$Item$value;
  }; 

  function ExistsInCollection$b1_set_Collection (value) {
    this.ExistsInCollection$b1$Collection$value = value;
  }; 

  function ExistsInCollection$b1_set_Item (value) {
    this.ExistsInCollection$b1$Item$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.ExistsInCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Collection", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]), null), 
      ExistsInCollection$b1_get_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      ExistsInCollection$b1_get_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Collection", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])])]), 
      ExistsInCollection$b1_set_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      ExistsInCollection$b1_set_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExistsInCollection$b1$Collection$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExistsInCollection$b1$Item$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Collection", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Collection"]; });

})();

/* class System.Activities.Statements.RemoveFromCollection`1 */ 

(function RemoveFromCollection$b1$Members () {
  var $, $thisType;




  function RemoveFromCollection$b1_get_Collection () {
    return this.RemoveFromCollection$b1$Collection$value;
  }; 

  function RemoveFromCollection$b1_get_Item () {
    return this.RemoveFromCollection$b1$Item$value;
  }; 

  function RemoveFromCollection$b1_set_Collection (value) {
    this.RemoveFromCollection$b1$Collection$value = value;
  }; 

  function RemoveFromCollection$b1_set_Item (value) {
    this.RemoveFromCollection$b1$Item$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.RemoveFromCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_Collection", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]), null), 
      RemoveFromCollection$b1_get_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), null), 
      RemoveFromCollection$b1_get_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Collection", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])])]), 
      RemoveFromCollection$b1_set_Collection
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")])]), 
      RemoveFromCollection$b1_set_Item
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RemoveFromCollection$b1$Collection$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RemoveFromCollection$b1$Item$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Collection", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.GenericParameter("T")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Item", $asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Collection"]; });

})();

/* class System.Activities.Statements.InternalState */ 

(function InternalState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.StateMachineEventManager))) ();
  };











  function InternalState_get_EventManager () {
    return this.InternalState$EventManager$value;
  }; 

























  function InternalState_set_EventManager (value) {
    this.InternalState$EventManager$value = value;
  }; 







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity`1", [$asm07.TypeRef("System.String")]), 
      Name: "System.Activities.Statements.InternalState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Abort", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityAbortContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddEvaluateConditionBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AddTransitionData", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.InternalTransition"), 
          $asm0B.TypeRef("System.Activities.Statements.Transition")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_CanInduceIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Entry", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_EventManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")])), 
      InternalState_get_EventManager
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Exit", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFinal", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateMachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transitions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCondition", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]), [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInternalTransition", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.InternalTransition"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTo", 
      new JSIL.MethodSignature($.String, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnConditionComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEntryComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExitComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTriggerComplete", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareForExit", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessNextTriggerCompletedEvent", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessTransitions", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveActiveBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveBookmarks", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RescheduleNewlyAddedTriggers", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleAction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleEntry", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleExit", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleTriggers", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "set_EventManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")])), 
      InternalState_set_EventManager
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "StartEvaluateCondition", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TakeTransition", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateEventManager", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"), $asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UpdateInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateDUInConditionTransition", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Statements.InternalTransition"), 
          $asm0B.TypeRef("System.Activities.Statements.InternalTransition"), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateDUInUnconditionalTransition", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Statements.InternalTransition"), 
          $asm0B.TypeRef("System.Activities.Statements.InternalTransition"), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.Field({Static:false, Public:false}, "state", $asm0B.TypeRef("System.Activities.Statements.State"));

    $.Field({Static:false, Public:false}, "internalTransitions", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.InternalTransition")]));

    $.Field({Static:false, Public:false}, "currentRunningTriggers", $asm0B.TypeRef("System.Activities.Variable`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "isExiting", $asm0B.TypeRef("System.Activities.Variable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "evaluateConditionBookmark", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "onEntryComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "onTriggerComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "onConditionComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "onExitComplete", $asm0B.TypeRef("System.Activities.CompletionCallback"));

    $.Field({Static:false, Public:false}, "evaluateConditionCallback", $asm0B.TypeRef("System.Activities.BookmarkCallback"));

    $.Field({Static:false, Public:false}, "triggerInternalTransitionMapping", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Statements.InternalTransition")]));

    $.Field({Static:false, Public:false}, "InternalState$EventManager$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "EventManager", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "Entry", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Exit", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "IsFinal", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "StateId", $.String);

    $.Property({Static:false, Public:true }, "Transitions", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Property({Static:false, Public:true }, "StateMachineName", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "CanInduceIdle", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.InternalTransition */ 

(function InternalTransition$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };



  function InternalTransition_get_InternalTransitionIndex () {
    return this.InternalTransition$InternalTransitionIndex$value;
  }; 



  function InternalTransition_get_Trigger () {
    return this.InternalTransition$Trigger$value;
  }; 

  function InternalTransition_set_InternalTransitionIndex (value) {
    this.InternalTransition$InternalTransitionIndex$value = (value | 0);
  }; 

  function InternalTransition_set_Trigger (value) {
    this.InternalTransition$Trigger$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.InternalTransition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_InternalTransitionIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      InternalTransition_get_InternalTransitionIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsUnconditional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransitionDataList", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.TransitionData")]))
    );

    $.Method({Static:false, Public:true }, "get_Trigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      InternalTransition_get_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InternalTransitionIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      InternalTransition_set_InternalTransitionIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Trigger", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      InternalTransition_set_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "transitionDataList", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.TransitionData")]));

    $.Field({Static:false, Public:false}, "InternalTransition$InternalTransitionIndex$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InternalTransition$Trigger$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InternalTransitionIndex", $.Int32);

    $.Property({Static:false, Public:true }, "IsUnconditional", $.Boolean);

    $.Property({Static:false, Public:true }, "TransitionDataList", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.TransitionData")]));

    $.Property({Static:false, Public:true }, "Trigger", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.State */ 

(function State$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.UInt32)) ();
  };




  function State_get_DisplayName () {
    return this.State$DisplayName$value;
  }; 

  function State_get_Entry () {
    return this.State$Entry$value;
  }; 

  function State_get_Exit () {
    return this.State$Exit$value;
  }; 


  function State_get_IsFinal () {
    return this.State$IsFinal$value;
  }; 


  function State_get_PassNumber () {
    return this.State$PassNumber$value;
  }; 

  function State_get_Reachable () {
    return this.State$Reachable$value;
  }; 

  function State_get_StateId () {
    return this.State$StateId$value;
  }; 

  function State_get_StateMachineName () {
    return this.State$StateMachineName$value;
  }; 



  function State_set_DisplayName (value) {
    this.State$DisplayName$value = value;
  }; 

  function State_set_Entry (value) {
    this.State$Entry$value = value;
  }; 

  function State_set_Exit (value) {
    this.State$Exit$value = value;
  }; 

  function State_set_IsFinal (value) {
    this.State$IsFinal$value = value;
  }; 

  function State_set_PassNumber (value) {
    this.State$PassNumber$value = (value >>> 0);
  }; 

  function State_set_Reachable (value) {
    this.State$Reachable$value = value;
  }; 

  function State_set_StateId (value) {
    this.State$StateId$value = value;
  }; 

  function State_set_StateMachineName (value) {
    this.State$StateMachineName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.State", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearInternalState", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      State_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Entry", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      State_get_Entry
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Exit", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      State_get_Exit
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_InternalState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.InternalState"))
    );

    $.Method({Static:false, Public:true }, "get_IsFinal", 
      JSIL.MethodSignature.Return($.Boolean), 
      State_get_IsFinal
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_NullTrigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.State+NoOp"))
    );

    $.Method({Static:false, Public:false}, "get_PassNumber", 
      JSIL.MethodSignature.Return($.UInt32), 
      State_get_PassNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Reachable", 
      JSIL.MethodSignature.Return($.Boolean), 
      State_get_Reachable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_StateId", 
      JSIL.MethodSignature.Return($.String), 
      State_get_StateId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_StateMachineName", 
      JSIL.MethodSignature.Return($.String), 
      State_get_StateMachineName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Transitions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.Method({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      State_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Entry", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      State_set_Entry
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Exit", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      State_set_Exit
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsFinal", 
      JSIL.MethodSignature.Action($.Boolean), 
      State_set_IsFinal
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PassNumber", 
      JSIL.MethodSignature.Action($.UInt32), 
      State_set_PassNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Reachable", 
      JSIL.MethodSignature.Action($.Boolean), 
      State_set_Reachable
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StateId", 
      JSIL.MethodSignature.Action($.String), 
      State_set_StateId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StateMachineName", 
      JSIL.MethodSignature.Action($.String), 
      State_set_StateMachineName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "internalState", $asm0B.TypeRef("System.Activities.Statements.InternalState"));

    $.Field({Static:false, Public:false}, "transitions", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]));

    $.Field({Static:false, Public:false}, "nullTrigger", $asm0B.TypeRef("System.Activities.Statements.State+NoOp"));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "State$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$Entry$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$Exit$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$IsFinal$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$PassNumber$value", $.UInt32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$Reachable$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$StateId$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "State$StateMachineName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true }, "Entry", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Exit", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Entry"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Transitions", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Exit"]; });

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Transitions"]; });

    $.Property({Static:false, Public:true }, "IsFinal", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:false}, "InternalState", $asm0B.TypeRef("System.Activities.Statements.InternalState"));

    $.Property({Static:false, Public:false}, "PassNumber", $.UInt32);

    $.Property({Static:false, Public:false}, "Reachable", $.Boolean);

    $.Property({Static:false, Public:false}, "StateId", $.String);

    $.Property({Static:false, Public:false}, "StateMachineName", $.String);

    $.Property({Static:false, Public:false}, "NullTrigger", $asm0B.TypeRef("System.Activities.Statements.State+NoOp"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.State+NoOp */ 

(function NoOp$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity"), 
      Name: "System.Activities.Statements.State+NoOp", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.State+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.State+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Transitions$gb__17_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.Transition"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__19_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__17_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")]));

    $.Field({Static:true , Public:true }, "$l$g9__19_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.StateMachine */ 

(function StateMachine$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Statements.State)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.UInt32)) ();
  };









  function StateMachine_get_InitialState () {
    return this.StateMachine$InitialState$value;
  }; 

  function StateMachine_get_PassNumber () {
    return this.StateMachine$PassNumber$value;
  }; 










  function StateMachine_set_InitialState (value) {
    this.StateMachine$InitialState$value = value;
  }; 

  function StateMachine_set_PassNumber (value) {
    this.StateMachine$PassNumber$value = (value >>> 0);
  }; 







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.StateMachine", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ClearState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ClearStates", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ClearTransition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.Transition"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ClearTransitions", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_InitialState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.State")), 
      StateMachine_get_InitialState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_PassNumber", 
      JSIL.MethodSignature.Return($.UInt32), 
      StateMachine_get_PassNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_States", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetStateMachineExtension", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.StateMachineExtension"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkStatesViaChildren", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "MarkStateViaTransition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MarkTransitionsInState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStateComplete", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessStates", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "set_InitialState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State")), 
      StateMachine_set_InitialState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PassNumber", 
      JSIL.MethodSignature.Action($.UInt32), 
      StateMachine_set_PassNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "TraverseStates", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")])]), $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")]), 
          $asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TraverseViaTransitions", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.State")]), $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.Transition")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateState", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateStateMachine", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateStates", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateTransitions", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")])
    );

    $.Constant({Static:true , Public:false}, "RootId", $.String, "0");

    $.Constant({Static:true , Public:false}, "ExitProperty", $.String, "Exit");

    $.Field({Static:true , Public:false}, "getDefaultExtension", $asm07.TypeRef("System.Func`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineExtension")]), function ($pi) {
        return $asm07.System.Func$b1.Of($asm0B.System.Activities.Statements.StateMachineExtension).New(null, null, new JSIL.MethodPointerInfo($thisType, "GetStateMachineExtension", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.StateMachineExtension")), true, false));
      });

    $.Field({Static:false, Public:false}, "states", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:false, Public:false}, "internalStates", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.InternalState")]));

    $.Field({Static:false, Public:false}, "internalStateFuncs", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.ActivityFunc`2", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager"), $.String])]));

    $.Field({Static:false, Public:false}, "onStateComplete", $asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.String]));

    $.Field({Static:false, Public:false}, "eventManager", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")]));

    $.Field({Static:false, Public:false}, "StateMachine$InitialState$value", $asm0B.TypeRef("System.Activities.Statements.State"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StateMachine$PassNumber$value", $.UInt32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InitialState", $asm0B.TypeRef("System.Activities.Statements.State"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "States", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["InitialState"]; });

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Variable")]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["States"]; });

    $.Property({Static:false, Public:false}, "PassNumber", $.UInt32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["States"]; });

})();

/* class System.Activities.Statements.StateMachine+StateMachineEventManagerFactory */ 

(function StateMachineEventManagerFactory$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager")]), 
      Name: "System.Activities.Statements.StateMachine+StateMachineEventManagerFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Statements.StateMachineEventManager"), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.StateMachine+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.StateMachine+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__22_0", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__22_1", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__22_2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__22_3", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__22_5", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_States$gb__15_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lget_Variables$gb__17_0", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Variable"))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__15_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.State")]));

    $.Field({Static:true , Public:true }, "$l$g9__17_0", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Variable")]));

    $.Field({Static:true , Public:true }, "$l$g9__22_0", $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Statements.State")])]));

    $.Field({Static:true , Public:true }, "$l$g9__22_1", $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")]));

    $.Field({Static:true , Public:true }, "$l$g9__22_2", $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")]));

    $.Field({Static:true , Public:true }, "$l$g9__22_3", $asm07.TypeRef("System.Action`1", [$asm0B.TypeRef("System.Activities.Statements.State")]));

    $.Field({Static:true , Public:true }, "$l$g9__22_5", $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityMetadata"), $asm0B.TypeRef("System.Activities.Statements.State")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.StateMachine+<>c__DisplayClass22_0 */ 

(function $l$gc__DisplayClass22_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.StateMachine+<>c__DisplayClass22_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCacheMetadata$gb__4", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State"))
    );

    $.Field({Static:false, Public:true }, "metadata", $asm0B.TypeRef("System.Activities.NativeActivityMetadata"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Statements.StateMachineEventManager */ 

(function StateMachineEventManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Statements.TriggerCompletedEvent)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };





  function StateMachineEventManager_get_CurrentBeingProcessedEvent () {
    return this.StateMachineEventManager$CurrentBeingProcessedEvent$value;
  }; 

  function StateMachineEventManager_get_CurrentConditionIndex () {
    return this.StateMachineEventManager$CurrentConditionIndex$value;
  }; 

  function StateMachineEventManager_get_OnTransition () {
    return this.StateMachineEventManager$OnTransition$value;
  }; 








  function StateMachineEventManager_set_CurrentBeingProcessedEvent (value) {
    this.StateMachineEventManager$CurrentBeingProcessedEvent$value = value;
  }; 

  function StateMachineEventManager_set_CurrentConditionIndex (value) {
    this.StateMachineEventManager$CurrentConditionIndex$value = (value | 0);
  }; 

  function StateMachineEventManager_set_OnTransition (value) {
    this.StateMachineEventManager$OnTransition$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.StateMachineEventManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddActiveBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CanProcessEventImmediately", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CurrentBeingProcessedEvent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")), 
      StateMachineEventManager_get_CurrentBeingProcessedEvent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CurrentConditionIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      StateMachineEventManager_get_CurrentConditionIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OnTransition", 
      JSIL.MethodSignature.Return($.Boolean), 
      StateMachineEventManager_get_OnTransition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Queue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActiveBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedQueue", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetNextCompletedEvent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent"))
    );

    $.ExternalMethod({Static:false, Public:true }, "IsReferredByBeingProcessedEvent", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterCompletedEvent", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveActiveBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.Method({Static:false, Public:true }, "set_CurrentBeingProcessedEvent", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")), 
      StateMachineEventManager_set_CurrentBeingProcessedEvent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CurrentConditionIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      StateMachineEventManager_set_CurrentConditionIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OnTransition", 
      JSIL.MethodSignature.Action($.Boolean), 
      StateMachineEventManager_set_OnTransition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActiveBookmarks", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedQueue", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]))
    );

    $.Constant({Static:true , Public:false}, "MaxQueueLength", $.Int32, 33554432);

    $.Field({Static:false, Public:false}, "queue", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]));

    $.Field({Static:false, Public:false}, "activeBookmarks", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]));

    $.Field({Static:false, Public:false}, "StateMachineEventManager$CurrentBeingProcessedEvent$value", $asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StateMachineEventManager$CurrentConditionIndex$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StateMachineEventManager$OnTransition$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CurrentBeingProcessedEvent", $asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "CurrentConditionIndex", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "OnTransition", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "Queue", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]));

    $.Property({Static:false, Public:false}, "CanProcessEventImmediately", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedQueue", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Statements.TriggerCompletedEvent")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedActiveBookmarks", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.StateMachineExtension */ 

(function StateMachineExtension$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.StateMachineExtension", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAdditionalExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnResumeBookmarkCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ResumeBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"))
    );

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.StateMachineIdHelper */ 

(function StateMachineIdHelper$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Activities.Statements.StateMachineIdHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GenerateStateId", 
      new JSIL.MethodSignature($.String, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "GenerateTransitionId", 
      new JSIL.MethodSignature($.String, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetChildStateIndex", 
      new JSIL.MethodSignature($.Int32, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAncestor", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.Constant({Static:true , Public:false}, "StateIdSeparator", $.Char, ":");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Transition */ 

(function Transition$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.Statements.State)) ();
  };



  function Transition_get_Action () {
    return this.Transition$Action$value;
  }; 


  function Transition_get_Condition () {
    return this.Transition$Condition$value;
  }; 

  function Transition_get_DisplayName () {
    return this.Transition$DisplayName$value;
  }; 

  function Transition_get_Id () {
    return this.Transition$Id$value;
  }; 

  function Transition_get_Source () {
    return this.Transition$Source$value;
  }; 

  function Transition_get_To () {
    return this.Transition$To$value;
  }; 

  function Transition_get_Trigger () {
    return this.Transition$Trigger$value;
  }; 

  function Transition_set_Action (value) {
    this.Transition$Action$value = value;
  }; 

  function Transition_set_Condition (value) {
    this.Transition$Condition$value = value;
  }; 

  function Transition_set_DisplayName (value) {
    this.Transition$DisplayName$value = value;
  }; 

  function Transition_set_Id (value) {
    this.Transition$Id$value = value;
  }; 

  function Transition_set_Source (value) {
    this.Transition$Source$value = value;
  }; 

  function Transition_set_To (value) {
    this.Transition$To$value = value;
  }; 

  function Transition_set_Trigger (value) {
    this.Transition$Trigger$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.Transition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      Transition_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ActiveTrigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      Transition_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      Transition_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.String), 
      Transition_get_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Source", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.State")), 
      Transition_get_Source
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_To", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.State")), 
      Transition_get_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Trigger", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      Transition_get_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      Transition_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      Transition_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      Transition_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.String), 
      Transition_set_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Source", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State")), 
      Transition_set_Source
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_To", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.State")), 
      Transition_set_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Trigger", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      Transition_set_Trigger
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$Action$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$Condition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$To$value", $asm0B.TypeRef("System.Activities.Statements.State"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$Trigger$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$Id$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Transition$Source$value", $asm0B.TypeRef("System.Activities.Statements.State"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["To"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Action"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:true }, "To", $asm0B.TypeRef("System.Activities.Statements.State"))
      .Attribute($asm2D.TypeRef("System.Windows.Markup.DependsOnAttribute"), function () { return ["Trigger"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Trigger", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:false}, "ActiveTrigger", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "Id", $.String);

    $.Property({Static:false, Public:false}, "Source", $asm0B.TypeRef("System.Activities.Statements.State"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TransitionData */ 

(function TransitionData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Activity$b1.Of($asm07.System.Boolean))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Statements.InternalState)) ();
  };



  function TransitionData_get_Action () {
    return this.TransitionData$Action$value;
  }; 

  function TransitionData_get_Condition () {
    return this.TransitionData$Condition$value;
  }; 

  function TransitionData_get_To () {
    return this.TransitionData$To$value;
  }; 

  function TransitionData_set_Action (value) {
    this.TransitionData$Action$value = value;
  }; 

  function TransitionData_set_Condition (value) {
    this.TransitionData$Condition$value = value;
  }; 

  function TransitionData_set_To (value) {
    this.TransitionData$To$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TransitionData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Action", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TransitionData_get_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Condition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      TransitionData_get_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_To", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Statements.InternalState")), 
      TransitionData_get_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Action", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TransitionData_set_Action
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Condition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean])), 
      TransitionData_set_Condition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_To", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Statements.InternalState")), 
      TransitionData_set_To
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TransitionData$Action$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TransitionData$Condition$value", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TransitionData$To$value", $asm0B.TypeRef("System.Activities.Statements.InternalState"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Action", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "Condition", $asm0B.TypeRef("System.Activities.Activity`1", [$.Boolean]));

    $.Property({Static:false, Public:true }, "To", $asm0B.TypeRef("System.Activities.Statements.InternalState"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.TriggerCompletedEvent */ 

(function TriggerCompletedEvent$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Bookmark)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function TriggerCompletedEvent_get_Bookmark () {
    return this.TriggerCompletedEvent$Bookmark$value;
  }; 

  function TriggerCompletedEvent_get_TriggedId () {
    return this.TriggerCompletedEvent$TriggedId$value;
  }; 

  function TriggerCompletedEvent_set_Bookmark (value) {
    this.TriggerCompletedEvent$Bookmark$value = value;
  }; 

  function TriggerCompletedEvent_set_TriggedId (value) {
    this.TriggerCompletedEvent$TriggedId$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Statements.TriggerCompletedEvent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Bookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      TriggerCompletedEvent_get_Bookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TriggedId", 
      JSIL.MethodSignature.Return($.Int32), 
      TriggerCompletedEvent_get_TriggedId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Bookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      TriggerCompletedEvent_set_Bookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TriggedId", 
      JSIL.MethodSignature.Action($.Int32), 
      TriggerCompletedEvent_set_TriggedId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TriggerCompletedEvent$Bookmark$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TriggerCompletedEvent$TriggedId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Bookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "TriggedId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.NoPersistScope */ 

(function NoPersistScope$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };





  function NoPersistScope_get_Body () {
    return this.NoPersistScope$Body$value;
  }; 



  function NoPersistScope_set_Body (value) {
    this.NoPersistScope$Body$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Statements.NoPersistScope", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      NoPersistScope_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_Constraint", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.ExternalMethod({Static:true , Public:false}, "NoPersistInScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.Constraint"))
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      NoPersistScope_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "constraint", $asm0B.TypeRef("System.Activities.Validation.Constraint"));

    $.Field({Static:false, Public:false}, "noPersistHandle", $asm0B.TypeRef("System.Activities.Variable`1", [$asm0B.TypeRef("System.Activities.NoPersistHandle")]));

    $.Field({Static:false, Public:false}, "NoPersistScope$Body$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:true , Public:false}, "Constraint", $asm0B.TypeRef("System.Activities.Validation.Constraint"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Statements.NoPersistScope+CheckNoPersistInDescendants */ 

(function CheckNoPersistInDescendants$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.OutArgument$b1.Of($asm07.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Collections.Generic.IEnumerable$b1.Of($asm0B.System.Activities.Activity)))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Statements.NoPersistScope))) ();
  };





  function CheckNoPersistInDescendants_get_ConstraintViolationMessage () {
    return this.CheckNoPersistInDescendants$ConstraintViolationMessage$value;
  }; 

  function CheckNoPersistInDescendants_get_DescendantActivities () {
    return this.CheckNoPersistInDescendants$DescendantActivities$value;
  }; 

  function CheckNoPersistInDescendants_get_NoPersistScope () {
    return this.CheckNoPersistInDescendants$NoPersistScope$value;
  }; 

  function CheckNoPersistInDescendants_set_ConstraintViolationMessage (value) {
    this.CheckNoPersistInDescendants$ConstraintViolationMessage$value = value;
  }; 

  function CheckNoPersistInDescendants_set_DescendantActivities (value) {
    this.CheckNoPersistInDescendants$DescendantActivities$value = value;
  }; 

  function CheckNoPersistInDescendants_set_NoPersistScope (value) {
    this.CheckNoPersistInDescendants$NoPersistScope$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Boolean")]), 
      Name: "System.Activities.Statements.NoPersistScope+CheckNoPersistInDescendants", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.CodeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_ConstraintViolationMessage", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.OutArgument`1", [$.String])), 
      CheckNoPersistInDescendants_get_ConstraintViolationMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DescendantActivities", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      CheckNoPersistInDescendants_get_DescendantActivities
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NoPersistScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.NoPersistScope")])), 
      CheckNoPersistInDescendants_get_NoPersistScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ConstraintViolationMessage", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.OutArgument`1", [$.String])), 
      CheckNoPersistInDescendants_set_ConstraintViolationMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DescendantActivities", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])), 
      CheckNoPersistInDescendants_set_DescendantActivities
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NoPersistScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.NoPersistScope")])), 
      CheckNoPersistInDescendants_set_NoPersistScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CheckNoPersistInDescendants$NoPersistScope$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.NoPersistScope")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CheckNoPersistInDescendants$DescendantActivities$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CheckNoPersistInDescendants$ConstraintViolationMessage$value", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "NoPersistScope", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Statements.NoPersistScope")]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "DescendantActivities", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));

    $.Property({Static:false, Public:true }, "ConstraintViolationMessage", $asm0B.TypeRef("System.Activities.OutArgument`1", [$.String]))
      .Attribute($asm0B.TypeRef("System.Activities.RequiredArgumentAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Statements.Tracking");
JSIL.DeclareNamespace("System.Activities.Tracking");
/* class System.Activities.Tracking.TrackingQuery */ 

(function TrackingQuery$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasAnnotations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_QueryAnnotations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.Field({Static:false, Public:false}, "queryAnnotations", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Property({Static:false, Public:true }, "QueryAnnotations", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Property({Static:false, Public:false}, "HasAnnotations", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.CustomTrackingQuery */ 

(function CustomTrackingQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function CustomTrackingQuery_get_ActivityName () {
    return this.CustomTrackingQuery$ActivityName$value;
  }; 

  function CustomTrackingQuery_get_Name () {
    return this.CustomTrackingQuery$Name$value;
  }; 

  function CustomTrackingQuery_set_ActivityName (value) {
    this.CustomTrackingQuery$ActivityName$value = value;
  }; 

  function CustomTrackingQuery_set_Name (value) {
    this.CustomTrackingQuery$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.CustomTrackingQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String), 
      CustomTrackingQuery_get_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      CustomTrackingQuery_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String), 
      CustomTrackingQuery_set_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      CustomTrackingQuery_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CustomTrackingQuery$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CustomTrackingQuery$ActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "ActivityName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Statements.Tracking.StateMachineStateQuery */ 

(function StateMachineStateQuery$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.CustomTrackingQuery"), 
      Name: "System.Activities.Statements.Tracking.StateMachineStateQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:true }, "Name", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingRecord */ 

(function TrackingRecord$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int64)) ();
  };










  function TrackingRecord_get_InstanceId () {
    return this.TrackingRecord$InstanceId$value;
  }; 



  function TrackingRecord_get_RecordNumber () {
    return this.TrackingRecord$RecordNumber$value;
  }; 






  function TrackingRecord_set_InstanceId (value) {
    this.TrackingRecord$InstanceId$value = value.MemberwiseClone();
  }; 


  function TrackingRecord_set_RecordNumber (value) {
    this.TrackingRecord$RecordNumber$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Guid"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Annotations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EventTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EventTraceActivity", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasAnnotations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      TrackingRecord_get_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Level", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Diagnostics.TraceLevel"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ReadOnlyEmptyAnnotations", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.String]))
    );

    $.Method({Static:false, Public:true }, "get_RecordNumber", 
      JSIL.MethodSignature.Return($.Int64), 
      TrackingRecord_get_RecordNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedAnnotations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedEventTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLevel", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Diagnostics.TraceLevel"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Annotations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_EventTime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.Method({Static:false, Public:false}, "set_InstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      TrackingRecord_set_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Level", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Diagnostics.TraceLevel"))
    );

    $.Method({Static:false, Public:false}, "set_RecordNumber", 
      JSIL.MethodSignature.Action($.Int64), 
      TrackingRecord_set_RecordNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedAnnotations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedEventTime", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLevel", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Diagnostics.TraceLevel"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "annotations", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Field({Static:false, Public:false}, "eventTime", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "level", $asm0A.TypeRef("System.Diagnostics.TraceLevel"));

    $.Field({Static:false, Public:false}, "eventTraceActivity", $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"));

    $.Field({Static:true , Public:false}, "readonlyEmptyAnnotations", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.String]));

    $.Field({Static:false, Public:false}, "TrackingRecord$InstanceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecord$RecordNumber$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "RecordNumber", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "EventTime", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "Level", $asm0A.TypeRef("System.Diagnostics.TraceLevel"));

    $.Property({Static:false, Public:true }, "Annotations", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Property({Static:false, Public:false}, "SerializedAnnotations", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedEventTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedLevel", $asm0A.TypeRef("System.Diagnostics.TraceLevel"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "EventTraceActivity", $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"));

    $.Property({Static:true , Public:false}, "ReadOnlyEmptyAnnotations", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$.String, $.String]));

    $.Property({Static:false, Public:false}, "HasAnnotations", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.CustomTrackingRecord */ 

(function CustomTrackingRecord$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.CustomTrackingRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Diagnostics.TraceLevel")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0A.TypeRef("System.Diagnostics.TraceLevel")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Data", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedData", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "data", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Data", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "SerializedData", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedActivity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Statements.Tracking.StateMachineStateRecord */ 

(function StateMachineStateRecord$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"), 
      Name: "System.Activities.Statements.Tracking.StateMachineStateRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Diagnostics.TraceLevel")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0A.TypeRef("System.Diagnostics.TraceLevel")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateMachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StateMachineName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_StateName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "StateMachineStateRecordName", $.String, "System.Activities.Statements.StateMachine");

    $.Constant({Static:true , Public:false}, "StateKey", $.String, "currentstate");

    $.Constant({Static:true , Public:false}, "StateMachineKey", $.String, "stateMachine");

    $.Property({Static:false, Public:true }, "StateMachineName", $.String);

    $.Property({Static:false, Public:true }, "StateName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

JSIL.DeclareNamespace("System.Activities.XamlIntegration");
/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter */ 

(function ActivityBuilderXamlWriter$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlWriter"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterDepth", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitDepth", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaContext", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlSchemaContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PushState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetActivityType", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlType"), $asm2D.TypeRef("System.Xaml.XamlType")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteGetObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "innerWriter", $asm2D.TypeRef("System.Xaml.XamlWriter"));

    $.Field({Static:false, Public:false}, "activityBuilderXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "activityXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "activityPropertyXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "xamlTypeXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "typeXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "activityPropertyReferenceXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "activityPropertyType", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityPropertyName", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityPropertyValue", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityBuilderName", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityBuilderAttributes", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityBuilderProperties", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityBuilderPropertyReference", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityBuilderPropertyReferences", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "notRewriting", $.Boolean);

    $.Field({Static:false, Public:false}, "currentDepth", $.Int32);

    $.Field({Static:false, Public:false}, "namespaceTable", $asm0B.TypeRef("System.Activities.XamlIntegration.NamespaceTable"));

    $.Field({Static:false, Public:false}, "currentState", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"));

    $.Field({Static:false, Public:false}, "pendingStates", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode")]));

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode */ 

(function BuilderXamlNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm2D.System.Xaml.XamlWriter)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.XamlIntegration.ActivityBuilderXamlWriter)) ();
  };




  function BuilderXamlNode_get_CurrentWriter () {
    return this.BuilderXamlNode$CurrentWriter$value;
  }; 

  function BuilderXamlNode_get_Depth () {
    return this.BuilderXamlNode$Depth$value;
  }; 

  function BuilderXamlNode_get_Writer () {
    return this.BuilderXamlNode$Writer$value;
  }; 

  function BuilderXamlNode_set_CurrentWriter (value) {
    this.BuilderXamlNode$CurrentWriter$value = value;
  }; 

  function BuilderXamlNode_set_Depth (value) {
    this.BuilderXamlNode$Depth$value = (value | 0);
  }; 

  function BuilderXamlNode_set_Writer (value) {
    this.BuilderXamlNode$Writer$value = value;
  }; 








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CurrentWriter", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlWriter")), 
      BuilderXamlNode_get_CurrentWriter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32), 
      BuilderXamlNode_get_Depth
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Writer", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")), 
      BuilderXamlNode_get_Writer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CurrentWriter", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlWriter")), 
      BuilderXamlNode_set_CurrentWriter
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Depth", 
      JSIL.MethodSignature.Action($.Int32), 
      BuilderXamlNode_set_Depth
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Writer", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")), 
      BuilderXamlNode_set_Writer
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteGetObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "BuilderXamlNode$Depth$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BuilderXamlNode$CurrentWriter$value", $asm2D.TypeRef("System.Xaml.XamlWriter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BuilderXamlNode$Writer$value", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true }, "CurrentWriter", $asm2D.TypeRef("System.Xaml.XamlWriter"));

    $.Property({Static:false, Public:false}, "Writer", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+RootNode */ 

(function RootNode$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+RootNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushPendingNodes", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateNamespacePrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.Constant({Static:true , Public:false}, "PreferredXamlNamespaceAlias", $.String, "x");

    $.Constant({Static:true , Public:false}, "PreferredClassAlias", $.String, "this");

    $.Field({Static:false, Public:false}, "wroteXamlNamespace", $.Boolean);

    $.Field({Static:false, Public:false}, "rootLevelPrefixes", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]));

    $.Field({Static:false, Public:false}, "pendingNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode */ 

(function BuilderClassNode$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+RootNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushPreamble", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAttributes", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetProperties", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlNodeQueue"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetXClass", 
      new JSIL.MethodSignature(null, [$.String, $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.Field({Static:false, Public:false}, "rootNode", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+RootNode"));

    $.Field({Static:false, Public:false}, "xClassNamespace", $.String);

    $.Field({Static:false, Public:false}, "xClassXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "xClassNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "xClassAttributeNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "xPropertiesNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "otherNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "defaultValueNodes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderNameNode */ 

(function BuilderNameNode$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderNameNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "classNode", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"));

    $.Field({Static:false, Public:false}, "builderName", $.String);

    $.Field({Static:false, Public:false}, "nameNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+AttributesNode */ 

(function AttributesNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+AttributesNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "attributeNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "classNode", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertiesNode */ 

(function PropertiesNode$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertiesNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDefaultValue", 
      new JSIL.MethodSignature(null, [$.String, $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteGetObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.Field({Static:false, Public:false}, "defaultValueNodes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])]));

    $.Field({Static:false, Public:false}, "propertiesNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "classNode", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderClassNode"));

    $.Field({Static:false, Public:false}, "skipGetObject", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode */ 

(function PropertyNode$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertiesNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SetDefaultValue", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetType", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StripTypeWrapping", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlNodeQueue"), [$asm2D.TypeRef("System.Xaml.XamlNodeQueue"), $asm2D.TypeRef("System.Xaml.XamlType")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.Field({Static:false, Public:false}, "properties", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertiesNode"));

    $.Field({Static:false, Public:false}, "propertyName", $.String);

    $.Field({Static:false, Public:false}, "propertyType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "defaultValue", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNameNode */ 

(function PropertyNameNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNameNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "property", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyTypeNode */ 

(function PropertyTypeNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyTypeNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "property", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyValueNode */ 

(function PropertyValueNode$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyValueNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "property", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyNode"));

    $.Field({Static:false, Public:false}, "valueNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode */ 

(function ImplementationNode$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPropertyReference", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityPropertyReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetUntransformedPropertyReferences", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteGetObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.Field({Static:false, Public:false}, "objectStack", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode+ObjectFrame")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode+ObjectFrame */ 

(function ObjectFrame$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm2D.System.Xaml.XamlMember)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm07.System.Collections.Generic.KeyValuePair$b2.Of($asm2D.System.Xaml.XamlMember, $asm2D.System.Xaml.XamlNodeQueue)))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm0B.System.Activities.ActivityPropertyReference))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm2D.System.Xaml.XamlType)) ();
  };






  function ObjectFrame_get_CurrentMember () {
    return this.ObjectFrame$CurrentMember$value;
  }; 

  function ObjectFrame_get_Members () {
    return this.ObjectFrame$Members$value;
  }; 

  function ObjectFrame_get_PropertyReferences () {
    return this.ObjectFrame$PropertyReferences$value;
  }; 

  function ObjectFrame_get_Type () {
    return this.ObjectFrame$Type$value;
  }; 

  function ObjectFrame_set_CurrentMember (value) {
    this.ObjectFrame$CurrentMember$value = value;
  }; 

  function ObjectFrame_set_Members (value) {
    this.ObjectFrame$Members$value = value;
  }; 

  function ObjectFrame_set_PropertyReferences (value) {
    this.ObjectFrame$PropertyReferences$value = value;
  }; 

  function ObjectFrame_set_Type (value) {
    this.ObjectFrame$Type$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode+ObjectFrame", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddMember", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushMembers", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.Method({Static:false, Public:true }, "get_CurrentMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember")), 
      ObjectFrame_get_CurrentMember
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Members", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])])), 
      ObjectFrame_get_Members
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")])), 
      ObjectFrame_get_PropertyReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType")), 
      ObjectFrame_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CurrentMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember")), 
      ObjectFrame_set_CurrentMember
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Members", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])])), 
      ObjectFrame_set_Members
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyReferences", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")])), 
      ObjectFrame_set_PropertyReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType")), 
      ObjectFrame_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "StartMember", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlWriter"), [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlWriter")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WritePropertyReference", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "parentWriter", $asm2D.TypeRef("System.Xaml.XamlWriter"));

    $.Field({Static:false, Public:false}, "currentMemberNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "ObjectFrame$Type$value", $asm2D.TypeRef("System.Xaml.XamlType"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObjectFrame$CurrentMember$value", $asm2D.TypeRef("System.Xaml.XamlMember"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObjectFrame$Members$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ObjectFrame$PropertyReferences$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Property({Static:false, Public:true }, "CurrentMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true }, "Members", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlNodeQueue")])]));

    $.Property({Static:false, Public:true }, "PropertyReferences", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityPropertyReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferencesNode */ 

(function PropertyReferencesNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.XamlIntegration.ActivityBuilderXamlWriter_ImplementationNode)) ();
  };




  function PropertyReferencesNode_get_HasUntransformedChildren () {
    return this.PropertyReferencesNode$HasUntransformedChildren$value;
  }; 

  function PropertyReferencesNode_get_Parent () {
    return this.PropertyReferencesNode$Parent$value;
  }; 


  function PropertyReferencesNode_set_HasUntransformedChildren (value) {
    this.PropertyReferencesNode$HasUntransformedChildren$value = value;
  }; 

  function PropertyReferencesNode_set_Parent (value) {
    this.PropertyReferencesNode$Parent$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferencesNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"), $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_HasUntransformedChildren", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyReferencesNode_get_HasUntransformedChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode")), 
      PropertyReferencesNode_get_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_UntransformedNodesWriter", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.Method({Static:false, Public:true }, "set_HasUntransformedChildren", 
      JSIL.MethodSignature.Action($.Boolean), 
      PropertyReferencesNode_set_HasUntransformedChildren
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode")), 
      PropertyReferencesNode_set_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartObject", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.Field({Static:false, Public:false}, "untransformedNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "originalStartMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "PropertyReferencesNode$HasUntransformedChildren$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyReferencesNode$Parent$value", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "HasUntransformedChildren", $.Boolean);

    $.Property({Static:false, Public:true }, "Parent", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+ImplementationNode"));

    $.Property({Static:false, Public:true }, "UntransformedNodesWriter", $asm2D.TypeRef("System.Xaml.XamlWriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferenceNode */ 

(function PropertyReferenceNode$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+BuilderXamlNode"), 
      Name: "System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferenceNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferencesNode")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Complete", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteEndMember", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteStartMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "propertyReferenceNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityBuilderXamlWriter+PropertyReferencesNode"));

    $.Field({Static:false, Public:false}, "sourceProperty", $.String);

    $.Field({Static:false, Public:false}, "targetProperty", $.String);

    $.Field({Static:false, Public:false}, "inSourceProperty", $.Boolean);

    $.Field({Static:false, Public:false}, "inTargetProperty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TypeConverterBase */ 

(function TypeConverterBase$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.TypeConverterBase", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypeConverterHelper", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper"), [
          $asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Type"), 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.Field({Static:false, Public:false}, "helpers", $asm07.TypeRef("System.Lazy`1", [$asm07.TypeRef("System.Collections.Concurrent.ConcurrentDictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper")])]));

    $.Field({Static:false, Public:false}, "helper", $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper"));

    $.Field({Static:false, Public:false}, "baseType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "helperType", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper */ 

(function TypeConverterHelper$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GetService", 
      new JSIL.MethodSignature("!!0", [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UntypedConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1 */ 

(function TypeConverterHelper$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper"), 
      Name: "System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFromString", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UntypedConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TypeConverterBase+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TypeConverterBase+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__4_0", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Concurrent.ConcurrentDictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__5_0", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Concurrent.ConcurrentDictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper")]))
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__4_0", $asm07.TypeRef("System.Func`1", [$asm07.TypeRef("System.Collections.Concurrent.ConcurrentDictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper")])]));

    $.Field({Static:true , Public:true }, "$l$g9__5_0", $asm07.TypeRef("System.Func`1", [$asm07.TypeRef("System.Collections.Concurrent.ConcurrentDictionary`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.XamlIntegration.ActivityWithResultConverter */ 

(function ActivityWithResultConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase"), 
      Name: "System.Activities.XamlIntegration.ActivityWithResultConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRootTemplatedActivity", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXamlMember", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlMember"), [
          $asm2D.TypeRef("System.Xaml.XamlSchemaContext"), $asm07.TypeRef("System.Type"), 
          $.String
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1 */ 

(function ExpressionConverterHelper$b1$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1", [$asm0B.TypeRef("System.Activities.Activity`1", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1")])]), 
      Name: "System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFromString", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity`1", [$.GenericParameter("T")]), [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BaseConverter", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.TypeConverter"))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsExpression", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Field({Static:true , Public:false}, "LiteralEscapeRegex", $asm0A.TypeRef("System.Text.RegularExpressions.Regex"));

    $.Field({Static:true , Public:false}, "LocationHelperType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "baseConverter", $asm0A.TypeRef("System.ComponentModel.TypeConverter"));

    $.Field({Static:false, Public:false}, "valueType", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "locationHelper", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false}, "BaseConverter", $asm0A.TypeRef("System.ComponentModel.TypeConverter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper */ 

(function LocationHelper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper`1 */ 

(function LocationHelper$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper`1")]), 
      Name: "System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1+LocationHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T", "TLocationValue"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateExpression", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityWithResultValueSerializer */ 

(function ActivityWithResultValueSerializer$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.ValueSerializer"), 
      Name: "System.Activities.XamlIntegration.ActivityWithResultValueSerializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanConvertToStringWrapper", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertToStringWrapper", 
      new JSIL.MethodSignature($.String, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.Field({Static:true , Public:false}, "valueSerializer", $.Type);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityXamlServices */ 

(function ActivityXamlServices$Members () {
  var $, $thisType;



























  JSIL.MakeStaticClass("System.Activities.XamlIntegration.ActivityXamlServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "Compile", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.IDynamicActivity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateBuilderReader", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateBuilderReader", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateBuilderWriter", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlWriter"), [$asm2D.TypeRef("System.Xaml.XamlWriter")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFactory", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`1", [$.Object]), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFactory", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`1", ["!!0"]), [$asm2D.TypeRef("System.Xaml.XamlReader")], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateReader", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindResource", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.String]), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCompilerSettings", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerSettings"), [$asm0B.TypeRef("System.Activities.IDynamicActivity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetContentsOfBeforeInitializeExtensionResource", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Reflection.Assembly"), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetXamlSchemaContext", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlSchemaContext"), [$asm07.TypeRef("System.Reflection.Assembly"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "InitializeComponent", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Object])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "InitializeComponentFromXamlResource", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $.String, 
          $.Object, $asm2D.TypeRef("System.Xaml.XamlSchemaContext")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm07.TypeRef("System.IO.Stream"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityXamlServicesSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityXamlServicesSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm07.TypeRef("System.IO.TextReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm07.TypeRef("System.IO.TextReader"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityXamlServicesSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm2F.TypeRef("System.Xml.XmlReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm2F.TypeRef("System.Xml.XmlReader"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityXamlServicesSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Load", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityXamlServicesSettings")])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequiresCompilation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.IDynamicActivity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "dynamicActivityReaderSchemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityXamlServices+DynamicActivityReaderSchemaContext */ 

(function DynamicActivityReaderSchemaContext$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlSchemaContext"), 
      Name: "System.Activities.XamlIntegration.ActivityXamlServices+DynamicActivityReaderSchemaContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetXamlType", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlType"), [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$asm2D.TypeRef("System.Xaml.XamlType")])
        ])
    )
      .Parameter(2, "typeArguments", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.Field({Static:true , Public:false}, "serviceModelLoaded", $.Boolean);

    $.Constant({Static:true , Public:false}, "serviceModelDll", $.String, "System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "serviceModelActivitiesDll", $.String, "System.ServiceModel.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "serviceModelNamespace", $.String, "http://schemas.microsoft.com/netfx/2009/xaml/servicemodel");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledExpressionActivityVisitor */ 

(function CompiledExpressionActivityVisitor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function CompiledExpressionActivityVisitor_get_ForImplementation () {
    return this.CompiledExpressionActivityVisitor$ForImplementation$value;
  }; 

  function CompiledExpressionActivityVisitor_set_ForImplementation (value) {
    this.CompiledExpressionActivityVisitor$ForImplementation$value = value;
  }; 

























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.CompiledExpressionActivityVisitor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_ForImplementation", 
      JSIL.MethodSignature.Return($.Boolean), 
      CompiledExpressionActivityVisitor_get_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ForImplementation", 
      JSIL.MethodSignature.Action($.Boolean), 
      CompiledExpressionActivityVisitor_set_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Visit", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Visit", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitArguments", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $asm0B.TypeRef("System.Activities.XamlIntegration.CompiledExpressionActivityVisitor+VisitArgumentDelegate")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitChildren", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitCore", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegateArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegateArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegates", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitImportedChildren", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitImportedDelegates", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitITextExpression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitPublicActivities", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRoot", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitRootImplementation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRootImplementationArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRootImplementationArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRootImplementationScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false}, "VisitRootPublic", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScopeArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScopeArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Field({Static:false, Public:false}, "CompiledExpressionActivityVisitor$ForImplementation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "ForImplementation", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Activities.XamlIntegration.CompiledExpressionActivityVisitor+VisitArgumentDelegate */ 

JSIL.MakeDelegate("System.Activities.XamlIntegration.CompiledExpressionActivityVisitor+VisitArgumentDelegate", false, [], 
  new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Boolean")])]));

/* class System.Activities.XamlIntegration.ActivityXamlServices+DynamicActivityVisitor */ 

(function DynamicActivityVisitor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };





  function DynamicActivityVisitor_get_RequiresCompilation () {
    return this.DynamicActivityVisitor$RequiresCompilation$value;
  }; 


  function DynamicActivityVisitor_set_RequiresCompilation (value) {
    this.DynamicActivityVisitor$RequiresCompilation$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.CompiledExpressionActivityVisitor"), 
      Name: "System.Activities.XamlIntegration.ActivityXamlServices+DynamicActivityVisitor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasLanguageConflict", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_RequiresCompilation", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicActivityVisitor_get_RequiresCompilation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetConflictingLanguages", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]))
    );

    $.Method({Static:false, Public:false}, "set_RequiresCompilation", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicActivityVisitor_set_RequiresCompilation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitITextExpression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Field({Static:false, Public:false}, "languages", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$.String]));

    $.Field({Static:false, Public:false}, "DynamicActivityVisitor$RequiresCompilation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Language", $.String);

    $.Property({Static:false, Public:true }, "RequiresCompilation", $.Boolean);

    $.Property({Static:false, Public:true }, "HasLanguageConflict", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ActivityXamlServicesSettings */ 

(function ActivityXamlServicesSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };



  function ActivityXamlServicesSettings_get_CompileExpressions () {
    return this.ActivityXamlServicesSettings$CompileExpressions$value;
  }; 

  function ActivityXamlServicesSettings_get_LocationReferenceEnvironment () {
    return this.ActivityXamlServicesSettings$LocationReferenceEnvironment$value;
  }; 

  function ActivityXamlServicesSettings_set_CompileExpressions (value) {
    this.ActivityXamlServicesSettings$CompileExpressions$value = value;
  }; 

  function ActivityXamlServicesSettings_set_LocationReferenceEnvironment (value) {
    this.ActivityXamlServicesSettings$LocationReferenceEnvironment$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.ActivityXamlServicesSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CompileExpressions", 
      JSIL.MethodSignature.Return($.Boolean), 
      ActivityXamlServicesSettings_get_CompileExpressions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LocationReferenceEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ActivityXamlServicesSettings_get_LocationReferenceEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompileExpressions", 
      JSIL.MethodSignature.Action($.Boolean), 
      ActivityXamlServicesSettings_set_CompileExpressions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LocationReferenceEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ActivityXamlServicesSettings_set_LocationReferenceEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityXamlServicesSettings$CompileExpressions$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityXamlServicesSettings$LocationReferenceEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CompileExpressions", $.Boolean);

    $.Property({Static:false, Public:true }, "LocationReferenceEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ArgumentValueSerializer */ 

(function ArgumentValueSerializer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.ValueSerializer"), 
      Name: "System.Activities.XamlIntegration.ArgumentValueSerializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertToString", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertToString", 
      new JSIL.MethodSignature($.String, [$.Object, $asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.AssemblyReferenceConverter */ 

(function AssemblyReferenceConverter$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.AssemblyReferenceConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSchemaContext", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlSchemaContext"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ResolveAssembly", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.Assembly"), [$asm07.TypeRef("System.Reflection.AssemblyName"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Reflection.Assembly")])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ConcatenatingXamlReader */ 

(function ConcatenatingXamlReader$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlReader"), 
      Name: "System.Activities.XamlIntegration.ConcatenatingXamlReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm2D.TypeRef("System.Xaml.XamlReader")]))
    )
      .Parameter(0, "readers", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEof", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Member", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaContext", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlSchemaContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "isEof", $.Boolean);

    $.Field({Static:false, Public:false}, "readers", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm2D.TypeRef("System.Xaml.XamlReader")]));

    $.Field({Static:false, Public:false}, "schemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsEof", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Member", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true , Virtual:true }, "Namespace", $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2D.TypeRef("System.Xaml.XamlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Property({Static:false, Public:true , Virtual:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.Object);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledDataContext */ 

(function CompiledDataContext$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.CompiledDataContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]), $asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertReferences", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]), $asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCompiledDataContextCache", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [
          $.Object, $asm0B.TypeRef("System.Activities.ActivityContext"), 
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDataContextActivities", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDataContextInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.XamlIntegration.CompiledDataContext+CompiledDataContextActivitiesCache"), $asm0B.TypeRef("System.Activities.ActivityContext"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), [
          $asm07.TypeRef("System.Func`1", ["!!0"]), $asm07.TypeRef("System.Action`1", ["!!0"]), 
          $.Int32, $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.ActivityContext")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), [$asm07.TypeRef("System.Func`1", ["!!0"]), $asm07.TypeRef("System.Action`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetValueTypeValues", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetVariableValue", 
      new JSIL.MethodSignature($.Object, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "RewriteExpressionTree", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm10.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetValueTypeValues", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetVariableValue", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    );

    $.Field({Static:false, Public:false}, "locations", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]));

    $.Field({Static:false, Public:false}, "locationReferences", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "visitor", $asm0B.TypeRef("System.Activities.XamlIntegration.ExpressionTreeRewriter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledDataContext+CompiledDataContextActivitiesCache */ 

(function CompiledDataContextActivitiesCache$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.CompiledDataContext+CompiledDataContextActivitiesCache", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:false}, "optimized", $.Boolean);

    $.Field({Static:false, Public:false}, "activities", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "activity0", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activity1", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activity2", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activity3", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activity4", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledDataContext+CompiledDataContextActivityVistor */ 

(function CompiledDataContextActivityVistor$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.CompiledExpressionActivityVisitor"), 
      Name: "System.Activities.XamlIntegration.CompiledDataContext+CompiledDataContextActivityVistor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DataContextActivities", 
      JSIL.MethodSignature.Return($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitITextExpression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRoot", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScopeArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Field({Static:false, Public:false}, "dataContextActivities", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "inVariableScopeArgument", $.Boolean);

    $.Property({Static:false, Public:true }, "DataContextActivities", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledDataContext+ReferenceComparer`1 */ 

(function ReferenceComparer$b1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.CompiledDataContext+ReferenceComparer`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEqualityComparer$lT$g.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("T"), $.GenericParameter("T")])
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.GenericParameter("T")]), "Equals");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEqualityComparer$lT$g.GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$.GenericParameter("T")])
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.GenericParameter("T")]), "GetHashCode");

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.GenericParameter("T")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.CompiledLocation`1 */ 

(function CompiledLocation$b1$Members () {
  var $, $thisType;
























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.CompiledLocation`1")]), 
      Name: "System.Activities.XamlIntegration.CompiledLocation`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Func`1", [$.GenericParameter("T")]), $asm07.TypeRef("System.Action`1", [$.GenericParameter("T")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]), 
          $.Int32, $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.ActivityContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", [$.GenericParameter("T")]), $asm07.TypeRef("System.Action`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindCompiledExpressionRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompiledRootActivityQualifiedId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExpressionActivityQualifiedId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_locationReferenceCache", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Tuple`2", [$.String, $asm07.TypeRef("System.Type")])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExpressionId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExpressionText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedForImplementation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLocations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedRootInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCompiledExpressionRoot", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.ICompiledExpressionRoot"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RefreshAccessors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CompiledRootActivityQualifiedId", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ExpressionActivityQualifiedId", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_locationReferenceCache", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Tuple`2", [$.String, $asm07.TypeRef("System.Type")])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExpressionId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExpressionText", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedForImplementation", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLocations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedRootInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:false, Public:false}, "getMethod", $asm07.TypeRef("System.Func`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "setMethod", $asm07.TypeRef("System.Action`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "expressionId", $.Int32);

    $.Field({Static:false, Public:false}, "locationReferences", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "locations", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]));

    $.Field({Static:false, Public:false}, "rootInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "compiledRootActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "compiledRootActivityQualifiedId", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "expressionActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "expressionActivityQualifiedId", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "expressionText", $.String);

    $.Field({Static:false, Public:false}, "forImplementation", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.GenericParameter("T"));

    $.Property({Static:false, Public:true }, "CompiledRootActivityQualifiedId", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "ExpressionActivityQualifiedId", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "locationReferenceCache", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Tuple`2", [$.String, $asm07.TypeRef("System.Type")])]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExpressionId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedLocations", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedRootInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExpressionText", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedForImplementation", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.XamlIntegration.CompiledLocation`1+CompiledLocationReference */ 

(function CompiledLocationReference$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.XamlIntegration.CompiledLocation`1+CompiledLocationReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader */ 

(function DynamicActivityXamlReader$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlReader"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm2D.TypeRef("System.Xaml.XamlReader"), 
          $asm2D.TypeRef("System.Xaml.XamlSchemaContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateXamlException", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlException"), [$.String, $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "DecrementIfPositive", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:false}, "DisableRewrite", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitObject", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEof", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Member", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaContext", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlSchemaContext"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:false}, "IncrementIfPositive", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsXClassName", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsXClassName", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessCurrentNode", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteWrappedMember", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "xPropertyType", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "xPropertyName", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "xPropertyAttributes", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "activityReplacementXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false}, "activityXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "baseActivityXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "xamlTypeXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "typeXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyType", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyName", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyAttributes", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyValue", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "innerReader", $asm2D.TypeRef("System.Xaml.XamlReader"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "namespaceTable", $asm0B.TypeRef("System.Activities.XamlIntegration.NamespaceTable"));

    $.Constant({Static:true , Public:false}, "clrNamespacePart", $.String, "clr-namespace:");

    $.Field({Static:false, Public:false}, "depth", $.Int32);

    $.Field({Static:false, Public:false}, "notRewriting", $.Boolean);

    $.Field({Static:false, Public:false}, "inXClassDepth", $.Int32);

    $.Field({Static:false, Public:false}, "xClassName", $asm2D.TypeRef("System.Xaml.Schema.XamlTypeName"));

    $.Field({Static:false, Public:false}, "nodeReaderLineInfo", $asm2D.TypeRef("System.Xaml.IXamlLineInfo"));

    $.Field({Static:false, Public:false}, "innerReaderLineInfo", $asm2D.TypeRef("System.Xaml.IXamlLineInfo"));

    $.Field({Static:false, Public:false}, "frontLoadedDirectives", $.Boolean);

    $.Field({Static:false, Public:false}, "schemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Field({Static:false, Public:false}, "isBuilder", $.Boolean);

    $.Field({Static:false, Public:false}, "hasLineInfo", $.Boolean);

    $.Field({Static:false, Public:false}, "nodeQueue", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "nodeReader", $asm2D.TypeRef("System.Xaml.XamlReader"));

    $.Field({Static:false, Public:false}, "bufferedProperties", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList"));

    $.Field({Static:false, Public:false}, "builderStack", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack"));

    $.Property({Static:false, Public:true , Virtual:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Namespace", $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEof", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Member", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2D.TypeRef("System.Xaml.XamlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "HasLineInfo", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "LinePosition", $.Int32);

    $.ImplementInterfaces(
      /* 1 */ $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack */ 

(function BuilderStack$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushBufferedMember", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsExpectedPropertyReferenceMember", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsPropertyReferenceExtension", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ProcessNode", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo"), 
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadPropertyName", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadPropertyReferenceExtensionPropertyName", 
      new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WritePropertyReferenceCollection", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlNodeQueue"), $asm2D.TypeRef("System.Xaml.XamlWriter"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WritePropertyReferenceFrameToParent", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+MemberInformation"), $.String, 
          $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+Frame"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteSerializedPropertyReference", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo"), 
          $.String, $.String
        ])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyReferenceXamlType", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityBuilderPropertyReferencesMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyReferenceSourceProperty", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityPropertyReferenceTargetProperty", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "bufferedMember", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+MemberInformation"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"));

    $.Field({Static:false, Public:false}, "stack", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+Frame")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+MemberInformation */ 

(function MemberInformation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm2D.System.Xaml.XamlNodeQueue)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm2D.System.Xaml.XamlMember)) ();
  };




  function MemberInformation_get_FollowingNamespaces () {
    return this.MemberInformation$FollowingNamespaces$value;
  }; 


  function MemberInformation_get_LineNumber () {
    return this.MemberInformation$LineNumber$value;
  }; 

  function MemberInformation_get_LinePosition () {
    return this.MemberInformation$LinePosition$value;
  }; 

  function MemberInformation_get_Member () {
    return this.MemberInformation$Member$value;
  }; 

  function MemberInformation_set_FollowingNamespaces (value) {
    this.MemberInformation$FollowingNamespaces$value = value;
  }; 

  function MemberInformation_set_LineNumber (value) {
    this.MemberInformation$LineNumber$value = (value | 0);
  }; 

  function MemberInformation_set_LinePosition (value) {
    this.MemberInformation$LinePosition$value = (value | 0);
  }; 

  function MemberInformation_set_Member (value) {
    this.MemberInformation$Member$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+MemberInformation", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Flush", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlWriter"))
    );

    $.Method({Static:false, Public:true }, "get_FollowingNamespaces", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeQueue")), 
      MemberInformation_get_FollowingNamespaces
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsSet", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32), 
      MemberInformation_get_LineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32), 
      MemberInformation_get_LinePosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Member", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember")), 
      MemberInformation_get_Member
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FollowingNamespaces", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeQueue")), 
      MemberInformation_set_FollowingNamespaces
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LineNumber", 
      JSIL.MethodSignature.Action($.Int32), 
      MemberInformation_set_LineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LinePosition", 
      JSIL.MethodSignature.Action($.Int32), 
      MemberInformation_set_LinePosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Member", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember")), 
      MemberInformation_set_Member
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:true }, "None", $.Type);

    $.Field({Static:false, Public:false}, "MemberInformation$Member$value", $asm2D.TypeRef("System.Xaml.XamlMember"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MemberInformation$LineNumber$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MemberInformation$LinePosition$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "MemberInformation$FollowingNamespaces$value", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function MemberInformation__cctor () {
      $thisType.None = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MemberInformation__cctor
    );

    $.Property({Static:false, Public:true }, "Member", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "LinePosition", $.Int32);

    $.Property({Static:false, Public:true }, "FollowingNamespaces", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Property({Static:false, Public:true }, "IsSet", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+Frame */ 

(function Frame$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm2D.System.Xaml.XamlNodeQueue)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function Frame_get_PropertyReferences () {
    return this.Frame$PropertyReferences$value;
  }; 

  function Frame_get_SuppressNextEndMember () {
    return this.Frame$SuppressNextEndMember$value;
  }; 

  function Frame_set_PropertyReferences (value) {
    this.Frame$PropertyReferences$value = value;
  }; 

  function Frame_set_SuppressNextEndMember (value) {
    this.Frame$SuppressNextEndMember$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BuilderStack+Frame", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_PropertyReferences", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeQueue")), 
      Frame_get_PropertyReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SuppressNextEndMember", 
      JSIL.MethodSignature.Return($.Boolean), 
      Frame_get_SuppressNextEndMember
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyReferences", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeQueue")), 
      Frame_set_PropertyReferences
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SuppressNextEndMember", 
      JSIL.MethodSignature.Action($.Boolean), 
      Frame_set_SuppressNextEndMember
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Frame$PropertyReferences$value", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Frame$SuppressNextEndMember$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyReferences", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Property({Static:false, Public:true }, "SuppressNextEndMember", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList */ 

(function BufferedPropertyList$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BufferDefaultValue", 
      new JSIL.MethodSignature(null, [
          $.String, $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BufferDefinitions", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushTo", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlNodeQueue"), $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushValueHolders", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PropertyHolders", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ActivityPropertyHolder")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ProcessDefaultValue", 
      new JSIL.MethodSignature(null, [
          $.String, $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.Field({Static:false, Public:false}, "propertyHolders", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ActivityPropertyHolder")]));

    $.Field({Static:false, Public:false}, "valueHolders", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ValueHolder")]));

    $.Field({Static:false, Public:false}, "outerNodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"));

    $.Field({Static:false, Public:false}, "alreadyBufferedDefinitions", $.Boolean);

    $.Property({Static:false, Public:false}, "PropertyHolders", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ActivityPropertyHolder")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ValueHolder */ 

(function ValueHolder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm2D.System.Xaml.XamlMember)) ();
  };



  function ValueHolder_get_PropertyValue () {
    return this.ValueHolder$PropertyValue$value;
  }; 


  function ValueHolder_set_PropertyValue (value) {
    this.ValueHolder$PropertyValue$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ValueHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlSchemaContext"), $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.Method({Static:false, Public:true }, "get_PropertyValue", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember")), 
      ValueHolder_get_PropertyValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ValueReader", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlReader"))
    );

    $.Method({Static:false, Public:false}, "set_PropertyValue", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember")), 
      ValueHolder_set_PropertyValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "nodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "ValueHolder$PropertyValue$value", $asm2D.TypeRef("System.Xaml.XamlMember"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyValue", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true }, "ValueReader", $asm2D.TypeRef("System.Xaml.XamlReader"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ActivityPropertyHolder */ 

(function ActivityPropertyHolder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm2D.System.Xaml.XamlType)) ();
  };




  function ActivityPropertyHolder_get_Name () {
    return this.ActivityPropertyHolder$Name$value;
  }; 

  function ActivityPropertyHolder_get_Type () {
    return this.ActivityPropertyHolder$Type$value;
  }; 


  function ActivityPropertyHolder_set_Name (value) {
    this.ActivityPropertyHolder$Name$value = value;
  }; 

  function ActivityPropertyHolder_set_Type (value) {
    this.ActivityPropertyHolder$Type$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.DynamicActivityXamlReader+BufferedPropertyList+ActivityPropertyHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"), $asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlNodeQueue"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ActivityPropertyHolder_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType")), 
      ActivityPropertyHolder_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ProcessDefaultValue", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlReader"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    );

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      ActivityPropertyHolder_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Type", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType")), 
      ActivityPropertyHolder_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "nodes", $asm2D.TypeRef("System.Xaml.XamlNodeQueue"));

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.XamlIntegration.DynamicActivityXamlReader"));

    $.Field({Static:false, Public:false}, "ActivityPropertyHolder$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityPropertyHolder$Type$value", $asm2D.TypeRef("System.Xaml.XamlType"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicUpdateMapConverter */ 

(function DynamicUpdateMapConverter$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.DynamicUpdateMapConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicUpdateMapItemConverter */ 

(function DynamicUpdateMapItemConverter$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.DynamicUpdateMapItemConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.ExpressionTreeRewriter */ 

(function ExpressionTreeRewriter$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm10.TypeRef("System.Linq.Expressions.ExpressionVisitor"), 
      Name: "System.Activities.XamlIntegration.ExpressionTreeRewriter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "TryRewriteMemberExpressionNode", 
      new JSIL.MethodSignature($.Boolean, [$asm10.TypeRef("System.Linq.Expressions.MemberExpression"), $jsilcore.TypeRef("JSIL.Reference", [$asm10.TypeRef("System.Linq.Expressions.Expression")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitConstant", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm10.TypeRef("System.Linq.Expressions.ConstantExpression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitMember", 
      new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$asm10.TypeRef("System.Linq.Expressions.MemberExpression")])
    );

    $.Field({Static:false, Public:false}, "locationReferences", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.FuncFactory */ 

(function FuncFactory$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm2D.System.Xaml.XamlNodeList)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.IList$b1.Of($asm2D.System.Xaml.NamespaceDeclaration))) ();
  };







  function FuncFactory_get_IgnoreParentSettings () {
    return this.FuncFactory$IgnoreParentSettings$value;
  }; 

  function FuncFactory_get_Nodes () {
    return this.FuncFactory$Nodes$value;
  }; 

  function FuncFactory_get_ParentNamespaces () {
    return this.FuncFactory$ParentNamespaces$value;
  }; 


  function FuncFactory_set_IgnoreParentSettings (value) {
    this.FuncFactory$IgnoreParentSettings$value = value;
  }; 

  function FuncFactory_set_Nodes (value) {
    this.FuncFactory$Nodes$value = value;
  }; 

  function FuncFactory_set_ParentNamespaces (value) {
    this.FuncFactory$ParentNamespaces$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.FuncFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFactory", 
      new JSIL.MethodSignature($.Type, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.IServiceProvider")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFactory", 
      new JSIL.MethodSignature($.Type, [
          $asm2D.TypeRef("System.Xaml.IXamlObjectWriterFactory"), $asm2D.TypeRef("System.Xaml.XamlReader"), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])
        ])
    )
      .Parameter(2, "returnType", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "CreateFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`1", [$.Object]), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`1", ["!!0"]), [$asm2D.TypeRef("System.Xaml.XamlReader")], ["T"])
    );

    $.Method({Static:false, Public:false}, "get_IgnoreParentSettings", 
      JSIL.MethodSignature.Return($.Boolean), 
      FuncFactory_get_IgnoreParentSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Nodes", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeList")), 
      FuncFactory_get_Nodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_ParentNamespaces", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")])), 
      FuncFactory_get_ParentNamespaces
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFunc", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$.Object]))
    );

    $.Method({Static:false, Public:false}, "set_IgnoreParentSettings", 
      JSIL.MethodSignature.Action($.Boolean), 
      FuncFactory_set_IgnoreParentSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Nodes", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeList")), 
      FuncFactory_set_Nodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ParentNamespaces", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")])), 
      FuncFactory_set_ParentNamespaces
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FuncFactory$ParentNamespaces$value", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FuncFactory$Nodes$value", $asm2D.TypeRef("System.Xaml.XamlNodeList"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FuncFactory$IgnoreParentSettings$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "ParentNamespaces", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]));

    $.Property({Static:false, Public:false}, "Nodes", $asm2D.TypeRef("System.Xaml.XamlNodeList"));

    $.Property({Static:false, Public:false}, "IgnoreParentSettings", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.FuncFactory`1 */ 

(function FuncFactory$b1$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.FuncFactory"), 
      Name: "System.Activities.XamlIntegration.FuncFactory`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.IXamlObjectWriterFactory"), $asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Evaluate", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetFunc", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetObjectWriterSettings", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlObjectWriterSettings"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypedFunc", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Func`1", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetWriter", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlObjectWriter"))
    );

    $.Field({Static:false, Public:false}, "objectWriterFactory", $asm2D.TypeRef("System.Xaml.IXamlObjectWriterFactory"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.FuncDeferringLoader */ 

(function FuncDeferringLoader$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlDeferringLoader"), 
      Name: "System.Activities.XamlIntegration.FuncDeferringLoader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Load", 
      new JSIL.MethodSignature($.Object, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.IServiceProvider")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Save", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$.Object, $asm07.TypeRef("System.IServiceProvider")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.XamlIntegration.ICompiledExpressionRoot */ 

JSIL.MakeInterface(
  "System.Activities.XamlIntegration.ICompiledExpressionRoot", true, [], function ($) {
    $.Method({}, "GetLanguage", JSIL.MethodSignature.Return($.String));
    $.Method({}, "CanExecuteExpression", new JSIL.MethodSignature($.Boolean, [
          $.String, $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "InvokeExpression", new JSIL.MethodSignature($.Object, [
          $.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]), 
          $asm0B.TypeRef("System.Activities.ActivityContext")
        ]));
    $.Method({}, "InvokeExpression", new JSIL.MethodSignature($.Object, [$.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")])]));
    $.Method({}, "GetRequiredLocations", new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Int32]));
    $.Method({}, "GetExpressionTreeForExpression", new JSIL.MethodSignature($asm10.TypeRef("System.Linq.Expressions.Expression"), [$.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")])]));
  }, []);

/* class System.Activities.XamlIntegration.InOutArgumentConverter */ 

(function InOutArgumentConverter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase"), 
      Name: "System.Activities.XamlIntegration.InOutArgumentConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.InOutArgumentConverter+InOutArgumentConverterHelper`1 */ 

(function InOutArgumentConverterHelper$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1", [$asm0B.TypeRef("System.Activities.InOutArgument`1", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.InOutArgumentConverter+InOutArgumentConverterHelper`1")])]), 
      Name: "System.Activities.XamlIntegration.InOutArgumentConverter+InOutArgumentConverterHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFromString", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InOutArgument`1", [$.GenericParameter("T")]), [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "expressionHelper", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.InArgumentConverter */ 

(function InArgumentConverter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase"), 
      Name: "System.Activities.XamlIntegration.InArgumentConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.InArgumentConverter+InArgumentConverterHelper`1 */ 

(function InArgumentConverterHelper$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1", [$asm0B.TypeRef("System.Activities.InArgument`1", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.InArgumentConverter+InArgumentConverterHelper`1")])]), 
      Name: "System.Activities.XamlIntegration.InArgumentConverter+InArgumentConverterHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFromString", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.InArgument`1", [$.GenericParameter("T")]), [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "valueExpressionHelper", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1", [$.GenericParameter("T")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.XamlIntegration.IValueSerializableExpression */ 

JSIL.MakeInterface(
  "System.Activities.XamlIntegration.IValueSerializableExpression", true, [], function ($) {
    $.Method({}, "CanConvertToString", new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")]));
    $.Method({}, "ConvertToString", new JSIL.MethodSignature($.String, [$asm2D.TypeRef("System.Windows.Markup.IValueSerializerContext")]));
  }, []);

/* class System.Activities.XamlIntegration.ImplementationVersionConverter */ 

(function ImplementationVersionConverter$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.ImplementationVersionConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.NamespaceTable */ 

(function NamespaceTable$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.NamespaceTable", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructNamespaceCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ExitScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNamespacePrefixes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ManageNamespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlReader"))
    );

    $.Field({Static:false, Public:false}, "tempNamespaceList", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]));

    $.Field({Static:false, Public:false}, "namespaceStack", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")])]));

    $.Field({Static:false, Public:false}, "namespacesCache", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]));

    $.ImplementInterfaces(
      /* 0 */ $asm2D.TypeRef("System.Xaml.IXamlNamespaceResolver")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.NetDataContractXmlSerializable`1 */ 

(function NetDataContractXmlSerializable$b1$Members () {
  var $, $thisType;



  function NetDataContractXmlSerializable$b1_get_Value () {
    return this.NetDataContractXmlSerializable$b1$Value$value;
  }; 



  function NetDataContractXmlSerializable$b1_set_Value (value) {
    this.NetDataContractXmlSerializable$b1$Value$value = JSIL.CloneParameter($thisType.T.get(this), value);
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.NetDataContractXmlSerializable`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateSerializer", 
      JSIL.MethodSignature.Return($asm21.TypeRef("System.Runtime.Serialization.NetDataContractSerializer"))
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("T"), null), 
      NetDataContractXmlSerializable$b1_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchema", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Schema.XmlSchema"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.Method({Static:false, Public:false}, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")]), 
      NetDataContractXmlSerializable$b1_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.Field({Static:false, Public:false}, "NetDataContractXmlSerializable$b1$Value$value", $.GenericParameter("T"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Value", $.GenericParameter("T"));

    $.ImplementInterfaces(
      /* 0 */ $asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.OutArgumentConverter */ 

(function OutArgumentConverter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase"), 
      Name: "System.Activities.XamlIntegration.OutArgumentConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.OutArgumentConverter+OutArgumentConverterHelper`1 */ 

(function OutArgumentConverterHelper$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.TypeConverterBase+TypeConverterHelper`1", [$asm0B.TypeRef("System.Activities.OutArgument`1", [new JSIL.GenericParameter("T", "System.Activities.XamlIntegration.OutArgumentConverter+OutArgumentConverterHelper`1")])]), 
      Name: "System.Activities.XamlIntegration.OutArgumentConverter+OutArgumentConverterHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFromString", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.OutArgument`1", [$.GenericParameter("T")]), [$.String, $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.Field({Static:false, Public:false}, "expressionHelper", $asm0B.TypeRef("System.Activities.XamlIntegration.ActivityWithResultConverter+ExpressionConverterHelper`1", [$asm0B.TypeRef("System.Activities.Location`1", [$.GenericParameter("T")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.PropertyReferenceExtension`1 */ 

(function PropertyReferenceExtension$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function PropertyReferenceExtension$b1_get_PropertyName () {
    return this.PropertyReferenceExtension$b1$PropertyName$value;
  }; 


  function PropertyReferenceExtension$b1_set_PropertyName (value) {
    this.PropertyReferenceExtension$b1$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.Activities.XamlIntegration.PropertyReferenceExtension`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($.String), 
      PropertyReferenceExtension$b1_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($.String), 
      PropertyReferenceExtension$b1_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PropertyReferenceExtension$b1$PropertyName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.MarkupExtensionReturnTypeAttribute"), function () { return [$asm07.System.Object.__Type__]; });

})();

/* class System.Activities.XamlIntegration.SerializableFuncDeferringLoader */ 

(function SerializableFuncDeferringLoader$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlDeferringLoader"), 
      Name: "System.Activities.XamlIntegration.SerializableFuncDeferringLoader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFactory", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.XamlIntegration.FuncFactory"), [$asm07.TypeRef("System.Delegate")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InsertNamespaces", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsXmlNamespace", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Load", 
      new JSIL.MethodSignature($.Object, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.IServiceProvider")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Save", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlReader"), [$.Object, $asm07.TypeRef("System.IServiceProvider")])
    );

    $.Constant({Static:true , Public:false}, "xmlPrefix", $.String, "xml");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.DynamicUpdateMapExtension */ 

(function DynamicUpdateMapExtension$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.Activities.XamlIntegration.DynamicUpdateMapExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_XmlContent", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IServiceProvider")])
    );

    $.Field({Static:false, Public:false}, "content", $asm0B.TypeRef("System.Activities.XamlIntegration.NetDataContractXmlSerializable`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]));

    $.Property({Static:false, Public:true }, "UpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Property({Static:false, Public:true }, "XmlContent", $asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["XmlContent"]; });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompiler */ 

(function TextExpressionCompiler$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };






















































  function TextExpressionCompiler_get_InVariableScopeArgument () {
    return this.TextExpressionCompiler$InVariableScopeArgument$value;
  }; 



























  function TextExpressionCompiler_set_InVariableScopeArgument (value) {
    this.TextExpressionCompiler$InVariableScopeArgument$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompiler", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerSettings"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lPushDataContextDescriptor$gb__113_0", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AddMember", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPropertyForDuplicates", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AlignText", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.CodeDom.CodeLinePragma")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AssemblyContainsTypeWithActivityNamespace", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Compile", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerResults"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CompileInMemory", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerResults"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "FindLocationReferences", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCacheHelper", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCanExecuteMethod", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateClass", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCodeMemberProperty", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberProperty"), [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCodeNamespace", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeNamespace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCompiledDataContext", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCompiledExpressionRootConstructor", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeConstructor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDataContextActivitiesCheck", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeConditionStatement"), [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDataContextActivitiesHelper", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateDataContextCreateExpression", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeObjectCreateExpression"), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateEmptyRequiredLocationsBody", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateExpressionGetTreeMethod", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor"), 
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor"), $.Boolean, 
          $.Boolean, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateField", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetDataContextVariable", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor"), $asm0A.TypeRef("System.CodeDom.CodeVariableDeclarationStatement"), 
          $asm0A.TypeRef("System.CodeDom.CodeStatementCollection"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetExpressionTreeForExpressionMethod", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetMethod", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Type"), 
          $.String, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetMethodWrapper", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [$asm0A.TypeRef("System.CodeDom.CodeMemberMethod")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetRequiredLocationsMethod", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateGetValueTypeValues", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateInitializeDataContextActivity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeStatement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateInvokeExpressionMethod", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLinePragmaForNamespace", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeLinePragma"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLocationConstructor", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeConstructor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLocationReferenceActivityContextConstructor", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeConstructor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLocationReferenceCheck", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeConditionStatement"), [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLocationReferenceConstructor", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeConstructor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateMembers", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateProperty", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateReferenceExpressionInvocation", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.CodeDom.CodeStatement")]), [
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateRequiredLocationsBody", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSetLocationsOffsetMethod", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSetMethod", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Type"), 
          $.String, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSetMethodWrapper", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [$asm0A.TypeRef("System.CodeDom.CodeMemberMethod")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateSetValueTypeValues", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateSource", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IO.TextWriter")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateStatementInvocation", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.CodeDom.CodeStatement")]), [
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateStatementMethod", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateStatementMethodWrapper", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.CodeMemberMethod"), [$asm0A.TypeRef("System.CodeDom.CodeMemberMethod")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateValidate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateValueExpressionInvocation", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.CodeDom.CodeStatement")]), [
          $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_BrowsableCodeAttribute", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EditorBrowsableCodeAttribute", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_GeneratedCodeAttribute", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"))
    );

    $.Method({Static:false, Public:false}, "get_InVariableScopeArgument", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompiler_get_InVariableScopeArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsCS", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsVB", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetActivityFullName", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerSettings")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCacheIndicies", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCompilerParameters", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.CodeDom.Compiler.CompilerParameters"), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerError")])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNamespaceReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRequiredLocationsConditionStatements", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.CodeDom.CodeStatement")]), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetStartMemberIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "InvokeSetLocationsOffsetMethod", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeConstructor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IsRedefinition", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsValidTextIdentifierName", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "NamesMatch", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnActivityDelegateScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAfterActivityDelegateScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAfterRootActivity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAfterRootArguments", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAfterRootImplementationScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnAfterVariableScope", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDelegateArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnITextExpressionFound", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+ExpressionCompilerActivityVisitor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRootActivity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRootImplementationScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnVariableScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Parse", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PopDataContextDescriptor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PushDataContextDescriptor", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor"))
    );

    $.Method({Static:false, Public:false}, "set_InVariableScopeArgument", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompiler_set_InVariableScopeArgument
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "TryAlign", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGenerateExpressionCode", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor"), 
          $.Int32, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetSymbols", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteCode", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextWriter"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "typedDataContextName", $.String, "_TypedDataContext");

    $.Field({Static:true , Public:false}, "expressionGetString", $.String, "__Expr{0}Get");

    $.Field({Static:true , Public:false}, "expressionSetString", $.String, "__Expr{0}Set");

    $.Field({Static:true , Public:false}, "expressionStatementString", $.String, "__Expr{0}Statement");

    $.Field({Static:true , Public:false}, "expressionGetTreeString", $.String, "__Expr{0}GetTree");

    $.Field({Static:true , Public:false}, "getValueTypeValuesString", $.String, "GetValueTypeValues");

    $.Field({Static:true , Public:false}, "setValueTypeValuesString", $.String, "SetValueTypeValues");

    $.Field({Static:true , Public:false}, "valueTypeAccessorString", $.String, "ValueType_");

    $.Field({Static:true , Public:false}, "forReadOnly", $.String, "_ForReadOnly");

    $.Field({Static:true , Public:false}, "xamlIntegrationNamespace", $.String, "System.Activities.XamlIntegration");

    $.Field({Static:true , Public:false}, "rootActivityFieldName", $.String, "rootActivity");

    $.Field({Static:true , Public:false}, "dataContextActivitiesFieldName", $.String, "dataContextActivities");

    $.Field({Static:true , Public:false}, "forImplementationName", $.String, "forImplementation");

    $.Field({Static:true , Public:false}, "generatedCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Field({Static:true , Public:false}, "browsableCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Field({Static:true , Public:false}, "editorBrowsableCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Field({Static:true , Public:false}, "csharpLambdaString", $.String, "() => ");

    $.Field({Static:true , Public:false}, "vbLambdaString", $.String, "Function() ");

    $.Field({Static:true , Public:false}, "locationsOffsetFieldName", $.String, "locationsOffset");

    $.Field({Static:true , Public:false}, "expectedLocationsCountFieldName", $.String, "expectedLocationsCount");

    $.Field({Static:false, Public:false}, "expressionIdToLocationReferences", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])]));

    $.Field({Static:false, Public:false}, "activityFullName", $.String);

    $.Field({Static:false, Public:false}, "nextContextId", $.Int32);

    $.Field({Static:false, Public:false}, "isCS", $asm07.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "isVB", $asm07.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "generateSource", $.Boolean);

    $.Field({Static:false, Public:false}, "settings", $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerSettings"));

    $.Field({Static:false, Public:false}, "expressionDescriptors", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor")]));

    $.Field({Static:false, Public:false}, "compiledDataContexts", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor")]));

    $.Field({Static:false, Public:false}, "codeNamespace", $asm0A.TypeRef("System.CodeDom.CodeNamespace"));

    $.Field({Static:false, Public:false}, "classDeclaration", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Field({Static:false, Public:false}, "compileUnit", $asm0A.TypeRef("System.CodeDom.CodeCompileUnit"));

    $.Field({Static:false, Public:false}, "symbols", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]));

    $.Field({Static:false, Public:false}, "fileName", $.String);

    $.Field({Static:false, Public:false}, "lineNumbersForNSes", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32]));

    $.Field({Static:false, Public:false}, "lineNumbersForNSesForImpl", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32]));

    $.Field({Static:false, Public:false}, "TextExpressionCompiler$InVariableScopeArgument$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IsCS", $.Boolean);

    $.Property({Static:false, Public:false}, "IsVB", $.Boolean);

    $.Property({Static:false, Public:false}, "InVariableScopeArgument", $.Boolean);

    $.Property({Static:true , Public:false}, "GeneratedCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Property({Static:true , Public:false}, "BrowsableCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));

    $.Property({Static:true , Public:false}, "EditorBrowsableCodeAttribute", $asm0A.TypeRef("System.CodeDom.CodeAttributeDeclaration"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompiler+ExpressionCompilerActivityVisitor */ 

(function ExpressionCompilerActivityVisitor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function ExpressionCompilerActivityVisitor_get_NextExpressionId () {
    return this.ExpressionCompilerActivityVisitor$NextExpressionId$value;
  }; 

  function ExpressionCompilerActivityVisitor_set_NextExpressionId (value) {
    this.ExpressionCompilerActivityVisitor$NextExpressionId$value = (value | 0);
  }; 










  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.XamlIntegration.CompiledExpressionActivityVisitor"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompiler+ExpressionCompilerActivityVisitor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler"))
    );

    $.Method({Static:false, Public:true }, "get_NextExpressionId", 
      JSIL.MethodSignature.Return($.Int32), 
      ExpressionCompilerActivityVisitor_get_NextExpressionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NextExpressionId", 
      JSIL.MethodSignature.Action($.Int32), 
      ExpressionCompilerActivityVisitor_set_NextExpressionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Visit", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegate", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitDelegateArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitITextExpression", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRoot", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRootImplementationArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitRootImplementationScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "VisitVariableScopeArgument", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Field({Static:false, Public:false}, "compiler", $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler"));

    $.Field({Static:false, Public:false}, "ExpressionCompilerActivityVisitor$NextExpressionId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "NextExpressionId", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor */ 

(function CompiledExpressionDescriptor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function CompiledExpressionDescriptor_get_ExpressionText () {
    return this.CompiledExpressionDescriptor$ExpressionText$value;
  }; 

  function CompiledExpressionDescriptor_get_GetExpressionTreeMethodName () {
    return this.CompiledExpressionDescriptor$GetExpressionTreeMethodName$value;
  }; 

  function CompiledExpressionDescriptor_get_GetMethodName () {
    return this.CompiledExpressionDescriptor$GetMethodName$value;
  }; 

  function CompiledExpressionDescriptor_get_Id () {
    return this.CompiledExpressionDescriptor$Id$value;
  }; 




  function CompiledExpressionDescriptor_get_ResultType () {
    return this.CompiledExpressionDescriptor$ResultType$value;
  }; 

  function CompiledExpressionDescriptor_get_SetMethodName () {
    return this.CompiledExpressionDescriptor$SetMethodName$value;
  }; 

  function CompiledExpressionDescriptor_get_StatementMethodName () {
    return this.CompiledExpressionDescriptor$StatementMethodName$value;
  }; 

  function CompiledExpressionDescriptor_get_TypeName () {
    return this.CompiledExpressionDescriptor$TypeName$value;
  }; 

  function CompiledExpressionDescriptor_set_ExpressionText (value) {
    this.CompiledExpressionDescriptor$ExpressionText$value = value;
  }; 

  function CompiledExpressionDescriptor_set_GetExpressionTreeMethodName (value) {
    this.CompiledExpressionDescriptor$GetExpressionTreeMethodName$value = value;
  }; 

  function CompiledExpressionDescriptor_set_GetMethodName (value) {
    this.CompiledExpressionDescriptor$GetMethodName$value = value;
  }; 

  function CompiledExpressionDescriptor_set_Id (value) {
    this.CompiledExpressionDescriptor$Id$value = (value | 0);
  }; 

  function CompiledExpressionDescriptor_set_ResultType (value) {
    this.CompiledExpressionDescriptor$ResultType$value = value;
  }; 

  function CompiledExpressionDescriptor_set_SetMethodName (value) {
    this.CompiledExpressionDescriptor$SetMethodName$value = value;
  }; 

  function CompiledExpressionDescriptor_set_StatementMethodName (value) {
    this.CompiledExpressionDescriptor$StatementMethodName$value = value;
  }; 

  function CompiledExpressionDescriptor_set_TypeName (value) {
    this.CompiledExpressionDescriptor$TypeName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompiler+CompiledExpressionDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_ExpressionText", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_GetExpressionTreeMethodName", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_GetExpressionTreeMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_GetMethodName", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_GetMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Id", 
      JSIL.MethodSignature.Return($.Int32), 
      CompiledExpressionDescriptor_get_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsReference", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsStatement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_ResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      CompiledExpressionDescriptor_get_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SetMethodName", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_SetMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_StatementMethodName", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_StatementMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TypeName", 
      JSIL.MethodSignature.Return($.String), 
      CompiledExpressionDescriptor_get_TypeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ExpressionText", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_ExpressionText
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_GetExpressionTreeMethodName", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_GetExpressionTreeMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_GetMethodName", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_GetMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.Int32), 
      CompiledExpressionDescriptor_set_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ResultType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      CompiledExpressionDescriptor_set_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SetMethodName", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_SetMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StatementMethodName", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_StatementMethodName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TypeName", 
      JSIL.MethodSignature.Action($.String), 
      CompiledExpressionDescriptor_set_TypeName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$TypeName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$ResultType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$GetMethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$SetMethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$StatementMethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$Id$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$ExpressionText$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledExpressionDescriptor$GetExpressionTreeMethodName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "IsValue", $.Boolean);

    $.Property({Static:false, Public:false}, "IsReference", $.Boolean);

    $.Property({Static:false, Public:false}, "IsStatement", $.Boolean);

    $.Property({Static:false, Public:false}, "TypeName", $.String);

    $.Property({Static:false, Public:false}, "ResultType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "GetMethodName", $.String);

    $.Property({Static:false, Public:false}, "SetMethodName", $.String);

    $.Property({Static:false, Public:false}, "StatementMethodName", $.String);

    $.Property({Static:false, Public:false}, "Id", $.Int32);

    $.Property({Static:false, Public:false}, "ExpressionText", $.String);

    $.Property({Static:false, Public:false}, "GetExpressionTreeMethodName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor */ 

(function CompiledDataContextDescriptor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0A.System.CodeDom.CodeTypeDeclaration)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function CompiledDataContextDescriptor_get_CodeTypeDeclaration () {
    return this.CompiledDataContextDescriptor$CodeTypeDeclaration$value;
  }; 

  function CompiledDataContextDescriptor_get_CodeTypeDeclarationForReadOnly () {
    return this.CompiledDataContextDescriptor$CodeTypeDeclarationForReadOnly$value;
  }; 



  function CompiledDataContextDescriptor_get_NextMemberIndex () {
    return this.CompiledDataContextDescriptor$NextMemberIndex$value;
  }; 


  function CompiledDataContextDescriptor_set_CodeTypeDeclaration (value) {
    this.CompiledDataContextDescriptor$CodeTypeDeclaration$value = value;
  }; 

  function CompiledDataContextDescriptor_set_CodeTypeDeclarationForReadOnly (value) {
    this.CompiledDataContextDescriptor$CodeTypeDeclarationForReadOnly$value = value;
  }; 

  function CompiledDataContextDescriptor_set_NextMemberIndex (value) {
    this.CompiledDataContextDescriptor$NextMemberIndex$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompiler+CompiledDataContextDescriptor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`1", [$.Boolean]))
    );

    $.Method({Static:false, Public:true }, "get_CodeTypeDeclaration", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration")), 
      CompiledDataContextDescriptor_get_CodeTypeDeclaration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CodeTypeDeclarationForReadOnly", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration")), 
      CompiledDataContextDescriptor_get_CodeTypeDeclarationForReadOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Duplicates", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Generic.ISet`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Fields", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]))
    );

    $.Method({Static:false, Public:true }, "get_NextMemberIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      CompiledDataContextDescriptor_get_NextMemberIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]))
    );

    $.Method({Static:false, Public:true }, "set_CodeTypeDeclaration", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration")), 
      CompiledDataContextDescriptor_set_CodeTypeDeclaration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CodeTypeDeclarationForReadOnly", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration")), 
      CompiledDataContextDescriptor_set_CodeTypeDeclarationForReadOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NextMemberIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      CompiledDataContextDescriptor_set_NextMemberIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "fields", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]));

    $.Field({Static:false, Public:false}, "properties", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]));

    $.Field({Static:false, Public:false}, "duplicates", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$.String]));

    $.Field({Static:false, Public:false}, "isVb", $asm07.TypeRef("System.Func`1", [$.Boolean]));

    $.Field({Static:false, Public:false}, "CompiledDataContextDescriptor$CodeTypeDeclaration$value", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledDataContextDescriptor$CodeTypeDeclarationForReadOnly$value", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CompiledDataContextDescriptor$NextMemberIndex$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Fields", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]));

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompiler+MemberData")]));

    $.Property({Static:false, Public:true }, "Duplicates", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$.String]));

    $.Property({Static:false, Public:true }, "CodeTypeDeclaration", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Property({Static:false, Public:true }, "CodeTypeDeclarationForReadOnly", $asm0A.TypeRef("System.CodeDom.CodeTypeDeclaration"));

    $.Property({Static:false, Public:true }, "NextMemberIndex", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Activities.XamlIntegration.TextExpressionCompiler+MemberData */ 

(function MemberData$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompiler+MemberData", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Index", $.Int32);

    $.Field({Static:false, Public:true }, "Name", $.String);

    $.Field({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompilerHelper */ 

(function TextExpressionCompilerHelper$Members () {
  var $, $thisType;






  JSIL.MakeStaticClass("System.Activities.XamlIntegration.TextExpressionCompilerHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetNamespacesLineInfo", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32]), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNamespaceString", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsStartMemberTextExprNS", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlXmlReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsStartMemberTextExprNSForImpl", 
      new JSIL.MethodSignature($.Boolean, [$asm2D.TypeRef("System.Xaml.XamlXmlReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "WalkSubTree", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompilerError */ 

(function TextExpressionCompilerError$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function TextExpressionCompilerError_get_IsWarning () {
    return this.TextExpressionCompilerError$IsWarning$value;
  }; 

  function TextExpressionCompilerError_get_Message () {
    return this.TextExpressionCompilerError$Message$value;
  }; 

  function TextExpressionCompilerError_get_Number () {
    return this.TextExpressionCompilerError$Number$value;
  }; 

  function TextExpressionCompilerError_get_SourceLineNumber () {
    return this.TextExpressionCompilerError$SourceLineNumber$value;
  }; 

  function TextExpressionCompilerError_set_IsWarning (value) {
    this.TextExpressionCompilerError$IsWarning$value = value;
  }; 

  function TextExpressionCompilerError_set_Message (value) {
    this.TextExpressionCompilerError$Message$value = value;
  }; 

  function TextExpressionCompilerError_set_Number (value) {
    this.TextExpressionCompilerError$Number$value = value;
  }; 

  function TextExpressionCompilerError_set_SourceLineNumber (value) {
    this.TextExpressionCompilerError$SourceLineNumber$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompilerError", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_IsWarning", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerError_get_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerError_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Number", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerError_get_Number
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SourceLineNumber", 
      JSIL.MethodSignature.Return($.Int32), 
      TextExpressionCompilerError_get_SourceLineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsWarning", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerError_set_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Message", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerError_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Number", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerError_set_Number
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SourceLineNumber", 
      JSIL.MethodSignature.Action($.Int32), 
      TextExpressionCompilerError_set_SourceLineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerError$IsWarning$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerError$SourceLineNumber$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerError$Message$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerError$Number$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "IsWarning", $.Boolean);

    $.Property({Static:false, Public:true }, "SourceLineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "Message", $.String);

    $.Property({Static:false, Public:true }, "Number", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompilerSettings */ 

(function TextExpressionCompilerSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Action$b1.Of($asm07.System.String))) ();
  };



  function TextExpressionCompilerSettings_get_Activity () {
    return this.TextExpressionCompilerSettings$Activity$value;
  }; 

  function TextExpressionCompilerSettings_get_ActivityName () {
    return this.TextExpressionCompilerSettings$ActivityName$value;
  }; 

  function TextExpressionCompilerSettings_get_ActivityNamespace () {
    return this.TextExpressionCompilerSettings$ActivityNamespace$value;
  }; 

  function TextExpressionCompilerSettings_get_AlwaysGenerateSource () {
    return this.TextExpressionCompilerSettings$AlwaysGenerateSource$value;
  }; 

  function TextExpressionCompilerSettings_get_ForImplementation () {
    return this.TextExpressionCompilerSettings$ForImplementation$value;
  }; 

  function TextExpressionCompilerSettings_get_GenerateAsPartialClass () {
    return this.TextExpressionCompilerSettings$GenerateAsPartialClass$value;
  }; 

  function TextExpressionCompilerSettings_get_Language () {
    return this.TextExpressionCompilerSettings$Language$value;
  }; 

  function TextExpressionCompilerSettings_get_LogSourceGenerationMessage () {
    return this.TextExpressionCompilerSettings$LogSourceGenerationMessage$value;
  }; 

  function TextExpressionCompilerSettings_get_RootNamespace () {
    return this.TextExpressionCompilerSettings$RootNamespace$value;
  }; 

  function TextExpressionCompilerSettings_set_Activity (value) {
    this.TextExpressionCompilerSettings$Activity$value = value;
  }; 

  function TextExpressionCompilerSettings_set_ActivityName (value) {
    this.TextExpressionCompilerSettings$ActivityName$value = value;
  }; 

  function TextExpressionCompilerSettings_set_ActivityNamespace (value) {
    this.TextExpressionCompilerSettings$ActivityNamespace$value = value;
  }; 

  function TextExpressionCompilerSettings_set_AlwaysGenerateSource (value) {
    this.TextExpressionCompilerSettings$AlwaysGenerateSource$value = value;
  }; 

  function TextExpressionCompilerSettings_set_ForImplementation (value) {
    this.TextExpressionCompilerSettings$ForImplementation$value = value;
  }; 

  function TextExpressionCompilerSettings_set_GenerateAsPartialClass (value) {
    this.TextExpressionCompilerSettings$GenerateAsPartialClass$value = value;
  }; 

  function TextExpressionCompilerSettings_set_Language (value) {
    this.TextExpressionCompilerSettings$Language$value = value;
  }; 

  function TextExpressionCompilerSettings_set_LogSourceGenerationMessage (value) {
    this.TextExpressionCompilerSettings$LogSourceGenerationMessage$value = value;
  }; 

  function TextExpressionCompilerSettings_set_RootNamespace (value) {
    this.TextExpressionCompilerSettings$RootNamespace$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompilerSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      TextExpressionCompilerSettings_get_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerSettings_get_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ActivityNamespace", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerSettings_get_ActivityNamespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_AlwaysGenerateSource", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerSettings_get_AlwaysGenerateSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ForImplementation", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerSettings_get_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_GenerateAsPartialClass", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerSettings_get_GenerateAsPartialClass
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Language", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerSettings_get_Language
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LogSourceGenerationMessage", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`1", [$.String])), 
      TextExpressionCompilerSettings_get_LogSourceGenerationMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RootNamespace", 
      JSIL.MethodSignature.Return($.String), 
      TextExpressionCompilerSettings_get_RootNamespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      TextExpressionCompilerSettings_set_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerSettings_set_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityNamespace", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerSettings_set_ActivityNamespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AlwaysGenerateSource", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerSettings_set_AlwaysGenerateSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ForImplementation", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerSettings_set_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_GenerateAsPartialClass", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerSettings_set_GenerateAsPartialClass
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Language", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerSettings_set_Language
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LogSourceGenerationMessage", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Action`1", [$.String])), 
      TextExpressionCompilerSettings_set_LogSourceGenerationMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RootNamespace", 
      JSIL.MethodSignature.Action($.String), 
      TextExpressionCompilerSettings_set_RootNamespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$Activity$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$ActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$ActivityNamespace$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$AlwaysGenerateSource$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$ForImplementation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$Language$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$RootNamespace$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$LogSourceGenerationMessage$value", $asm07.TypeRef("System.Action`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerSettings$GenerateAsPartialClass$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String);

    $.Property({Static:false, Public:true }, "ActivityNamespace", $.String);

    $.Property({Static:false, Public:true }, "AlwaysGenerateSource", $.Boolean);

    $.Property({Static:false, Public:true }, "ForImplementation", $.Boolean);

    $.Property({Static:false, Public:true }, "Language", $.String);

    $.Property({Static:false, Public:true }, "RootNamespace", $.String);

    $.Property({Static:false, Public:true }, "LogSourceGenerationMessage", $asm07.TypeRef("System.Action`1", [$.String]));

    $.Property({Static:false, Public:true }, "GenerateAsPartialClass", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.TextExpressionCompilerResults */ 

(function TextExpressionCompilerResults$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Type)) ();
  };




  function TextExpressionCompilerResults_get_HasErrors () {
    return this.TextExpressionCompilerResults$HasErrors$value;
  }; 

  function TextExpressionCompilerResults_get_HasSourceInfo () {
    return this.TextExpressionCompilerResults$HasSourceInfo$value;
  }; 

  function TextExpressionCompilerResults_get_ResultType () {
    return this.TextExpressionCompilerResults$ResultType$value;
  }; 

  function TextExpressionCompilerResults_set_HasErrors (value) {
    this.TextExpressionCompilerResults$HasErrors$value = value;
  }; 

  function TextExpressionCompilerResults_set_HasSourceInfo (value) {
    this.TextExpressionCompilerResults$HasSourceInfo$value = value;
  }; 

  function TextExpressionCompilerResults_set_ResultType (value) {
    this.TextExpressionCompilerResults$ResultType$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.XamlIntegration.TextExpressionCompilerResults", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompilerMessages", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerError")]))
    );

    $.Method({Static:false, Public:true }, "get_HasErrors", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerResults_get_HasErrors
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HasSourceInfo", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextExpressionCompilerResults_get_HasSourceInfo
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ResultType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      TextExpressionCompilerResults_get_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasErrors", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerResults_set_HasErrors
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasSourceInfo", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextExpressionCompilerResults_set_HasSourceInfo
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ResultType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      TextExpressionCompilerResults_set_ResultType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetMessages", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerError")]), $.Boolean])
    );

    $.Field({Static:false, Public:false}, "messages", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerError")]));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerResults$ResultType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerResults$HasErrors$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextExpressionCompilerResults$HasSourceInfo$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ResultType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "HasErrors", $.Boolean);

    $.Property({Static:false, Public:true }, "HasSourceInfo", $.Boolean);

    $.Property({Static:false, Public:true }, "CompilerMessages", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.XamlIntegration.TextExpressionCompilerError")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.WorkflowIdentityConverter */ 

(function WorkflowIdentityConverter$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Activities.XamlIntegration.WorkflowIdentityConverter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.XamlIntegration.XamlWriterExtensions */ 

(function XamlWriterExtensions$Members () {
  var $, $thisType;













  JSIL.MakeStaticClass("System.Activities.XamlIntegration.XamlWriterExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "PropagateLineInfo", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "PropagateLineInfo", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Transform", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.XamlWriter"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "WriteEndMember", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteEndObject", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteGetObject", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteNamespace", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteNode", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.XamlReader"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteStartMember", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteStartMember", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.XamlMember"), 
          $.Int32, $.Int32
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteStartObject", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $asm2D.TypeRef("System.Xaml.XamlType"), 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteValue", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlWriter"), $.Object, 
          $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.Hosting.BookmarkInfo */ 

(function BookmarkInfo$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.BookmarkInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ScopeInfo", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedScopeInfo", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BookmarkName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ScopeInfo", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedScopeInfo", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
    );

    $.Field({Static:false, Public:false}, "bookmarkName", $.String);

    $.Field({Static:false, Public:false}, "scopeInfo", $asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"));

    $.Field({Static:false, Public:false}, "ownerDisplayName", $.String);

    $.Property({Static:false, Public:true }, "BookmarkName", $.String);

    $.Property({Static:false, Public:true }, "OwnerDisplayName", $.String);

    $.Property({Static:false, Public:true }, "ScopeInfo", $asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwnerDisplayName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedScopeInfo", $asm0B.TypeRef("System.Activities.Hosting.BookmarkScopeInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Hosting.BookmarkScopeInfo */ 

(function BookmarkScopeInfo$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.BookmarkScopeInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedTemporaryId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TemporaryId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedTemporaryId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_TemporaryId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "id", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "temporaryId", $.String);

    $.Property({Static:false, Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:false, Public:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "TemporaryId", $.String);

    $.Property({Static:false, Public:false}, "SerializedId", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedTemporaryId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* interface System.Activities.Hosting.IWorkflowInstanceExtension */ 

JSIL.MakeInterface(
  "System.Activities.Hosting.IWorkflowInstanceExtension", true, [], function ($) {
    $.Method({}, "GetAdditionalExtensions", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object])));
    $.Method({}, "SetInstance", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceProxy")));
  }, []);

/* class System.Activities.Hosting.LocationInfo */ 

(function LocationInfo$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.LocationInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedValue", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "ownerDisplayName", $.String);

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "OwnerDisplayName", $.String);

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwnerDisplayName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedValue", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Hosting.SymbolResolver */ 

(function SymbolResolver$Members () {
  var $, $thisType;



























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.SymbolResolver", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AsLocationReferenceEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Hosting.SymbolResolver+ExternalLocationReference"), [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.Hosting.SymbolResolver_$lGetEnumerator$gd__22.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$.String, $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocationReferenceEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")])]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.Hosting.SymbolResolver_$lGetLocationReferenceEnumerator$gd__23.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReference")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false}, "TryGetLocationReference", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.Field({Static:false, Public:false}, "symbols", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver+ExternalLocationReference")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:true , Virtual:true }, "Values", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 3 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.Hosting.SymbolResolver+SymbolResolverLocationReferenceEnvironment */ 

(function SymbolResolverLocationReferenceEnvironment$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
      Name: "System.Activities.Hosting.SymbolResolver+SymbolResolverLocationReferenceEnvironment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Root", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocationReferences", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.LocationReference")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsVisible", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.LocationReference")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetLocationReference", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.LocationReference")])])
    );

    $.Field({Static:false, Public:false}, "symbolResolver", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Property({Static:false, Public:true , Virtual:true }, "Root", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.SymbolResolver+ExternalLocationReference */ 

(function ExternalLocationReference$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.LocationReference"), 
      Name: "System.Activities.Hosting.SymbolResolver+ExternalLocationReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Location", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_NameCore", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_TypeCore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.ActivityContext")])
    );

    $.Field({Static:false, Public:false}, "location", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver+ExternalLocationReference+ExternalLocation"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "Location", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false, Virtual:true }, "NameCore", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "TypeCore", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.SymbolResolver+ExternalLocationReference+ExternalLocation */ 

(function ExternalLocation$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location"), 
      Name: "System.Activities.Hosting.SymbolResolver+ExternalLocationReference+ExternalLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocationType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ValueCore", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_ValueCore", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "value", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "LocationType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "ValueCore", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.SymbolResolver+<GetEnumerator>d__22 */ 

(function $lGetEnumerator$gd__22$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.SymbolResolver+<GetEnumerator>d__22", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.String"), $asm07.TypeRef("System.Object")])]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.Dictionary`2+Enumerator", [$.String, $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver+ExternalLocationReference")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 1 */ $asm07.TypeRef("System.IDisposable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Hosting.SymbolResolver+<GetLocationReferenceEnumerator>d__23 */ 

(function $lGetLocationReferenceEnumerator$gd__23$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.SymbolResolver+<GetLocationReferenceEnumerator>d__23", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Activities.LocationReference$g$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")])]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.String"), $asm0B.TypeRef("System.Activities.LocationReference")])]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Activities.LocationReference$g$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.String"), $asm0B.TypeRef("System.Activities.LocationReference")])]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.Dictionary`2+Enumerator", [$.String, $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver+ExternalLocationReference")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Activities.LocationReference$g$g.Current", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")])]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $asm0B.TypeRef("System.Activities.LocationReference")])]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionCollection */ 

(function WorkflowInstanceExtensionCollection$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddInstanceExtension", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheExtension", 
      new JSIL.MethodSignature(null, ["!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheExtension", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Find", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindAll", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindAll", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$.Boolean], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.Hosting.WorkflowInstanceExtensionCollection_$lFindAll$gd__25$b1.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "get_HasPersistenceModule", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasTrackingParticipant", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowInstanceExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceExtensions", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$.Boolean], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm0B.System.Activities.Hosting.WorkflowInstanceExtensionCollection_$lGetInstanceExtensions$gd__26$b1.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SetInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetCachedExtension", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.Field({Static:false, Public:false}, "instanceExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider"), $.Object])]));

    $.Field({Static:false, Public:false}, "additionalInstanceExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "allSingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "hasTrackingParticipant", $.Boolean);

    $.Field({Static:false, Public:false}, "hasPersistenceModule", $.Boolean);

    $.Field({Static:false, Public:false}, "shouldSetInstanceForInstanceExtensions", $.Boolean);

    $.Field({Static:false, Public:false}, "singleTypeCache", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Type"), $.Object]));

    $.Field({Static:false, Public:false}, "workflowInstanceExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension")]));

    $.Field({Static:false, Public:false}, "lastTypeCached", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "lastObjectCached", $.Object);

    $.Field({Static:false, Public:false}, "extensionManager", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionManager"));

    $.Property({Static:false, Public:false}, "HasPersistenceModule", $.Boolean);

    $.Property({Static:false, Public:false}, "HasTrackingParticipant", $.Boolean);

    $.Property({Static:false, Public:true }, "HasWorkflowInstanceExtensions", $.Boolean);

    $.Property({Static:false, Public:true }, "WorkflowInstanceExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.IWorkflowInstanceExtension")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionCollection+<FindAll>d__25`1 */ 

(function $lFindAll$gd__25$b1$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionCollection+<FindAll>d__25`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally2", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("T"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionCollection"));

    $.Field({Static:false, Public:false}, "$llastExtension$g5__1", $.GenericParameter("T"));

    $.Field({Static:false, Public:false}, "useObjectTypeForComparison", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__useObjectTypeForComparison", $.Boolean);

    $.Field({Static:false, Public:false}, "$lhasMultiple$g5__2", $.Boolean);

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionCollection+<GetInstanceExtensions>d__26`1 */ 

(function $lGetInstanceExtensions$gd__26$b1$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionCollection+<GetInstanceExtensions>d__26`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lT$g.GetEnumerator", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("T"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionCollection"));

    $.Field({Static:false, Public:false}, "useObjectTypeForComparison", $.Boolean);

    $.Field({Static:false, Public:true }, "$l$g3__useObjectTypeForComparison", $.Boolean);

    $.Field({Static:false, Public:false}, "$li$g5__1", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lT$g.Current", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionProvider */ 

(function WorkflowInstanceExtensionProvider$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function WorkflowInstanceExtensionProvider_get_GeneratedTypeMatchesDeclaredType () {
    return this.WorkflowInstanceExtensionProvider$GeneratedTypeMatchesDeclaredType$value;
  }; 

  function WorkflowInstanceExtensionProvider_get_Type () {
    return this.WorkflowInstanceExtensionProvider$Type$value;
  }; 



  function WorkflowInstanceExtensionProvider_set_GeneratedTypeMatchesDeclaredType (value) {
    this.WorkflowInstanceExtensionProvider$GeneratedTypeMatchesDeclaredType$value = value;
  }; 

  function WorkflowInstanceExtensionProvider_set_Type (value) {
    this.WorkflowInstanceExtensionProvider$Type$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "get_GeneratedTypeMatchesDeclaredType", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstanceExtensionProvider_get_GeneratedTypeMatchesDeclaredType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      WorkflowInstanceExtensionProvider_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "IsMatch", 
      new JSIL.MethodSignature($.Boolean, [$.Object], ["TTarget"])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Method({Static:false, Public:false}, "set_GeneratedTypeMatchesDeclaredType", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstanceExtensionProvider_set_GeneratedTypeMatchesDeclaredType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Type", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      WorkflowInstanceExtensionProvider_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionProvider$Type$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionProvider$GeneratedTypeMatchesDeclaredType$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "GeneratedTypeMatchesDeclaredType", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionProvider`1 */ 

(function WorkflowInstanceExtensionProvider$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionProvider`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false}, "providerFunction", $asm07.TypeRef("System.Func`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "hasGeneratedValue", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.WorkflowInstanceExtensionManager */ 

(function WorkflowInstanceExtensionManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm07.System.Collections.Generic.KeyValuePair$b2.Of($asm07.System.Type, $asm0B.System.Activities.Hosting.WorkflowInstanceExtensionProvider)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm07.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.Hosting.SymbolResolver)) ();
  };









  function WorkflowInstanceExtensionManager_get_ExtensionProviders () {
    return this.WorkflowInstanceExtensionManager$ExtensionProviders$value;
  }; 

  function WorkflowInstanceExtensionManager_get_HasAdditionalSingletonIWorkflowInstanceExtensions () {
    return this.WorkflowInstanceExtensionManager$HasAdditionalSingletonIWorkflowInstanceExtensions$value;
  }; 

  function WorkflowInstanceExtensionManager_get_HasSingletonIWorkflowInstanceExtensions () {
    return this.WorkflowInstanceExtensionManager$HasSingletonIWorkflowInstanceExtensions$value;
  }; 



  function WorkflowInstanceExtensionManager_get_SingletonExtensions () {
    return this.WorkflowInstanceExtensionManager$SingletonExtensions$value;
  }; 

  function WorkflowInstanceExtensionManager_get_SymbolResolver () {
    return this.WorkflowInstanceExtensionManager$SymbolResolver$value;
  }; 



  function WorkflowInstanceExtensionManager_set_ExtensionProviders (value) {
    this.WorkflowInstanceExtensionManager$ExtensionProviders$value = value;
  }; 

  function WorkflowInstanceExtensionManager_set_HasAdditionalSingletonIWorkflowInstanceExtensions (value) {
    this.WorkflowInstanceExtensionManager$HasAdditionalSingletonIWorkflowInstanceExtensions$value = value;
  }; 

  function WorkflowInstanceExtensionManager_set_HasSingletonIWorkflowInstanceExtensions (value) {
    this.WorkflowInstanceExtensionManager$HasSingletonIWorkflowInstanceExtensions$value = value;
  }; 

  function WorkflowInstanceExtensionManager_set_SingletonExtensions (value) {
    this.WorkflowInstanceExtensionManager$SingletonExtensions$value = value;
  }; 

  function WorkflowInstanceExtensionManager_set_SymbolResolver (value) {
    this.WorkflowInstanceExtensionManager$SymbolResolver$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceExtensionManager", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Func`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddAllExtensionTypes", 
      JSIL.MethodSignature.Action($asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "AddExtensionClosure", 
      new JSIL.MethodSignature(null, [
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.List`1", [$.Object])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateInstanceExtensions", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionCollection"), [$asm0B.TypeRef("System.Activities.Activity"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AdditionalSingletonExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]))
    );

    $.Method({Static:false, Public:false}, "get_ExtensionProviders", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])])), 
      WorkflowInstanceExtensionManager_get_ExtensionProviders
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_HasAdditionalSingletonIWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstanceExtensionManager_get_HasAdditionalSingletonIWorkflowInstanceExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_HasSingletonIWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Return($.Boolean), 
      WorkflowInstanceExtensionManager_get_HasSingletonIWorkflowInstanceExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_HasSingletonPersistenceModule", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasSingletonTrackingParticipant", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_SingletonExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      WorkflowInstanceExtensionManager_get_SingletonExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SymbolResolver", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.SymbolResolver")), 
      WorkflowInstanceExtensionManager_get_SymbolResolver
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetAllSingletonExtensions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "MakeReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_ExtensionProviders", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])])), 
      WorkflowInstanceExtensionManager_set_ExtensionProviders
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasAdditionalSingletonIWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstanceExtensionManager_set_HasAdditionalSingletonIWorkflowInstanceExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_HasSingletonIWorkflowInstanceExtensions", 
      JSIL.MethodSignature.Action($.Boolean), 
      WorkflowInstanceExtensionManager_set_HasSingletonIWorkflowInstanceExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SingletonExtensions", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      WorkflowInstanceExtensionManager_set_SingletonExtensions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SymbolResolver", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.SymbolResolver")), 
      WorkflowInstanceExtensionManager_set_SymbolResolver
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "EmptyExtensionProviders", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])]));

    $.Field({Static:true , Public:false}, "EmptySingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "isReadonly", $.Boolean);

    $.Field({Static:false, Public:false}, "additionalSingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "allSingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Field({Static:false, Public:false}, "hasSingletonTrackingParticipant", $.Boolean);

    $.Field({Static:false, Public:false}, "hasSingletonPersistenceModule", $.Boolean);

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionManager$SymbolResolver$value", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionManager$SingletonExtensions$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionManager$ExtensionProviders$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionManager$HasSingletonIWorkflowInstanceExtensions$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowInstanceExtensionManager$HasAdditionalSingletonIWorkflowInstanceExtensions$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SymbolResolver", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Property({Static:false, Public:false}, "SingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:false}, "AdditionalSingletonExtensions", $asm07.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:false}, "ExtensionProviders", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.Type"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstanceExtensionProvider")])]));

    $.Property({Static:false, Public:false}, "HasSingletonIWorkflowInstanceExtensions", $.Boolean);

    $.Property({Static:false, Public:false}, "HasSingletonTrackingParticipant", $.Boolean);

    $.Property({Static:false, Public:false}, "HasSingletonPersistenceModule", $.Boolean);

    $.Property({Static:false, Public:false}, "HasAdditionalSingletonIWorkflowInstanceExtensions", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Hosting.WorkflowInstanceProxy */ 

(function WorkflowInstanceProxy$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Hosting.WorkflowInstanceProxy", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowDefinition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:false}, "instance", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"));

    $.Property({Static:false, Public:true }, "Id", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "WorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Hosting.WorkflowInstanceState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Hosting.WorkflowInstanceState", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Idle: 0, 
    Runnable: 1, 
    Complete: 2, 
    Aborted: 3, 
  }
);

/* class System.Activities.Validation.ActivityValidationServices */ 

(function ActivityValidationServices$Members () {
  var $, $thisType;















  JSIL.MakeStaticClass("System.Activities.Validation.ActivityValidationServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CreateExceptionFromValidationErrors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]), $asm0B.TypeRef("System.Activities.Validation.ActivityValidationServices+ExceptionReason")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateExceptionString", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]), $asm0B.TypeRef("System.Activities.Validation.ActivityValidationServices+ExceptionReason")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateValidationErrorPrefix", 
      new JSIL.MethodSignature($.String, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetBoundRuntimeArgument", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.RuntimeArgument"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetChildren", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Activity")]), [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "HasErrors", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "Resolve", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "RunConstraints", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")]), $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowIfViolationsExist", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]), $asm0B.TypeRef("System.Activities.Validation.ActivityValidationServices+ExceptionReason")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationResults"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Validate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationResults"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Validation.ValidationSettings")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateArguments", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateEvaluationOrder", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateRootInputs", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "EmptyChildren", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:true , Public:false}, "defaultSettings", $asm0B.TypeRef("System.Activities.Validation.ValidationSettings"));

    $.Field({Static:true , Public:false}, "EmptyValidationErrors", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ActivityValidationServices+InternalActivityValidationServices */ 

(function InternalActivityValidationServices$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ActivityValidationServices+InternalActivityValidationServices", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Validation.ValidationSettings"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalValidate", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Validation.ValidationResults"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateElement", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateExpressionSubtree", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")])
    );

    $.Field({Static:false, Public:false}, "settings", $asm0B.TypeRef("System.Activities.Validation.ValidationSettings"));

    $.Field({Static:false, Public:false}, "rootToValidate", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "errors", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "options", $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"));

    $.Field({Static:false, Public:false}, "expressionRoot", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Validation.ActivityValidationServices+ExceptionReason */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Validation.ActivityValidationServices+ExceptionReason", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    InvalidTree: 0, 
    InvalidNullInputs: 1, 
    InvalidNonNullInputs: 2, 
  }
);

/* class System.Activities.Validation.ActivityValidationServices+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ActivityValidationServices+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateRootInputs$gb__9_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Validation.AddValidationError */ 

(function AddValidationError$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.String))) ();
  };





  function AddValidationError_get_IsWarning () {
    return this.AddValidationError$IsWarning$value;
  }; 

  function AddValidationError_get_Message () {
    return this.AddValidationError$Message$value;
  }; 

  function AddValidationError_get_PropertyName () {
    return this.AddValidationError$PropertyName$value;
  }; 

  function AddValidationError_set_IsWarning (value) {
    this.AddValidationError$IsWarning$value = value;
  }; 

  function AddValidationError_set_Message (value) {
    this.AddValidationError$Message$value = value;
  }; 

  function AddValidationError_set_PropertyName (value) {
    this.AddValidationError$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Validation.AddValidationError", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_IsWarning", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AddValidationError_get_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AddValidationError_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AddValidationError_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsWarning", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AddValidationError_set_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AddValidationError_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AddValidationError_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AddValidationError$Message$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AddValidationError$IsWarning$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AddValidationError$PropertyName$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]));

    $.Property({Static:false, Public:true }, "IsWarning", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "PropertyName", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.AssertValidation */ 

(function AssertValidation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm07.System.String))) ();
  };





  function AssertValidation_get_Assertion () {
    return this.AssertValidation$Assertion$value;
  }; 

  function AssertValidation_get_IsWarning () {
    return this.AssertValidation$IsWarning$value;
  }; 

  function AssertValidation_get_Message () {
    return this.AssertValidation$Message$value;
  }; 

  function AssertValidation_get_PropertyName () {
    return this.AssertValidation$PropertyName$value;
  }; 

  function AssertValidation_set_Assertion (value) {
    this.AssertValidation$Assertion$value = value;
  }; 

  function AssertValidation_set_IsWarning (value) {
    this.AssertValidation$IsWarning$value = value;
  }; 

  function AssertValidation_set_Message (value) {
    this.AssertValidation$Message$value = value;
  }; 

  function AssertValidation_set_PropertyName (value) {
    this.AssertValidation$PropertyName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Validation.AssertValidation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.Method({Static:false, Public:true }, "get_Assertion", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AssertValidation_get_Assertion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsWarning", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AssertValidation_get_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AssertValidation_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AssertValidation_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Assertion", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AssertValidation_set_Assertion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsWarning", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean])), 
      AssertValidation_set_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Message", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AssertValidation_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyName", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$.String])), 
      AssertValidation_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AssertValidation$Assertion$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AssertValidation$Message$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AssertValidation$IsWarning$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "AssertValidation$PropertyName$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Assertion", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]));

    $.Property({Static:false, Public:true }, "Message", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]));

    $.Property({Static:false, Public:true }, "IsWarning", $asm0B.TypeRef("System.Activities.InArgument`1", [$.Boolean]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "PropertyName", $asm0B.TypeRef("System.Activities.InArgument`1", [$.String]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.Constraint`1 */ 

(function Constraint$b1$Members () {
  var $, $thisType;



  function Constraint$b1_get_Body () {
    return this.Constraint$b1$Body$value;
  }; 


  function Constraint$b1_set_Body (value) {
    this.Constraint$b1$Body$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Validation.Constraint"), 
      Name: "System.Activities.Validation.Constraint`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CacheMetadata", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityMetadata"))
    );

    $.Method({Static:false, Public:true }, "get_Body", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Validation.ValidationContext")]), null), 
      Constraint$b1_get_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnExecute", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $.Object, 
          $asm0B.TypeRef("System.Activities.Validation.ValidationContext")
        ])
    );

    $.Method({Static:false, Public:true }, "set_Body", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Validation.ValidationContext")])]), 
      Constraint$b1_set_Body
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Constraint$b1$Body$value", $asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Validation.ValidationContext")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Body", $asm0B.TypeRef("System.Activities.ActivityAction`2", [$.GenericParameter("T"), $asm0B.TypeRef("System.Activities.Validation.ValidationContext")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Body"]; });

})();

/* class System.Activities.Validation.ValidationError */ 

(function ValidationError$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Object)) ();
  };









  function ValidationError_get_Id () {
    return this.ValidationError$Id$value;
  }; 

  function ValidationError_get_IsWarning () {
    return this.ValidationError$IsWarning$value;
  }; 

  function ValidationError_get_Message () {
    return this.ValidationError$Message$value;
  }; 

  function ValidationError_get_PropertyName () {
    return this.ValidationError$PropertyName$value;
  }; 


  function ValidationError_get_SourceDetail () {
    return this.ValidationError$SourceDetail$value;
  }; 

  function ValidationError_set_Id (value) {
    this.ValidationError$Id$value = value;
  }; 

  function ValidationError_set_IsWarning (value) {
    this.ValidationError$IsWarning$value = value;
  }; 

  function ValidationError_set_Message (value) {
    this.ValidationError$Message$value = value;
  }; 

  function ValidationError_set_PropertyName (value) {
    this.ValidationError$PropertyName$value = value;
  }; 


  function ValidationError_set_SourceDetail (value) {
    this.ValidationError$SourceDetail$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationError", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.String, $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.String, $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.Method({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String), 
      ValidationError_get_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsWarning", 
      JSIL.MethodSignature.Return($.Boolean), 
      ValidationError_get_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String), 
      ValidationError_get_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyName", 
      JSIL.MethodSignature.Return($.String), 
      ValidationError_get_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:true }, "get_SourceDetail", 
      JSIL.MethodSignature.Return($.Object), 
      ValidationError_get_SourceDetail
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.String), 
      ValidationError_set_Id
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsWarning", 
      JSIL.MethodSignature.Action($.Boolean), 
      ValidationError_set_IsWarning
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Message", 
      JSIL.MethodSignature.Action($.String), 
      ValidationError_set_Message
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PropertyName", 
      JSIL.MethodSignature.Action($.String), 
      ValidationError_set_PropertyName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Source", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:false}, "set_SourceDetail", 
      JSIL.MethodSignature.Action($.Object), 
      ValidationError_set_SourceDetail
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "source", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "ValidationError$Message$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationError$IsWarning$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationError$PropertyName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationError$Id$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationError$SourceDetail$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Message", $.String);

    $.Property({Static:false, Public:true }, "IsWarning", $.Boolean);

    $.Property({Static:false, Public:true }, "PropertyName", $.String);

    $.Property({Static:false, Public:true }, "Id", $.String);

    $.Property({Static:false, Public:true }, "Source", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "SourceDetail", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ExtensionMethods */ 

(function ExtensionMethods$Members () {
  var $, $thisType;








  JSIL.MakeStaticClass("System.Activities.Validation.ExtensionMethods", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "AsCommaSeparatedValues", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String])])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "BinarySearch", 
      new JSIL.MethodSignature($.Int32, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), "!!0", 
          $asm07.TypeRef("System.Collections.Generic.IComparer`1", ["!!0"])
        ], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "BinarySearch", 
      new JSIL.MethodSignature($.Int32, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $.Int32, 
          $.Int32, "!!0", 
          $asm07.TypeRef("System.Collections.Generic.IComparer`1", ["!!0"])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsNullOrEmpty", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.ICollection")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "QuickSort", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IComparer`1", ["!!0"])], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "QuickSort", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $.Int32, 
          $.Int32, $asm07.TypeRef("System.Collections.Generic.IComparer`1", ["!!0"])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "Swap", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.Validation.GetChildSubtree */ 

(function GetChildSubtree$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Validation.ValidationContext))) ();
  };




  function GetChildSubtree_get_ValidationContext () {
    return this.GetChildSubtree$ValidationContext$value;
  }; 

  function GetChildSubtree_set_ValidationContext (value) {
    this.GetChildSubtree$ValidationContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]), 
      Name: "System.Activities.Validation.GetChildSubtree", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_ValidationContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetChildSubtree_get_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValidationContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetChildSubtree_set_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "GetChildSubtree$ValidationContext$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ValidationContext", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.GetParentChain */ 

(function GetParentChain$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Validation.ValidationContext))) ();
  };




  function GetParentChain_get_ValidationContext () {
    return this.GetParentChain$ValidationContext$value;
  }; 

  function GetParentChain_set_ValidationContext (value) {
    this.GetParentChain$ValidationContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]), 
      Name: "System.Activities.Validation.GetParentChain", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_ValidationContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetParentChain_get_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValidationContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetParentChain_set_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "GetParentChain$ValidationContext$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ValidationContext", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.GetWorkflowTree */ 

(function GetWorkflowTree$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.InArgument$b1.Of($asm0B.System.Activities.Validation.ValidationContext))) ();
  };




  function GetWorkflowTree_get_ValidationContext () {
    return this.GetWorkflowTree$ValidationContext$value;
  }; 

  function GetWorkflowTree_set_ValidationContext (value) {
    this.GetWorkflowTree$ValidationContext$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.CodeActivity`1", [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])]), 
      Name: "System.Activities.Validation.GetWorkflowTree", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.CodeActivityContext")])
    );

    $.Method({Static:false, Public:true }, "get_ValidationContext", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetWorkflowTree_get_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValidationContext", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")])), 
      GetWorkflowTree_set_ValidationContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "GetWorkflowTree$ValidationContext$value", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ValidationContext", $asm0B.TypeRef("System.Activities.InArgument`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationContext")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ValidationContext */ 

(function ValidationContext$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"), 
          $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddGetChildrenErrors", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetChildren", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetParents", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetWorkflowTree", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"));

    $.Field({Static:false, Public:false}, "parentChain", $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack"));

    $.Field({Static:false, Public:false}, "environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "getChildrenErrors", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "options", $asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"));

    $.Property({Static:false, Public:false}, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ValidationHelper */ 

(function ValidationHelper$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.Activities.Validation.ValidationHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CheckIfArgumentIsBound", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckIfArgumentIsNotBound", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:true , Public:true }, "GatherAndValidateOverloads", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetOverloadGroupEquivalence", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"), [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])])])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateArguments", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateOverloadGroupDefinitions", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")])])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo */ 

(function OverloadGroupEquivalenceInfo$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationHelper+OverloadGroupEquivalenceInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddToDictionary", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])])]), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisjointGroupsDictionary", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EquivalentGroupsDictionary", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OverlappingGroupsDictionary", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SupersetOfGroupsDictionary", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsDisjoint", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsEquivalent", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsOverlapping", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsSuperset", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.Field({Static:false, Public:false}, "equivalentGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Field({Static:false, Public:false}, "supersetOfGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Field({Static:false, Public:false}, "overlappingGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Field({Static:false, Public:false}, "disjointGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Property({Static:false, Public:true }, "EquivalentGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Property({Static:false, Public:true }, "SupersetOfGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Property({Static:false, Public:true }, "OverlappingGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));

    $.Property({Static:false, Public:true }, "DisjointGroupsDictionary", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Collections.Generic.List`1", [$.String])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ValidationHelper+<>c__DisplayClass0_0 */ 

(function $l$gc__DisplayClass0_0$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationHelper+<>c__DisplayClass0_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__1", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__3", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__4", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:false, Public:true }, "inputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:true }, "$l$g9__1", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));

    $.Field({Static:false, Public:true }, "$l$g9__3", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Validation.ValidationHelper+<>c__DisplayClass0_1 */ 

(function $l$gc__DisplayClass0_1$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationHelper+<>c__DisplayClass0_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__5", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__6", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Field({Static:false, Public:true }, "configurationResults", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Boolean]));

    $.Field({Static:false, Public:true }, "$l$g9__5", $asm07.TypeRef("System.Func`2", [$.String, $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Validation.ValidationHelper+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationHelper+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__0_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__0_2", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateArguments$gb__0_7", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateOverloadGroupDefinitions$gb__2_0", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateOverloadGroupDefinitions$gb__2_1", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lValidateOverloadGroupDefinitions$gb__2_2", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__0_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__0_2", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));

    $.Field({Static:true , Public:true }, "$l$g9__0_7", $asm07.TypeRef("System.Func`2", [$.String, $.String]));

    $.Field({Static:true , Public:true }, "$l$g9__2_0", $asm07.TypeRef("System.Func`2", [$.String, $.String]));

    $.Field({Static:true , Public:true }, "$l$g9__2_1", $asm07.TypeRef("System.Func`2", [$.String, $.String]));

    $.Field({Static:true , Public:true }, "$l$g9__2_2", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Validation.ValidationResults */ 

(function ValidationResults$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationResults", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Errors", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Warnings", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessAllValidationErrors", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "allValidationErrors", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "errors", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "warnings", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Field({Static:false, Public:false}, "processedAllValidationErrors", $.Boolean);

    $.Property({Static:false, Public:true }, "Errors", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));

    $.Property({Static:false, Public:true }, "Warnings", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Validation.ValidationError")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Validation.ValidationSettings */ 

(function ValidationSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Threading.CancellationToken)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function ValidationSettings_get_CancellationToken () {
    return this.ValidationSettings$CancellationToken$value;
  }; 

  function ValidationSettings_get_Environment () {
    return this.ValidationSettings$Environment$value;
  }; 


  function ValidationSettings_get_OnlyUseAdditionalConstraints () {
    return this.ValidationSettings$OnlyUseAdditionalConstraints$value;
  }; 

  function ValidationSettings_get_PrepareForRuntime () {
    return this.ValidationSettings$PrepareForRuntime$value;
  }; 

  function ValidationSettings_get_SingleLevel () {
    return this.ValidationSettings$SingleLevel$value;
  }; 

  function ValidationSettings_get_SkipValidatingRootConfiguration () {
    return this.ValidationSettings$SkipValidatingRootConfiguration$value;
  }; 

  function ValidationSettings_set_CancellationToken (value) {
    this.ValidationSettings$CancellationToken$value = value.MemberwiseClone();
  }; 

  function ValidationSettings_set_Environment (value) {
    this.ValidationSettings$Environment$value = value;
  }; 

  function ValidationSettings_set_OnlyUseAdditionalConstraints (value) {
    this.ValidationSettings$OnlyUseAdditionalConstraints$value = value;
  }; 

  function ValidationSettings_set_PrepareForRuntime (value) {
    this.ValidationSettings$PrepareForRuntime$value = value;
  }; 

  function ValidationSettings_set_SingleLevel (value) {
    this.ValidationSettings$SingleLevel$value = value;
  }; 

  function ValidationSettings_set_SkipValidatingRootConfiguration (value) {
    this.ValidationSettings$SkipValidatingRootConfiguration$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Validation.ValidationSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AdditionalConstraints", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")])]))
    );

    $.Method({Static:false, Public:true }, "get_CancellationToken", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.CancellationToken")), 
      ValidationSettings_get_CancellationToken
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Environment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ValidationSettings_get_Environment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_HasAdditionalConstraints", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_OnlyUseAdditionalConstraints", 
      JSIL.MethodSignature.Return($.Boolean), 
      ValidationSettings_get_OnlyUseAdditionalConstraints
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PrepareForRuntime", 
      JSIL.MethodSignature.Return($.Boolean), 
      ValidationSettings_get_PrepareForRuntime
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SingleLevel", 
      JSIL.MethodSignature.Return($.Boolean), 
      ValidationSettings_get_SingleLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SkipValidatingRootConfiguration", 
      JSIL.MethodSignature.Return($.Boolean), 
      ValidationSettings_get_SkipValidatingRootConfiguration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CancellationToken", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.CancellationToken")), 
      ValidationSettings_set_CancellationToken
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Environment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      ValidationSettings_set_Environment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OnlyUseAdditionalConstraints", 
      JSIL.MethodSignature.Action($.Boolean), 
      ValidationSettings_set_OnlyUseAdditionalConstraints
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PrepareForRuntime", 
      JSIL.MethodSignature.Action($.Boolean), 
      ValidationSettings_set_PrepareForRuntime
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SingleLevel", 
      JSIL.MethodSignature.Action($.Boolean), 
      ValidationSettings_set_SingleLevel
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SkipValidatingRootConfiguration", 
      JSIL.MethodSignature.Action($.Boolean), 
      ValidationSettings_set_SkipValidatingRootConfiguration
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "additionalConstraints", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")])]));

    $.Field({Static:false, Public:false}, "ValidationSettings$CancellationToken$value", $asm07.TypeRef("System.Threading.CancellationToken"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationSettings$SingleLevel$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationSettings$SkipValidatingRootConfiguration$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationSettings$OnlyUseAdditionalConstraints$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationSettings$PrepareForRuntime$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValidationSettings$Environment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CancellationToken", $asm07.TypeRef("System.Threading.CancellationToken"));

    $.Property({Static:false, Public:true }, "SingleLevel", $.Boolean);

    $.Property({Static:false, Public:true }, "SkipValidatingRootConfiguration", $.Boolean);

    $.Property({Static:false, Public:true }, "OnlyUseAdditionalConstraints", $.Boolean);

    $.Property({Static:false, Public:true }, "PrepareForRuntime", $.Boolean);

    $.Property({Static:false, Public:true }, "Environment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:false}, "HasAdditionalConstraints", $.Boolean);

    $.Property({Static:false, Public:true }, "AdditionalConstraints", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Validation.Constraint")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.DynamicUpdate");
/* class System.Activities.DynamicUpdate.ActivityBlockingUpdate */ 

(function ActivityBlockingUpdate$Members () {
  var $, $thisType;
























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ActivityBlockingUpdate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddBlockingActivity", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])]), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddBlockingActivity", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])]), $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OriginalActivityId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivityInstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOriginalActivityId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedUpdatedActivityId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdatedActivityId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ActivityInstanceId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OriginalActivityId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivityInstanceId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOriginalActivityId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedUpdatedActivityId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_UpdatedActivityId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activityInstanceId", $.String);

    $.Field({Static:false, Public:false}, "originalActivityId", $.String);

    $.Field({Static:false, Public:false}, "updatedActivityId", $.String);

    $.Field({Static:false, Public:false}, "reason", $.String);

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ActivityInstanceId", $.String);

    $.Property({Static:false, Public:true }, "OriginalActivityId", $.String);

    $.Property({Static:false, Public:true }, "UpdatedActivityId", $.String);

    $.Property({Static:false, Public:true }, "Reason", $.String);

    $.Property({Static:false, Public:false}, "SerializedActivityInstanceId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOriginalActivityId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedUpdatedActivityId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedReason", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.ActivityComparer */ 

(function ActivityComparer$Members () {
  var $, $thisType;
















  JSIL.MakeStaticClass("System.Activities.DynamicUpdate.ActivityComparer", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "AreVariableNamesIdentical", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareArgumentEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareChildEquality", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.IdSpace"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.IdSpace")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareDelegateArgumentEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.DelegateArgument"), $asm0B.TypeRef("System.Activities.DelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareDelegateEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareRuntimeDelegateArgumentEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"), $asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareVariableEquality", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDeclaredChildren", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Activity")]), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDeclaredDelegates", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.ActivityDelegate")]), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "HasPrivateMemberOtherThanArgumentsChanged", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsAnyNameless", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Variable")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "ListEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "ListEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "ListEquals", 
      new JSIL.MethodSignature($.Boolean, [
          $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), $asm07.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), 
          $asm07.TypeRef("System.Func`3", [
              "!!0", "!!0", 
              $.Boolean
            ])
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:true }, "SignatureEquals", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.ActivityComparer+PrivateIdSpaceMatcher */ 

(function PrivateIdSpaceMatcher$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ActivityComparer+PrivateIdSpaceMatcher", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer"), $asm0B.TypeRef("System.Activities.IdSpace"), 
          $asm0B.TypeRef("System.Activities.IdSpace")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddEqualChildren", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompareDelegateEqualityAndAddActivitiesPair", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompareVariableEqualityAndAddActivitiesPair", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIndexOfNextSubtreeRoot", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.IdSpace"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Match", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareToMatchSubtree", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryMatchingArguments", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryPreparingArgumentExpressions", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:false, Public:false}, "privateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "nestedFinalizer", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer"));

    $.Field({Static:false, Public:false}, "originalPrivateIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Field({Static:false, Public:false}, "updatedPrivateIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Field({Static:false, Public:false}, "matchedActivities", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm07.TypeRef("System.Tuple`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])]));

    $.Field({Static:false, Public:false}, "argumentChangeDetected", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.ActivityComparer+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ActivityComparer+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lIsAnyNameless$gb__6_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__6_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Variable"), $.Boolean]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.ActivityComparer+<>c__DisplayClass7_0 */ 

(function $l$gc__DisplayClass7_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ActivityComparer+<>c__DisplayClass7_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetDeclaredChildren$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:true }, "parent", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.ActivityComparer+<>c__DisplayClass8_0 */ 

(function $l$gc__DisplayClass8_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ActivityComparer+<>c__DisplayClass8_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetDeclaredDelegates$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.Field({Static:false, Public:true }, "parentActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.UpdateMapMetadata */ 

(function UpdateMapMetadata$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.UpdateMapMetadata", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AllowUpdateInsideThisActivity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AreMatch", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AreMatch", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.ExternalMethod({Static:false, Public:true }, "DisallowUpdateInsideThisActivity", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Finalizer", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsUpdateExplicitlyAllowedOrDisallowed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_TargetActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsChild", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsReferenceToImportedChild", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsReferenceToImportedChild", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "finalizer", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"));

    $.Field({Static:false, Public:false}, "matcher", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"));

    $.Field({Static:false, Public:false}, "targetActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Property({Static:false, Public:false}, "IsUpdateExplicitlyAllowedOrDisallowed", $.Boolean);

    $.Property({Static:false, Public:false}, "Finalizer", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"));

    $.Property({Static:false, Public:false}, "TargetActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.ArgumentInfo */ 

(function ArgumentInfo$Members () {
  var $, $thisType;


































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ArgumentInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeArgument"))
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildArrayTypeSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildAssemblyNameSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildNamespaceTypeName", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildNestedTypeName", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildPointerTypeSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildReferenceTypeSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildSimpleName", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildSimpleTypeSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildTypeName", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildTypeSpec", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Text.StringBuilder"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateVersionlessAssemblyQualifiedTypeName", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FullAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDirection", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFullAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedVersionlessAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "List", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$.Type]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Direction", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FullAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDirection", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ArgumentDirection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFullAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedVersionlessAssemblyQualifiedTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Type", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TypeEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "HasGetTypeBeenAttempted", $.Boolean);

    $.Field({Static:false, Public:false}, "versionlessAssemblyQualifiedTypeName", $.String);

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "fullAssemblyQualifiedTypeName", $.String);

    $.Field({Static:false, Public:false}, "direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:false}, "Type", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "FullAssemblyQualifiedTypeName", $.String);

    $.Property({Static:false, Public:true }, "Direction", $asm0B.TypeRef("System.Activities.ArgumentDirection"));

    $.Property({Static:false, Public:false}, "SerializedVersionlessAssemblyQualifiedTypeName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedFullAssemblyQualifiedTypeName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedDirection", $asm0B.TypeRef("System.Activities.ArgumentDirection"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.ArgumentInfo+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.ArgumentInfo+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lList$gb__33_0", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__33_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateInfo */ 

(function DynamicUpdateInfo$Members () {
  var $, $thisType;







  JSIL.MakeStaticClass("System.Activities.DynamicUpdate.DynamicUpdateInfo", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetMapItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetOriginalActivityBuilder", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityBuilder"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetOriginalDefinition", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetMapItem", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetOriginalActivityBuilder", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.ActivityBuilder")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetOriginalDefinition", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:true , Public:false}, "mapItemProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false}, "originalDefinitionProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:false}, "originalActivityBuilderProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMap */ 

(function DynamicUpdateMap$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };










  function DynamicUpdateMap_get_ArgumentsAreUnknown () {
    return this.DynamicUpdateMap$ArgumentsAreUnknown$value;
  }; 



  function DynamicUpdateMap_get_IsForImplementation () {
    return this.DynamicUpdateMap$IsForImplementation$value;
  }; 

  function DynamicUpdateMap_get_IsImplementationAsRoot () {
    return this.DynamicUpdateMap$IsImplementationAsRoot$value;
  }; 



  function DynamicUpdateMap_get_NewDefinitionMemberCount () {
    return this.DynamicUpdateMap$NewDefinitionMemberCount$value;
  }; 













  function DynamicUpdateMap_set_ArgumentsAreUnknown (value) {
    this.DynamicUpdateMap$ArgumentsAreUnknown$value = value;
  }; 

  function DynamicUpdateMap_set_IsForImplementation (value) {
    this.DynamicUpdateMap$IsForImplementation$value = value;
  }; 

  function DynamicUpdateMap_set_IsImplementationAsRoot (value) {
    this.DynamicUpdateMap$IsImplementationAsRoot$value = value;
  }; 


  function DynamicUpdateMap_set_NewDefinitionMemberCount (value) {
    this.DynamicUpdateMap$NewDefinitionMemberCount$value = (value | 0);
  }; 












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMap", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AddEntry", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AsRootMap", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "CalculateImplementationMapItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CalculateImplementationMapItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CalculateMapItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CalculateMapItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanUseImplementationMapAsRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:false}, "get_ArgumentsAreUnknown", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicUpdateMap_get_ArgumentsAreUnknown
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_DummyMap", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Entries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")]))
    );

    $.Method({Static:false, Public:false}, "get_IsForImplementation", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicUpdateMap_get_IsForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_IsImplementationAsRoot", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicUpdateMap_get_IsImplementationAsRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsNoChanges", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NewArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.Method({Static:false, Public:false}, "get_NewDefinitionMemberCount", 
      JSIL.MethodSignature.Return($.Int32), 
      DynamicUpdateMap_get_NewDefinitionMemberCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_NoChanges", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OldArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OldDefinitionMemberCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedEntries", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNewArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOldArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetUpdatedActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity"), [$asm0B.TypeRef("System.Activities.QualifiedId"), $asm0B.TypeRef("System.Activities.IdSpace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalCalculateMapItems", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Merge", 
      new JSIL.MethodSignature($.Type, [$jsilcore.TypeRef("System.Array", [$.Type])])
    )
      .Parameter(0, "maps", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "Merge", 
      new JSIL.MethodSignature($.Type, [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type])])
    );

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($.Type, [
          $.Type, $.Type, 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Query", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapQuery"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:false}, "set_ArgumentsAreUnknown", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicUpdateMap_set_ArgumentsAreUnknown
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsForImplementation", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicUpdateMap_set_IsForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsImplementationAsRoot", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicUpdateMap_set_IsImplementationAsRoot
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_NewArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.Method({Static:false, Public:false}, "set_NewDefinitionMemberCount", 
      JSIL.MethodSignature.Action($.Int32), 
      DynamicUpdateMap_set_NewDefinitionMemberCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_OldArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedEntries", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNewArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOldArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfInvalid", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfInvalid", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowIfMapsIncompatible", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Type, 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetUpdateEntry", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetUpdateEntryByNewId", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateDefinitionMatchesImplementationMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Int32, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateDefinitionMatchesMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Int32, 
          $.String
        ])
    );

    $.Field({Static:true , Public:false}, "noChanges", $.Type);

    $.Field({Static:true , Public:false}, "dummyMap", $.Type);

    $.Field({Static:false, Public:false}, "entries", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection"));

    $.Field({Static:false, Public:false}, "newArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]));

    $.Field({Static:false, Public:false}, "oldArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]));

    $.Field({Static:false, Public:false}, "DynamicUpdateMap$ArgumentsAreUnknown$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMap$IsImplementationAsRoot$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMap$NewDefinitionMemberCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMap$IsForImplementation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:true }, "NoChanges", $.Type);

    $.Property({Static:false, Public:false}, "SerializedEntries", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNewArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOldArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:true , Public:false}, "DummyMap", $.Type);

    $.Property({Static:false, Public:false}, "NewArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]));

    $.Property({Static:false, Public:false}, "OldArguments", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]));

    $.Property({Static:false, Public:false}, "ArgumentsAreUnknown", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsImplementationAsRoot", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "NewDefinitionMemberCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "OldDefinitionMemberCount", $.Int32);

    $.Property({Static:false, Public:false}, "IsForImplementation", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsNoChanges", $.Boolean);

    $.Property({Static:false, Public:false}, "Entries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"))
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.DynamicUpdateMapConverter.__Type__]; });

})();

/* struct System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity */ 

(function UpdatedActivity$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "IdChanged", $.Boolean);

    $.Field({Static:false, Public:true }, "NewId", $asm0B.TypeRef("System.Activities.QualifiedId"));

    $.Field({Static:false, Public:true }, "Map", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:true }, "MapEntry", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"));

    $.Field({Static:false, Public:true }, "NewActivity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext */ 

(function MergeErrorContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };



  function MergeErrorContext_get_MapIndex () {
    return this.MergeErrorContext$MapIndex$value;
  }; 



  function MergeErrorContext_set_MapIndex (value) {
    this.MergeErrorContext$MapIndex$value = (value | 0);
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_MapIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      MergeErrorContext_get_MapIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "PopIdSpace", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PushIdSpace", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Method({Static:false, Public:true }, "set_MapIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      MergeErrorContext_set_MapIndex
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Throw", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "currentIdSpace", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "MergeErrorContext$MapIndex$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "MapIndex", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection */ 

(function EntryCollection$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.ObjectModel.KeyedCollection`2", [$asm07.TypeRef("System.Int32"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")]), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMap+EntryCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetKeyForItem", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.CollectionDataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder */ 

(function DynamicUpdateMapBuilder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Func$b2.Of($asm0B.System.Activities.Activity, $asm0B.System.Activities.DynamicUpdate.DynamicUpdateMap))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Func$b2.Of($asm07.System.Object, $asm0B.System.Activities.DynamicUpdate.DynamicUpdateMapItem))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Func$b2.Of($asm0B.System.Activities.Activity, $asm07.System.Exception))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Activities.LocationReferenceEnvironment)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };







  function DynamicUpdateMapBuilder_get_ForImplementation () {
    return this.DynamicUpdateMapBuilder$ForImplementation$value;
  }; 

  function DynamicUpdateMapBuilder_get_LookupImplementationMap () {
    return this.DynamicUpdateMapBuilder$LookupImplementationMap$value;
  }; 

  function DynamicUpdateMapBuilder_get_LookupMapItem () {
    return this.DynamicUpdateMapBuilder$LookupMapItem$value;
  }; 

  function DynamicUpdateMapBuilder_get_OnInvalidActivityToBlockUpdate () {
    return this.DynamicUpdateMapBuilder$OnInvalidActivityToBlockUpdate$value;
  }; 

  function DynamicUpdateMapBuilder_get_OnInvalidImplementationMapAssociation () {
    return this.DynamicUpdateMapBuilder$OnInvalidImplementationMapAssociation$value;
  }; 

  function DynamicUpdateMapBuilder_get_OriginalEnvironment () {
    return this.DynamicUpdateMapBuilder$OriginalEnvironment$value;
  }; 

  function DynamicUpdateMapBuilder_get_OriginalWorkflowDefinition () {
    return this.DynamicUpdateMapBuilder$OriginalWorkflowDefinition$value;
  }; 

  function DynamicUpdateMapBuilder_get_UpdatedEnvironment () {
    return this.DynamicUpdateMapBuilder$UpdatedEnvironment$value;
  }; 

  function DynamicUpdateMapBuilder_get_UpdatedWorkflowDefinition () {
    return this.DynamicUpdateMapBuilder$UpdatedWorkflowDefinition$value;
  }; 





  function DynamicUpdateMapBuilder_set_ForImplementation (value) {
    this.DynamicUpdateMapBuilder$ForImplementation$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_LookupImplementationMap (value) {
    this.DynamicUpdateMapBuilder$LookupImplementationMap$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_LookupMapItem (value) {
    this.DynamicUpdateMapBuilder$LookupMapItem$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_OnInvalidActivityToBlockUpdate (value) {
    this.DynamicUpdateMapBuilder$OnInvalidActivityToBlockUpdate$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_OnInvalidImplementationMapAssociation (value) {
    this.DynamicUpdateMapBuilder$OnInvalidImplementationMapAssociation$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_OriginalEnvironment (value) {
    this.DynamicUpdateMapBuilder$OriginalEnvironment$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_OriginalWorkflowDefinition (value) {
    this.DynamicUpdateMapBuilder$OriginalWorkflowDefinition$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_UpdatedEnvironment (value) {
    this.DynamicUpdateMapBuilder$UpdatedEnvironment$value = value;
  }; 

  function DynamicUpdateMapBuilder_set_UpdatedWorkflowDefinition (value) {
    this.DynamicUpdateMapBuilder$UpdatedWorkflowDefinition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CacheMetadata", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $asm0B.TypeRef("System.Activities.ActivityUtilities+ProcessActivityCallback"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisallowUpdateInside", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.Method({Static:false, Public:true }, "get_ForImplementation", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicUpdateMapBuilder_get_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LookupImplementationMap", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])), 
      DynamicUpdateMapBuilder_get_LookupImplementationMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LookupMapItem", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")])), 
      DynamicUpdateMapBuilder_get_LookupMapItem
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OnInvalidActivityToBlockUpdate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")])), 
      DynamicUpdateMapBuilder_get_OnInvalidActivityToBlockUpdate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OnInvalidImplementationMapAssociation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")])), 
      DynamicUpdateMapBuilder_get_OnInvalidImplementationMapAssociation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OriginalEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      DynamicUpdateMapBuilder_get_OriginalEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OriginalWorkflowDefinition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      DynamicUpdateMapBuilder_get_OriginalWorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UpdatedEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      DynamicUpdateMapBuilder_get_UpdatedEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UpdatedWorkflowDefinition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      DynamicUpdateMapBuilder_get_UpdatedWorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetParentEntry", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPublicDeclaredChildren", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessTreeOptions", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ProcessActivityTreeOptions"), [$.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequireProperty", 
      new JSIL.MethodSignature(null, [$.Object, $.String])
    );

    $.Method({Static:false, Public:true }, "set_ForImplementation", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicUpdateMapBuilder_set_ForImplementation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LookupImplementationMap", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])), 
      DynamicUpdateMapBuilder_set_LookupImplementationMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LookupMapItem", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")])), 
      DynamicUpdateMapBuilder_set_LookupMapItem
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OnInvalidActivityToBlockUpdate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")])), 
      DynamicUpdateMapBuilder_set_OnInvalidActivityToBlockUpdate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OnInvalidImplementationMapAssociation", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")])), 
      DynamicUpdateMapBuilder_set_OnInvalidImplementationMapAssociation
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OriginalEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      DynamicUpdateMapBuilder_set_OriginalEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OriginalWorkflowDefinition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      DynamicUpdateMapBuilder_set_OriginalWorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UpdatedEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.LocationReferenceEnvironment")), 
      DynamicUpdateMapBuilder_set_UpdatedEnvironment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UpdatedWorkflowDefinition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      DynamicUpdateMapBuilder_set_UpdatedWorkflowDefinition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "disallowUpdateInside", $asm10.TypeRef("System.Collections.Generic.HashSet`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$ForImplementation$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$LookupMapItem$value", $asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$LookupImplementationMap$value", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$UpdatedEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$UpdatedWorkflowDefinition$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$OriginalEnvironment$value", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$OriginalWorkflowDefinition$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$OnInvalidActivityToBlockUpdate$value", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapBuilder$OnInvalidImplementationMapAssociation$value", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ForImplementation", $.Boolean);

    $.Property({Static:false, Public:true }, "DisallowUpdateInside", $asm0A.TypeRef("System.Collections.Generic.ISet`1", [$asm0B.TypeRef("System.Activities.Activity")]));

    $.Property({Static:false, Public:true }, "LookupMapItem", $asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]));

    $.Property({Static:false, Public:true }, "LookupImplementationMap", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")]));

    $.Property({Static:false, Public:true }, "UpdatedEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "UpdatedWorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "OriginalEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true }, "OriginalWorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "OnInvalidActivityToBlockUpdate", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]));

    $.Property({Static:false, Public:false}, "OnInvalidImplementationMapAssociation", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+ReferenceEqualityComparer */ 

(function ReferenceEqualityComparer$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+ReferenceEqualityComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$.Object])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "Instance", $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.Object]));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$.Object])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Preparer */ 

(function Preparer$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Preparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIdSpace", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetVariable", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Prepare", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessElement", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateOrigin", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "updateableObjects", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]));

    $.Field({Static:false, Public:false}, "originalProgram", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "originalEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Field({Static:false, Public:false}, "forImplementation", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer */ 

(function Finalizer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.DynamicUpdate.DynamicUpdateMapBuilder_DefinitionMatcher)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.Dictionary$b2.Of($asm07.System.String, $asm07.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.String)) ();
  };
















  function Finalizer_get_AllowUpdateInsideCurrentActivity () {
    return this.Finalizer$AllowUpdateInsideCurrentActivity$value;
  }; 


  function Finalizer_get_Matcher () {
    return this.Finalizer$Matcher$value;
  }; 

  function Finalizer_get_SavedOriginalValuesForCurrentActivity () {
    return this.Finalizer$SavedOriginalValuesForCurrentActivity$value;
  }; 

  function Finalizer_get_UpdateDisallowedReason () {
    return this.Finalizer$UpdateDisallowedReason$value;
  }; 






  function Finalizer_set_AllowUpdateInsideCurrentActivity (value) {
    this.Finalizer$AllowUpdateInsideCurrentActivity$value = value;
  }; 

  function Finalizer_set_Matcher (value) {
    this.Finalizer$Matcher$value = value;
  }; 

  function Finalizer_set_SavedOriginalValuesForCurrentActivity (value) {
    this.Finalizer$SavedOriginalValuesForCurrentActivity$value = value;
  }; 

  function Finalizer_set_UpdateDisallowedReason (value) {
    this.Finalizer$UpdateDisallowedReason$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder"))
    );

    $.ExternalMethod({Static:false, Public:false}, "BlockUpdate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason"), 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BlockUpdate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckCanActivityInduceIdle", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckCanArgumentOrVariableDefaultInduceIdle", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForReusedActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateArgumentEntries", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateArgumentEntries", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Activity")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateMapEntry", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateVariableEntries", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DelegateArgumentsChanged", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureEnvironmentUpdateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"))
    );

    $.ExternalMethod({Static:true , Public:false}, "FillEnvironmentMapMemberCounts", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "FinalizeUpdate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])])
    );

    $.Method({Static:false, Public:false}, "get_AllowUpdateInsideCurrentActivity", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$.Boolean])), 
      Finalizer_get_AllowUpdateInsideCurrentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ExpressionRootsThatCanInduceIdle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")]))
    );

    $.Method({Static:false, Public:false}, "get_Matcher", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher")), 
      Finalizer_get_Matcher
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SavedOriginalValuesForCurrentActivity", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])), 
      Finalizer_get_SavedOriginalValuesForCurrentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_UpdateDisallowedReason", 
      JSIL.MethodSignature.Return($.String), 
      Finalizer_get_UpdateDisallowedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetIdleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOriginalArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")]), [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSavedOriginalValueFromParent", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCreateDynamicUpdateMap", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessElement", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Method({Static:false, Public:false}, "set_AllowUpdateInsideCurrentActivity", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$.Boolean])), 
      Finalizer_set_AllowUpdateInsideCurrentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Matcher", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher")), 
      Finalizer_set_Matcher
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SavedOriginalValuesForCurrentActivity", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])), 
      Finalizer_set_SavedOriginalValuesForCurrentActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_UpdateDisallowedReason", 
      JSIL.MethodSignature.Action($.String), 
      Finalizer_set_UpdateDisallowedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetOriginalValue", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Object, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowInvalidActivityToBlockUpdate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowInvalidImplementationMapAssociation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:false}, "foundOriginalElements", $asm07.TypeRef("System.Collections.BitArray"));

    $.Field({Static:false, Public:false}, "builder", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder"));

    $.Field({Static:false, Public:false}, "updateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "savedOriginalValues", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $.Object]));

    $.Field({Static:false, Public:false}, "savedOriginalValuesForReferencedChildren", $.Boolean);

    $.Field({Static:false, Public:false}, "blockList", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]));

    $.Field({Static:false, Public:false}, "expressionRootsThatCanInduceIdle", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:false, Public:false}, "Finalizer$AllowUpdateInsideCurrentActivity$value", $asm07.TypeRef("System.Nullable`1", [$.Boolean]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Finalizer$UpdateDisallowedReason$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Finalizer$SavedOriginalValuesForCurrentActivity$value", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Finalizer$Matcher$value", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "AllowUpdateInsideCurrentActivity", $asm07.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Property({Static:false, Public:false}, "UpdateDisallowedReason", $.String);

    $.Property({Static:false, Public:false}, "SavedOriginalValuesForCurrentActivity", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "Matcher", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher"));

    $.Property({Static:false, Public:false}, "ExpressionRootsThatCanInduceIdle", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer+<>c__DisplayClass42_0 */ 

(function $l$gc__DisplayClass42_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer+<>c__DisplayClass42_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCheckCanArgumentOrVariableDefaultInduceIdle$gb__0", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityUtilities+ChildActivity"), $asm0B.TypeRef("System.Activities.ActivityUtilities+ActivityCallStack")])
    );

    $.Field({Static:false, Public:true }, "activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* interface System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher */ 

JSIL.MakeInterface(
  "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher", false, [], function ($) {
    $.Method({}, "AddMatch", new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ]));
    $.Method({}, "AddMatch", new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ]));
    $.Method({}, "GetMatch", new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")]));
    $.Method({}, "GetMatch", new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")]));
  }, []);

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher */ 

(function DefinitionMatcher$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.IdSpace)) ();
  };





  function DefinitionMatcher_get_NewIdSpace () {
    return this.DefinitionMatcher$NewIdSpace$value;
  }; 

  function DefinitionMatcher_get_OldIdSpace () {
    return this.DefinitionMatcher$OldIdSpace$value;
  }; 





  function DefinitionMatcher_set_NewIdSpace (value) {
    this.DefinitionMatcher$NewIdSpace$value = value;
  }; 

  function DefinitionMatcher_set_OldIdSpace (value) {
    this.DefinitionMatcher$OldIdSpace$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+DefinitionMatcher", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.Method({Static:false, Public:false}, "get_NewIdSpace", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace")), 
      DefinitionMatcher_get_NewIdSpace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OldIdSpace", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace")), 
      DefinitionMatcher_get_OldIdSpace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMatchIndex", 
      new JSIL.MethodSignature($.Int32, [
          $asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ParentsMatch", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Method({Static:false, Public:false}, "set_NewIdSpace", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace")), 
      DefinitionMatcher_set_NewIdSpace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OldIdSpace", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace")), 
      DefinitionMatcher_set_OldIdSpace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "newToOldMatches", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $.Object]));

    $.Field({Static:false, Public:false}, "matchInfoLookup", $asm07.TypeRef("System.Func`2", [$.Object, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapItem")]));

    $.Field({Static:false, Public:false}, "DefinitionMatcher$NewIdSpace$value", $asm0B.TypeRef("System.Activities.IdSpace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DefinitionMatcher$OldIdSpace$value", $asm0B.TypeRef("System.Activities.IdSpace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "NewIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Property({Static:false, Public:false}, "OldIdSpace", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer */ 

(function NestedIdSpaceFinalizer$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.Type
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddMatch", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.Variable"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BlockUpdate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason"), 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateArgumentEntries", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ArgumentInfo")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureGeneratedMap", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FillGeneratedMap", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateEntry", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOrCreateGeneratedEntry", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HasOverlap", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:false}, "HasSavedOriginalValuesForChildren", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MergeProvidedMapIntoGeneratedMap", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ValidateOrCreateImplementationMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"))
    );

    $.Field({Static:false, Public:false}, "finalizer", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"));

    $.Field({Static:false, Public:false}, "userProvidedMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "generatedMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "updatedActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "originalActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "invalidMatchInCurrentActivity", $.Boolean);

    $.Field({Static:false, Public:false}, "parent", $.Type);

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer+<>c__DisplayClass21_0 */ 

(function $l$gc__DisplayClass21_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+NestedIdSpaceFinalizer+<>c__DisplayClass21_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lHasOverlap$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Field({Static:false, Public:true }, "generatedValues", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+<>c__DisplayClass44_0 */ 

(function $l$gc__DisplayClass44_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+<>c__DisplayClass44_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPublicDeclaredChildren$gb__4", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:true }, "activity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPublicDeclaredChildren$gb__44_0", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPublicDeclaredChildren$gb__44_1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.ActivityDelegate")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPublicDeclaredChildren$gb__44_2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetPublicDeclaredChildren$gb__44_3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityWithResult"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__44_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:true , Public:true }, "$l$g9__44_1", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm0B.TypeRef("System.Activities.Activity")]));

    $.Field({Static:true , Public:true }, "$l$g9__44_2", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Variable"), $asm0B.TypeRef("System.Activities.ActivityWithResult")]));

    $.Field({Static:true , Public:true }, "$l$g9__44_3", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeArgument"), $asm0B.TypeRef("System.Activities.ActivityWithResult")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapEntry */ 

(function DynamicUpdateMapEntry$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.DynamicUpdate.UpdateBlockedReason)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.DynamicUpdate.EnvironmentUpdateMap)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Collections.Generic.IDictionary$b2.Of($asm07.System.String, $asm07.System.Object))) ();
  };




  function DynamicUpdateMapEntry_get_BlockReason () {
    return this.DynamicUpdateMapEntry$BlockReason$value;
  }; 

  function DynamicUpdateMapEntry_get_BlockReasonMessage () {
    return this.DynamicUpdateMapEntry$BlockReasonMessage$value;
  }; 

  function DynamicUpdateMapEntry_get_DisplayName () {
    return this.DynamicUpdateMapEntry$DisplayName$value;
  }; 


  function DynamicUpdateMapEntry_get_EnvironmentUpdateMap () {
    return this.DynamicUpdateMapEntry$EnvironmentUpdateMap$value;
  }; 







  function DynamicUpdateMapEntry_get_IsUpdateBlockedByUpdateAuthor () {
    return this.DynamicUpdateMapEntry$IsUpdateBlockedByUpdateAuthor$value;
  }; 



  function DynamicUpdateMapEntry_get_Parent () {
    return this.DynamicUpdateMapEntry$Parent$value;
  }; 

  function DynamicUpdateMapEntry_get_SavedOriginalValueFromParent () {
    return this.DynamicUpdateMapEntry$SavedOriginalValueFromParent$value;
  }; 

  function DynamicUpdateMapEntry_get_SavedOriginalValues () {
    return this.DynamicUpdateMapEntry$SavedOriginalValues$value;
  }; 






  function DynamicUpdateMapEntry_set_BlockReason (value) {
    this.DynamicUpdateMapEntry$BlockReason$value = value;
  }; 

  function DynamicUpdateMapEntry_set_BlockReasonMessage (value) {
    this.DynamicUpdateMapEntry$BlockReasonMessage$value = value;
  }; 

  function DynamicUpdateMapEntry_set_DisplayName (value) {
    this.DynamicUpdateMapEntry$DisplayName$value = value;
  }; 

  function DynamicUpdateMapEntry_set_EnvironmentUpdateMap (value) {
    this.DynamicUpdateMapEntry$EnvironmentUpdateMap$value = value;
  }; 


  function DynamicUpdateMapEntry_set_IsUpdateBlockedByUpdateAuthor (value) {
    this.DynamicUpdateMapEntry$IsUpdateBlockedByUpdateAuthor$value = value;
  }; 



  function DynamicUpdateMapEntry_set_Parent (value) {
    this.DynamicUpdateMapEntry$Parent$value = value;
  }; 

  function DynamicUpdateMapEntry_set_SavedOriginalValueFromParent (value) {
    this.DynamicUpdateMapEntry$SavedOriginalValueFromParent$value = value;
  }; 

  function DynamicUpdateMapEntry_set_SavedOriginalValues (value) {
    this.DynamicUpdateMapEntry$SavedOriginalValues$value = value;
  }; 




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "Clone", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.Method({Static:false, Public:true }, "get_BlockReason", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason")), 
      DynamicUpdateMapEntry_get_BlockReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BlockReasonMessage", 
      JSIL.MethodSignature.Return($.String), 
      DynamicUpdateMapEntry_get_BlockReasonMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      DynamicUpdateMapEntry_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_DummyMapEntry", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Method({Static:false, Public:true }, "get_EnvironmentUpdateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap")), 
      DynamicUpdateMapEntry_get_EnvironmentUpdateMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_HasEnvironmentUpdates", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ImplementationUpdateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsIdChange", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsParentRemovedOrBlocked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsRemoval", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsRuntimeUpdateBlocked", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsUpdateBlockedByUpdateAuthor", 
      JSIL.MethodSignature.Return($.Boolean), 
      DynamicUpdateMapEntry_get_IsUpdateBlockedByUpdateAuthor
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_NewActivityId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OldActivityId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      DynamicUpdateMapEntry_get_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SavedOriginalValueFromParent", 
      JSIL.MethodSignature.Return($.Object), 
      DynamicUpdateMapEntry_get_SavedOriginalValueFromParent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SavedOriginalValues", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      DynamicUpdateMapEntry_get_SavedOriginalValues
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedImplementationUpdateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNewActivityId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOldActivityId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($.Type, [
          $.Type, $.Type, 
          $.Type, $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.Method({Static:false, Public:true }, "set_BlockReason", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason")), 
      DynamicUpdateMapEntry_set_BlockReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BlockReasonMessage", 
      JSIL.MethodSignature.Action($.String), 
      DynamicUpdateMapEntry_set_BlockReasonMessage
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      DynamicUpdateMapEntry_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EnvironmentUpdateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap")), 
      DynamicUpdateMapEntry_set_EnvironmentUpdateMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_ImplementationUpdateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.Method({Static:false, Public:true }, "set_IsUpdateBlockedByUpdateAuthor", 
      JSIL.MethodSignature.Action($.Boolean), 
      DynamicUpdateMapEntry_set_IsUpdateBlockedByUpdateAuthor
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_NewActivityId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OldActivityId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Method({Static:false, Public:true }, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      DynamicUpdateMapEntry_set_Parent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SavedOriginalValueFromParent", 
      JSIL.MethodSignature.Action($.Object), 
      DynamicUpdateMapEntry_set_SavedOriginalValueFromParent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SavedOriginalValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])), 
      DynamicUpdateMapEntry_set_SavedOriginalValues
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedImplementationUpdateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNewActivityId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOldActivityId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:true , Public:false}, "dummyMapEntry", $.Type);

    $.Field({Static:false, Public:false}, "implementationUpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "oldActivityId", $.Int32);

    $.Field({Static:false, Public:false}, "newActivityId", $.Int32);

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$Parent$value", $.Type)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$BlockReason$value", $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$BlockReasonMessage$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$IsUpdateBlockedByUpdateAuthor$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$SavedOriginalValues$value", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$SavedOriginalValueFromParent$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapEntry$EnvironmentUpdateMap$value", $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "DummyMapEntry", $.Type);

    $.Property({Static:false, Public:true }, "OldActivityId", $.Int32);

    $.Property({Static:false, Public:true }, "NewActivityId", $.Int32);

    $.Property({Static:false, Public:true }, "Parent", $.Type)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "BlockReason", $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "BlockReasonMessage", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "IsRuntimeUpdateBlocked", $.Boolean);

    $.Property({Static:false, Public:true }, "IsUpdateBlockedByUpdateAuthor", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "IsParentRemovedOrBlocked", $.Boolean);

    $.Property({Static:false, Public:true }, "SavedOriginalValues", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "SavedOriginalValueFromParent", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "EnvironmentUpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "ImplementationUpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Property({Static:false, Public:false}, "SerializedImplementationUpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOldActivityId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNewActivityId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsIdChange", $.Boolean);

    $.Property({Static:false, Public:false}, "IsRemoval", $.Boolean);

    $.Property({Static:false, Public:false}, "HasEnvironmentUpdates", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapItem */ 

(function DynamicUpdateMapItem$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };





  function DynamicUpdateMapItem_get_OriginalId () {
    return this.DynamicUpdateMapItem$OriginalId$value;
  }; 

  function DynamicUpdateMapItem_get_OriginalVariableOwnerId () {
    return this.DynamicUpdateMapItem$OriginalVariableOwnerId$value;
  }; 

  function DynamicUpdateMapItem_set_OriginalId (value) {
    this.DynamicUpdateMapItem$OriginalId$value = (value | 0);
  }; 

  function DynamicUpdateMapItem_set_OriginalVariableOwnerId (value) {
    this.DynamicUpdateMapItem$OriginalVariableOwnerId$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapItem", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsVariableMapItem", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_OriginalId", 
      JSIL.MethodSignature.Return($.Int32), 
      DynamicUpdateMapItem_get_OriginalId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OriginalVariableOwnerId", 
      JSIL.MethodSignature.Return($.Int32), 
      DynamicUpdateMapItem_get_OriginalVariableOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OriginalId", 
      JSIL.MethodSignature.Action($.Int32), 
      DynamicUpdateMapItem_set_OriginalId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OriginalVariableOwnerId", 
      JSIL.MethodSignature.Action($.Int32), 
      DynamicUpdateMapItem_set_OriginalVariableOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapItem$OriginalId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicUpdateMapItem$OriginalVariableOwnerId$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "OriginalId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "OriginalVariableOwnerId", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsVariableMapItem", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0B.System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.__Type__]; })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateMapQuery */ 

(function DynamicUpdateMapQuery$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateMapQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CanApplyUpdateWhileRunning", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CanApplyUpdateWhileRunning", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindMatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsInNewDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsInNewDefinition", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchNewToOld", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchNewToOld", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchNewToOld", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchOldToNew", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchOldToNew", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Activity"), [$asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "MatchOldToNew", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Variable"), [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowNotInDefinition", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $.String
        ])
    );

    $.Field({Static:false, Public:false}, "map", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "updatedWorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "originalWorkflowDefinition", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateServices */ 

(function DynamicUpdateServices$Members () {
  var $, $thisType;
















  JSIL.MakeStaticClass("System.Activities.DynamicUpdate.DynamicUpdateServices", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$asm0B.TypeRef("System.Activities.ActivityBuilder")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$asm0B.TypeRef("System.Activities.ActivityBuilder"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [
          $asm0B.TypeRef("System.Activities.ActivityBuilder"), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDynamicActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicActivity"), [$asm0B.TypeRef("System.Activities.ActivityBuilder")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetImplementationMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalPrepareForUpdate", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "InternalTryCreateUpdateMap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Activity")]), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnInvalidActivityToBlockUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnInvalidImplementationMapAssociation", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "PrepareForUpdate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:true , Public:true }, "PrepareForUpdate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityBuilder"))
    );

    $.ExternalMethod({Static:true , Public:true }, "SetImplementationMap", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.Field({Static:true , Public:false}, "onInvalidActivityToBlockUpdate", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Func$b2.Of($asm0B.System.Activities.Activity, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnInvalidActivityToBlockUpdate", new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm0B.TypeRef("System.Activities.Activity")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onInvalidImplementationMapAssociation", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Func$b2.Of($asm0B.System.Activities.Activity, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "OnInvalidImplementationMapAssociation", new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm0B.TypeRef("System.Activities.Activity")]), true, false));
      });

    $.Field({Static:true , Public:false}, "implementationMapProperty", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.DynamicUpdateServices+<>c__DisplayClass15_0 */ 

(function $l$gc__DisplayClass15_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.DynamicUpdateServices+<>c__DisplayClass15_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetDynamicActivity$gb__0", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:true }, "activityDefinition", $asm0B.TypeRef("System.Activities.ActivityBuilder"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry */ 

(function EnvironmentUpdateMapEntry$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };




  function EnvironmentUpdateMapEntry_get_IsNewHandle () {
    return this.EnvironmentUpdateMapEntry$IsNewHandle$value;
  }; 

  function EnvironmentUpdateMapEntry_get_NewOffset () {
    return this.EnvironmentUpdateMapEntry$NewOffset$value;
  }; 

  function EnvironmentUpdateMapEntry_get_OldOffset () {
    return this.EnvironmentUpdateMapEntry$OldOffset$value;
  }; 


  function EnvironmentUpdateMapEntry_set_IsNewHandle (value) {
    this.EnvironmentUpdateMapEntry$IsNewHandle$value = value;
  }; 

  function EnvironmentUpdateMapEntry_set_NewOffset (value) {
    this.EnvironmentUpdateMapEntry$NewOffset$value = (value | 0);
  }; 

  function EnvironmentUpdateMapEntry_set_OldOffset (value) {
    this.EnvironmentUpdateMapEntry$OldOffset$value = (value | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsAddition", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsNewHandle", 
      JSIL.MethodSignature.Return($.Boolean), 
      EnvironmentUpdateMapEntry_get_IsNewHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NewOffset", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMapEntry_get_NewOffset
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OldOffset", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMapEntry_get_OldOffset
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($.Type, [$.Type, $.Type])
    );

    $.Method({Static:false, Public:true }, "set_IsNewHandle", 
      JSIL.MethodSignature.Action($.Boolean), 
      EnvironmentUpdateMapEntry_set_IsNewHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NewOffset", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMapEntry_set_NewOffset
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OldOffset", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMapEntry_set_OldOffset
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Constant({Static:true , Public:false}, "NonExistent", $.Int32, -1);

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMapEntry$OldOffset$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMapEntry$NewOffset$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMapEntry$IsNewHandle$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "OldOffset", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "NewOffset", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "IsNewHandle", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsAddition", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.DynamicUpdate.EnvironmentUpdateMap */ 

(function EnvironmentUpdateMap$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };









  function EnvironmentUpdateMap_get_NewArgumentCount () {
    return this.EnvironmentUpdateMap$NewArgumentCount$value;
  }; 

  function EnvironmentUpdateMap_get_NewPrivateVariableCount () {
    return this.EnvironmentUpdateMap$NewPrivateVariableCount$value;
  }; 

  function EnvironmentUpdateMap_get_NewVariableCount () {
    return this.EnvironmentUpdateMap$NewVariableCount$value;
  }; 

  function EnvironmentUpdateMap_get_OldArgumentCount () {
    return this.EnvironmentUpdateMap$OldArgumentCount$value;
  }; 

  function EnvironmentUpdateMap_get_OldPrivateVariableCount () {
    return this.EnvironmentUpdateMap$OldPrivateVariableCount$value;
  }; 

  function EnvironmentUpdateMap_get_OldVariableCount () {
    return this.EnvironmentUpdateMap$OldVariableCount$value;
  }; 


  function EnvironmentUpdateMap_get_RuntimeDelegateArgumentCount () {
    return this.EnvironmentUpdateMap$RuntimeDelegateArgumentCount$value;
  }; 











  function EnvironmentUpdateMap_set_NewArgumentCount (value) {
    this.EnvironmentUpdateMap$NewArgumentCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_NewPrivateVariableCount (value) {
    this.EnvironmentUpdateMap$NewPrivateVariableCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_NewVariableCount (value) {
    this.EnvironmentUpdateMap$NewVariableCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_OldArgumentCount (value) {
    this.EnvironmentUpdateMap$OldArgumentCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_OldPrivateVariableCount (value) {
    this.EnvironmentUpdateMap$OldPrivateVariableCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_OldVariableCount (value) {
    this.EnvironmentUpdateMap$OldVariableCount$value = (value | 0);
  }; 

  function EnvironmentUpdateMap_set_RuntimeDelegateArgumentCount (value) {
    this.EnvironmentUpdateMap$RuntimeDelegateArgumentCount$value = (value | 0);
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.EnvironmentUpdateMap", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FindByNewIndex", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry"), [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ArgumentEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasArgumentEntries", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasPrivateVariableEntries", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasVariableEntries", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsAdditionToNoSymbols", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_NewArgumentCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_NewArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NewPrivateVariableCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_NewPrivateVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NewVariableCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_NewVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OldArgumentCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_OldArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OldPrivateVariableCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_OldPrivateVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OldVariableCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_OldVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_PrivateVariableEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.Method({Static:false, Public:true }, "get_RuntimeDelegateArgumentCount", 
      JSIL.MethodSignature.Return($.Int32), 
      EnvironmentUpdateMap_get_RuntimeDelegateArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArgumentEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPrivateVariableEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedVariableEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VariableEntries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNewPrivateVariableIndex", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int32]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNewVariableIndex", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int32]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOldVariableIndex", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int32]), [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($.Type, [
          $.Type, $.Type, 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Merge", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), [
          $.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MergeEntry", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry"), [
          $.Int32, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")])
        ])
    );

    $.Method({Static:false, Public:true }, "set_NewArgumentCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_NewArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NewPrivateVariableCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_NewPrivateVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NewVariableCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_NewVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OldArgumentCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_OldArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OldPrivateVariableCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_OldPrivateVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OldVariableCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_OldVariableCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RuntimeDelegateArgumentCount", 
      JSIL.MethodSignature.Action($.Int32), 
      EnvironmentUpdateMap_set_RuntimeDelegateArgumentCount
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArgumentEntries", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPrivateVariableEntries", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedVariableEntries", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ThrowIfMapsIncompatible", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Type, 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+MergeErrorContext")
        ])
    );

    $.Field({Static:false, Public:false}, "variableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));

    $.Field({Static:false, Public:false}, "privateVariableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));

    $.Field({Static:false, Public:false}, "argumentEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$NewArgumentCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$OldArgumentCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$NewVariableCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$OldVariableCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$NewPrivateVariableCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$OldPrivateVariableCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnvironmentUpdateMap$RuntimeDelegateArgumentCount$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "NewArgumentCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "OldArgumentCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "NewVariableCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "OldVariableCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "NewPrivateVariableCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "OldPrivateVariableCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "RuntimeDelegateArgumentCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedVariableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPrivateVariableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedArgumentEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "IsAdditionToNoSymbols", $.Boolean);

    $.Property({Static:false, Public:false}, "HasVariableEntries", $.Boolean);

    $.Property({Static:false, Public:false}, "HasPrivateVariableEntries", $.Boolean);

    $.Property({Static:false, Public:false}, "HasArgumentEntries", $.Boolean);

    $.Property({Static:false, Public:true }, "VariableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));

    $.Property({Static:false, Public:true }, "PrivateVariableEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));

    $.Property({Static:false, Public:true }, "ArgumentEntries", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* interface System.Activities.DynamicUpdate.IInstanceUpdatable */ 

JSIL.MakeInterface(
  "System.Activities.DynamicUpdate.IInstanceUpdatable", false, [], function ($) {
    $.Method({}, "InternalUpdateInstance", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.NativeActivityUpdateContext")));
  }, []);

/* class System.Activities.DynamicUpdate.InstanceUpdateException */ 

(function InstanceUpdateException$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.DynamicUpdate.InstanceUpdateException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "BuildMessage", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlockingActivities", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessage", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "blockingActivities", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]));

    $.Property({Static:false, Public:true }, "BlockingActivities", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.NativeActivityUpdateContext */ 

(function NativeActivityUpdateContext$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };

















  function NativeActivityUpdateContext_get_DisallowedReason () {
    return this.NativeActivityUpdateContext$DisallowedReason$value;
  }; 


  function NativeActivityUpdateContext_get_IsUpdateDisallowed () {
    return this.NativeActivityUpdateContext$IsUpdateDisallowed$value;
  }; 





















































  function NativeActivityUpdateContext_set_DisallowedReason (value) {
    this.NativeActivityUpdateContext$DisallowedReason$value = value;
  }; 

  function NativeActivityUpdateContext_set_IsUpdateDisallowed (value) {
    this.NativeActivityUpdateContext$IsUpdateDisallowed$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DynamicUpdate.NativeActivityUpdateContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$.String, $asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkScope")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$asm0B.TypeRef("System.Activities.BookmarkCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [$asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.BookmarkOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "DisallowUpdate", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "FindExecutionProperty", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultBookmarkScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.Method({Static:false, Public:false}, "get_DisallowedReason", 
      JSIL.MethodSignature.Return($.String), 
      NativeActivityUpdateContext_get_DisallowedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsCancellationRequested", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_IsUpdateDisallowed", 
      JSIL.MethodSignature.Return($.Boolean), 
      NativeActivityUpdateContext_get_IsUpdateDisallowed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), [$asm0B.TypeRef("System.Activities.Variable")], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSavedOriginalValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSavedOriginalValue", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Argument")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.Variable`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm0B.TypeRef("System.Activities.Variable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsNewlyAdded", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAllBookmarks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [$.String, $asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction"), $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`1", ["!!0"]), "!!0", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`2", ["!!0", "!!1"]), "!!0", 
          "!!1", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`3", [
              "!!0", "!!1", 
              "!!2"
            ]), "!!0", 
          "!!1", "!!2", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`4", [
              "!!0", "!!1", 
              "!!2", "!!3"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3", "T4"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`5", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`6", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`7", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`8", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`9", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`10", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`11", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`12", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`13", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`14", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`15", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          $asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleAction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityAction`16", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          "!!15", $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "T16"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.CompletionCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.FaultCallback")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.CompletionCallback"), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"]), $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleDelegate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.DelegateCompletionCallback"), $asm0B.TypeRef("System.Activities.FaultCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`1", ["!!0"]), $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!0"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`2", ["!!0", "!!1"]), "!!0", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!1"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`3", [
              "!!0", "!!1", 
              "!!2"
            ]), "!!0", 
          "!!1", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!2"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`4", [
              "!!0", "!!1", 
              "!!2", "!!3"
            ]), "!!0", 
          "!!1", "!!2", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!3"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], ["T1", "T2", "T3", "TResult"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`5", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!4"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`6", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!5"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`7", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!6"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`8", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!7"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`9", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!8"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`10", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!9"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`11", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!10"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`12", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!11"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`13", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!12"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`14", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!13"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`15", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!14"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`16", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!15"]), $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "TResult"
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleFunc", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityFunc`17", [
              "!!0", "!!1", 
              "!!2", "!!3", 
              "!!4", "!!5", 
              "!!6", "!!7", 
              "!!8", "!!9", 
              "!!10", "!!11", 
              "!!12", "!!13", 
              "!!14", "!!15", 
              "!!16"
            ]), "!!0", 
          "!!1", "!!2", 
          "!!3", "!!4", 
          "!!5", "!!6", 
          "!!7", "!!8", 
          "!!9", "!!10", 
          "!!11", "!!12", 
          "!!13", "!!14", 
          "!!15", $asm0B.TypeRef("System.Activities.CompletionCallback`1", ["!!16"]), 
          $asm0B.TypeRef("System.Activities.FaultCallback")
        ], [
          "T1", "T2", "T3", "T4", 
          "T5", "T6", "T7", "T8", 
          "T9", "T10", "T11", "T12", 
          "T13", "T14", "T15", "T16", 
          "TResult"
        ])
    );

    $.Method({Static:false, Public:false}, "set_DisallowedReason", 
      JSIL.MethodSignature.Action($.String), 
      NativeActivityUpdateContext_set_DisallowedReason
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsUpdateDisallowed", 
      JSIL.MethodSignature.Action($.Boolean), 
      NativeActivityUpdateContext_set_IsUpdateDisallowed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Argument"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable`1", ["!!0"]), "!!0"], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Variable"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "instanceMap", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"));

    $.Field({Static:false, Public:false}, "activityExecutor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "currentInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "innerContext", $asm0B.TypeRef("System.Activities.NativeActivityContext"));

    $.Field({Static:false, Public:false}, "updateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "mapEntry", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"));

    $.Field({Static:false, Public:false}, "rootMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Field({Static:false, Public:false}, "NativeActivityUpdateContext$IsUpdateDisallowed$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NativeActivityUpdateContext$DisallowedReason$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityInstanceId", $.String);

    $.Property({Static:false, Public:true }, "IsCancellationRequested", $.Boolean);

    $.Property({Static:false, Public:true }, "DefaultBookmarkScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Property({Static:false, Public:false}, "CurrentActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "IsUpdateDisallowed", $.Boolean);

    $.Property({Static:false, Public:false}, "DisallowedReason", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata */ 

(function NativeActivityUpdateMapMetadata$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateMapMetadata"), 
      Name: "System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+Finalizer"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapBuilder+IDefinitionMatcher"), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsPublicOrImportedDelegateOrChild", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SaveOriginalValue", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SaveOriginalValue", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateOriginalValueAccess", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DynamicUpdate.UpdateBlockedReason */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DynamicUpdate.UpdateBlockedReason", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    NotBlocked: 0, 
    Custom: 1, 
    TypeChange: 2, 
    PublicChildrenChange: 3, 
    InvalidImplementationMap: 4, 
    PrivateMembersHaveChanged: 5, 
    ChangeMatchesInImplementation: 6, 
    GeneratedAndProvidedMapConflict: 7, 
    SavedOriginalValuesForReferencedChildren: 8, 
    AddedIdleExpression: 9, 
    DelegateArgumentChange: 10, 
    DynamicArguments: 11, 
    NewHandle: 12, 
  }
);

/* class System.Activities.DynamicUpdate.UpdateBlockedReasonMessages */ 

(function UpdateBlockedReasonMessages$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.DynamicUpdate.UpdateBlockedReasonMessages", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "Get", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DynamicUpdate.UpdateBlockedReason")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Debugger");
/* class System.Activities.Debugger.DebugController */ 

(function DebugController$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugController", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivityCompleted", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivityStarted", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureActivityInstrumented", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "WorkflowCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "WorkflowStarted", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "host", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"));

    $.Field({Static:false, Public:false}, "debugManager", $asm0B.TypeRef("System.Activities.Debugger.DebugManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.DebugInfo */ 

(function DebugInfo$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetArguments$gb__8_0", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$lGetLocals$gb__9_1", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo"), [$asm0B.TypeRef("System.Activities.Variable")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$lGetLocals$gb__9_2", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$lGetLocals$gb__9_3", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo"), [$asm0B.TypeRef("System.Activities.DelegateArgument")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "CacheLocalInfos", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ConvertToChar", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Char])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EvaluateExpression", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetArguments", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocals", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveHexadecimalPrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveHiddenArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")]), [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.RuntimeArgument")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveHiddenDelegateArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.DelegateArgument")]), [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.DelegateArgument")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveHiddenVariables", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Variable")]), [$asm10.TypeRef("System.Collections.Generic.HashSet`1", [$.String]), $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Variable")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveQuotes", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetValueAsString", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Location"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryEvaluateExpression", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), $asm0B.TypeRef("System.Activities.CodeActivityContext"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryEvaluateExpression", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.ActivityWithResult"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $asm0B.TypeRef("System.Activities.CodeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.Field({Static:false, Public:false}, "activityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "locals", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]));

    $.Field({Static:false, Public:false}, "$arguments", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]));

    $.Field({Static:false, Public:false}, "cachedLocalInfos", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DebugInfo+LocalInfo */ 

(function LocalInfo$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugInfo+LocalInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "type", $.String);

    $.Field({Static:false, Public:false}, "valueField", $.Object);

    $.Field({Static:false, Public:true }, "Name", $.String);

    $.Field({Static:false, Public:true }, "Location", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "Type", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DebugInfo+TypeDescriptorContext */ 

(function TypeDescriptorContext$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugInfo+TypeDescriptorContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindName", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Container", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.IContainer"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Instance", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyDescriptor", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetNamespacePrefixes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm2D.TypeRef("System.Xaml.NamespaceDeclaration")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetService", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupPrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnComponentChanged", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnComponentChanging", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RegisterName", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UnregisterName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:true }, "LocationReferenceEnvironment", $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"));

    $.Property({Static:false, Public:true , Virtual:true }, "Container", $asm0A.TypeRef("System.ComponentModel.IContainer"));

    $.Property({Static:false, Public:true , Virtual:true }, "Instance", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyDescriptor", $asm0A.TypeRef("System.ComponentModel.PropertyDescriptor"));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), 
      /* 1 */ $asm07.TypeRef("System.IServiceProvider"), 
      /* 2 */ $asm2D.TypeRef("System.Xaml.IXamlNamespaceResolver"), 
      /* 3 */ $asm2D.TypeRef("System.Windows.Markup.INameScope"), 
      /* 4 */ $asm2D.TypeRef("System.Xaml.INamespacePrefixLookup")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DebugInfo+LocationHelper */ 

(function LocationHelper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugInfo+LocationHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $asm0B.TypeRef("System.Activities.CodeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DebugInfo+LocationHelper`1 */ 

(function LocationHelper$b1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocationHelper"), 
      Name: "System.Activities.Debugger.DebugInfo+LocationHelper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TLocationValue"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.LocationReferenceEnvironment"), 
          $asm0B.TypeRef("System.Activities.CodeActivityContext"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DebugInfo+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugInfo+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetLocals$gb__9_0", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.DelegateArgument"), [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetLocals$gb__9_4", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__9_0", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.RuntimeDelegateArgument"), $asm0B.TypeRef("System.Activities.DelegateArgument")]));

    $.Field({Static:true , Public:true }, "$l$g9__9_4", $asm07.TypeRef("System.Func`2", [$asm0B.TypeRef("System.Activities.Debugger.DebugInfo+LocalInfo"), $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Debugger.DebugManager */ 

(function DebugManager$Members () {
  var $, $thisType;

























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DebugManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $.String, $.String, 
          $.Boolean, $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.String, 
          $.String, $.String, 
          $.Boolean, $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"), 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateLogicalThread", 
      new JSIL.MethodSignature($.Int32, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureInstrumented", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterState", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateLocals", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]), [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DebugStartedAtRoot", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetExecutingThreadId", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.Activity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOrCreateThreadId", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Instrument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Instrument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), 
          $.String, $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Instrument", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsAncestorOf", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsParallelActivity", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LeaveState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MapInstrumentationStates", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "OnEnterState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnEnterState", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "OnLeaveState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Pop", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "PrimeCallStack", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Push", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsPriming", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:true , Public:false}, "dynamicModuleManager", $asm0B.TypeRef("System.Activities.Debugger.StateManager+DynamicModuleManager"));

    $.Field({Static:false, Public:false}, "host", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"));

    $.Field({Static:false, Public:false}, "stateManager", $asm0B.TypeRef("System.Activities.Debugger.StateManager"));

    $.Field({Static:false, Public:false}, "states", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.State")]));

    $.Field({Static:false, Public:false}, "runningThreads", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.Activity")])]));

    $.Field({Static:false, Public:false}, "instrumentationTracker", $asm0B.TypeRef("System.Activities.Debugger.InstrumentationTracker"));

    $.Field({Static:false, Public:false}, "temporaryFiles", $asm07.TypeRef("System.Collections.Generic.List`1", [$.String]));

    $.Property({Static:false, Public:true }, "IsPriming", $.Boolean);

    $.Property({Static:false, Public:false}, "DebugStartedAtRoot", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* interface System.Activities.Debugger.IDebuggableWorkflowTree */ 

JSIL.MakeInterface(
  "System.Activities.Debugger.IDebuggableWorkflowTree", true, [], function ($) {
    $.Method({}, "GetWorkflowRoot", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")));
  }, []);

/* class System.Activities.Debugger.InstrumentationTracker */ 

(function InstrumentationTracker$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.InstrumentationTracker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectSubRoot", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_UninstrumentedSubRoots", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSameSourceSubRoots", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Activity")]), [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeUninstrumentedSubRoots", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "IsUninstrumentedSubRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkInstrumented", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.Field({Static:false, Public:false}, "root", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "uninstrumentedSubRoots", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $.String]));

    $.Property({Static:false, Public:false}, "UninstrumentedSubRoots", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.LocalsItemDescription */ 

(function LocalsItemDescription$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function LocalsItemDescription_get_Name () {
    return this.LocalsItemDescription$Name$value;
  }; 

  function LocalsItemDescription_get_Type () {
    return this.LocalsItemDescription$Type$value;
  }; 

  function LocalsItemDescription_set_Name (value) {
    this.LocalsItemDescription$Name$value = value;
  }; 

  function LocalsItemDescription_set_Type (value) {
    this.LocalsItemDescription$Type$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.LocalsItemDescription", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Type")])
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      LocalsItemDescription_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      LocalsItemDescription_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      LocalsItemDescription_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Type", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      LocalsItemDescription_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "LocalsItemDescription$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LocalsItemDescription$Type$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Type", $asm07.TypeRef("System.Type"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.SourceLocation */ 

(function SourceLocation$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.SourceLocation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Checksum", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndColumn", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndLine", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FileName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSingleWholeLine", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StartColumn", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StartLine", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsValidRange", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ])
    );

    $.Field({Static:false, Public:false}, "fileName", $.String);

    $.Field({Static:false, Public:false}, "startLine", $.Int32);

    $.Field({Static:false, Public:false}, "endLine", $.Int32);

    $.Field({Static:false, Public:false}, "startColumn", $.Int32);

    $.Field({Static:false, Public:false}, "endColumn", $.Int32);

    $.Field({Static:false, Public:false}, "checksum", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "FileName", $.String);

    $.Property({Static:false, Public:true }, "StartLine", $.Int32);

    $.Property({Static:false, Public:true }, "StartColumn", $.Int32);

    $.Property({Static:false, Public:true }, "EndLine", $.Int32);

    $.Property({Static:false, Public:true }, "EndColumn", $.Int32);

    $.Property({Static:false, Public:false}, "Checksum", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "IsSingleWholeLine", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.State */ 

(function State$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.State", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $.String, 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]), $.Int32
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "CacheMethodInfo", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $.String])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_DebuggingEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_EarlyLocals", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Location", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.SourceLocation"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_NumberOfEarlyLocals", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMethodInfo", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [$.Boolean])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ReplaceInvalidCharactersWithUnderscore", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("System.Array", [$.Char])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_DebuggingEnabled", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ValidateIdentifierString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateSourceLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "location", $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "$name", $.String)
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "earlyLocals", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]));

    $.Field({Static:false, Public:false}, "numberOfEarlyLocals", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "methodName", $.String)
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "debuggingEnabled", $.Boolean)
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Property({Static:false, Public:false}, "Location", $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"));

    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "EarlyLocals", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]));

    $.Property({Static:false, Public:false}, "NumberOfEarlyLocals", $.Int32);

    $.Property({Static:false, Public:false}, "DebuggingEnabled", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.StateManager */ 

(function StateManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };

















  function StateManager_get_IsPriming () {
    return this.StateManager$IsPriming$value;
  }; 




  function StateManager_set_IsPriming (value) {
    this.StateManager$IsPriming$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.StateManager", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Debugger.StateManager+Properties"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.Debugger.StateManager+DynamicModuleManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Bake", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Bake", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateLogicalThread", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DefineState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.State"), [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DefineState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.State"), [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DefineState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.State"), [
          $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $.String, 
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DefineStateWithDebugInfo", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.State"), [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterState", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm0B.TypeRef("System.Activities.Debugger.State"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterState", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitThreads", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DebugStartedAtRoot", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_IsPriming", 
      JSIL.MethodSignature.Return($.Boolean), 
      StateManager_get_IsPriming
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ManagerProperties", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.StateManager+Properties"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InvokeWorker", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LeaveState", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0B.TypeRef("System.Activities.Debugger.State")])
    );

    $.Method({Static:false, Public:false}, "set_IsPriming", 
      JSIL.MethodSignature.Action($.Boolean), 
      StateManager_set_IsPriming
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "WorkflowLanguageGuid", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "debugInfoDescriptions", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]));

    $.Field({Static:true , Public:false}, "threadWorkerControllerType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.Debugger.ThreadWorkerController.__Type__;
      });

    $.Field({Static:true , Public:false}, "islandWorkerMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Constant({Static:true , Public:false}, "MethodWithPrimingPrefix", $.String, "_");

    $.Field({Static:false, Public:false}, "threads", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.StateManager+LogicalThread")]));

    $.Field({Static:false, Public:false}, "dynamicModuleManager", $asm0B.TypeRef("System.Activities.Debugger.StateManager+DynamicModuleManager"));

    $.Field({Static:false, Public:false}, "properties", $asm0B.TypeRef("System.Activities.Debugger.StateManager+Properties"));

    $.Field({Static:false, Public:false}, "debugStartedAtRoot", $.Boolean);

    $.Field({Static:false, Public:false}, "StateManager$IsPriming$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function StateManager__cctor () {
      $thisType.WorkflowLanguageGuid = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      StateManager__cctor
    );

    $.Property({Static:false, Public:false}, "ManagerProperties", $asm0B.TypeRef("System.Activities.Debugger.StateManager+Properties"));

    $.Property({Static:false, Public:false}, "IsPriming", $.Boolean);

    $.Property({Static:false, Public:false}, "DebugStartedAtRoot", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.StateManager+Properties */ 

(function Properties$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function Properties_get_AuxiliaryThreadName () {
    return this.Properties$AuxiliaryThreadName$value;
  }; 

  function Properties_get_BreakOnStartup () {
    return this.Properties$BreakOnStartup$value;
  }; 

  function Properties_get_DefaultLocalsName () {
    return this.Properties$DefaultLocalsName$value;
  }; 

  function Properties_get_ModuleNamePrefix () {
    return this.Properties$ModuleNamePrefix$value;
  }; 

  function Properties_get_TypeNamePrefix () {
    return this.Properties$TypeNamePrefix$value;
  }; 

  function Properties_set_AuxiliaryThreadName (value) {
    this.Properties$AuxiliaryThreadName$value = value;
  }; 

  function Properties_set_BreakOnStartup (value) {
    this.Properties$BreakOnStartup$value = value;
  }; 

  function Properties_set_DefaultLocalsName (value) {
    this.Properties$DefaultLocalsName$value = value;
  }; 

  function Properties_set_ModuleNamePrefix (value) {
    this.Properties$ModuleNamePrefix$value = value;
  }; 

  function Properties_set_TypeNamePrefix (value) {
    this.Properties$TypeNamePrefix$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.StateManager+Properties", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.Method({Static:false, Public:true }, "get_AuxiliaryThreadName", 
      JSIL.MethodSignature.Return($.String), 
      Properties_get_AuxiliaryThreadName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BreakOnStartup", 
      JSIL.MethodSignature.Return($.Boolean), 
      Properties_get_BreakOnStartup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DefaultLocalsName", 
      JSIL.MethodSignature.Return($.String), 
      Properties_get_DefaultLocalsName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ModuleNamePrefix", 
      JSIL.MethodSignature.Return($.String), 
      Properties_get_ModuleNamePrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TypeNamePrefix", 
      JSIL.MethodSignature.Return($.String), 
      Properties_get_TypeNamePrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AuxiliaryThreadName", 
      JSIL.MethodSignature.Action($.String), 
      Properties_set_AuxiliaryThreadName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BreakOnStartup", 
      JSIL.MethodSignature.Action($.Boolean), 
      Properties_set_BreakOnStartup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DefaultLocalsName", 
      JSIL.MethodSignature.Action($.String), 
      Properties_set_DefaultLocalsName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ModuleNamePrefix", 
      JSIL.MethodSignature.Action($.String), 
      Properties_set_ModuleNamePrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TypeNamePrefix", 
      JSIL.MethodSignature.Action($.String), 
      Properties_set_TypeNamePrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Properties$DefaultLocalsName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Properties$ModuleNamePrefix$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Properties$TypeNamePrefix$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Properties$AuxiliaryThreadName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Properties$BreakOnStartup$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "DefaultLocalsName", $.String);

    $.Property({Static:false, Public:true }, "ModuleNamePrefix", $.String);

    $.Property({Static:false, Public:true }, "TypeNamePrefix", $.String);

    $.Property({Static:false, Public:true }, "AuxiliaryThreadName", $.String);

    $.Property({Static:false, Public:true }, "BreakOnStartup", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.StateManager+LogicalThread */ 

(function LogicalThread$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.StateManager+LogicalThread", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $asm0B.TypeRef("System.Activities.Debugger.StateManager")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Exit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "LeaveState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.State"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UnwindCallStack", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "threadId", $.Int32);

    $.Field({Static:false, Public:false}, "callStack", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame")]));

    $.Field({Static:false, Public:false}, "controller", $asm0B.TypeRef("System.Activities.Debugger.ThreadWorkerController"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.StateManager+DynamicModuleManager */ 

(function DynamicModuleManager$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.StateManager+DynamicModuleManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Bake", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "CreateIsland", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.Emit.MethodBuilder"), [
          $asm07.TypeRef("System.Reflection.Emit.TypeBuilder"), $asm0B.TypeRef("System.Activities.Debugger.State"), 
          $.Boolean, $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "CreateMethodBuilder", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.Emit.MethodBuilder"), [
          $asm07.TypeRef("System.Reflection.Emit.TypeBuilder"), $asm07.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Activities.Debugger.State"), $.Boolean
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "DefineState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.State"), [
          $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $.String, 
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Debugger.LocalsItemDescription")]), $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetIsland", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [$asm0B.TypeRef("System.Activities.Debugger.State"), $.Boolean])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetSourceDocument", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Diagnostics.SymbolStore.ISymbolDocumentWriter"), [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "InitDynamicModule", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "states", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.State")]));

    $.Field({Static:false, Public:false}, "stateMap", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), $asm0B.TypeRef("System.Activities.Debugger.State")]));

    $.Field({Static:false, Public:false}, "indexLastBaked", $.Int32);

    $.Field({Static:false, Public:false}, "islands", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.State"), $asm07.TypeRef("System.Reflection.MethodInfo")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "islandsWithPriming", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.State"), $asm07.TypeRef("System.Reflection.MethodInfo")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "dynamicModule", $asm07.TypeRef("System.Reflection.Emit.ModuleBuilder"))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "sourceDocuments", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Diagnostics.SymbolStore.ISymbolDocumentWriter")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.SourceLocationProvider */ 

(function SourceLocationProvider$Members () {
  var $, $thisType;










  JSIL.MakeStaticClass("System.Activities.Debugger.SourceLocationProvider", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CollectMapping", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectMapping", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CollectMapping", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Deserialize", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$.Byte]), $asm07.TypeRef("System.Reflection.Assembly")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSourceLocations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), [
          $asm0B.TypeRef("System.Activities.Activity"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.Byte])])
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetSourceLocations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Debugger.Symbol.WorkflowSymbol")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSourceLocations", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")]), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Debugger.Symbol.WorkflowSymbol"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSymbols", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Debugger.Symbol.ActivitySymbol")]), [$asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetSourceLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $.Object, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.ThreadWorkerController */ 

(function ThreadWorkerController$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.ThreadWorkerController", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Break", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateWorkerThread", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnterState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Exit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Activities.Debugger.StateManager")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IslandWorker", 
      JSIL.MethodSignature.Action($.Type)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "LeaveState", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Worker", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "WorkerThreadProc", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "stateManager", $asm0B.TypeRef("System.Activities.Debugger.StateManager"));

    $.Field({Static:false, Public:false}, "breakOnStartup", $.Boolean);

    $.Field({Static:false, Public:false}, "worker", $asm07.TypeRef("System.Threading.Thread"));

    $.Field({Static:false, Public:false}, "eventSend", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:false}, "eventDone", $asm07.TypeRef("System.Threading.AutoResetEvent"));

    $.Field({Static:false, Public:false}, "eventCode", $asm0B.TypeRef("System.Activities.Debugger.ThreadWorkerController+EventCode"));

    $.Field({Static:false, Public:false}, "enterStackParameter", $asm0B.TypeRef("System.Activities.Debugger.VirtualStackFrame"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* enum System.Activities.Debugger.ThreadWorkerController+EventCode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Debugger.ThreadWorkerController+EventCode", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Enter: 0, 
    Leave: 1, 
    Break: 2, 
  }
);

/* class System.Activities.Debugger.VirtualStackFrame */ 

(function VirtualStackFrame$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.VirtualStackFrame", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.State"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.State"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Locals", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.State"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "state", $asm0B.TypeRef("System.Activities.Debugger.State"));

    $.Field({Static:false, Public:false}, "locals", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "State", $asm0B.TypeRef("System.Activities.Debugger.State"));

    $.Property({Static:false, Public:true }, "Locals", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

})();

/* class System.Activities.Debugger.XamlDebuggerXmlReader */ 

(function XamlDebuggerXmlReader$Members () {
  var $, $thisType;
























































  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.XamlReader"), 
      Name: "System.Activities.Debugger.XamlDebuggerXmlReader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.TextReader"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.IO.TextReader"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext"), 
          $asm07.TypeRef("System.Reflection.Assembly")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm07.TypeRef("System.IO.TextReader")])
    )
      .Attribute($asm07.TypeRef("System.ObsoleteAttribute"), function () { return ["Don't use this constructor. Use \"public XamlDebuggerXmlReader(TextReader underlyingTextReader)\" or \"public XamlDebuggerXmlReader(TextReader underlyingTextReader, XamlSchemaContext schemaContext)\" instead."]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo"), 
          $asm07.TypeRef("System.IO.TextReader")
        ])
    )
      .Attribute($asm07.TypeRef("System.ObsoleteAttribute"), function () { return ["Don't use this constructor. Use \"public XamlDebuggerXmlReader(TextReader underlyingTextReader)\" or \"public XamlDebuggerXmlReader(TextReader underlyingTextReader, XamlSchemaContext schemaContext)\" instead."]; });

    $.ExternalMethod({Static:false, Public:false}, "add__sourceLocationFound", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "add_SourceLocationFound", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "CopyAttachedSourceLocation", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAttachableMember", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlMember"), [
          $asm07.TypeRef("System.Reflection.MethodInfo"), $asm07.TypeRef("System.Reflection.MethodInfo"), 
          $asm0B.TypeRef("System.Activities.Debugger.SourceLocationMemberType")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCurrentNode", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.XamlNode"), [$asm2D.TypeRef("System.Xaml.XamlReader"), $asm2D.TypeRef("System.Xaml.IXamlLineInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCurrentNode", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.XamlNode"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CollectNonActivitySourceLocation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Current", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.XamlNode"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EndColumnMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_EndLineMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEof", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Member", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaContext", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlSchemaContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SourceLocationCollector", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_StartColumnMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_StartLineMember", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetEndColumn", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.ExternalMethod({Static:true , Public:true }, "GetEndLine", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.ExternalMethod({Static:true , Public:true }, "GetFileName", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIntegerAttachedProperty", 
      new JSIL.MethodSignature($.Int32, [$.Object, $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetStartColumn", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.ExternalMethod({Static:true , Public:true }, "GetStartLine", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.ExternalMethod({Static:false, Public:false}, "InjectLineInfoMembersToBuffer", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InjectLineInfoMemberToBuffer", 
      new JSIL.MethodSignature(null, [$asm2D.TypeRef("System.Xaml.XamlMember"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "InjectLineInfoXamlNodesToBuffer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "IsMarkupExtension", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Debugger.XamlNode")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifySourceLocationFound", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnValueNodeDeserialized", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PushObjectDeclarationNodeIfApplicable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "remove__sourceLocationFound", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "remove_SourceLocationFound", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CollectNonActivitySourceLocation", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Current", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.XamlNode"))
    );

    $.ExternalMethod({Static:true , Public:true }, "SetEndColumn", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetEndLine", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetFileName", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetSourceLocation", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetStartColumn", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetStartLine", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "StartAccessingBuffer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SuppressingMarkupExtension", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "StartLineName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "StartColumnName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "EndLineName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "EndColumnName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "FileNameName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));

    $.Constant({Static:true , Public:false}, "StartLineMemberName", $.String, "StartLine");

    $.Constant({Static:true , Public:false}, "StartColumnMemberName", $.String, "StartColumn");

    $.Constant({Static:true , Public:false}, "EndLineMemberName", $.String, "EndLine");

    $.Constant({Static:true , Public:false}, "EndColumnMemberName", $.String, "EndColumn");

    $.Constant({Static:true , Public:false}, "FileNameMemberName", $.String, "FileName");

    $.Field({Static:true , Public:false, ReadOnly:true }, "attachingType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $thisType.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "startLineGetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "startLineSetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "startColumnGetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "startColumnSetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "endLineGetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "endLineSetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "endColumnGetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "endColumnSetterMethodInfo", $asm07.TypeRef("System.Reflection.MethodInfo"));

    $.Field({Static:false, Public:false}, "startLineMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "startColumnMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "endLineMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "endColumnMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Field({Static:false, Public:false}, "schemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Field({Static:false, Public:false}, "xamlLineInfo", $asm2D.TypeRef("System.Xaml.IXamlLineInfo"));

    $.Field({Static:false, Public:false}, "xmlReaderWithSourceLocation", $asm0B.TypeRef("System.Activities.Debugger.XmlReaderWithSourceLocation"));

    $.Field({Static:false, Public:false}, "underlyingReader", $asm2D.TypeRef("System.Xaml.XamlReader"));

    $.Field({Static:false, Public:false}, "objectDeclarationRecords", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.Debugger.XamlNode")]));

    $.Field({Static:false, Public:false}, "initializationValueRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.XamlNode"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Field({Static:false, Public:false}, "bufferedXamlNodes", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Debugger.XamlNode")]));

    $.Field({Static:false, Public:false}, "sourceLocationCollector", $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector"));

    $.Field({Static:false, Public:false}, "current", $asm0B.TypeRef("System.Activities.Debugger.XamlNode"));

    $.Field({Static:false, Public:false}, "collectNonActivitySourceLocation", $.Boolean);

    $.Field({Static:false, Public:false}, "suppressMarkupExtensionLevel", $.Int32);

    $.Field({Static:false, Public:false}, "_sourceLocationFound", $asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CollectNonActivitySourceLocation", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasLineInfo", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "LinePosition", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2D.TypeRef("System.Xaml.XamlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Member", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEof", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Namespace", $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"));

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaContext", $asm2D.TypeRef("System.Xaml.XamlSchemaContext"));

    $.Property({Static:false, Public:false}, "StartLineMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:false}, "StartColumnMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:false}, "EndLineMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:false}, "EndColumnMember", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:false}, "Current", $asm0B.TypeRef("System.Activities.Debugger.XamlNode"));

    $.Property({Static:false, Public:false}, "SourceLocationCollector", $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector"));

    $.Event({Static:false, Public:true }, "SourceLocationFound", $asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]));

    $.Event({Static:false, Public:false}, "_sourceLocationFound", $asm07.TypeRef("System.EventHandler`1", [$asm0B.TypeRef("System.Activities.Debugger.SourceLocationFoundEventArgs")]));

    $.ImplementInterfaces(
      /* 1 */ $asm2D.TypeRef("System.Xaml.IXamlLineInfo")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector */ 

(function XamlSourceLocationCollector$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddValueRange", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.DocumentRange"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")])
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyValueIfNeeded", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndColumnFound", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnEndLineFound", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStartColumnFound", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnStartLineFound", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "ShouldReportValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader"));

    $.Field({Static:false, Public:false}, "currentObject", $.Object);

    $.Field({Static:false, Public:false}, "startLine", $.Int32);

    $.Field({Static:false, Public:false}, "startColumn", $.Int32);

    $.Field({Static:false, Public:false}, "endLine", $.Int32);

    $.Field({Static:false, Public:false}, "endColumn", $.Int32);

    $.Field({Static:false, Public:false}, "objRgnToInitValueRgnMapping", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentRange"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.XamlDebuggerXmlReader+SourceLocationMemberInvoker */ 

(function SourceLocationMemberInvoker$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.Schema.XamlMemberInvoker"), 
      Name: "System.Activities.Debugger.XamlDebuggerXmlReader+SourceLocationMemberInvoker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector"), $asm0B.TypeRef("System.Activities.Debugger.SourceLocationMemberType")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "sourceLocationCollector", $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader+XamlSourceLocationCollector"));

    $.Field({Static:false, Public:false}, "sourceLocationMember", $asm0B.TypeRef("System.Activities.Debugger.SourceLocationMemberType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.XamlDebuggerXmlReader+ValueNodeXamlMemberInvoker */ 

(function ValueNodeXamlMemberInvoker$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm2D.TypeRef("System.Xaml.Schema.XamlMemberInvoker"), 
      Name: "System.Activities.Debugger.XamlDebuggerXmlReader+ValueNodeXamlMemberInvoker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader"), $asm2D.TypeRef("System.Xaml.Schema.XamlMemberInvoker"), 
          $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ShouldSerializeValue", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.Schema.ShouldSerializeResult"), [$.Object])
    );

    $.Field({Static:false, Public:false}, "parent", $asm0B.TypeRef("System.Activities.Debugger.XamlDebuggerXmlReader"));

    $.Field({Static:false, Public:false}, "wrapped", $asm2D.TypeRef("System.Xaml.Schema.XamlMemberInvoker"));

    $.Field({Static:false, Public:false}, "attributeValueRange", $asm0B.TypeRef("System.Activities.Debugger.DocumentRange"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.BinarySearchResult */ 

(function BinarySearchResult$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.BinarySearchResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FoundIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsFound", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsNextIndexAvailable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NextIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NextIndexValue", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "result", $.Int32);

    $.Field({Static:false, Public:false}, "count", $.Int32);

    $.Property({Static:false, Public:false}, "IsFound", $.Boolean);

    $.Property({Static:false, Public:false}, "FoundIndex", $.Int32)
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm07.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Property({Static:false, Public:false}, "NextIndex", $.Int32)
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm07.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Property({Static:false, Public:false}, "IsNextIndexAvailable", $.Boolean)
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm07.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Property({Static:false, Public:false}, "NextIndexValue", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["{this.ToString()}"]; });

})();

/* class System.Activities.Debugger.CharacterSpottingTextReader */ 

(function CharacterSpottingTextReader$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.IO.TextReader"), 
      Name: "System.Activities.Debugger.CharacterSpottingTextReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AnalyzeReadData", 
      new JSIL.MethodSignature($.Char, [$.Char])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FindCharacterStrictlyAfter", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), [$.Char, $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindCharacterStrictlyBefore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), [$.Char, $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetLocationList", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]), [$.Char])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Peek", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_CurrentLine", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_CurrentLine");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_CurrentPosition", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_CurrentPosition");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_DoubleQuotes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_DoubleQuotes");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_EndBrackets", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_EndBrackets");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_SingleQuotes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_SingleQuotes");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.get_StartBrackets", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest"), "get_StartBrackets");

    $.Constant({Static:true , Public:false}, "StartAngleBracket", $.Char, "<");

    $.Constant({Static:true , Public:false}, "EndAngleBracket", $.Char, ">");

    $.Constant({Static:true , Public:false}, "SingleQuote", $.Char, "'");

    $.Constant({Static:true , Public:false}, "DoubleQuote", $.Char, "\"");

    $.Constant({Static:true , Public:false}, "EndLine", $.Char, "\n");

    $.Constant({Static:true , Public:false}, "CarriageReturn", $.Char, "\r");

    $.Field({Static:false, Public:false}, "underlyingReader", $asm07.TypeRef("System.IO.TextReader"));

    $.Field({Static:false, Public:false}, "currentLine", $.Int32);

    $.Field({Static:false, Public:false}, "currentPosition", $.Int32);

    $.Field({Static:false, Public:false}, "startAngleBrackets", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "endAngleBrackets", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "singleQuotes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "doubleQuotes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "endLines", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:false}, "CurrentLocation", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.CurrentLine", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.CurrentPosition", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.StartBrackets", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.EndBrackets", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.SingleQuotes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest.DoubleQuotes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.ImplementInterfaces(
      /* 1 */ $asm0B.TypeRef("System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.DocumentLocation */ 

(function DocumentLocation$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DocumentLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"), $asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CompareTo", 
      new JSIL.MethodSignature($.Int32, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LineNumber", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LinePosition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "lineNumber", $asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"));

    $.Field({Static:false, Public:false}, "linePosition", $asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"));

    $.Property({Static:false, Public:false}, "LineNumber", $asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"));

    $.Property({Static:false, Public:false}, "LinePosition", $asm0B.TypeRef("System.Activities.Debugger.OneBasedCounter"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type]), 
      /* 1 */ $asm07.TypeRef("System.IComparable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["({LineNumber.Value}:{LinePosition.Value})"]; });

})();

/* class System.Activities.Debugger.DocumentRange */ 

(function DocumentRange$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.DocumentRange", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_End", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Start", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "start", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.Field({Static:false, Public:false}, "end", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.Property({Static:false, Public:false}, "Start", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.Property({Static:false, Public:false}, "End", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IEquatable`1", [$.Type])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["({Start.LineNumber.Value}:{Start.LinePosition.Value}) - ({End.LineNumber.Value}:{End.LinePosition.Value})"]; });

})();

/* interface System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest */ 

JSIL.MakeInterface(
  "System.Activities.Debugger.ICharacterSpottingTextReaderForUnitTest", false, [], function ($) {
    $.Method({}, "get_CurrentLine", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "get_CurrentPosition", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "get_StartBrackets", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])));
    $.Method({}, "get_EndBrackets", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])));
    $.Method({}, "get_SingleQuotes", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])));
    $.Method({}, "get_DoubleQuotes", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])));
    $.Property({}, "CurrentLine");
    $.Property({}, "CurrentPosition");
    $.Property({}, "StartBrackets");
    $.Property({}, "EndBrackets");
    $.Property({}, "SingleQuotes");
    $.Property({}, "DoubleQuotes");
  }, []);

/* class System.Activities.Debugger.ListExtensions */ 

(function ListExtensions$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.Debugger.ListExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "MyBinarySearch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.BinarySearchResult"), [$asm07.TypeRef("System.Collections.Generic.List`1", ["!!0"]), "!!0"], ["T"])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.Debugger.OneBasedCounter */ 

(function OneBasedCounter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.OneBasedCounter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Value", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "value", $.Int32);

    $.Property({Static:false, Public:false}, "Value", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.SourceLocationFoundEventArgs */ 

(function SourceLocationFoundEventArgs$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Activities.Debugger.SourceLocationFoundEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsValueNode", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.SourceLocation"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Target", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Field({Static:false, Public:false}, "target", $.Object);

    $.Field({Static:false, Public:false}, "sourceLocation", $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"));

    $.Field({Static:false, Public:false}, "isValueNode", $.Boolean);

    $.Property({Static:false, Public:true }, "Target", $.Object);

    $.Property({Static:false, Public:true }, "SourceLocation", $asm0B.TypeRef("System.Activities.Debugger.SourceLocation"));

    $.Property({Static:false, Public:false}, "IsValueNode", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Debugger.SourceLocationMemberType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Debugger.SourceLocationMemberType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    StartLine: 0, 
    StartColumn: 1, 
    EndLine: 2, 
    EndColumn: 3, 
  }
);

/* class System.Activities.Debugger.UnitTestUtility */ 

(function UnitTestUtility$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Func$b2.Of($asm07.System.String, $asm07.System.Exception))) ();
  };



  function UnitTestUtility_get_AssertionExceptionFactory () {
    return $thisType.UnitTestUtility$AssertionExceptionFactory$value;
  }; 

  function UnitTestUtility_set_AssertionExceptionFactory (value) {
    $thisType.UnitTestUtility$AssertionExceptionFactory$value = value;
  }; 



  JSIL.MakeStaticClass("System.Activities.Debugger.UnitTestUtility", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "Assert", 
      new JSIL.MethodSignature(null, [$.Boolean, $.String])
    );

    $.Method({Static:true , Public:false}, "get_AssertionExceptionFactory", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Func`2", [$.String, $asm07.TypeRef("System.Exception")])), 
      UnitTestUtility_get_AssertionExceptionFactory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "set_AssertionExceptionFactory", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$.String, $asm07.TypeRef("System.Exception")])), 
      UnitTestUtility_set_AssertionExceptionFactory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "TestCleanup", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TestInitialize", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Func`2", [$.String, $asm07.TypeRef("System.Exception")]))
    );

    $.Field({Static:true , Public:false}, "UnitTestUtility$AssertionExceptionFactory$value", $asm07.TypeRef("System.Func`2", [$.String, $asm07.TypeRef("System.Exception")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:true , Public:false}, "AssertionExceptionFactory", $asm07.TypeRef("System.Func`2", [$.String, $asm07.TypeRef("System.Exception")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.XamlMemberExtensions */ 

(function XamlMemberExtensions$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.Debugger.XamlMemberExtensions", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "ReplaceXamlMemberInvoker", 
      new JSIL.MethodSignature($asm2D.TypeRef("System.Xaml.XamlMember"), [
          $asm2D.TypeRef("System.Xaml.XamlMember"), $asm2D.TypeRef("System.Xaml.XamlSchemaContext"), 
          $asm2D.TypeRef("System.Xaml.Schema.XamlMemberInvoker")
        ])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Activities.Debugger.XamlNode */ 

(function XamlNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm2D.System.Xaml.XamlMember)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm2D.System.Xaml.NamespaceDeclaration)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm2D.System.Xaml.XamlNodeType)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm2D.System.Xaml.XamlType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Object)) ();
  };



  function XamlNode_get_LineNumber () {
    return this.XamlNode$LineNumber$value;
  }; 

  function XamlNode_get_LinePosition () {
    return this.XamlNode$LinePosition$value;
  }; 

  function XamlNode_get_Member () {
    return this.XamlNode$Member$value;
  }; 

  function XamlNode_get_Namespace () {
    return this.XamlNode$Namespace$value;
  }; 

  function XamlNode_get_NodeType () {
    return this.XamlNode$NodeType$value;
  }; 

  function XamlNode_get_Type () {
    return this.XamlNode$Type$value;
  }; 

  function XamlNode_get_Value () {
    return this.XamlNode$Value$value;
  }; 

  function XamlNode_set_LineNumber (value) {
    this.XamlNode$LineNumber$value = (value | 0);
  }; 

  function XamlNode_set_LinePosition (value) {
    this.XamlNode$LinePosition$value = (value | 0);
  }; 

  function XamlNode_set_Member (value) {
    this.XamlNode$Member$value = value;
  }; 

  function XamlNode_set_Namespace (value) {
    this.XamlNode$Namespace$value = value;
  }; 

  function XamlNode_set_NodeType (value) {
    this.XamlNode$NodeType$value = value;
  }; 

  function XamlNode_set_Type (value) {
    this.XamlNode$Type$value = value;
  }; 

  function XamlNode_set_Value (value) {
    this.XamlNode$Value$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.XamlNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32), 
      XamlNode_get_LineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32), 
      XamlNode_get_LinePosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Member", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlMember")), 
      XamlNode_get_Member
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.NamespaceDeclaration")), 
      XamlNode_get_Namespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlNodeType")), 
      XamlNode_get_NodeType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm2D.TypeRef("System.Xaml.XamlType")), 
      XamlNode_get_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      XamlNode_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LineNumber", 
      JSIL.MethodSignature.Action($.Int32), 
      XamlNode_set_LineNumber
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LinePosition", 
      JSIL.MethodSignature.Action($.Int32), 
      XamlNode_set_LinePosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Member", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlMember")), 
      XamlNode_set_Member
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.NamespaceDeclaration")), 
      XamlNode_set_Namespace
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NodeType", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlNodeType")), 
      XamlNode_set_NodeType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm2D.TypeRef("System.Xaml.XamlType")), 
      XamlNode_set_Type
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object), 
      XamlNode_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "XamlNode$Member$value", $asm2D.TypeRef("System.Xaml.XamlMember"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$Namespace$value", $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$NodeType$value", $asm2D.TypeRef("System.Xaml.XamlNodeType"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$Type$value", $asm2D.TypeRef("System.Xaml.XamlType"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$Value$value", $.Object)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$LineNumber$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "XamlNode$LinePosition$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Member", $asm2D.TypeRef("System.Xaml.XamlMember"));

    $.Property({Static:false, Public:true }, "Namespace", $asm2D.TypeRef("System.Xaml.NamespaceDeclaration"));

    $.Property({Static:false, Public:true }, "NodeType", $asm2D.TypeRef("System.Xaml.XamlNodeType"));

    $.Property({Static:false, Public:true }, "Type", $asm2D.TypeRef("System.Xaml.XamlType"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "LinePosition", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.XmlWrappingReader */ 

(function XmlWrappingReader$Members () {
  var $, $thisType;



















































  JSIL.MakeType({
      BaseType: $asm2F.TypeRef("System.Xml.XmlReader"), 
      Name: "System.Activities.Debugger.XmlWrappingReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AttributeCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BaseReaderAsLineInfo", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.IXmlLineInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanResolveEntity", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EOF", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDefault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LinePosition", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QuoteChar", 
      JSIL.MethodSignature.Return($.Char)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReadState", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.ReadState"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaInfo", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Schema.IXmlSchemaInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlReaderSettings"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ValueType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlLang", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlSpace", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.XmlSpace"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "HasLineInfo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadAttributeValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResolveEntity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BaseReader", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Skip", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlNamespaceResolver.GetNamespacesInScope", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]), [$asm2F.TypeRef("System.Xml.XmlNamespaceScope")])
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlNamespaceResolver"), "GetNamespacesInScope");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Xml.IXmlNamespaceResolver.LookupPrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    )
      .Overrides($asm2F.TypeRef("System.Xml.IXmlNamespaceResolver"), "LookupPrefix");

    $.Field({Static:false, Public:false}, "baseReader", $asm2F.TypeRef("System.Xml.XmlReader"));

    $.Field({Static:false, Public:false}, "baseReaderAsLineInfo", $asm2F.TypeRef("System.Xml.IXmlLineInfo"));

    $.Field({Static:false, Public:false}, "baseReaderAsNamespaceResolver", $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver"));

    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm2F.TypeRef("System.Xml.XmlReaderSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm2F.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "HasValue", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsDefault", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "QuoteChar", $.Char);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlSpace", $asm2F.TypeRef("System.Xml.XmlSpace"));

    $.Property({Static:false, Public:true , Virtual:true }, "XmlLang", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaInfo", $asm2F.TypeRef("System.Xml.Schema.IXmlSchemaInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "ValueType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "AttributeCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "CanResolveEntity", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "EOF", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "ReadState", $asm2F.TypeRef("System.Xml.ReadState"));

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm2F.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "LinePosition", $.Int32);

    $.Property({Static:false, Public:false}, "BaseReader", $asm2F.TypeRef("System.Xml.XmlReader"));

    $.Property({Static:false, Public:false}, "BaseReaderAsLineInfo", $asm2F.TypeRef("System.Xml.IXmlLineInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.ImplementInterfaces(
      /* 1 */ $asm2F.TypeRef("System.Xml.IXmlLineInfo"), 
      /* 2 */ $asm2F.TypeRef("System.Xml.IXmlNamespaceResolver")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Activities.Debugger.XmlReaderWithSourceLocation */ 

(function XmlReaderWithSourceLocation$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Debugger.XmlWrappingReader"), 
      Name: "System.Activities.Debugger.XmlReaderWithSourceLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.TextReader"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "FindAttributeValueLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentRange"), [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindContentEndBefore", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEmptyElementRange", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentRange"), [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEndElementBracket", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindStartElementBracket", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AttributeValueRanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ContentValueRanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CurrentLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmptyElementRanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndElementLocations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StartElementLocations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "attributeValueRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Field({Static:false, Public:false}, "emptyElementRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Field({Static:false, Public:false}, "contentValueRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Field({Static:false, Public:false}, "startElementLocations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "endElementLocations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Field({Static:false, Public:false}, "characterSpottingTextReader", $asm0B.TypeRef("System.Activities.Debugger.CharacterSpottingTextReader"));

    $.Field({Static:false, Public:false}, "contentStartLocationStack", $asm0A.TypeRef("System.Collections.Generic.Stack`1", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:true }, "AttributeValueRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Property({Static:false, Public:true }, "ContentValueRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Property({Static:false, Public:true }, "EmptyElementRanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentRange")]));

    $.Property({Static:false, Public:true }, "StartElementLocations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:true }, "EndElementLocations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"), $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation")]));

    $.Property({Static:false, Public:false}, "CurrentLocation", $asm0B.TypeRef("System.Activities.Debugger.DocumentLocation"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.Debugger.Symbol");
/* class System.Activities.Debugger.Symbol.ActivitySymbol */ 

(function ActivitySymbol$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize(System.Array.Of($asm07.System.Byte))) ();
  };




  function ActivitySymbol_get_EndColumn () {
    return this.ActivitySymbol$EndColumn$value;
  }; 

  function ActivitySymbol_get_EndLine () {
    return this.ActivitySymbol$EndLine$value;
  }; 


  function ActivitySymbol_get_QualifiedId () {
    return this.ActivitySymbol$QualifiedId$value;
  }; 

  function ActivitySymbol_get_StartColumn () {
    return this.ActivitySymbol$StartColumn$value;
  }; 

  function ActivitySymbol_get_StartLine () {
    return this.ActivitySymbol$StartLine$value;
  }; 

  function ActivitySymbol_set_EndColumn (value) {
    this.ActivitySymbol$EndColumn$value = (value | 0);
  }; 

  function ActivitySymbol_set_EndLine (value) {
    this.ActivitySymbol$EndLine$value = (value | 0);
  }; 

  function ActivitySymbol_set_QualifiedId (value) {
    this.ActivitySymbol$QualifiedId$value = value;
  }; 

  function ActivitySymbol_set_StartColumn (value) {
    this.ActivitySymbol$StartColumn$value = (value | 0);
  }; 

  function ActivitySymbol_set_StartLine (value) {
    this.ActivitySymbol$StartLine$value = (value | 0);
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.Symbol.ActivitySymbol", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_EndColumn", 
      JSIL.MethodSignature.Return($.Int32), 
      ActivitySymbol_get_EndColumn
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_EndLine", 
      JSIL.MethodSignature.Return($.Int32), 
      ActivitySymbol_get_EndLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_QualifiedId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte])), 
      ActivitySymbol_get_QualifiedId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_StartColumn", 
      JSIL.MethodSignature.Return($.Int32), 
      ActivitySymbol_get_StartColumn
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_StartLine", 
      JSIL.MethodSignature.Return($.Int32), 
      ActivitySymbol_get_StartLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_EndColumn", 
      JSIL.MethodSignature.Action($.Int32), 
      ActivitySymbol_set_EndColumn
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_EndLine", 
      JSIL.MethodSignature.Action($.Int32), 
      ActivitySymbol_set_EndLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_QualifiedId", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte])), 
      ActivitySymbol_set_QualifiedId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StartColumn", 
      JSIL.MethodSignature.Action($.Int32), 
      ActivitySymbol_set_StartColumn
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StartLine", 
      JSIL.MethodSignature.Action($.Int32), 
      ActivitySymbol_set_StartLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Write", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "ActivitySymbol$StartLine$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivitySymbol$StartColumn$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivitySymbol$EndLine$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivitySymbol$EndColumn$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivitySymbol$QualifiedId$value", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "id", $.String);

    $.Property({Static:false, Public:true }, "StartLine", $.Int32);

    $.Property({Static:false, Public:true }, "StartColumn", $.Int32);

    $.Property({Static:false, Public:true }, "EndLine", $.Int32);

    $.Property({Static:false, Public:true }, "EndColumn", $.Int32);

    $.Property({Static:false, Public:false}, "QualifiedId", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "Id", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.Symbol.DebugSymbol */ 

(function DebugSymbol$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.Debugger.Symbol.DebugSymbol", true, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetSymbol", 
      new JSIL.MethodSignature($.Object, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetSymbol", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    );

    $.Field({Static:true , Public:false}, "attachingTypeName", $asm07.TypeRef("System.Type"), function ($pi) {
        return $thisType.__Type__;
      });

    $.Field({Static:true , Public:true , ReadOnly:true }, "SymbolName", $asm2D.TypeRef("System.Xaml.AttachableMemberIdentifier"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.Symbol.SymbolHelper */ 

(function SymbolHelper$Members () {
  var $, $thisType;









  JSIL.MakeStaticClass("System.Activities.Debugger.Symbol.SymbolHelper", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CalculateChecksum", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateHashProvider", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.HashAlgorithm"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ChecksumProviderId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetEncodedSize", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetHexStringFromChecksum", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "ReadEncodedInt32", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.IO.BinaryReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateChecksum", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "WriteEncodedInt32", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryWriter"), $.Int32])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "Md5IdentifierGuid", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "Sha1IdentifierGuid", $asm07.TypeRef("System.Guid"));


    function SymbolHelper__cctor () {
      $thisType.Md5IdentifierGuid = new $asm07.System.Guid();
      $thisType.Sha1IdentifierGuid = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SymbolHelper__cctor
    );

    $.Property({Static:true , Public:true }, "ChecksumProviderId", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Debugger.Symbol.SymbolHelper+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.Symbol.SymbolHelper+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lGetHexStringFromChecksum$gb__8_0", 
      new JSIL.MethodSignature($.String, [$.Byte])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm07.TypeRef("System.Func`2", [$.Byte, $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Debugger.Symbol.WorkflowSymbol */ 

(function WorkflowSymbol$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.ICollection$b1.Of($asm0B.System.Activities.Debugger.Symbol.ActivitySymbol))) ();
  };








  function WorkflowSymbol_get_FileName () {
    return this.WorkflowSymbol$FileName$value;
  }; 

  function WorkflowSymbol_get_Symbols () {
    return this.WorkflowSymbol$Symbols$value;
  }; 




  function WorkflowSymbol_set_FileName (value) {
    this.WorkflowSymbol$FileName$value = value;
  }; 

  function WorkflowSymbol_set_Symbols (value) {
    this.WorkflowSymbol$Symbols$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Debugger.Symbol.WorkflowSymbol", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateChecksum", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "Decode", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Encode", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Encode", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.Debugger.Symbol.WorkflowSymbol+EncodingFormat")])
    );

    $.Method({Static:false, Public:true }, "get_FileName", 
      JSIL.MethodSignature.Return($.String), 
      WorkflowSymbol_get_FileName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Symbols", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Debugger.Symbol.ActivitySymbol")])), 
      WorkflowSymbol_get_Symbols
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetChecksum", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseBinary", 
      new JSIL.MethodSignature($.Type, [$jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:true , Public:false}, "ParseStringRepresentation", 
      new JSIL.MethodSignature($.Type, [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.Method({Static:false, Public:true }, "set_FileName", 
      JSIL.MethodSignature.Action($.String), 
      WorkflowSymbol_set_FileName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Symbols", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Debugger.Symbol.ActivitySymbol")])), 
      WorkflowSymbol_set_Symbols
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Write", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "WorkflowSymbol$FileName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "WorkflowSymbol$Symbols$value", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Debugger.Symbol.ActivitySymbol")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "checksum", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Constant({Static:true , Public:false}, "DefaultEncodingFormat", $asm0B.TypeRef("System.Activities.Debugger.Symbol.WorkflowSymbol+EncodingFormat"), 119);

    $.Property({Static:false, Public:true }, "FileName", $.String);

    $.Property({Static:false, Public:true }, "Symbols", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm0B.TypeRef("System.Activities.Debugger.Symbol.ActivitySymbol")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Debugger.Symbol.WorkflowSymbol+EncodingFormat */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Debugger.Symbol.WorkflowSymbol+EncodingFormat", 
    BaseType: $asm07.TypeRef("System.Byte"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    String: 118, 
    Binary: 119, 
    Checksum: 128, 
  }
);

/* class System.Activities.Tracking.ActivityInfo */ 

(function ActivityInfo$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.ActivityInstance)) ();
  };





  function ActivityInfo_get_Activity () {
    return this.ActivityInfo$Activity$value;
  }; 


  function ActivityInfo_get_Instance () {
    return this.ActivityInfo$Instance$value;
  }; 




  function ActivityInfo_set_Activity (value) {
    this.ActivityInfo$Activity$value = value;
  }; 


  function ActivityInfo_set_Instance (value) {
    this.ActivityInfo$Instance$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.ActivityInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $.Int64])
    );

    $.Method({Static:false, Public:false}, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityInfo_get_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_Instance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      ActivityInfo_get_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      ActivityInfo_set_Activity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Id", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:false}, "set_Instance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      ActivityInfo_set_Instance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_InstanceId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_TypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "id", $.String);

    $.Field({Static:false, Public:false}, "instanceId", $.String);

    $.Field({Static:false, Public:false}, "instanceIdInternal", $.Int64);

    $.Field({Static:false, Public:false}, "typeName", $.String);

    $.Field({Static:false, Public:false}, "ActivityInfo$Instance$value", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityInfo$Activity$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Instance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "Id", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "InstanceId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "TypeName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Activity", $asm0B.TypeRef("System.Activities.Activity"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.ActivityScheduledRecord */ 

(function ActivityScheduledRecord$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.ActivityScheduledRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Child", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedChild", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Child", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Field({Static:false, Public:false}, "child", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Child", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:false}, "SerializedActivity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedChild", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.ActivityScheduledQuery */ 

(function ActivityScheduledQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function ActivityScheduledQuery_get_ActivityName () {
    return this.ActivityScheduledQuery$ActivityName$value;
  }; 

  function ActivityScheduledQuery_get_ChildActivityName () {
    return this.ActivityScheduledQuery$ChildActivityName$value;
  }; 

  function ActivityScheduledQuery_set_ActivityName (value) {
    this.ActivityScheduledQuery$ActivityName$value = value;
  }; 

  function ActivityScheduledQuery_set_ChildActivityName (value) {
    this.ActivityScheduledQuery$ChildActivityName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.ActivityScheduledQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String), 
      ActivityScheduledQuery_get_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ChildActivityName", 
      JSIL.MethodSignature.Return($.String), 
      ActivityScheduledQuery_get_ChildActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String), 
      ActivityScheduledQuery_set_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ChildActivityName", 
      JSIL.MethodSignature.Action($.String), 
      ActivityScheduledQuery_set_ChildActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityScheduledQuery$ActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ActivityScheduledQuery$ChildActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String);

    $.Property({Static:false, Public:true }, "ChildActivityName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.ActivityStateQuery */ 

(function ActivityStateQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function ActivityStateQuery_get_ActivityName () {
    return this.ActivityStateQuery$ActivityName$value;
  }; 







  function ActivityStateQuery_set_ActivityName (value) {
    this.ActivityStateQuery$ActivityName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.ActivityStateQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String), 
      ActivityStateQuery_get_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasArguments", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasStates", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasVariables", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_States", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]))
    );

    $.Method({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String), 
      ActivityStateQuery_set_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "$arguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Field({Static:false, Public:false}, "states", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Field({Static:false, Public:false}, "ActivityStateQuery$ActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String);

    $.Property({Static:false, Public:true }, "Arguments", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Property({Static:false, Public:true }, "States", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Property({Static:false, Public:false}, "HasStates", $.Boolean);

    $.Property({Static:false, Public:false}, "HasArguments", $.Boolean);

    $.Property({Static:false, Public:false}, "HasVariables", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.ActivityStateRecord */ 

(function ActivityStateRecord$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.ActivityStateRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.ActivityInstanceState")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), 
          $asm0B.TypeRef("System.Activities.ActivityInstanceState")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Variables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetArguments", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetVariables", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Arguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedState", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedVariables", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_State", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Variables", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackData", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$.String]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])])
        ])
    );

    $.Field({Static:false, Public:false}, "variables", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "$arguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Field({Static:false, Public:false}, "state", $.String);

    $.Field({Static:true , Public:false}, "wildcardCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.String]));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "State", $.String);

    $.Property({Static:false, Public:true }, "Variables", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "Arguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "SerializedVariables", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedArguments", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedActivity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedState", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.ActivityStates */ 

(function ActivityStates$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.Tracking.ActivityStates", true, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Canceled", $.String, "Canceled");

    $.Constant({Static:true , Public:true }, "Closed", $.String, "Closed");

    $.Constant({Static:true , Public:true }, "Executing", $.String, "Executing");

    $.Constant({Static:true , Public:true }, "Faulted", $.String, "Faulted");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.BookmarkResumptionRecord */ 

(function BookmarkResumptionRecord$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.BookmarkResumptionRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BookmarkScope", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Owner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Payload", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScope", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPayload", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BookmarkName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BookmarkScope", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Payload", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScope", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwner", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPayload", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "bookmarkScope", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "bookmarkName", $.String);

    $.Field({Static:false, Public:false}, "payload", $.Object);

    $.Field({Static:false, Public:false}, "owner", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "BookmarkScope", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "BookmarkName", $.String);

    $.Property({Static:false, Public:true }, "Payload", $.Object);

    $.Property({Static:false, Public:true }, "Owner", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScope", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPayload", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwner", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.BookmarkResumptionQuery */ 

(function BookmarkResumptionQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function BookmarkResumptionQuery_get_Name () {
    return this.BookmarkResumptionQuery$Name$value;
  }; 

  function BookmarkResumptionQuery_set_Name (value) {
    this.BookmarkResumptionQuery$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.BookmarkResumptionQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      BookmarkResumptionQuery_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      BookmarkResumptionQuery_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BookmarkResumptionQuery$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.CancelRequestedRecord */ 

(function CancelRequestedRecord$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.CancelRequestedRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Child", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedChild", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Activity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Child", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedChild", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Field({Static:false, Public:false}, "child", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Activity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "Child", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:false}, "SerializedActivity", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedChild", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.CancelRequestedQuery */ 

(function CancelRequestedQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function CancelRequestedQuery_get_ActivityName () {
    return this.CancelRequestedQuery$ActivityName$value;
  }; 

  function CancelRequestedQuery_get_ChildActivityName () {
    return this.CancelRequestedQuery$ChildActivityName$value;
  }; 

  function CancelRequestedQuery_set_ActivityName (value) {
    this.CancelRequestedQuery$ActivityName$value = value;
  }; 

  function CancelRequestedQuery_set_ChildActivityName (value) {
    this.CancelRequestedQuery$ChildActivityName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.CancelRequestedQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActivityName", 
      JSIL.MethodSignature.Return($.String), 
      CancelRequestedQuery_get_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ChildActivityName", 
      JSIL.MethodSignature.Return($.String), 
      CancelRequestedQuery_get_ChildActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityName", 
      JSIL.MethodSignature.Action($.String), 
      CancelRequestedQuery_set_ActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ChildActivityName", 
      JSIL.MethodSignature.Action($.String), 
      CancelRequestedQuery_set_ChildActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CancelRequestedQuery$ActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CancelRequestedQuery$ChildActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityName", $.String);

    $.Property({Static:false, Public:true }, "ChildActivityName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingParticipant */ 

(function TrackingParticipant$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Tracking.TrackingProfile)) ();
  };





  function TrackingParticipant_get_TrackingProfile () {
    return this.TrackingParticipant$TrackingProfile$value;
  }; 

  function TrackingParticipant_set_TrackingProfile (value) {
    this.TrackingParticipant$TrackingProfile$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingParticipant", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginTrack", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndTrack", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_TrackingProfile", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")), 
      TrackingParticipant_get_TrackingProfile
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "set_TrackingProfile", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingProfile")), 
      TrackingParticipant_set_TrackingProfile
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Track", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.Field({Static:false, Public:false}, "TrackingParticipant$TrackingProfile$value", $asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true , Virtual:true }, "TrackingProfile", $asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingParticipant+TrackAsyncResult */ 

(function TrackAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.Tracking.TrackingParticipant+TrackAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"), $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteTrack", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackCore", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "asyncExecuteTrack", $asm07.TypeRef("System.Action`1", [$.Object]), function ($pi) {
        return $asm07.System.Action$b1.Of($asm07.System.Object).New(null, null, new JSIL.MethodPointerInfo($thisType, "ExecuteTrack", JSIL.MethodSignature.Action($.Object), true, false));
      });

    $.Field({Static:false, Public:false}, "participant", $asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"));

    $.Field({Static:false, Public:false}, "record", $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"));

    $.Field({Static:false, Public:false}, "timeout", $asm07.TypeRef("System.TimeSpan"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.EtwTrackingParticipant */ 

(function EtwTrackingParticipant$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function EtwTrackingParticipant_get_ApplicationReference () {
    return this.EtwTrackingParticipant$ApplicationReference$value;
  }; 





  function EtwTrackingParticipant_set_ApplicationReference (value) {
    this.EtwTrackingParticipant$ApplicationReference$value = value;
  }; 



















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"), 
      Name: "System.Activities.Tracking.EtwTrackingParticipant", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginTrack", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndTrack", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:true }, "get_ApplicationReference", 
      JSIL.MethodSignature.Return($.String), 
      EtwTrackingParticipant_get_ApplicationReference
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_EtwProviderId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeEtwTrackingProvider", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "PrepareAnnotations", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareDictionary", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])])
    );

    $.Method({Static:false, Public:true }, "set_ApplicationReference", 
      JSIL.MethodSignature.Action($.String), 
      EtwTrackingParticipant_set_ApplicationReference
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_EtwProviderId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TraceItemNotSerializable", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceTrackingRecordDropped", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceTrackingRecordTruncated", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Track", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackActivityRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityStateRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackActivityScheduledRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityScheduledRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackBookmarkRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.BookmarkResumptionRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackCancelRequestedRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CancelRequestedRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackCustomRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackFaultPropagationRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.FaultPropagationRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceAbortedRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceSuspendedRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceTerminatedRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceUnhandledExceptionRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowInstanceUpdatedRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackWorkflowRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"))
    );

    $.Constant({Static:true , Public:false}, "truncatedItemsTag", $.String, "<items>...</items>");

    $.Constant({Static:true , Public:false}, "emptyItemsTag", $.String, "<items />");

    $.Constant({Static:true , Public:false}, "itemsTag", $.String, "items");

    $.Constant({Static:true , Public:false}, "itemTag", $.String, "item");

    $.Constant({Static:true , Public:false}, "nameAttribute", $.String, "name");

    $.Constant({Static:true , Public:false}, "typeAttribute", $.String, "type");

    $.Field({Static:true , Public:false}, "diagnosticTraceCache", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "variableSerializer", $asm21.TypeRef("System.Runtime.Serialization.NetDataContractSerializer"));

    $.Field({Static:false, Public:false}, "diagnosticTrace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));

    $.Field({Static:false, Public:false}, "etwProviderId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "EtwTrackingParticipant$ApplicationReference$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "EtwProviderId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "ApplicationReference", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.FaultPropagationRecord */ 

(function FaultPropagationRecord$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.FaultPropagationRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), 
          $.Boolean, $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Fault", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFaultSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFault", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFaultHandler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFaultSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsFaultSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Fault", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FaultHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FaultSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsFaultSource", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFault", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFaultHandler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFaultSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsFaultSource", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "faultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Field({Static:false, Public:false}, "faultHandler", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Field({Static:false, Public:false}, "isFaultSource", $.Boolean);

    $.Field({Static:false, Public:false}, "fault", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "FaultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "FaultHandler", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "IsFaultSource", $.Boolean);

    $.Property({Static:false, Public:true }, "Fault", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:false}, "SerializedFaultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedFaultHandler", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsFaultSource", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedFault", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.FaultPropagationQuery */ 

(function FaultPropagationQuery$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function FaultPropagationQuery_get_FaultHandlerActivityName () {
    return this.FaultPropagationQuery$FaultHandlerActivityName$value;
  }; 

  function FaultPropagationQuery_get_FaultSourceActivityName () {
    return this.FaultPropagationQuery$FaultSourceActivityName$value;
  }; 

  function FaultPropagationQuery_set_FaultHandlerActivityName (value) {
    this.FaultPropagationQuery$FaultHandlerActivityName$value = value;
  }; 

  function FaultPropagationQuery_set_FaultSourceActivityName (value) {
    this.FaultPropagationQuery$FaultSourceActivityName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.FaultPropagationQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_FaultHandlerActivityName", 
      JSIL.MethodSignature.Return($.String), 
      FaultPropagationQuery_get_FaultHandlerActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FaultSourceActivityName", 
      JSIL.MethodSignature.Return($.String), 
      FaultPropagationQuery_get_FaultSourceActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FaultHandlerActivityName", 
      JSIL.MethodSignature.Action($.String), 
      FaultPropagationQuery_set_FaultHandlerActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FaultSourceActivityName", 
      JSIL.MethodSignature.Action($.String), 
      FaultPropagationQuery_set_FaultSourceActivityName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FaultPropagationQuery$FaultHandlerActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FaultPropagationQuery$FaultSourceActivityName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FaultHandlerActivityName", $.String);

    $.Property({Static:false, Public:true }, "FaultSourceActivityName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.RuntimeTrackingProfile */ 

(function RuntimeTrackingProfile$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.RuntimeTrackingProfile", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddActivityName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "AddActivityScheduledSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityScheduledQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddActivitySubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddBookmarkSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.BookmarkResumptionQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCancelRequestedSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CancelRequestedQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddCustomTrackingSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddFaultPropagationSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.FaultPropagationQuery"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddWorkflowSubscription", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceQuery"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckSubscription", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateRecord"), $asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractVariables", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateRecord"), $asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Cache", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile+RuntimeTrackingProfileCache"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Filter", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecordPreFilter"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRuntimeTrackingProfile", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSubscribedActivityNames", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), [$asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery"), [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceQuery"), [$asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.BookmarkResumptionQuery"), [$asm0B.TypeRef("System.Activities.Tracking.BookmarkResumptionRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.ActivityScheduledQuery"), [$asm0B.TypeRef("System.Activities.Tracking.ActivityScheduledRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.FaultPropagationQuery"), [$asm0B.TypeRef("System.Activities.Tracking.FaultPropagationRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.CancelRequestedQuery"), [$asm0B.TypeRef("System.Activities.Tracking.CancelRequestedRecord")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Match", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.CustomTrackingQuery"), [$asm0B.TypeRef("System.Activities.Tracking.CustomTrackingRecord")])
    );

    $.ExternalMethod({Static:true , Public:false}, "MatchActivityState", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery"), [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateRecord"), $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "PrepareRecord", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), [
          $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldTrackActivity", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $.String])
    );

    $.Field({Static:true , Public:false}, "profileCache", $asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile+RuntimeTrackingProfileCache"));

    $.Field({Static:false, Public:false}, "activityScheduledSubscriptions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Tracking.ActivityScheduledQuery")]));

    $.Field({Static:false, Public:false}, "faultPropagationSubscriptions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Tracking.FaultPropagationQuery")]));

    $.Field({Static:false, Public:false}, "cancelRequestedSubscriptions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Tracking.CancelRequestedQuery")]));

    $.Field({Static:false, Public:false}, "activitySubscriptions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Tracking.ActivityStateQuery")])]));

    $.Field({Static:false, Public:false}, "customTrackingQuerySubscriptions", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Tracking.CustomTrackingQuery")]));

    $.Field({Static:false, Public:false}, "bookmarkSubscriptions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Tracking.BookmarkResumptionQuery")]));

    $.Field({Static:false, Public:false}, "workflowEventSubscriptions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceQuery")]));

    $.Field({Static:false, Public:false}, "associatedProfile", $asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"));

    $.Field({Static:false, Public:false}, "trackingRecordPreFilter", $asm0B.TypeRef("System.Activities.Tracking.TrackingRecordPreFilter"));

    $.Field({Static:false, Public:false}, "activityNames", $asm07.TypeRef("System.Collections.Generic.List`1", [$.String]));

    $.Field({Static:false, Public:false}, "isRootNativeActivity", $.Boolean);

    $.Property({Static:true , Public:false}, "Cache", $asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile+RuntimeTrackingProfileCache"));

    $.Property({Static:false, Public:false}, "Filter", $asm0B.TypeRef("System.Activities.Tracking.TrackingRecordPreFilter"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.RuntimeTrackingProfile+RuntimeTrackingProfileCache */ 

(function RuntimeTrackingProfileCache$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.RuntimeTrackingProfile+RuntimeTrackingProfileCache", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRuntimeTrackingProfile", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile"), [$asm0B.TypeRef("System.Activities.Tracking.TrackingProfile"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:false}, "cache", $asm07.TypeRef("System.Runtime.CompilerServices.ConditionalWeakTable`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile")])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingRecordPreFilter */ 

(function TrackingRecordPreFilter$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function TrackingRecordPreFilter_get_TrackActivityScheduledRecords () {
    return this.TrackingRecordPreFilter$TrackActivityScheduledRecords$value;
  }; 

  function TrackingRecordPreFilter_get_TrackActivityStateRecords () {
    return this.TrackingRecordPreFilter$TrackActivityStateRecords$value;
  }; 

  function TrackingRecordPreFilter_get_TrackActivityStateRecordsClosedState () {
    return this.TrackingRecordPreFilter$TrackActivityStateRecordsClosedState$value;
  }; 

  function TrackingRecordPreFilter_get_TrackActivityStateRecordsExecutingState () {
    return this.TrackingRecordPreFilter$TrackActivityStateRecordsExecutingState$value;
  }; 

  function TrackingRecordPreFilter_get_TrackBookmarkResumptionRecords () {
    return this.TrackingRecordPreFilter$TrackBookmarkResumptionRecords$value;
  }; 

  function TrackingRecordPreFilter_get_TrackCancelRequestedRecords () {
    return this.TrackingRecordPreFilter$TrackCancelRequestedRecords$value;
  }; 

  function TrackingRecordPreFilter_get_TrackFaultPropagationRecords () {
    return this.TrackingRecordPreFilter$TrackFaultPropagationRecords$value;
  }; 

  function TrackingRecordPreFilter_get_TrackingProviderInitialized () {
    return this.TrackingRecordPreFilter$TrackingProviderInitialized$value;
  }; 

  function TrackingRecordPreFilter_get_TrackWorkflowInstanceRecords () {
    return this.TrackingRecordPreFilter$TrackWorkflowInstanceRecords$value;
  }; 


  function TrackingRecordPreFilter_set_TrackActivityScheduledRecords (value) {
    this.TrackingRecordPreFilter$TrackActivityScheduledRecords$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackActivityStateRecords (value) {
    this.TrackingRecordPreFilter$TrackActivityStateRecords$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackActivityStateRecordsClosedState (value) {
    this.TrackingRecordPreFilter$TrackActivityStateRecordsClosedState$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackActivityStateRecordsExecutingState (value) {
    this.TrackingRecordPreFilter$TrackActivityStateRecordsExecutingState$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackBookmarkResumptionRecords (value) {
    this.TrackingRecordPreFilter$TrackBookmarkResumptionRecords$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackCancelRequestedRecords (value) {
    this.TrackingRecordPreFilter$TrackCancelRequestedRecords$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackFaultPropagationRecords (value) {
    this.TrackingRecordPreFilter$TrackFaultPropagationRecords$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackingProviderInitialized (value) {
    this.TrackingRecordPreFilter$TrackingProviderInitialized$value = value;
  }; 

  function TrackingRecordPreFilter_set_TrackWorkflowInstanceRecords (value) {
    this.TrackingRecordPreFilter$TrackWorkflowInstanceRecords$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingRecordPreFilter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_TrackActivityScheduledRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackActivityScheduledRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackActivityStateRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackActivityStateRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackActivityStateRecordsClosedState", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackActivityStateRecordsClosedState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackActivityStateRecordsExecutingState", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackActivityStateRecordsExecutingState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackBookmarkResumptionRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackBookmarkResumptionRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackCancelRequestedRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackCancelRequestedRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackFaultPropagationRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackFaultPropagationRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackingProviderInitialized", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackingProviderInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TrackWorkflowInstanceRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingRecordPreFilter_get_TrackWorkflowInstanceRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Merge", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.Method({Static:false, Public:false}, "set_TrackActivityScheduledRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackActivityScheduledRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackActivityStateRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackActivityStateRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackActivityStateRecordsClosedState", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackActivityStateRecordsClosedState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackActivityStateRecordsExecutingState", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackActivityStateRecordsExecutingState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackBookmarkResumptionRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackBookmarkResumptionRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackCancelRequestedRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackCancelRequestedRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackFaultPropagationRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackFaultPropagationRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackingProviderInitialized", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackingProviderInitialized
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TrackWorkflowInstanceRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingRecordPreFilter_set_TrackWorkflowInstanceRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackingProviderInitialized$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackWorkflowInstanceRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackBookmarkResumptionRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackActivityScheduledRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackActivityStateRecordsClosedState$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackActivityStateRecordsExecutingState$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackActivityStateRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackCancelRequestedRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingRecordPreFilter$TrackFaultPropagationRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "TrackingProviderInitialized", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackWorkflowInstanceRecords", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackBookmarkResumptionRecords", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackActivityScheduledRecords", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackActivityStateRecordsClosedState", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackActivityStateRecordsExecutingState", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackActivityStateRecords", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackCancelRequestedRecords", $.Boolean);

    $.Property({Static:false, Public:false}, "TrackFaultPropagationRecords", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingProfile */ 

(function TrackingProfile$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.Tracking.ImplementationVisibility)) ();
  };



  function TrackingProfile_get_ActivityDefinitionId () {
    return this.TrackingProfile$ActivityDefinitionId$value;
  }; 

  function TrackingProfile_get_ImplementationVisibility () {
    return this.TrackingProfile$ImplementationVisibility$value;
  }; 

  function TrackingProfile_get_Name () {
    return this.TrackingProfile$Name$value;
  }; 


  function TrackingProfile_set_ActivityDefinitionId (value) {
    this.TrackingProfile$ActivityDefinitionId$value = value;
  }; 

  function TrackingProfile_set_ImplementationVisibility (value) {
    this.TrackingProfile$ImplementationVisibility$value = value;
  }; 

  function TrackingProfile_set_Name (value) {
    this.TrackingProfile$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingProfile", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ActivityDefinitionId", 
      JSIL.MethodSignature.Return($.String), 
      TrackingProfile_get_ActivityDefinitionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ImplementationVisibility", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility")), 
      TrackingProfile_get_ImplementationVisibility
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      TrackingProfile_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Queries", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingQuery")]))
    );

    $.Method({Static:false, Public:true }, "set_ActivityDefinitionId", 
      JSIL.MethodSignature.Action($.String), 
      TrackingProfile_set_ActivityDefinitionId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ImplementationVisibility", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility")), 
      TrackingProfile_set_ImplementationVisibility
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      TrackingProfile_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "queries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingQuery")]));

    $.Field({Static:false, Public:false}, "TrackingProfile$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProfile$ImplementationVisibility$value", $asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProfile$ActivityDefinitionId$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "ImplementationVisibility", $asm0B.TypeRef("System.Activities.Tracking.ImplementationVisibility"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm0B.System.Activities.Tracking.ImplementationVisibility.RootScope]; });

    $.Property({Static:false, Public:true }, "ActivityDefinitionId", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; });

    $.Property({Static:false, Public:true }, "Queries", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingQuery")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Queries"]; });

})();

/* class System.Activities.Tracking.TrackingProvider */ 

(function TrackingProvider$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };












  function TrackingProvider_get_ShouldTrack () {
    return this.TrackingProvider$ShouldTrack$value;
  }; 

  function TrackingProvider_get_ShouldTrackActivityScheduledRecords () {
    return this.TrackingProvider$ShouldTrackActivityScheduledRecords$value;
  }; 

  function TrackingProvider_get_ShouldTrackActivityStateRecords () {
    return this.TrackingProvider$ShouldTrackActivityStateRecords$value;
  }; 

  function TrackingProvider_get_ShouldTrackActivityStateRecordsClosedState () {
    return this.TrackingProvider$ShouldTrackActivityStateRecordsClosedState$value;
  }; 

  function TrackingProvider_get_ShouldTrackActivityStateRecordsExecutingState () {
    return this.TrackingProvider$ShouldTrackActivityStateRecordsExecutingState$value;
  }; 

  function TrackingProvider_get_ShouldTrackBookmarkResumptionRecords () {
    return this.TrackingProvider$ShouldTrackBookmarkResumptionRecords$value;
  }; 

  function TrackingProvider_get_ShouldTrackCancelRequestedRecords () {
    return this.TrackingProvider$ShouldTrackCancelRequestedRecords$value;
  }; 

  function TrackingProvider_get_ShouldTrackFaultPropagationRecords () {
    return this.TrackingProvider$ShouldTrackFaultPropagationRecords$value;
  }; 

  function TrackingProvider_get_ShouldTrackWorkflowInstanceRecords () {
    return this.TrackingProvider$ShouldTrackWorkflowInstanceRecords$value;
  }; 





  function TrackingProvider_set_ShouldTrack (value) {
    this.TrackingProvider$ShouldTrack$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackActivityScheduledRecords (value) {
    this.TrackingProvider$ShouldTrackActivityScheduledRecords$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackActivityStateRecords (value) {
    this.TrackingProvider$ShouldTrackActivityStateRecords$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackActivityStateRecordsClosedState (value) {
    this.TrackingProvider$ShouldTrackActivityStateRecordsClosedState$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackActivityStateRecordsExecutingState (value) {
    this.TrackingProvider$ShouldTrackActivityStateRecordsExecutingState$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackBookmarkResumptionRecords (value) {
    this.TrackingProvider$ShouldTrackBookmarkResumptionRecords$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackCancelRequestedRecords (value) {
    this.TrackingProvider$ShouldTrackCancelRequestedRecords$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackFaultPropagationRecords (value) {
    this.TrackingProvider$ShouldTrackFaultPropagationRecords$value = value;
  }; 

  function TrackingProvider_set_ShouldTrackWorkflowInstanceRecords (value) {
    this.TrackingProvider$ShouldTrackWorkflowInstanceRecords$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Tracking.TrackingProvider", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddParticipant", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginFlushPendingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearParticipants", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearPendingRecords", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndFlushPendingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "FlushPendingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasPendingRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NextTrackingRecordNumber", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.Method({Static:false, Public:true }, "get_ShouldTrack", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrack
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackActivityScheduledRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackActivityScheduledRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackActivityStateRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackActivityStateRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackActivityStateRecordsClosedState", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackActivityStateRecordsClosedState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackActivityStateRecordsExecutingState", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackActivityStateRecordsExecutingState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackBookmarkResumptionRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackBookmarkResumptionRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackCancelRequestedRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackCancelRequestedRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackFaultPropagationRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackFaultPropagationRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldTrackWorkflowInstanceRecords", 
      JSIL.MethodSignature.Return($.Boolean), 
      TrackingProvider_get_ShouldTrackWorkflowInstanceRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNextRecordNumber", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRuntimeTrackingProfile", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile"), [$asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Merge", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingRecordPreFilter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "OnDeserialized", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.Method({Static:false, Public:false}, "set_ShouldTrack", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrack
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackActivityScheduledRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackActivityScheduledRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackActivityStateRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackActivityStateRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackActivityStateRecordsClosedState", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackActivityStateRecordsClosedState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackActivityStateRecordsExecutingState", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackActivityStateRecordsExecutingState
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackBookmarkResumptionRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackBookmarkResumptionRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackCancelRequestedRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackCancelRequestedRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackFaultPropagationRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackFaultPropagationRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ShouldTrackWorkflowInstanceRecords", 
      JSIL.MethodSignature.Action($.Boolean), 
      TrackingProvider_set_ShouldTrackWorkflowInstanceRecords
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ShouldTrackActivity", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.Field({Static:false, Public:false}, "trackingParticipants", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant")]));

    $.Field({Static:false, Public:false}, "profileSubscriptions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"), $asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile")]));

    $.Field({Static:false, Public:false}, "pendingTrackingRecords", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Tracking.TrackingRecord")]));

    $.Field({Static:false, Public:false}, "definition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "filterValuesSetExplicitly", $.Boolean);

    $.Field({Static:false, Public:false}, "activitySubscriptions", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "nextTrackingRecordNumber", $.Int64);

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrack$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackWorkflowInstanceRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackBookmarkResumptionRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackActivityScheduledRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackActivityStateRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackActivityStateRecordsExecutingState$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackActivityStateRecordsClosedState$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackCancelRequestedRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TrackingProvider$ShouldTrackFaultPropagationRecords$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "HasPendingRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "NextTrackingRecordNumber", $.Int64);

    $.Property({Static:false, Public:true }, "ShouldTrack", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackWorkflowInstanceRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackBookmarkResumptionRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityScheduledRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecordsExecutingState", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecordsClosedState", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackCancelRequestedRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackFaultPropagationRecords", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.TrackingProvider+FlushPendingRecordsAsyncResult */ 

(function FlushPendingRecordsAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.Tracking.TrackingProvider+FlushPendingRecordsAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Tracking.TrackingProvider"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnTrackingComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PostTrackingRecord", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Tracking.TrackingParticipant"), $asm0B.TypeRef("System.Activities.Tracking.RuntimeTrackingProfile")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RunLoop", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "trackingCompleteCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnTrackingComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "currentRecord", $.Int32);

    $.Field({Static:false, Public:false}, "currentParticipant", $.Int32);

    $.Field({Static:false, Public:false}, "provider", $asm0B.TypeRef("System.Activities.Tracking.TrackingProvider"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.Tracking.ImplementationVisibility */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.Tracking.ImplementationVisibility", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    RootScope: 0, 
    All: 1, 
  }
);

/* class System.Activities.Tracking.WorkflowInstanceRecord */ 

(function WorkflowInstanceRecord$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityDefinitionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivityDefinitionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedState", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWorkflowDefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowDefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ActivityDefinitionId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivityDefinitionId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedState", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWorkflowDefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_State", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_WorkflowDefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "workflowDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Field({Static:false, Public:false}, "state", $.String);

    $.Field({Static:false, Public:false}, "activityDefinitionId", $.String);

    $.Property({Static:false, Public:true }, "WorkflowDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Property({Static:false, Public:true }, "State", $.String);

    $.Property({Static:false, Public:true }, "ActivityDefinitionId", $.String);

    $.Property({Static:false, Public:false}, "SerializedWorkflowDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedState", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedActivityDefinitionId", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceAbortedRecord */ 

(function WorkflowInstanceAbortedRecord$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceAbortedRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "reason", $.String);

    $.Property({Static:false, Public:true }, "Reason", $.String);

    $.Property({Static:false, Public:false}, "SerializedReason", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceQuery */ 

(function WorkflowInstanceQuery$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.TrackingQuery"), 
      Name: "System.Activities.Tracking.WorkflowInstanceQuery", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasStates", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_States", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]))
    );

    $.Field({Static:false, Public:false}, "states", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Property({Static:false, Public:true }, "States", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$.String]));

    $.Property({Static:false, Public:false}, "HasStates", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Tracking.WorkflowInstanceSuspendedRecord */ 

(function WorkflowInstanceSuspendedRecord$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceSuspendedRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "reason", $.String);

    $.Property({Static:false, Public:true }, "Reason", $.String);

    $.Property({Static:false, Public:false}, "SerializedReason", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceTerminatedRecord */ 

(function WorkflowInstanceTerminatedRecord$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceTerminatedRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReason", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Reason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReason", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "reason", $.String);

    $.Property({Static:false, Public:true }, "Reason", $.String);

    $.Property({Static:false, Public:false}, "SerializedReason", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceUpdatedRecord */ 

(function WorkflowInstanceUpdatedRecord$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceUpdatedRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $asm0B.TypeRef("System.Activities.WorkflowIdentity"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlockingActivities", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSuccessful", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OriginalDefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBlockingActivities", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOriginalDefinitionIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_BlockingActivities", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OriginalDefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBlockingActivities", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOriginalDefinitionIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "originalDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Field({Static:false, Public:false}, "blockingActivities", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]));

    $.Property({Static:false, Public:true }, "OriginalDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"));

    $.Property({Static:false, Public:true }, "IsSuccessful", $.Boolean);

    $.Property({Static:false, Public:true }, "BlockingActivities", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]));

    $.Property({Static:false, Public:false}, "SerializedOriginalDefinitionIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBlockingActivities", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord */ 

(function WorkflowInstanceUnhandledExceptionRecord$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Tracking.WorkflowInstanceRecord"), 
      Name: "System.Activities.Tracking.WorkflowInstanceUnhandledExceptionRecord", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.String, 
          $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $.String, $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"), 
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.WorkflowIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FaultSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFaultSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedUnhandledException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UnhandledException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_FaultSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFaultSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedUnhandledException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_UnhandledException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "unhandledException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "faultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:true }, "UnhandledException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "FaultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"));

    $.Property({Static:false, Public:false}, "SerializedUnhandledException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedFaultSource", $asm0B.TypeRef("System.Activities.Tracking.ActivityInfo"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Tracking.WorkflowInstanceStates */ 

(function WorkflowInstanceStates$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.Tracking.WorkflowInstanceStates", true, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Aborted", $.String, "Aborted");

    $.Constant({Static:true , Public:true }, "Canceled", $.String, "Canceled");

    $.Constant({Static:true , Public:true }, "Completed", $.String, "Completed");

    $.Constant({Static:true , Public:true }, "Deleted", $.String, "Deleted");

    $.Constant({Static:true , Public:true }, "Idle", $.String, "Idle");

    $.Constant({Static:true , Public:true }, "Persisted", $.String, "Persisted");

    $.Constant({Static:true , Public:true }, "Resumed", $.String, "Resumed");

    $.Constant({Static:true , Public:true }, "Started", $.String, "Started");

    $.Constant({Static:true , Public:true }, "Suspended", $.String, "Suspended");

    $.Constant({Static:true , Public:true }, "Terminated", $.String, "Terminated");

    $.Constant({Static:true , Public:true }, "UnhandledException", $.String, "UnhandledException");

    $.Constant({Static:true , Public:true }, "Unloaded", $.String, "Unloaded");

    $.Constant({Static:true , Public:true }, "Unsuspended", $.String, "Unsuspended");

    $.Constant({Static:true , Public:true }, "Updated", $.String, "Updated");

    $.Constant({Static:true , Public:true }, "UpdateFailed", $.String, "UpdateFailed");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.DurableInstancing");
/* class System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult */ 

(function ActivatableWorkflowsQueryResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm07.System.Collections.Generic.IDictionary$b2.Of($asm30.System.Xml.Linq.XName, $asm07.System.Object)))) ();
  };





  function ActivatableWorkflowsQueryResult_get_ActivationParameters () {
    return this.ActivatableWorkflowsQueryResult$ActivationParameters$value;
  }; 

  function ActivatableWorkflowsQueryResult_set_ActivationParameters (value) {
    this.ActivatableWorkflowsQueryResult$ActivationParameters$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStoreQueryResult"), 
      Name: "System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]))
    );

    $.Method({Static:false, Public:true }, "get_ActivationParameters", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])), 
      ActivatableWorkflowsQueryResult_get_ActivationParameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ActivationParameters", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])), 
      ActivatableWorkflowsQueryResult_set_ActivationParameters
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "emptyDictionary", $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]));

    $.Field({Static:false, Public:false}, "ActivatableWorkflowsQueryResult$ActivationParameters$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivationParameters", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__3_0", 
      new JSIL.MethodSignature($asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__3_0", $asm07.TypeRef("System.Func`2", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), $asm25.TypeRef("System.Runtime.ReadOnlyDictionaryInternal`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DurableInstancing.CreateWorkflowOwnerCommand */ 

(function CreateWorkflowOwnerCommand$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.CreateWorkflowOwnerCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceOwnerMetadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Field({Static:false, Public:false}, "instanceOwnerMetadata", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true }, "InstanceOwnerMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityCommand */ 

(function CreateWorkflowOwnerWithIdentityCommand$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceOwnerMetadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Field({Static:false, Public:false}, "instanceOwnerMetadata", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true }, "InstanceOwnerMetadata", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DeleteWorkflowOwnerCommand */ 

(function DeleteWorkflowOwnerCommand$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.DeleteWorkflowOwnerCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.HasActivatableWorkflowEvent */ 

(function HasActivatableWorkflowEvent$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent`1", [$asm0B.TypeRef("System.Activities.DurableInstancing.HasActivatableWorkflowEvent")]), 
      Name: "System.Activities.DurableInstancing.HasActivatableWorkflowEvent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.HasRunnableWorkflowEvent */ 

(function HasRunnableWorkflowEvent$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent`1", [$asm0B.TypeRef("System.Activities.DurableInstancing.HasRunnableWorkflowEvent")]), 
      Name: "System.Activities.DurableInstancing.HasRunnableWorkflowEvent", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand */ 

(function LoadWorkflowByInstanceKeyCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Guid)) ();
  };



  function LoadWorkflowByInstanceKeyCommand_get_AcceptUninitializedInstance () {
    return this.LoadWorkflowByInstanceKeyCommand$AcceptUninitializedInstance$value;
  }; 

  function LoadWorkflowByInstanceKeyCommand_get_AssociateInstanceKeyToInstanceId () {
    return this.LoadWorkflowByInstanceKeyCommand$AssociateInstanceKeyToInstanceId$value;
  }; 




  function LoadWorkflowByInstanceKeyCommand_get_LookupInstanceKey () {
    return this.LoadWorkflowByInstanceKeyCommand$LookupInstanceKey$value;
  }; 

  function LoadWorkflowByInstanceKeyCommand_set_AcceptUninitializedInstance (value) {
    this.LoadWorkflowByInstanceKeyCommand$AcceptUninitializedInstance$value = value;
  }; 

  function LoadWorkflowByInstanceKeyCommand_set_AssociateInstanceKeyToInstanceId (value) {
    this.LoadWorkflowByInstanceKeyCommand$AssociateInstanceKeyToInstanceId$value = value.MemberwiseClone();
  }; 

  function LoadWorkflowByInstanceKeyCommand_set_LookupInstanceKey (value) {
    this.LoadWorkflowByInstanceKeyCommand$LookupInstanceKey$value = value.MemberwiseClone();
  }; 


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_AcceptUninitializedInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      LoadWorkflowByInstanceKeyCommand_get_AcceptUninitializedInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_AssociateInstanceKeyToInstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      LoadWorkflowByInstanceKeyCommand_get_AssociateInstanceKeyToInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_AutomaticallyAcquiringLock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceKeysToAssociate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_LookupInstanceKey", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      LoadWorkflowByInstanceKeyCommand_get_LookupInstanceKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AcceptUninitializedInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      LoadWorkflowByInstanceKeyCommand_set_AcceptUninitializedInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AssociateInstanceKeyToInstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      LoadWorkflowByInstanceKeyCommand_set_AssociateInstanceKeyToInstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LookupInstanceKey", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      LoadWorkflowByInstanceKeyCommand_set_LookupInstanceKey
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Field({Static:false, Public:false}, "keysToAssociate", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Field({Static:false, Public:false}, "LoadWorkflowByInstanceKeyCommand$AcceptUninitializedInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LoadWorkflowByInstanceKeyCommand$LookupInstanceKey$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LoadWorkflowByInstanceKeyCommand$AssociateInstanceKeyToInstanceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AcceptUninitializedInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "LookupInstanceKey", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "AssociateInstanceKeyToInstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "InstanceKeysToAssociate", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "AutomaticallyAcquiringLock", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadWorkflowCommand */ 

(function LoadWorkflowCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };



  function LoadWorkflowCommand_get_AcceptUninitializedInstance () {
    return this.LoadWorkflowCommand$AcceptUninitializedInstance$value;
  }; 



  function LoadWorkflowCommand_set_AcceptUninitializedInstance (value) {
    this.LoadWorkflowCommand$AcceptUninitializedInstance$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.LoadWorkflowCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_AcceptUninitializedInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      LoadWorkflowCommand_get_AcceptUninitializedInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_AutomaticallyAcquiringLock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_AcceptUninitializedInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      LoadWorkflowCommand_set_AcceptUninitializedInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Field({Static:false, Public:false}, "LoadWorkflowCommand$AcceptUninitializedInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AcceptUninitializedInstance", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "AutomaticallyAcquiringLock", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand */ 

(function QueryActivatableWorkflowsCommand$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SaveWorkflowCommand */ 

(function SaveWorkflowCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };




  function SaveWorkflowCommand_get_CompleteInstance () {
    return this.SaveWorkflowCommand$CompleteInstance$value;
  }; 








  function SaveWorkflowCommand_get_UnlockInstance () {
    return this.SaveWorkflowCommand$UnlockInstance$value;
  }; 

  function SaveWorkflowCommand_set_CompleteInstance (value) {
    this.SaveWorkflowCommand$CompleteInstance$value = value;
  }; 

  function SaveWorkflowCommand_set_UnlockInstance (value) {
    this.SaveWorkflowCommand$UnlockInstance$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.SaveWorkflowCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_AutomaticallyAcquiringLock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_CompleteInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      SaveWorkflowCommand_get_CompleteInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceData", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceKeyMetadataChanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceKeysToAssociate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceKeysToComplete", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Guid")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceKeysToFree", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Guid")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceMetadataChanges", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_UnlockInstance", 
      JSIL.MethodSignature.Return($.Boolean), 
      SaveWorkflowCommand_get_UnlockInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompleteInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      SaveWorkflowCommand_set_CompleteInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UnlockInstance", 
      JSIL.MethodSignature.Action($.Boolean), 
      SaveWorkflowCommand_set_UnlockInstance
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Field({Static:false, Public:false}, "keysToAssociate", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Field({Static:false, Public:false}, "keysToComplete", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Guid")]));

    $.Field({Static:false, Public:false}, "keysToFree", $asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm07.TypeRef("System.Guid")]));

    $.Field({Static:false, Public:false}, "instanceData", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "instanceMetadataChanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "keyMetadataChanges", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Field({Static:false, Public:false}, "SaveWorkflowCommand$UnlockInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SaveWorkflowCommand$CompleteInstance$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "UnlockInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "CompleteInstance", $.Boolean);

    $.Property({Static:false, Public:true }, "InstanceKeysToAssociate", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Property({Static:false, Public:true }, "InstanceKeysToComplete", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Guid")]));

    $.Property({Static:false, Public:true }, "InstanceKeysToFree", $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Guid")]));

    $.Property({Static:false, Public:true }, "InstanceMetadataChanges", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:true }, "InstanceKeyMetadataChanges", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Property({Static:false, Public:true }, "InstanceData", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "AutomaticallyAcquiringLock", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand */ 

(function TryLoadRunnableWorkflowCommand$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_AutomaticallyAcquiringLock", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_IsTransactionEnlistmentOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Validate", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstanceView"))
    );

    $.Property({Static:false, Public:false, Virtual:true }, "IsTransactionEnlistmentOptional", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "AutomaticallyAcquiringLock", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Activities.ExpressionParser");
/* class System.Activities.ExpressionParser.SourceExpressionException */ 

(function SourceExpressionException$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "System.Activities.ExpressionParser.SourceExpressionException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.CodeDom.Compiler.CompilerErrorCollection")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Errors", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0A.TypeRef("System.CodeDom.Compiler.CompilerError")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "errors", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.CodeDom.Compiler.CompilerError")]));

    $.Property({Static:false, Public:true }, "Errors", $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0A.TypeRef("System.CodeDom.Compiler.CompilerError")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor */ 

(function ActivityExecutor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.WorkflowIdentity)) ();
  };






































































































  function ActivityExecutor_get_WorkflowIdentity () {
    return this.ActivityExecutor$WorkflowIdentity$value;
  }; 

































































  function ActivityExecutor_set_WorkflowIdentity (value) {
    this.ActivityExecutor$WorkflowIdentity$value = value;
  }; 























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityExecutor", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Abort", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Exception"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortActivityInstance", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbortWorkflowInstance", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Handle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddTrackingRecord", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Tracking.TrackingRecord"))
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginAssociateKeys", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginResumeBookmark", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginTrackPendingRecords", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CancelPendingOperation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelRootActivity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectExternalBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteActivityInstance", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteOperation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteOperation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteOperation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteOperation", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "CompleteTransaction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateActivityInstanceReference", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"), [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateEmptyWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem"), [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateNoPersistProperty", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.NoPersistProperty"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateUninitalizedActivityInstance", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "DebugActivityCompleted", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DisassociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAssociateKeys", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndTrackPendingRecords", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EnterNoPersist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ExecuteInResolutionContext", 
      new JSIL.MethodSignature("!!0", [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Activity`1", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "ExecuteInResolutionContextUntyped", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityWithResult"), 
          $.Int64, $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteSynchronousWorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ExitNoPersist", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ExitNoPersistForExceptionPropagation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishWorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishWorkItemAfterTracking", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GatherMappableVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Hosting.LocationInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GatherRootOutputs", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BookmarkScopeManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CodeActivityContextPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.CodeActivityContext")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompletionWorkItemPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EmptyBookmarkInfoCollection", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmptyEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmptyWorkItemPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ExecuteActivityWorkItemPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExecuteSynchronousExpressionWorkItemPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasPendingTrackingRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasRuntimeTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsAbortPending", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPersistable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsRunning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsTerminatePending", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_KeysAllowed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MappableObjectManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NativeActivityContextPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.NativeActivityContext")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PersistExceptions", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RawBookmarkManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RawBookmarkScopeManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RequiresTransactionContextWaiterExists", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResolveNextArgumentWorkItemPool", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RootActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RootPropertyManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkScopeManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCompletionException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExecutingSecondaryRootInstances", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExecutionState", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHandles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHasTrackedStarted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLastInstanceId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedMainRootCompleteBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedMappableObjectManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNextTrackingRecordNumber", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPersistenceWaiters", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedProgramMapping", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropertyManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedRootEnvironment", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedRootInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedScheduler", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Scheduler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedShouldRaiseMainBodyComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedTransactionContextWaiters", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWorkflowOutputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrack", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackActivityScheduledRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackActivityStateRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackActivityStateRecordsClosedState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackActivityStateRecordsExecutingState", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackBookmarkResumptionRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackCancelRequestedRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ShouldTrackFaultPropagationRecords", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SymbolResolver", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TerminationException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.Method({Static:false, Public:true }, "get_WorkflowIdentity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      ActivityExecutor_get_WorkflowIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowInstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowOutputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetActivitiesBlockingUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")]), [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAllBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetBookmarks", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]), [$asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetExtension", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIgnorableResultLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$asm0B.TypeRef("System.Activities.RuntimeArgument")])
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleRootCompletion", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementLastInstanceId", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "IsCompletingTransaction", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsDebugged", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "IsSecondaryRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "MakeNonSerializable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkSchedulerRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyUnhandledException", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDeserialized", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnExecuteWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSchedulerIdle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSchedulerThreadAcquired", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Open", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "PauseScheduler", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PauseWhenPersistable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PrepareForSerialization", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "PropagateException", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RegisterMainRootCompleteCallback", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RequestPersist", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RequestTransactionContext", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResumeScheduler", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RethrowException", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.FaultContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Run", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleBody", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleCompletionBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleDelegate", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [
          $asm0B.TypeRef("System.Activities.ActivityDelegate"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), 
          $asm0B.TypeRef("System.Activities.Runtime.CompletionBookmark"), $asm0B.TypeRef("System.Activities.Runtime.FaultBookmark")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleExpression", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityWithResult"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"), $asm0B.TypeRef("System.Activities.Location"), 
          $asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleExpression", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityWithResult"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Location"), $asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"), 
          $.Int64
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleExpressionFaultPropagation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $.Int64, 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SchedulePendingCancelation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleRootActivity", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Handle")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleRuntimeWorkItems", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleSecondaryRootActivity", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.ActivityInstance"), [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ScheduleTerminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkScopeManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCompletionException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExecutingSecondaryRootInstances", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExecutionState", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstanceState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHandles", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHasTrackedStarted", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLastInstanceId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedMainRootCompleteBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedMappableObjectManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNextTrackingRecordNumber", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPersistenceWaiters", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedProgramMapping", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropertyManager", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedRootEnvironment", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedRootInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedScheduler", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.Scheduler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedShouldRaiseMainBodyComplete", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedTransactionContextWaiters", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWorkflowOutputs", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.Method({Static:false, Public:false}, "set_WorkflowIdentity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.WorkflowIdentity")), 
      ActivityExecutor_set_WorkflowIdentity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_WorkflowInstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetTransaction", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetupAsyncOperationBlock", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.AsyncOperationContext"), [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShouldTrackActivity", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Commit", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Commit");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.InDoubt", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "InDoubt");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Prepare", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.PreparingEnlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Prepare");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Transactions.IEnlistmentNotification.Rollback", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Enlistment"))
    )
      .Overrides($asm27.TypeRef("System.Transactions.IEnlistmentNotification"), "Rollback");

    $.ExternalMethod({Static:false, Public:true }, "Terminate", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TerminateSpecialExecutionBlocks", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ThrowIfNonSerializable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceActivityScheduled", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceSuspend", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryExecuteNonEmptyWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetPendingOperation", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.AsyncOperationContext")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryResumeBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $asm0B.TypeRef("System.Activities.BookmarkScope")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryResumeHostBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [$asm0B.TypeRef("System.Activities.Bookmark"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryResumeUserBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryTraceResume", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryTraceStart", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateInstancePhase1", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateInstancePhase2", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])])
    );

    $.Field({Static:true , Public:false}, "emptyBookmarkInfoCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));

    $.Field({Static:false, Public:false}, "bookmarkManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"));

    $.Field({Static:false, Public:false}, "bookmarkScopeManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"));

    $.Field({Static:false, Public:false}, "debugController", $asm0B.TypeRef("System.Activities.Debugger.DebugController"));

    $.Field({Static:false, Public:false}, "hasRaisedWorkflowStarted", $.Boolean);

    $.Field({Static:false, Public:false}, "instanceId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "instanceIdSet", $.Boolean);

    $.Field({Static:false, Public:false}, "rootElement", $asm0B.TypeRef("System.Activities.Activity"));

    $.Field({Static:false, Public:false}, "activeOperations", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.AsyncOperationContext")]));

    $.Field({Static:false, Public:false}, "host", $asm0B.TypeRef("System.Activities.Hosting.WorkflowInstance"));

    $.Field({Static:false, Public:false}, "instanceMap", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"));

    $.Field({Static:false, Public:false}, "mappableObjectManager", $asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"));

    $.Field({Static:false, Public:false}, "hasTrackedStarted", $.Boolean);

    $.Field({Static:false, Public:false}, "nextTrackingRecordNumber", $.Int64);

    $.Field({Static:false, Public:false}, "rootInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "executingSecondaryRootInstances", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]));

    $.Field({Static:false, Public:false}, "scheduler", $asm0B.TypeRef("System.Activities.Runtime.Scheduler"));

    $.Field({Static:false, Public:false}, "completionException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "shouldRaiseMainBodyComplete", $.Boolean);

    $.Field({Static:false, Public:false}, "lastInstanceId", $.Int64);

    $.Field({Static:false, Public:false}, "rootEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Field({Static:false, Public:false}, "workflowOutputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "mainRootCompleteBookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "executionState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Field({Static:false, Public:false}, "persistenceWaiters", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter")]));

    $.Field({Static:false, Public:false}, "transactionContextWaiters", $asm0B.TypeRef("System.Activities.Quack`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter")]));

    $.Field({Static:false, Public:false}, "runtimeTransaction", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+RuntimeTransactionData"));

    $.Field({Static:false, Public:false}, "isAbortPending", $.Boolean);

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "shouldPauseOnCanPersist", $.Boolean);

    $.Field({Static:false, Public:false}, "isTerminatePending", $.Boolean);

    $.Field({Static:false, Public:false}, "terminationPendingException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "noPersistCount", $.Int32);

    $.Field({Static:false, Public:false}, "symbolResolver", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Field({Static:false, Public:false}, "throwDuringSerialization", $.Boolean);

    $.Field({Static:false, Public:false}, "cachedResolutionContext", $asm0B.TypeRef("System.Activities.CodeActivityContext"));

    $.Field({Static:false, Public:false}, "ignorableResultLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Field({Static:false, Public:false}, "emptyWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem")]));

    $.Field({Static:false, Public:false}, "executeActivityWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem")]));

    $.Field({Static:false, Public:false}, "executeSynchronousExpressionWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem")]));

    $.Field({Static:false, Public:false}, "completionWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem")]));

    $.Field({Static:false, Public:false}, "resolveNextArgumentWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")]));

    $.Field({Static:false, Public:false}, "codeActivityContextPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.CodeActivityContext")]));

    $.Field({Static:false, Public:false}, "nativeActivityContextPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.NativeActivityContext")]));

    $.Field({Static:false, Public:false}, "rootPropertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Field({Static:false, Public:false}, "handles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]));

    $.Field({Static:false, Public:false}, "persistExceptions", $.Boolean);

    $.Field({Static:false, Public:false}, "havePersistExceptionsValue", $.Boolean);

    $.Field({Static:false, Public:false}, "ActivityExecutor$WorkflowIdentity$value", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "EmptyWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem")]));

    $.Property({Static:false, Public:false}, "ExecuteActivityWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem")]));

    $.Property({Static:false, Public:true }, "ExecuteSynchronousExpressionWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem")]));

    $.Property({Static:false, Public:true }, "CompletionWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem")]));

    $.Property({Static:false, Public:true }, "CodeActivityContextPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.CodeActivityContext")]));

    $.Property({Static:false, Public:true }, "NativeActivityContextPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.NativeActivityContext")]));

    $.Property({Static:false, Public:true }, "ResolveNextArgumentWorkItemPool", $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")]));

    $.Property({Static:false, Public:true }, "RootActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:false, Public:true }, "HasPendingTrackingRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrack", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackBookmarkResumptionRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityScheduledRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecordsExecutingState", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackActivityStateRecordsClosedState", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackCancelRequestedRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldTrackFaultPropagationRecords", $.Boolean);

    $.Property({Static:false, Public:true }, "SymbolResolver", $asm0B.TypeRef("System.Activities.Hosting.SymbolResolver"));

    $.Property({Static:false, Public:true }, "EmptyEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"));

    $.Property({Static:false, Public:true }, "State", $asm0B.TypeRef("System.Activities.ActivityInstanceState"));

    $.Property({Static:false, Public:true }, "WorkflowIdentity", $asm0B.TypeRef("System.Activities.WorkflowIdentity"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "WorkflowInstanceId", $asm07.TypeRef("System.Guid"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:true }, "TerminationException", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "IsRunning", $.Boolean);

    $.Property({Static:false, Public:true }, "IsPersistable", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAbortPending", $.Boolean);

    $.Property({Static:false, Public:true }, "IsIdle", $.Boolean);

    $.Property({Static:false, Public:true }, "IsTerminatePending", $.Boolean);

    $.Property({Static:false, Public:true }, "KeysAllowed", $.Boolean);

    $.Property({Static:false, Public:true }, "WorkflowOutputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "BookmarkScopeManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"));

    $.Property({Static:false, Public:false}, "RawBookmarkScopeManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"));

    $.Property({Static:false, Public:false}, "RawBookmarkManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"));

    $.Property({Static:false, Public:false}, "MappableObjectManager", $asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"));

    $.Property({Static:false, Public:true }, "RequiresTransactionContextWaiterExists", $.Boolean);

    $.Property({Static:false, Public:true }, "HasRuntimeTransaction", $.Boolean);

    $.Property({Static:false, Public:true }, "CurrentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:true , Public:false}, "EmptyBookmarkInfoCollection", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]));

    $.Property({Static:false, Public:false}, "SerializedBookmarkManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkScopeManager", $asm0B.TypeRef("System.Activities.Runtime.BookmarkScopeManager"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHasTrackedStarted", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNextTrackingRecordNumber", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedRootInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedScheduler", $asm0B.TypeRef("System.Activities.Runtime.Scheduler"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedShouldRaiseMainBodyComplete", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedLastInstanceId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedRootEnvironment", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedWorkflowOutputs", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedMainRootCompleteBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExecutionState", $asm0B.TypeRef("System.Activities.ActivityInstanceState"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHandles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "PersistExceptions", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedCompletionException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedTransactionContextWaiters", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPersistenceWaiters", $asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExecutingSecondaryRootInstances", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedMappableObjectManager", $asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedProgramMapping", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "RootPropertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));

    $.Property({Static:false, Public:false}, "SerializedPropertyManager", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Handles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]));

    $.ImplementInterfaces(
      /* 0 */ $asm27.TypeRef("System.Transactions.IEnlistmentNotification")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+PersistenceWaiter */ 

(function PersistenceWaiter$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityExecutor+PersistenceWaiter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateWorkItem", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OnPersistBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOnPersistBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWaitingInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WaitingInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OnPersistBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOnPersistBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWaitingInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_WaitingInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.Field({Static:false, Public:false}, "onPersistBookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "waitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "OnPersistBookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Property({Static:false, Public:true }, "WaitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedOnPersistBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedWaitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+PersistenceWaiter+PersistWorkItem */ 

(function PersistWorkItem$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+PersistenceWaiter+PersistWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWaiter", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPersistComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWaiter", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "waiter", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedWaiter", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+PersistenceWaiter"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+AbortActivityWorkItem */ 

(function AbortActivityWorkItem$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+AbortActivityWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_OriginalExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOriginalSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReason", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOriginalSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReason", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "reason", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "originalSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true , Virtual:true }, "OriginalExceptionSource", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedReason", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOriginalSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.BookmarkWorkItem */ 

(function BookmarkWorkItem$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.BookmarkWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedState", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"));

    $.Field({Static:false, Public:false}, "bookmark", $asm0B.TypeRef("System.Activities.Bookmark"));

    $.Field({Static:false, Public:false}, "state", $.Object);

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedState", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+CompleteAsyncOperationWorkItem */ 

(function CompleteAsyncOperationWorkItem$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.BookmarkWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+CompleteAsyncOperationWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+CancelActivityWorkItem */ 

(function CancelActivityWorkItem$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+CancelActivityWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem */ 

(function ExecuteActivityWorkItem$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExecuteBody", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), 
          $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArgumentValueOverrides", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedRequiresSymbolResolution", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArgumentValueOverrides", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedRequiresSymbolResolution", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "requiresSymbolResolution", $.Boolean);

    $.Field({Static:false, Public:false}, "argumentValueOverrides", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "SerializedRequiresSymbolResolution", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedArgumentValueOverrides", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+ExecuteRootWorkItem */ 

(function ExecuteRootWorkItem$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+ExecuteRootWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+ExecuteExpressionWorkItem */ 

(function ExecuteExpressionWorkItem$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+ExecuteExpressionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedResultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedResultLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.Field({Static:false, Public:false}, "resultLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false}, "SerializedResultLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+PropagateExceptionWorkItem */ 

(function PropagateExceptionWorkItem$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+PropagateExceptionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:false}, "SerializedException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+RethrowExceptionWorkItem */ 

(function RethrowExceptionWorkItem$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+RethrowExceptionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_OriginalExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "source", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true , Virtual:true }, "OriginalExceptionSource", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter */ 

(function TransactionContextWaiter$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Handle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsRequires", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedIsRequires", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWaitingInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WaitingInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Handle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IsRequires", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedIsRequires", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedState", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWaitingInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_State", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_WaitingInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.Field({Static:false, Public:false}, "waitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "isRequires", $.Boolean);

    $.Field({Static:false, Public:false}, "handle", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"));

    $.Field({Static:false, Public:false}, "state", $.Object);

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"));

    $.Property({Static:false, Public:true }, "WaitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "IsRequires", $.Boolean);

    $.Property({Static:false, Public:true }, "Handle", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"));

    $.Property({Static:false, Public:true }, "State", $.Object);

    $.Property({Static:false, Public:true }, "CallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"));

    $.Property({Static:false, Public:false}, "SerializedWaitingInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedIsRequires", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHandle", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedState", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CallbackWrapper */ 

(function CallbackWrapper$Members () {
  var $, $thisType;
























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.CallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Delegate"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureCallback", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $asm07.TypeRef("System.Type")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "EnsureCallback", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "FindMatchingGenericMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateCallback", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Delegate"), [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $asm07.TypeRef("System.Type")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Callback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Delegate"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsCallbackNull", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDeclaringAssemblyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDeclaringTypeName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetMatchingMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Reflection.MethodInfo"), [$jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsValidCallback", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Delegate"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSerializing", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnSerializingAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSerializingGenericCallback", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RecreateCallback", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Delegate"), [$asm07.TypeRef("System.Type"), $asm07.TypeRef("System.Reflection.MethodInfo")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_ActivityInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivityInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDeclaringAssemblyName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDeclaringTypeName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateCallbackResolution", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]), 
          $asm07.TypeRef("System.Type")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "bindingFlags", $asm07.TypeRef("System.Reflection.BindingFlags"), function ($pi) {
        return $asm07.System.Reflection.BindingFlags.$Flags(
            "DeclaredOnly", "Instance", "NonPublic", "Public", 
            "Static"
        );
      });

    $.Field({Static:true , Public:false}, "ReflectionMemberAccessPermissionSet", $asm07.TypeRef("System.Security.PermissionSet"), null);

    $.Field({Static:false, Public:false}, "callbackName", $.String);

    $.Field({Static:false, Public:false}, "declaringAssemblyName", $.String);

    $.Field({Static:false, Public:false}, "declaringTypeName", $.String);

    $.Field({Static:false, Public:false}, "callback", $asm07.TypeRef("System.Delegate"));

    $.Field({Static:false, Public:false}, "activityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:true }, "ActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "IsCallbackNull", $.Boolean);

    $.Property({Static:false, Public:false}, "Callback", $asm07.TypeRef("System.Delegate"));

    $.Property({Static:false, Public:false}, "SerializedCallbackName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedDeclaringAssemblyName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedDeclaringTypeName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper */ 

(function TransactionContextWaiterCallbackWrapper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CallbackWrapper"), 
      Name: "System.Activities.Runtime.ActivityExecutor+TransactionContextWaiterCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Action`2", [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object]), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityTransactionContext"), $.Object])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm07.System.Action$b2.Of($asm0B.System.Activities.NativeActivityTransactionContext, $asm07.System.Object).__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "transactionCallbackParameterTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+CompleteTransactionWorkItem */ 

(function CompleteTransactionWorkItem$Members () {
  var $, $thisType;























  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+CompleteTransactionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckOutcome", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckTransactionAborted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishCheckOutcome", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishCommit", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FinishPersist", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CommitCompleteCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_OutcomeDeterminedCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PersistCompleteCallback", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.AsyncCallback"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "HandleException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnCommitComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnOutcomeDetermined", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.TimeoutException")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnPersistComplete", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceTransactionOutcome", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "persistCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "commitCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false}, "outcomeDeterminedCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Field({Static:false, Public:false}, "runtimeTransaction", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+RuntimeTransactionData"));

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:true , Public:false}, "PersistCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:true , Public:false}, "CommitCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Property({Static:true , Public:false}, "OutcomeDeterminedCallback", $asm07.TypeRef("System.Action`2", [$.Object, $asm07.TypeRef("System.TimeoutException")]));

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+CompleteTransactionWorkItem+TransactionalPersistAsyncResult */ 

(function TransactionalPersistAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.Runtime.ActivityExecutor+CompleteTransactionWorkItem+TransactionalPersistAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnPersistComplete", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:false, Public:false}, "workItem", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+CompleteTransactionWorkItem"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "onPersistComplete", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnPersistComplete", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+TransactionContextWorkItem */ 

(function TransactionContextWorkItem$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ActivityExecutor+TransactionContextWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWaiter", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWaiter", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "waiter", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter"));

    $.Property({Static:false, Public:false}, "SerializedWaiter", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+TransactionContextWaiter"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityExecutor+RuntimeTransactionData */ 

(function RuntimeTransactionData$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm27.System.Transactions.Transaction)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm25.System.Runtime.AsyncWaitHandle)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.ActivityInstance)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm27.System.Transactions.PreparingEnlistment)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Activities.RuntimeTransactionHandle)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm27.System.Transactions.TransactionStatus)) ();
  };



  function RuntimeTransactionData_get_ClonedTransaction () {
    return this.RuntimeTransactionData$ClonedTransaction$value;
  }; 

  function RuntimeTransactionData_get_CompletionEvent () {
    return this.RuntimeTransactionData$CompletionEvent$value;
  }; 

  function RuntimeTransactionData_get_HasPrepared () {
    return this.RuntimeTransactionData$HasPrepared$value;
  }; 

  function RuntimeTransactionData_get_IsolationScope () {
    return this.RuntimeTransactionData$IsolationScope$value;
  }; 

  function RuntimeTransactionData_get_IsRootCancelPending () {
    return this.RuntimeTransactionData$IsRootCancelPending$value;
  }; 

  function RuntimeTransactionData_get_OriginalTransaction () {
    return this.RuntimeTransactionData$OriginalTransaction$value;
  }; 

  function RuntimeTransactionData_get_PendingPreparingEnlistment () {
    return this.RuntimeTransactionData$PendingPreparingEnlistment$value;
  }; 

  function RuntimeTransactionData_get_ShouldScheduleCompletion () {
    return this.RuntimeTransactionData$ShouldScheduleCompletion$value;
  }; 

  function RuntimeTransactionData_get_TransactionHandle () {
    return this.RuntimeTransactionData$TransactionHandle$value;
  }; 

  function RuntimeTransactionData_get_TransactionStatus () {
    return this.RuntimeTransactionData$TransactionStatus$value;
  }; 


  function RuntimeTransactionData_set_ClonedTransaction (value) {
    this.RuntimeTransactionData$ClonedTransaction$value = value;
  }; 

  function RuntimeTransactionData_set_CompletionEvent (value) {
    this.RuntimeTransactionData$CompletionEvent$value = value;
  }; 

  function RuntimeTransactionData_set_HasPrepared (value) {
    this.RuntimeTransactionData$HasPrepared$value = value;
  }; 

  function RuntimeTransactionData_set_IsolationScope (value) {
    this.RuntimeTransactionData$IsolationScope$value = value;
  }; 

  function RuntimeTransactionData_set_IsRootCancelPending (value) {
    this.RuntimeTransactionData$IsRootCancelPending$value = value;
  }; 

  function RuntimeTransactionData_set_OriginalTransaction (value) {
    this.RuntimeTransactionData$OriginalTransaction$value = value;
  }; 

  function RuntimeTransactionData_set_PendingPreparingEnlistment (value) {
    this.RuntimeTransactionData$PendingPreparingEnlistment$value = value;
  }; 

  function RuntimeTransactionData_set_ShouldScheduleCompletion (value) {
    this.RuntimeTransactionData$ShouldScheduleCompletion$value = value;
  }; 

  function RuntimeTransactionData_set_TransactionHandle (value) {
    this.RuntimeTransactionData$TransactionHandle$value = value;
  }; 

  function RuntimeTransactionData_set_TransactionStatus (value) {
    this.RuntimeTransactionData$TransactionStatus$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityExecutor+RuntimeTransactionData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"), $asm27.TypeRef("System.Transactions.Transaction"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.Method({Static:false, Public:true }, "get_ClonedTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      RuntimeTransactionData_get_ClonedTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CompletionEvent", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.AsyncWaitHandle")), 
      RuntimeTransactionData_get_CompletionEvent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HasPrepared", 
      JSIL.MethodSignature.Return($.Boolean), 
      RuntimeTransactionData_get_HasPrepared
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsolationScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      RuntimeTransactionData_get_IsolationScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsRootCancelPending", 
      JSIL.MethodSignature.Return($.Boolean), 
      RuntimeTransactionData_get_IsRootCancelPending
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OriginalTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.Transaction")), 
      RuntimeTransactionData_get_OriginalTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PendingPreparingEnlistment", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.PreparingEnlistment")), 
      RuntimeTransactionData_get_PendingPreparingEnlistment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldScheduleCompletion", 
      JSIL.MethodSignature.Return($.Boolean), 
      RuntimeTransactionData_get_ShouldScheduleCompletion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TransactionHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle")), 
      RuntimeTransactionData_get_TransactionHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TransactionStatus", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.TransactionStatus")), 
      RuntimeTransactionData_get_TransactionStatus
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Rollback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Method({Static:false, Public:false}, "set_ClonedTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      RuntimeTransactionData_set_ClonedTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CompletionEvent", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.AsyncWaitHandle")), 
      RuntimeTransactionData_set_CompletionEvent
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HasPrepared", 
      JSIL.MethodSignature.Action($.Boolean), 
      RuntimeTransactionData_set_HasPrepared
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_IsolationScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      RuntimeTransactionData_set_IsolationScope
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsRootCancelPending", 
      JSIL.MethodSignature.Action($.Boolean), 
      RuntimeTransactionData_set_IsRootCancelPending
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OriginalTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.Transaction")), 
      RuntimeTransactionData_set_OriginalTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PendingPreparingEnlistment", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.PreparingEnlistment")), 
      RuntimeTransactionData_set_PendingPreparingEnlistment
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ShouldScheduleCompletion", 
      JSIL.MethodSignature.Action($.Boolean), 
      RuntimeTransactionData_set_ShouldScheduleCompletion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TransactionHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.RuntimeTransactionHandle")), 
      RuntimeTransactionData_set_TransactionHandle
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TransactionStatus", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.TransactionStatus")), 
      RuntimeTransactionData_set_TransactionStatus
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$CompletionEvent$value", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$PendingPreparingEnlistment$value", $asm27.TypeRef("System.Transactions.PreparingEnlistment"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$HasPrepared$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$ShouldScheduleCompletion$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$TransactionStatus$value", $asm27.TypeRef("System.Transactions.TransactionStatus"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$IsRootCancelPending$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$TransactionHandle$value", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$ClonedTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$OriginalTransaction$value", $asm27.TypeRef("System.Transactions.Transaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuntimeTransactionData$IsolationScope$value", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CompletionEvent", $asm25.TypeRef("System.Runtime.AsyncWaitHandle"));

    $.Property({Static:false, Public:true }, "PendingPreparingEnlistment", $asm27.TypeRef("System.Transactions.PreparingEnlistment"));

    $.Property({Static:false, Public:true }, "HasPrepared", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldScheduleCompletion", $.Boolean);

    $.Property({Static:false, Public:true }, "TransactionStatus", $asm27.TypeRef("System.Transactions.TransactionStatus"));

    $.Property({Static:false, Public:true }, "IsRootCancelPending", $.Boolean);

    $.Property({Static:false, Public:true }, "TransactionHandle", $asm0B.TypeRef("System.Activities.RuntimeTransactionHandle"));

    $.Property({Static:false, Public:true }, "ClonedTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "OriginalTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Property({Static:false, Public:true }, "IsolationScope", $asm0B.TypeRef("System.Activities.ActivityInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+AssociateKeysAsyncResult */ 

(function AssociateKeysAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.Runtime.ActivityExecutor+AssociateKeysAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnAssociated", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "associatedCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnAssociated", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false, ReadOnly:true }, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Pool`1 */ 

(function Pool$b1$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.Pool`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "Acquire", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:true }, "Release", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Constant({Static:true , Public:false}, "DefaultPoolSize", $.Int32, 10);

    $.Field({Static:false, Public:false}, "items", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "count", $.Int32);

    $.Field({Static:false, Public:false}, "poolSize", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfEmptyWorkItems */ 

(function PoolOfEmptyWorkItems$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfEmptyWorkItems", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.EmptyWorkItem"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfExecuteActivityWorkItems */ 

(function PoolOfExecuteActivityWorkItems$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfExecuteActivityWorkItems", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor+ExecuteActivityWorkItem"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfExecuteSynchronousExpressionWorkItems */ 

(function PoolOfExecuteSynchronousExpressionWorkItems$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfExecuteSynchronousExpressionWorkItems", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfCompletionWorkItems */ 

(function PoolOfCompletionWorkItems$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfCompletionWorkItems", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfNativeActivityContexts */ 

(function PoolOfNativeActivityContexts$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.NativeActivityContext")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfNativeActivityContexts", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfCodeActivityContexts */ 

(function PoolOfCodeActivityContexts$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.CodeActivityContext")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfCodeActivityContexts", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.CodeActivityContext"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+PoolOfResolveNextArgumentWorkItems */ 

(function PoolOfResolveNextArgumentWorkItems$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Pool`1", [$asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")]), 
      Name: "System.Activities.Runtime.ActivityExecutor+PoolOfResolveNextArgumentWorkItems", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateNew", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityExecutor+EmptyDelegateActivity */ 

(function EmptyDelegateActivity$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.NativeActivity"), 
      Name: "System.Activities.Runtime.ActivityExecutor+EmptyDelegateActivity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.NativeActivityContext"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityInstanceMap */ 

(function ActivityInstanceMap$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityInstanceMap", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AddBlockingActivity", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])]), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity"), 
          $asm0B.TypeRef("System.Activities.QualifiedId"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddEntry", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddEntry", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CanCompensationOrConfirmationHandlerReferenceAddedSymbols", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $asm0B.TypeRef("System.Activities.IdSpace"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceMapping", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInstanceLists", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetActivitiesBlockingUpdate", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInstanceListsNeedingUpdate", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceListNeedingUpdate")]), [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsInvalidEnvironmentUpdate", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNonDefaultSecondaryRoot", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsRemovalOrRTUpdateBlockedOrBlockedByUser", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap+UpdatedActivity"), $asm0B.TypeRef("System.Activities.QualifiedId"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "LoadActivityTree", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnActivityInstanceLoaded", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveEntry", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInstanceLists", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGatherSchedulableExpressions", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.List`1", [$.Int32])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateInstanceByActivityParticipation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateRawInstance", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.ActivityBlockingUpdate")])])
        ])
    );

    $.Field({Static:false, Public:false}, "instanceMapping", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]));

    $.Field({Static:false, Public:false}, "rawDeserializedLists", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]));

    $.Field({Static:false, Public:false}, "updateList", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceListNeedingUpdate")]));

    $.Property({Static:false, Public:false}, "SerializedInstanceLists", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "InstanceMapping", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityInstanceMap+InstanceList */ 

(function InstanceList$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm07.System.Byte))) ();
  };




  function InstanceList_get_ActivityId () {
    return this.InstanceList$ActivityId$value;
  }; 



  function InstanceList_set_ActivityId (value) {
    this.InstanceList$ActivityId$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")]), 
      Name: "System.Activities.Runtime.ActivityInstanceMap+InstanceList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), $.Boolean])
    );

    $.Method({Static:false, Public:true }, "get_ActivityId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte])), 
      InstanceList_get_ActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSerializing", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnSerializingAttribute"));

    $.Method({Static:false, Public:true }, "set_ActivityId", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte])), 
      InstanceList_set_ActivityId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "UpdateEnvironments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.Field({Static:false, Public:false}, "InstanceList$ActivityId$value", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ActivityId", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* interface System.Activities.Runtime.ActivityInstanceMap+IActivityReference */ 

JSIL.MakeInterface(
  "System.Activities.Runtime.ActivityInstanceMap+IActivityReference", false, [], function ($) {
    $.Method({}, "get_Activity", JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")));
    $.Method({}, "Load", new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")]));
    $.Property({}, "Activity");
  }, []);

/* interface System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment */ 

JSIL.MakeInterface(
  "System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment", false, [], function ($) {
    $.Method({}, "UpdateEnvironment", new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity")]));
  }, [$asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")]);

/* class System.Activities.Runtime.ActivityInstanceMap+InstanceListNeedingUpdate */ 

(function InstanceListNeedingUpdate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Runtime.ActivityInstanceMap_InstanceList)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.DynamicUpdate.DynamicUpdateMapEntry)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Activities.QualifiedId)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm07.System.Byte))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Activities.DynamicUpdate.DynamicUpdateMap)) ();
  };



  function InstanceListNeedingUpdate_get_InstanceList () {
    return this.InstanceListNeedingUpdate$InstanceList$value;
  }; 

  function InstanceListNeedingUpdate_get_MapEntry () {
    return this.InstanceListNeedingUpdate$MapEntry$value;
  }; 


  function InstanceListNeedingUpdate_get_NewActivity () {
    return this.InstanceListNeedingUpdate$NewActivity$value;
  }; 

  function InstanceListNeedingUpdate_get_NewId () {
    return this.InstanceListNeedingUpdate$NewId$value;
  }; 


  function InstanceListNeedingUpdate_get_OriginalId () {
    return this.InstanceListNeedingUpdate$OriginalId$value;
  }; 


  function InstanceListNeedingUpdate_get_UpdateMap () {
    return this.InstanceListNeedingUpdate$UpdateMap$value;
  }; 

  function InstanceListNeedingUpdate_set_InstanceList (value) {
    this.InstanceListNeedingUpdate$InstanceList$value = value;
  }; 

  function InstanceListNeedingUpdate_set_MapEntry (value) {
    this.InstanceListNeedingUpdate$MapEntry$value = value;
  }; 

  function InstanceListNeedingUpdate_set_NewActivity (value) {
    this.InstanceListNeedingUpdate$NewActivity$value = value;
  }; 

  function InstanceListNeedingUpdate_set_NewId (value) {
    this.InstanceListNeedingUpdate$NewId$value = value;
  }; 

  function InstanceListNeedingUpdate_set_OriginalId (value) {
    this.InstanceListNeedingUpdate$OriginalId$value = value;
  }; 

  function InstanceListNeedingUpdate_set_UpdateMap (value) {
    this.InstanceListNeedingUpdate$UpdateMap$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityInstanceMap+InstanceListNeedingUpdate", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_InstanceList", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")), 
      InstanceListNeedingUpdate_get_InstanceList
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MapEntry", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")), 
      InstanceListNeedingUpdate_get_MapEntry
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_MapEntryExists", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_NewActivity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      InstanceListNeedingUpdate_get_NewActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_NewId", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.QualifiedId")), 
      InstanceListNeedingUpdate_get_NewId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_NothingChanged", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_OriginalId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte])), 
      InstanceListNeedingUpdate_get_OriginalId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ParentIdShiftOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_UpdateMap", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")), 
      InstanceListNeedingUpdate_get_UpdateMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InstanceList", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList")), 
      InstanceListNeedingUpdate_set_InstanceList
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MapEntry", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry")), 
      InstanceListNeedingUpdate_set_MapEntry
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NewActivity", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      InstanceListNeedingUpdate_set_NewActivity
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_NewId", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.QualifiedId")), 
      InstanceListNeedingUpdate_set_NewId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OriginalId", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte])), 
      InstanceListNeedingUpdate_set_OriginalId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UpdateMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap")), 
      InstanceListNeedingUpdate_set_UpdateMap
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$InstanceList$value", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$OriginalId$value", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$NewId$value", $asm0B.TypeRef("System.Activities.QualifiedId"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$UpdateMap$value", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$MapEntry$value", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceListNeedingUpdate$NewActivity$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceList", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+InstanceList"));

    $.Property({Static:false, Public:true }, "OriginalId", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "NewId", $asm0B.TypeRef("System.Activities.QualifiedId"));

    $.Property({Static:false, Public:true }, "UpdateMap", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMap"));

    $.Property({Static:false, Public:true }, "MapEntry", $asm0B.TypeRef("System.Activities.DynamicUpdate.DynamicUpdateMapEntry"));

    $.Property({Static:false, Public:true }, "NewActivity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "NothingChanged", $.Boolean);

    $.Property({Static:false, Public:true }, "MapEntryExists", $.Boolean);

    $.Property({Static:false, Public:true }, "ParentIdShiftOnly", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.ActivityInstanceReference */ 

(function ActivityInstanceReference$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ActivityInstanceReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedActivityInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedActivityInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "get_Activity");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "Load");

    $.Field({Static:false, Public:false}, "activityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:true }, "ActivityInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CompletionCallbackWrapper */ 

(function CompletionCallbackWrapper$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CallbackWrapper"), 
      Name: "System.Activities.Runtime.CompletionCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Delegate"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForCancelation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.WorkItem"), [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GatherOutputs", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_NeedsToGatherOutputs", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCheckForCancelation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNeedsToGatherOutputs", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Invoke", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_NeedsToGatherOutputs", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCheckForCancelation", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNeedsToGatherOutputs", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:true , Public:false}, "completionCallbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.CompletionCallback.__Type__;
      });

    $.Field({Static:true , Public:false}, "completionCallbackParameters", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "checkForCancelation", $.Boolean);

    $.Field({Static:false, Public:false}, "needsToGatherOutputs", $.Boolean);

    $.Property({Static:false, Public:false}, "NeedsToGatherOutputs", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedCheckForCancelation", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNeedsToGatherOutputs", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.KnownTypeAttribute"), function () { return [$asm0B.System.Activities.Runtime.ActivityCompletionCallbackWrapper.__Type__]; })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.KnownTypeAttribute"), function () { return [$asm0B.System.Activities.Runtime.DelegateCompletionCallbackWrapper.__Type__]; })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem */ 

(function CompletionWorkItem$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CompletedInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCompletedInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCompletedInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "get_Activity");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "Load");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"));

    $.Field({Static:false, Public:false}, "completedInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "CompletedInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedCompletedInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CompletionCallbackWrapper+CompletionWithCancelationCheckWorkItem */ 

(function CompletionWithCancelationCheckWorkItem$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper+CompletionWorkItem"), 
      Name: "System.Activities.Runtime.CompletionCallbackWrapper+CompletionWithCancelationCheckWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ActivityCompletionCallbackWrapper */ 

(function ActivityCompletionCallbackWrapper$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), 
      Name: "System.Activities.Runtime.ActivityCompletionCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.CompletionCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Invoke", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "completionCallbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.CompletionCallback.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "completionCallbackParameters", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.BookmarkCallbackWrapper */ 

(function BookmarkCallbackWrapper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Bookmark)) ();
  };





  function BookmarkCallbackWrapper_get_Bookmark () {
    return this.BookmarkCallbackWrapper$Bookmark$value;
  }; 




  function BookmarkCallbackWrapper_set_Bookmark (value) {
    this.BookmarkCallbackWrapper$Bookmark$value = value;
  }; 



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CallbackWrapper"), 
      Name: "System.Activities.Runtime.BookmarkCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Boolean, 
          $asm0B.TypeRef("System.Activities.Bookmark"), $.Object
        ])
    );

    $.Method({Static:false, Public:true }, "get_Bookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark")), 
      BookmarkCallbackWrapper_get_Bookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Options", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkOptions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOptions", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $.Object
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Method({Static:false, Public:true }, "set_Bookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark")), 
      BookmarkCallbackWrapper_set_Bookmark
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Options", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkOptions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOptions", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkOptions"))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "bookmarkCallbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.BookmarkCallback.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "bookmarkCallbackParameters", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "options", $asm0B.TypeRef("System.Activities.BookmarkOptions"));

    $.Field({Static:false, Public:false}, "BookmarkCallbackWrapper$Bookmark$value", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Options", $asm0B.TypeRef("System.Activities.BookmarkOptions"));

    $.Property({Static:false, Public:true }, "Bookmark", $asm0B.TypeRef("System.Activities.Bookmark"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOptions", $asm0B.TypeRef("System.Activities.BookmarkOptions"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.BookmarkList */ 

(function BookmarkList$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.Bookmark")]), 
      Name: "System.Activities.Runtime.BookmarkList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TransferBookmarks", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Bookmark")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Bookmark")])])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.BookmarkManager */ 

(function BookmarkManager$Members () {
  var $, $thisType;


























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.BookmarkManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.BookmarkScopeHandle")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddBookmark", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkCallback"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateTempBookmark", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasBookmarks", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarks", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNextId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedScopeHandle", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNextBookmarkId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "PopulateBookmarkInfo", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "PurgeBookmarks", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Bookmark")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "PurgeSingleBookmark", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarks", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNextId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedScopeHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGenerateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Bookmark")]), $.Object, 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetBookmarkFromInternalList", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Bookmark"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Bookmark")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateAllExclusiveHandles", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateExclusiveHandleList", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Bookmark"))
    );

    $.Field({Static:false, Public:false}, "nextId", $.Int64);

    $.Field({Static:false, Public:false}, "bookmarks", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")]));

    $.Field({Static:false, Public:false}, "scope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Field({Static:false, Public:false}, "scopeHandle", $asm0B.TypeRef("System.Activities.BookmarkScopeHandle"));

    $.Property({Static:false, Public:true }, "HasBookmarks", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedNextId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarks", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkCallbackWrapper")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedScope", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedScopeHandle", $asm0B.TypeRef("System.Activities.BookmarkScopeHandle"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.BookmarkScopeManager */ 

(function BookmarkScopeManager$Members () {
  var $, $thisType;






























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.BookmarkScopeManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateAndRegisterScope", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAndRegisterScope", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm07.TypeRef("System.Guid"), $asm0B.TypeRef("System.Activities.BookmarkScopeHandle")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAssociatedKey", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateBookmark", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Bookmark"), [
          $.String, $asm0B.TypeRef("System.Activities.BookmarkScope"), 
          $asm0B.TypeRef("System.Activities.BookmarkCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.BookmarkOptions")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasKeysToUpdate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedBookmarkManagers", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedDefaultScope", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNextTemporaryId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedUninitializedScopes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBookmarks", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")]), [$asm0B.TypeRef("System.Activities.BookmarkScope")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetKeysToAssociate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetKeysToDisassociate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNextTemporaryId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "InitializeBookmarkScopeWithoutKeyAssociation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkScope"), [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, "InitializeScope", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsExclusiveScopeUnstable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Bookmark")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsStable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.BookmarkScope"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "PopulateBookmarkInfo", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Hosting.BookmarkInfo")])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "PurgeBookmark", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PurgeBookmarks", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager"), $asm0B.TypeRef("System.Activities.Bookmark"), 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Bookmark")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveBookmark", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Activities.Bookmark"), $asm0B.TypeRef("System.Activities.BookmarkScope"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedBookmarkManagers", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedDefaultScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNextTemporaryId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedUninitializedScopes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGenerateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.BookmarkResumptionResult"), [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Bookmark")]), 
          $asm0B.TypeRef("System.Activities.BookmarkScope"), $.Object, 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "UnregisterScope", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.BookmarkScope"))
    );

    $.Field({Static:false, Public:false}, "bookmarkManagers", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")]));

    $.Field({Static:false, Public:false}, "uninitializedScopes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]));

    $.Field({Static:false, Public:false}, "keysToAssociate", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false}, "keysToDisassociate", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceKey")]));

    $.Field({Static:false, Public:false}, "defaultScope", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Field({Static:false, Public:false}, "nextTemporaryId", $.Int64);

    $.Property({Static:false, Public:true }, "Default", $asm0B.TypeRef("System.Activities.BookmarkScope"));

    $.Property({Static:false, Public:true }, "HasKeysToUpdate", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedDefaultScope", $asm0B.TypeRef("System.Activities.BookmarkScope"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNextTemporaryId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedBookmarkManagers", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Activities.BookmarkScope"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedUninitializedScopes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.BookmarkScope")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CollapseTemporaryResolutionLocationWorkItem */ 

(function CollapseTemporaryResolutionLocationWorkItem$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.WorkItem"), 
      Name: "System.Activities.Runtime.CollapseTemporaryResolutionLocationWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Location"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_PropertyManagerOwner", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "location", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:true , Virtual:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "PropertyManagerOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.CompletionBookmark */ 

(function CompletionBookmark$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.CompletionBookmark", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForCancelation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.WorkItem"), [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
    );

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"));

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.DelegateCompletionCallbackWrapper */ 

(function DelegateCompletionCallbackWrapper$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), 
      Name: "System.Activities.Runtime.DelegateCompletionCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DelegateCompletionCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GatherOutputs", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedResults", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Invoke", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedResults", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.DelegateCompletionCallback.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackParameterTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "results", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false}, "SerializedResults", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.EmptyWithCancelationCheckWorkItem */ 

(function EmptyWithCancelationCheckWorkItem$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.EmptyWithCancelationCheckWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCompletedInstance", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "PostProcess", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCompletedInstance", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "completedInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedCompletedInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.EmptyWorkItem */ 

(function EmptyWorkItem$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.EmptyWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ExclusiveHandleList */ 

(function ExclusiveHandleList$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.ExclusiveHandle")]), 
      Name: "System.Activities.Runtime.ExclusiveHandleList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ExclusiveHandle")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem */ 

(function ExecuteSynchronousExpressionWorkItem$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ExecuteSynchronousExpressionWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureActivityInfo", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "EvaluateNextArgument", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedInstanceId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNextArgumentWorkItem", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedResultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityWithResult"), 
          $.Int64, $asm0B.TypeRef("System.Activities.Location"), 
          $asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedInstanceId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNextArgumentWorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedResultLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "get_Activity");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "Load");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackClosed", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackExecuting", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackFaulted", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TrackState", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstanceState"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Tracking.ActivityInfo")])
        ])
    );

    $.Field({Static:false, Public:false}, "expressionActivity", $asm0B.TypeRef("System.Activities.ActivityWithResult"));

    $.Field({Static:false, Public:false}, "instanceId", $.Int64);

    $.Field({Static:false, Public:false}, "nextArgumentWorkItem", $asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"));

    $.Field({Static:false, Public:false}, "resultLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false}, "SerializedInstanceId", $.Int64)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedNextArgumentWorkItem", $asm0B.TypeRef("System.Activities.Runtime.ResolveNextArgumentWorkItem"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedResultLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ExecutionPropertyManager */ 

(function ExecutionPropertyManager$Members () {
  var $, $thisType;






























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ExecutionPropertyManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $.Type])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm0B.TypeRef("System.Activities.IdSpace")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddIExecutionProperty", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddProperties", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
          $asm0B.TypeRef("System.Activities.IdSpace")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AttachPropertyManager", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanupWorkflowThread", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Exception")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "FindAll", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", ["!!0"]), null, ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasExclusiveHandlesInScope", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedExclusiveHandleCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedProperties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFlattenedProperties", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), [$asm0B.TypeRef("System.Activities.IdSpace")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetParent", 
      new JSIL.MethodSignature($.Type, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetProperty", 
      new JSIL.MethodSignature($.Object, [$.String, $asm0B.TypeRef("System.Activities.IdSpace")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertyAtCurrentScope", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsOwner", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "OnDeserialized", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.IdSpace"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessChildrenForExclusiveHandles", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Collections.Generic.Queue`1", [$asm0B.TypeRef("System.Activities.HybridCollection`1", [$asm0B.TypeRef("System.Activities.ActivityInstance")])])])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedExclusiveHandleCount", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedProperties", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetupWorkflowThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldSerialize", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ThrowIfAlreadyDefined", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "UnregisterProperties", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.IdSpace")])
    );

    $.ExternalMethod({Static:false, Public:true }, "UnregisterProperties", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.IdSpace"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateChildExclusiveHandleCounts", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.Field({Static:false, Public:false}, "owningInstance", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "properties", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]));

    $.Field({Static:false, Public:false}, "threadProperties", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]));

    $.Field({Static:false, Public:false}, "ownsThreadPropertiesList", $.Boolean);

    $.Field({Static:false, Public:false}, "lastPropertyName", $.String);

    $.Field({Static:false, Public:false}, "lastProperty", $.Object);

    $.Field({Static:false, Public:false}, "lastPropertyVisibility", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Field({Static:false, Public:false}, "rootPropertyManager", $.Type);

    $.Field({Static:false, Public:false}, "exclusiveHandleCount", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedProperties", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedExclusiveHandleCount", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Properties", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty")]));

    $.Property({Static:false, Public:false}, "HasExclusiveHandlesInScope", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty */ 

(function ExecutionProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.IdSpace)) ();
  };




  function ExecutionProperty_get_IsRemoved () {
    return this.ExecutionProperty$IsRemoved$value;
  }; 






  function ExecutionProperty_get_ShouldBeRemovedAfterCleanup () {
    return this.ExecutionProperty$ShouldBeRemovedAfterCleanup$value;
  }; 

  function ExecutionProperty_get_ShouldSkipNextCleanup () {
    return this.ExecutionProperty$ShouldSkipNextCleanup$value;
  }; 

  function ExecutionProperty_get_Visibility () {
    return this.ExecutionProperty$Visibility$value;
  }; 


  function ExecutionProperty_set_IsRemoved (value) {
    this.ExecutionProperty$IsRemoved$value = value;
  }; 






  function ExecutionProperty_set_ShouldBeRemovedAfterCleanup (value) {
    this.ExecutionProperty$ShouldBeRemovedAfterCleanup$value = value;
  }; 

  function ExecutionProperty_set_ShouldSkipNextCleanup (value) {
    this.ExecutionProperty$ShouldSkipNextCleanup$value = value;
  }; 

  function ExecutionProperty_set_Visibility (value) {
    this.ExecutionProperty$Visibility$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ExecutionPropertyManager+ExecutionProperty", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm0B.TypeRef("System.Activities.IdSpace")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasRestrictedVisibility", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:true }, "get_IsRemoved", 
      JSIL.MethodSignature.Return($.Boolean), 
      ExecutionProperty_get_IsRemoved
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Property", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHasRestrictedVisibility", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedProperty", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Method({Static:false, Public:true }, "get_ShouldBeRemovedAfterCleanup", 
      JSIL.MethodSignature.Return($.Boolean), 
      ExecutionProperty_get_ShouldBeRemovedAfterCleanup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShouldSkipNextCleanup", 
      JSIL.MethodSignature.Return($.Boolean), 
      ExecutionProperty_get_ShouldSkipNextCleanup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Visibility", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.IdSpace")), 
      ExecutionProperty_get_Visibility
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_HasRestrictedVisibility", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:true }, "set_IsRemoved", 
      JSIL.MethodSignature.Action($.Boolean), 
      ExecutionProperty_set_IsRemoved
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Property", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHasRestrictedVisibility", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedProperty", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Method({Static:false, Public:true }, "set_ShouldBeRemovedAfterCleanup", 
      JSIL.MethodSignature.Action($.Boolean), 
      ExecutionProperty_set_ShouldBeRemovedAfterCleanup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ShouldSkipNextCleanup", 
      JSIL.MethodSignature.Action($.Boolean), 
      ExecutionProperty_set_ShouldSkipNextCleanup
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Visibility", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.IdSpace")), 
      ExecutionProperty_set_Visibility
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "property", $.Object);

    $.Field({Static:false, Public:false}, "hasRestrictedVisibility", $.Boolean);

    $.Field({Static:false, Public:false}, "ExecutionProperty$Visibility$value", $asm0B.TypeRef("System.Activities.IdSpace"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExecutionProperty$IsRemoved$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExecutionProperty$ShouldBeRemovedAfterCleanup$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ExecutionProperty$ShouldSkipNextCleanup$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Property", $.Object);

    $.Property({Static:false, Public:true }, "HasRestrictedVisibility", $.Boolean);

    $.Property({Static:false, Public:true }, "Visibility", $asm0B.TypeRef("System.Activities.IdSpace"));

    $.Property({Static:false, Public:true }, "IsRemoved", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldBeRemovedAfterCleanup", $.Boolean);

    $.Property({Static:false, Public:true }, "ShouldSkipNextCleanup", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedProperty", $.Object)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHasRestrictedVisibility", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ExecutionPropertyManager+<>c__DisplayClass9_0 */ 

(function $l$gc__DisplayClass9_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.ExecutionPropertyManager+<>c__DisplayClass9_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l.ctor$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor")])
    );

    $.Field({Static:false, Public:true }, "previousOwner", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm0B.TypeRef("System.Activities.Runtime.ExecutionPropertyManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.Runtime.FaultBookmark */ 

(function FaultBookmark$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.FaultBookmark", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GenerateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.WorkItem"), [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
    );

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"));

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.FaultCallbackWrapper */ 

(function FaultCallbackWrapper$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CallbackWrapper"), 
      Name: "System.Activities.Runtime.FaultCallbackWrapper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.FaultCallback"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.WorkItem"), [
          $asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invoke", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.NativeActivityFaultContext"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "faultCallbackType", $asm07.TypeRef("System.Type"), function ($pi) {
        return $asm0B.System.Activities.FaultCallback.__Type__;
      });

    $.Field({Static:true , Public:false, ReadOnly:true }, "faultCallbackParameters", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.FaultCallbackWrapper+FaultWorkItem */ 

(function FaultWorkItem$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.FaultCallbackWrapper+FaultWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"), $asm07.TypeRef("System.Exception"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_OriginalExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOriginalExceptionSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropagatedException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedPropagatedFrom", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedCallbackWrapper", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOriginalExceptionSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropagatedException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedPropagatedFrom", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "callbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"));

    $.Field({Static:false, Public:false}, "propagatedException", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "propagatedFrom", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Field({Static:false, Public:false}, "originalExceptionSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Property({Static:false, Public:true , Virtual:true }, "OriginalExceptionSource", $asm0B.TypeRef("System.Activities.ActivityInstance"));

    $.Property({Static:false, Public:false}, "SerializedCallbackWrapper", $asm0B.TypeRef("System.Activities.Runtime.FaultCallbackWrapper"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPropagatedException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedPropagatedFrom", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOriginalExceptionSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.FaultContext */ 

(function FaultContext$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.FaultContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedException", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSource", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSource", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Source", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
    );

    $.Field({Static:false, Public:false}, "exception", $asm07.TypeRef("System.Exception"));

    $.Field({Static:false, Public:false}, "source", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "Source", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"));

    $.Property({Static:false, Public:false}, "SerializedException", $asm07.TypeRef("System.Exception"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSource", $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceReference"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.FuncCompletionCallbackWrapper`1 */ 

(function FuncCompletionCallbackWrapper$b1$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.CompletionCallbackWrapper"), 
      Name: "System.Activities.Runtime.FuncCompletionCallbackWrapper`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.CompletionCallback`1", [$.GenericParameter("T")]), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GatherOutputs", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedResultValue", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetResultId", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.Activities.ActivityWithResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Invoke", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.NativeActivityContext"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSerializingGenericCallback", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedResultValue", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackType", $asm07.TypeRef("System.Type"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "callbackParameterTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "resultValue", $.GenericParameter("T"));

    $.Property({Static:false, Public:false}, "SerializedResultValue", $.GenericParameter("T"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.LocationEnvironment */ 

(function LocationEnvironment$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Activities.Activity)) ();
  };

















  function LocationEnvironment_get_Definition () {
    return this.LocationEnvironment$Definition$value;
  }; 





















  function LocationEnvironment_set_Definition (value) {
    this.LocationEnvironment$Definition$value = value;
  }; 
























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.LocationEnvironment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Activity"), 
          $.Type, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddHandle", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Handle"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddReference", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupMappedLocations", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CollapseTemporaryResolutionLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CollapseTemporaryResolutionLocation", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "CollapseTemporaryResolutionLocations", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyRuntimeDelegateArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "Declare", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Location"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeclareHandle", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Location"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeclareTemporaryLocation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.ActivityInstance"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FindVariablesToUnregister", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.Method({Static:false, Public:false}, "get_Definition", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity")), 
      LocationEnvironment_get_Definition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_Handles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasHandles", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HasOwnerCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MappableObjectManager", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Parent", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHandles", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHasMappableLocations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedHasOwnerCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLocations", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedParent", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedReferenceCountMinusOne", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedSingleLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ShouldDispose", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSpecificLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location`1", ["!!0"]), [$.Int32], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSpecificLocation", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Location"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDeserialized", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterLocation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Location"), $asm0B.TypeRef("System.Activities.LocationReference"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RegisterUpdatedLocations", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ReinitializeHandles", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveReference", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Method({Static:false, Public:false}, "set_Definition", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Activity")), 
      LocationEnvironment_set_Definition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "set_Parent", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHandles", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHasMappableLocations", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedHasOwnerCompleted", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLocations", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedParent", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedReferenceCountMinusOne", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedSingleLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.get_Activity", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Activity"))
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "get_Activity");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Load", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.Activity"), $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference"), "Load");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReferenceWithEnvironment.UpdateEnvironment", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity")])
    )
      .Overrides($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment"), "UpdateEnvironment");

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfDisposed", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetLocation", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Location")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetLocation", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm0B.TypeRef("System.Activities.Activity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.Location")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UninitializeHandles", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UninitializeHandles", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Activities.HandleInitializationContext")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UnregisterLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UnregisterRemovedVariables", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Update", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $asm0B.TypeRef("System.Activities.Activity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateArguments", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdatePrivateVariables", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdatePublicVariables", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMap"), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]), 
          $asm0B.TypeRef("System.Activities.Activity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateVariables", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.DynamicUpdate.EnvironmentUpdateMapEntry")]), $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Variable")]), 
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")])
        ])
    );

    $.Field({Static:true , Public:false}, "dummyLocation", $asm0B.TypeRef("System.Activities.Runtime.LocationEnvironment+DummyLocation"));

    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean);

    $.Field({Static:false, Public:false}, "hasHandles", $.Boolean);

    $.Field({Static:false, Public:false}, "executor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Field({Static:false, Public:false}, "locationsToUnregister", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.Location")]));

    $.Field({Static:false, Public:false}, "locationsToRegister", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Activities.LocationReference")]));

    $.Field({Static:false, Public:false}, "locations", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]));

    $.Field({Static:false, Public:false}, "hasMappableLocations", $.Boolean);

    $.Field({Static:false, Public:false}, "parent", $.Type);

    $.Field({Static:false, Public:false}, "singleLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Field({Static:false, Public:false}, "handles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]));

    $.Field({Static:false, Public:false}, "referenceCountMinusOne", $.Int32);

    $.Field({Static:false, Public:false}, "hasOwnerCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "LocationEnvironment$Definition$value", $asm0B.TypeRef("System.Activities.Activity"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "SerializedLocations", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Location")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHasMappableLocations", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedParent", $.Type)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedSingleLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHandles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedReferenceCountMinusOne", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedHasOwnerCompleted", $.Boolean)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "Definition", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "Parent", $.Type);

    $.Property({Static:false, Public:false}, "HasHandles", $.Boolean);

    $.Property({Static:false, Public:false}, "MappableObjectManager", $asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager"));

    $.Property({Static:false, Public:false}, "ShouldDispose", $.Boolean);

    $.Property({Static:false, Public:false}, "HasOwnerCompleted", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Activities.Runtime.ActivityInstanceMap.IActivityReference.Activity", $asm0B.TypeRef("System.Activities.Activity"));

    $.Property({Static:false, Public:false}, "Handles", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Handle")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReferenceWithEnvironment"), 
      /* 1 */ $asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap+IActivityReference")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* delegate System.Activities.Runtime.LocationEnvironment+GetNewVariableIndex */ 

JSIL.MakeDelegate("System.Activities.Runtime.LocationEnvironment+GetNewVariableIndex", false, [], 
  new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Int32")]), [$asm07.TypeRef("System.Int32")]));

/* class System.Activities.Runtime.LocationEnvironment+DummyLocation */ 

(function DummyLocation$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Location`1", [$asm07.TypeRef("System.Object")]), 
      Name: "System.Activities.Runtime.LocationEnvironment+DummyLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.MappableObjectManager */ 

(function MappableObjectManager$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.MappableObjectManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GatherMappableVariables", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm0B.TypeRef("System.Activities.Hosting.LocationInfo")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedMappableLocations", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager+MappableLocation")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Register", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.Location"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.ActivityInstance")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedMappableLocations", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager+MappableLocation")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "Unregister", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.Field({Static:false, Public:false}, "mappableLocations", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager+MappableLocation")]));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false}, "SerializedMappableLocations", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Activities.Runtime.MappableObjectManager+MappableLocation")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.MappableObjectManager+MappableLocation */ 

(function MappableLocation$Members () {
  var $, $thisType;


















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.MappableObjectManager+MappableLocation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.LocationReference"), $asm0B.TypeRef("System.Activities.Activity"), 
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Location", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MappingKeyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedMappingKeyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Location", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_MappingKeyName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_OwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedMappingKeyName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedOwnerDisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "mappingKeyName", $.String);

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "ownerDisplayName", $.String);

    $.Field({Static:false, Public:false}, "location", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false}, "MappingKeyName", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "OwnerDisplayName", $.String);

    $.Property({Static:false, Public:false}, "Location", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false}, "SerializedMappingKeyName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedOwnerDisplayName", $.String)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.ResolveNextArgumentWorkItem */ 

(function ResolveNextArgumentWorkItem$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutionWorkItem"), 
      Name: "System.Activities.Runtime.ResolveNextArgumentWorkItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CanExecuteUserCode", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Execute", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"), $asm0B.TypeRef("System.Activities.Runtime.BookmarkManager")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedArgumentValueOverrides", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedNextArgumentIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedResultLocation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Initialize", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.ActivityInstance"), $.Int32, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), $asm0B.TypeRef("System.Activities.Location")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseToPool", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedArgumentValueOverrides", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedNextArgumentIndex", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedResultLocation", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Location"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceScheduled", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TraceStarting", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "nextArgumentIndex", $.Int32);

    $.Field({Static:false, Public:false}, "argumentValueOverrides", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]));

    $.Field({Static:false, Public:false}, "resultLocation", $asm0B.TypeRef("System.Activities.Location"));

    $.Property({Static:false, Public:false}, "SerializedNextArgumentIndex", $.Int32)
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedArgumentValueOverrides", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedResultLocation", $asm0B.TypeRef("System.Activities.Location"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* class System.Activities.Runtime.Scheduler */ 

(function Scheduler$Members () {
  var $, $thisType;



























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.Scheduler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.Scheduler+Callbacks"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearAllWorkItems", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateNotifyUnhandledExceptionAction", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EnqueueWork", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "FillInstanceMap", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityInstanceMap"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Abort", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Continue", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsIdle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsRunning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedFirstWorkItem", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SerializedWorkItemQueue", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_YieldSilently", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.Scheduler+Callbacks"))
    );

    $.ExternalMethod({Static:false, Public:true }, "InternalResume", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkRunning", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "NotifyWorkCompletion", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "OnDeserialized", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.Scheduler+Callbacks"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnScheduledWork", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "Open", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Threading.SynchronizationContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Open", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "Pause", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PushWork", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Resume", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduleWork", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedFirstWorkItem", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SerializedWorkItemQueue", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")]))
    );

    $.Field({Static:true , Public:false}, "continueAction", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+ContinueAction"));

    $.Field({Static:true , Public:false}, "yieldSilentlyAction", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+YieldSilentlyAction"));

    $.Field({Static:true , Public:false}, "abortAction", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+AbortAction"));

    $.Field({Static:false, Public:false}, "firstWorkItem", $asm0B.TypeRef("System.Activities.Runtime.WorkItem"));

    $.Field({Static:true , Public:false}, "onScheduledWorkCallback", $asm07.TypeRef("System.Threading.SendOrPostCallback"));

    $.Field({Static:false, Public:false}, "synchronizationContext", $asm07.TypeRef("System.Threading.SynchronizationContext"));

    $.Field({Static:false, Public:false}, "isPausing", $.Boolean);

    $.Field({Static:false, Public:false}, "isRunning", $.Boolean);

    $.Field({Static:false, Public:false}, "resumeTraceRequired", $.Boolean);

    $.Field({Static:false, Public:false}, "callbacks", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+Callbacks"));

    $.Field({Static:false, Public:false}, "workItemQueue", $asm0B.TypeRef("System.Activities.Quack`1", [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")]));

    $.Property({Static:true , Public:true }, "Continue", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"));

    $.Property({Static:true , Public:true }, "YieldSilently", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"));

    $.Property({Static:true , Public:true }, "Abort", $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"));

    $.Property({Static:false, Public:true }, "IsRunning", $.Boolean);

    $.Property({Static:false, Public:true }, "IsIdle", $.Boolean);

    $.Property({Static:false, Public:false}, "SerializedFirstWorkItem", $asm0B.TypeRef("System.Activities.Runtime.WorkItem"))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));

    $.Property({Static:false, Public:false}, "SerializedWorkItemQueue", $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")]))
      .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataMemberAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm21.TypeRef("System.Runtime.Serialization.DataContractAttribute"));

})();

/* struct System.Activities.Runtime.Scheduler+Callbacks */ 

(function Callbacks$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.Runtime.Scheduler+Callbacks", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ExecuteWorkItem", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), [$asm0B.TypeRef("System.Activities.Runtime.WorkItem")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsAbortPending", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WorkflowInstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "NotifyUnhandledException", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SchedulerIdle", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ThreadAcquired", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "activityExecutor", $asm0B.TypeRef("System.Activities.Runtime.ActivityExecutor"));

    $.Property({Static:false, Public:true }, "WorkflowInstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "IsAbortPending", $.Boolean);

    $.Property({Static:false, Public:true }, "IsCompleted", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Scheduler+RequestedAction */ 

(function RequestedAction$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.Runtime.Scheduler+RequestedAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Scheduler+ContinueAction */ 

(function ContinueAction$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), 
      Name: "System.Activities.Runtime.Scheduler+ContinueAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Scheduler+YieldSilentlyAction */ 

(function YieldSilentlyAction$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), 
      Name: "System.Activities.Runtime.Scheduler+YieldSilentlyAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Scheduler+AbortAction */ 

(function AbortAction$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), 
      Name: "System.Activities.Runtime.Scheduler+AbortAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.Runtime.Scheduler+NotifyUnhandledExceptionAction */ 

(function NotifyUnhandledExceptionAction$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Activities.ActivityInstance)) ();
  };



  function NotifyUnhandledExceptionAction_get_Exception () {
    return this.NotifyUnhandledExceptionAction$Exception$value;
  }; 

  function NotifyUnhandledExceptionAction_get_Source () {
    return this.NotifyUnhandledExceptionAction$Source$value;
  }; 

  function NotifyUnhandledExceptionAction_set_Exception (value) {
    this.NotifyUnhandledExceptionAction$Exception$value = value;
  }; 

  function NotifyUnhandledExceptionAction_set_Source (value) {
    this.NotifyUnhandledExceptionAction$Source$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Activities.Runtime.Scheduler+RequestedAction"), 
      Name: "System.Activities.Runtime.Scheduler+NotifyUnhandledExceptionAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $asm0B.TypeRef("System.Activities.ActivityInstance")])
    );

    $.Method({Static:false, Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception")), 
      NotifyUnhandledExceptionAction_get_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      NotifyUnhandledExceptionAction_get_Source
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Exception", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception")), 
      NotifyUnhandledExceptionAction_set_Exception
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Source", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Activities.ActivityInstance")), 
      NotifyUnhandledExceptionAction_set_Source
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NotifyUnhandledExceptionAction$Exception$value", $asm07.TypeRef("System.Exception"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NotifyUnhandledExceptionAction$Source$value", $asm0B.TypeRef("System.Activities.ActivityInstance"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Exception", $asm07.TypeRef("System.Exception"));

    $.Property({Static:false, Public:true }, "Source", $asm0B.TypeRef("System.Activities.ActivityInstance"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

