/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm0C = JSIL.DeclareAssembly("System.Activities.DurableInstancing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Activities");
JSIL.DeclareNamespace("System.Activities.DurableInstancing");
/* class System.Activities.DurableInstancing.BinaryHeap`2 */ 

(function BinaryHeap$b2$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.BinaryHeap`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TKey", "TValue"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "BubbleDown", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "BubbleUp", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Dequeue", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "Dequeue", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "Enqueue", 
      new JSIL.MethodSignature($.Boolean, [$.GenericParameter("TKey"), $.GenericParameter("TValue")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Peek", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]), null)
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveAll", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), [$asm07.TypeRef("System.Predicate`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResizeItemStore", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShrinkStore", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "TakeWhile", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]), [$asm07.TypeRef("System.Predicate`1", [$.GenericParameter("TKey")])])
    );

    $.Constant({Static:true , Public:false}, "defaultCapacity", $.Int32, 128);

    $.Field({Static:false, Public:false, ReadOnly:true }, "EmptyItem", $asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")]));

    $.Field({Static:false, Public:false}, "items", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])]));

    $.Field({Static:false, Public:false}, "itemCount", $.Int32);

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.DurableInstancing.ILoadRetryStrategy */ 

JSIL.MakeInterface(
  "System.Activities.DurableInstancing.ILoadRetryStrategy", false, [], function ($) {
    $.Method({}, "RetryDelay", new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Int32]));
  }, []);

/* class System.Activities.DurableInstancing.LoadRetryConstantStrategy */ 

(function LoadRetryConstantStrategy$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.LoadRetryConstantStrategy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RetryDelay", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Int32])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultRetryDelay", $asm07.TypeRef("System.TimeSpan"));


    function LoadRetryConstantStrategy__cctor () {
      $thisType.defaultRetryDelay = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      LoadRetryConstantStrategy__cctor
    );

    $.ImplementInterfaces(
      /* 0 */ $asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadRetryExponentialBackoffStrategy */ 

(function LoadRetryExponentialBackoffStrategy$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.LoadRetryExponentialBackoffStrategy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "RetryDelay", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Int32])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "DefaultBackoffLimit", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "DefaultBackoffMultiplier", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "expLimit", $.Int32);

    $.Field({Static:false, Public:false, ReadOnly:true }, "multiplier", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "maxDelay", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "random", $asm07.TypeRef("System.Random"));

    $.ImplementInterfaces(
      /* 0 */ $asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadRetryHandler */ 

(function LoadRetryHandler$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.LoadRetryHandler", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AbortPendingRetries", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Enqueue", 
      new JSIL.MethodSignature($.Boolean, [$asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRetryTimer", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "retryQueue", $asm0C.TypeRef("System.Activities.DurableInstancing.BinaryHeap`2", [$asm07.TypeRef("System.DateTime"), $asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryAsyncResult")]));

    $.Field({Static:false, Public:false}, "syncLock", $.Object);

    $.Field({Static:false, Public:false}, "retryThreadTimer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadRetryHandler+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.LoadRetryHandler+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAbortPendingRetries$gb__5_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.DateTime"), $asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryAsyncResult")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "$lAbortPendingRetries$gb__5_1", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__5_0", $asm07.TypeRef("System.Predicate`1", [$asm07.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm07.TypeRef("System.DateTime"), $asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryAsyncResult")])]));

    $.Field({Static:true , Public:true }, "$l$g9__5_1", $asm07.TypeRef("System.Action`1", [$.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DurableInstancing.LoadRetryHandler+<>c__DisplayClass6_0 */ 

(function $l$gc__DisplayClass6_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.LoadRetryHandler+<>c__DisplayClass6_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lOnRetryTimer$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.DateTime")])
    );

    $.Field({Static:false, Public:true }, "currentTime", $asm07.TypeRef("System.DateTime"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DurableInstancing.LoadRetryStrategyFactory */ 

(function LoadRetryStrategyFactory$Members () {
  var $, $thisType;


  JSIL.MakeStaticClass("System.Activities.DurableInstancing.LoadRetryStrategyFactory", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CreateRetryStrategy", 
      new JSIL.MethodSignature($asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy"), [$asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadRetryAsyncResult */ 

(function LoadRetryAsyncResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm35.System.Runtime.DurableInstancing.InstancePersistenceCommand)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm35.System.Runtime.DurableInstancing.InstancePersistenceContext)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStore)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.TimeSpan)) ();
  };






  function LoadRetryAsyncResult_get_InstancePersistenceCommand () {
    return this.LoadRetryAsyncResult$InstancePersistenceCommand$value;
  }; 

  function LoadRetryAsyncResult_get_InstancePersistenceContext () {
    return this.LoadRetryAsyncResult$InstancePersistenceContext$value;
  }; 

  function LoadRetryAsyncResult_get_InstanceStore () {
    return this.LoadRetryAsyncResult$InstanceStore$value;
  }; 

  function LoadRetryAsyncResult_get_RetryTimeout () {
    return this.LoadRetryAsyncResult$RetryTimeout$value;
  }; 



  function LoadRetryAsyncResult_set_InstancePersistenceCommand (value) {
    this.LoadRetryAsyncResult$InstancePersistenceCommand$value = value;
  }; 

  function LoadRetryAsyncResult_set_InstancePersistenceContext (value) {
    this.LoadRetryAsyncResult$InstancePersistenceContext$value = value;
  }; 

  function LoadRetryAsyncResult_set_InstanceStore (value) {
    this.LoadRetryAsyncResult$InstanceStore$value = value;
  }; 

  function LoadRetryAsyncResult_set_RetryTimeout (value) {
    this.LoadRetryAsyncResult$RetryTimeout$value = value.MemberwiseClone();
  }; 

  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.DurableInstancing.LoadRetryAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AbortRetry", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteTryCommand", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.Method({Static:false, Public:false}, "get_InstancePersistenceCommand", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")), 
      LoadRetryAsyncResult_get_InstancePersistenceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_InstancePersistenceContext", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext")), 
      LoadRetryAsyncResult_get_InstancePersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceStore", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      LoadRetryAsyncResult_get_InstanceStore
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RetryTimeout", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan")), 
      LoadRetryAsyncResult_get_RetryTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "OnTryCommandCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Retry", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_InstancePersistenceCommand", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")), 
      LoadRetryAsyncResult_set_InstancePersistenceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstancePersistenceContext", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext")), 
      LoadRetryAsyncResult_set_InstancePersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstanceStore", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      LoadRetryAsyncResult_set_InstanceStore
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_RetryTimeout", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan")), 
      LoadRetryAsyncResult_set_RetryTimeout
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "onTryCommandCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "commandSuccess", $.Boolean);

    $.Field({Static:false, Public:false}, "commandTimeout", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.Field({Static:false, Public:false}, "lastInstanceLockedException", $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceLockedException"));

    $.Field({Static:false, Public:false}, "retryCount", $.Int32);

    $.Field({Static:false, Public:false}, "LoadRetryAsyncResult$InstanceStore$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LoadRetryAsyncResult$RetryTimeout$value", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LoadRetryAsyncResult$InstancePersistenceCommand$value", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LoadRetryAsyncResult$InstancePersistenceContext$value", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceStore", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.Property({Static:false, Public:true }, "RetryTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "InstancePersistenceCommand", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"));

    $.Property({Static:false, Public:false}, "InstancePersistenceContext", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DurableInstancing.CommandResult */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.CommandResult", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Success: 0, 
    InstanceNotFound: 1, 
    InstanceLockNotAcquired: 2, 
    KeyAlreadyExists: 3, 
    KeyNotFound: 4, 
    InstanceAlreadyExists: 5, 
    InstanceLockLost: 6, 
    InstanceCompleted: 7, 
    KeyDisassociated: 8, 
    StaleInstanceVersion: 10, 
    HostLockExpired: 11, 
    HostLockNotFound: 12, 
    CleanupInProgress: 13, 
    InstanceAlreadyLockedToOwner: 14, 
    IdentityNotFound: 15, 
    Unknown: 99, 
  }
);

/* enum System.Activities.DurableInstancing.InstanceLockedExceptionAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.InstanceLockedExceptionAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    NoRetry: 0, 
    BasicRetry: 1, 
    AggressiveRetry: 2, 
  }
);

/* enum System.Activities.DurableInstancing.LoadType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.LoadType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    LoadOrCreateByKey: 0, 
    LoadOrCreateByInstance: 1, 
    LoadByKey: 2, 
    LoadByInstance: 3, 
  }
);

/* class System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult */ 

(function SqlWorkflowInstanceStoreAsyncResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm27.System.Transactions.DependentTransaction)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm35.System.Runtime.DurableInstancing.InstancePersistenceCommand)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm35.System.Runtime.DurableInstancing.InstancePersistenceContext)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStore)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm25.System.Runtime.TimeoutHelper)) ();
  };









  function SqlWorkflowInstanceStoreAsyncResult_get_DependentTransaction () {
    return this.SqlWorkflowInstanceStoreAsyncResult$DependentTransaction$value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_get_InstancePersistenceCommand () {
    return this.SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceCommand$value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_get_InstancePersistenceContext () {
    return this.SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceContext$value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_get_Store () {
    return this.SqlWorkflowInstanceStoreAsyncResult$Store$value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_get_StoreLock () {
    return this.SqlWorkflowInstanceStoreAsyncResult$StoreLock$value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_get_TimeoutHelper () {
    return this.SqlWorkflowInstanceStoreAsyncResult$TimeoutHelper$value;
  }; 









  function SqlWorkflowInstanceStoreAsyncResult_set_DependentTransaction (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$DependentTransaction$value = value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_set_InstancePersistenceCommand (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceCommand$value = value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_set_InstancePersistenceContext (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceContext$value = value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_set_Store (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$Store$value = value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_set_StoreLock (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$StoreLock$value = value;
  }; 

  function SqlWorkflowInstanceStoreAsyncResult_set_TimeoutHelper (value) {
    this.SqlWorkflowInstanceStoreAsyncResult$TimeoutHelper$value = value.MemberwiseClone();
  }; 





  JSIL.MakeType({
      BaseType: $asm25.TypeRef("System.Runtime.AsyncResult"), 
      Name: "System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearMembers", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Finally", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:false}, "get_DependentTransaction", 
      JSIL.MethodSignature.Return($asm27.TypeRef("System.Transactions.DependentTransaction")), 
      SqlWorkflowInstanceStoreAsyncResult_get_DependentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_InstancePersistenceCommand", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")), 
      SqlWorkflowInstanceStoreAsyncResult_get_InstancePersistenceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_InstancePersistenceContext", 
      JSIL.MethodSignature.Return($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext")), 
      SqlWorkflowInstanceStoreAsyncResult_get_InstancePersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_Store", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      SqlWorkflowInstanceStoreAsyncResult_get_Store
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_StoreLock", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock")), 
      SqlWorkflowInstanceStoreAsyncResult_get_StoreLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TimeoutHelper", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.TimeoutHelper")), 
      SqlWorkflowInstanceStoreAsyncResult_get_TimeoutHelper
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnBindReclaimed", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCommandCompletion", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSqlException", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSqlProcessingComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ScheduleCallback", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:false}, "set_DependentTransaction", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.DependentTransaction")), 
      SqlWorkflowInstanceStoreAsyncResult_set_DependentTransaction
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstancePersistenceCommand", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")), 
      SqlWorkflowInstanceStoreAsyncResult_set_InstancePersistenceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstancePersistenceContext", 
      JSIL.MethodSignature.Action($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext")), 
      SqlWorkflowInstanceStoreAsyncResult_set_InstancePersistenceContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Store", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      SqlWorkflowInstanceStoreAsyncResult_set_Store
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StoreLock", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock")), 
      SqlWorkflowInstanceStoreAsyncResult_set_StoreLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TimeoutHelper", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.TimeoutHelper")), 
      SqlWorkflowInstanceStoreAsyncResult_set_TimeoutHelper
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "SqlCommandAsyncResultCallback", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "StartOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "StartOperationCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "TraceException", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.Field({Static:true , Public:false}, "finallyCallback", $asm07.TypeRef("System.Action`2", [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), function ($pi) {
        return $asm07.System.Action$b2.Of($asm25.System.Runtime.AsyncResult, $asm07.System.Exception).New(null, null, new JSIL.MethodPointerInfo($thisType, "Finally", new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.AsyncResult"), $asm07.TypeRef("System.Exception")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onBindReclaimed", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnBindReclaimed", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onSqlCommandAsyncResultCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "SqlCommandAsyncResultCallback", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "sqlCommand", $asm11.TypeRef("System.Data.SqlClient.SqlCommand"));

    $.Field({Static:false, Public:false}, "maximumRetries", $.Int32);

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$DependentTransaction$value", $asm27.TypeRef("System.Transactions.DependentTransaction"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceCommand$value", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$InstancePersistenceContext$value", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$Store$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$StoreLock$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreAsyncResult$TimeoutHelper$value", $asm25.TypeRef("System.Runtime.TimeoutHelper"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.Property({Static:false, Public:false}, "DependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Property({Static:false, Public:false}, "InstancePersistenceCommand", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"));

    $.Property({Static:false, Public:false}, "InstancePersistenceContext", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"));

    $.Property({Static:false, Public:false}, "Store", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.Property({Static:false, Public:false}, "StoreLock", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"));

    $.Property({Static:false, Public:false}, "TimeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.WorkflowOwnerAsyncResult */ 

(function WorkflowOwnerAsyncResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.WorkflowOwnerAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnCommandCompletion", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.CreateWorkflowOwnerAsyncResult */ 

(function CreateWorkflowOwnerAsyncResult$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.WorkflowOwnerAsyncResult"), 
      Name: "System.Activities.DurableInstancing.CreateWorkflowOwnerAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExtractWorkflowHostType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCommandMetadata", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Field({Static:false, Public:false}, "fireActivatableInstancesEvent", $.Boolean);

    $.Field({Static:false, Public:false}, "fireRunnableInstancesEvent", $.Boolean);

    $.Field({Static:false, Public:false}, "lockOwnerId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DeleteWorkflowOwnerAsyncResult */ 

(function DeleteWorkflowOwnerAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.WorkflowOwnerAsyncResult"), 
      Name: "System.Activities.DurableInstancing.DeleteWorkflowOwnerAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false}, "commandText", $.String);

    $.Field({Static:false, Public:false}, "surrogateLockOwnerId", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.ExtendLockAsyncResult */ 

(function ExtendLockAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.ExtendLockAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DurableInstancing.InstanceCompletionAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.InstanceCompletionAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    DeleteNothing: 0, 
    DeleteAll: 1, 
  }
);

/* enum System.Activities.DurableInstancing.InstanceEncodingOption */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.InstanceEncodingOption", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    GZip: 1, 
  }
);

/* class System.Activities.DurableInstancing.LoadWorkflowAsyncResult */ 

(function LoadWorkflowAsyncResult$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.LoadWorkflowAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateLoadSqlCommand", 
      new JSIL.MethodSignature(null, [
          $asm11.TypeRef("System.Data.SqlClient.SqlCommand"), $asm0C.TypeRef("System.Activities.DurableInstancing.LoadType"), 
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Guid"), 
          $asm07.TypeRef("System.Collections.Generic.List`1", [$asm0C.TypeRef("System.Activities.DurableInstancing.CorrelationKey")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadInstanceMetadataChanges", 
      new JSIL.MethodSignature(null, [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadKeyData", 
      new JSIL.MethodSignature(null, [
          $asm11.TypeRef("System.Data.SqlClient.SqlDataReader"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]), 
          $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Field({Static:false, Public:false}, "associatedInstanceKeys", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Field({Static:false, Public:false}, "completedInstanceKeys", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]));

    $.Field({Static:false, Public:false}, "instanceData", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "instanceMetadata", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]));

    $.Field({Static:false, Public:false}, "objectSerializer", $asm0C.TypeRef("System.Activities.DurableInstancing.IObjectSerializer"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LoadWorkflowByKeyAsyncResult */ 

(function LoadWorkflowByKeyAsyncResult$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.LoadWorkflowAsyncResult"), 
      Name: "System.Activities.DurableInstancing.LoadWorkflowByKeyAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SaveWorkflowAsyncResult */ 

(function SaveWorkflowAsyncResult$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.SaveWorkflowAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddSerializedProperty", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.ArraySegment`1", [$.Byte]), $asm11.TypeRef("System.Data.SqlClient.SqlParameterCollection"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExtractServiceDeploymentInformation", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $asm11.TypeRef("System.Data.SqlClient.SqlParameterCollection")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateByteArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$asm07.TypeRef("System.ArraySegment`1", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetBlockingBookmarks", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExecutionStatus", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPendingTimerExpiration", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$.Int64]), [$asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetServiceDeploymentId", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSuspensionReason", 
      new JSIL.MethodSignature($asm0C.TypeRef("System.Activities.DurableInstancing.SuspensionStateChange"), [
          $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetWorkflowHostType", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.Guid")]), [$asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsReadyToRun", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PutServiceDeploymentId", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializeAssociatedData", 
      new JSIL.MethodSignature(null, [
          $asm11.TypeRef("System.Data.SqlClient.SqlParameterCollection"), $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"), 
          $asm07.TypeRef("System.Text.StringBuilder")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SerializePromotedProperties", 
      new JSIL.MethodSignature(null, [
          $asm11.TypeRef("System.Data.SqlClient.SqlParameterCollection"), $asm07.TypeRef("System.Text.StringBuilder"), 
          $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateKeyData", 
      new JSIL.MethodSignature(null, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand")])
    );

    $.Constant({Static:true , Public:false}, "createServiceDeploymentStoredProcedureParameters", $.String, "@serviceDeploymentHash, @siteName, @relativeServicePath, @relativeApplicationPath,\r\n                @serviceName, @serviceNamespace, @serviceDeploymentId output");

    $.Constant({Static:true , Public:false}, "storedProcedureParameters40", $.String, "@instanceId, @surrogateLockOwnerId, @handleInstanceVersion, @handleIsBoundToLock,\r\n@primitiveDataProperties, @complexDataProperties, @writeOnlyPrimitiveDataProperties, @writeOnlyComplexDataProperties, @metadataProperties,\r\n@metadataIsConsistent, @encodingOption, @timerDurationMilliseconds, @suspensionStateChange, @suspensionReason, @suspensionExceptionName, @keysToAssociate,\r\n@keysToComplete, @keysToFree, @concatenatedKeyProperties, @unlockInstance, @isReadyToRun, @isCompleted, @singleKeyId,\r\n@lastMachineRunOn, @executionStatus, @blockingBookmarks, @workflowHostType, @serviceDeploymentId, @operationTimeout");

    $.Constant({Static:true , Public:false}, "storedProcedureParameters", $.String, "@instanceId, @surrogateLockOwnerId, @handleInstanceVersion, @handleIsBoundToLock,\r\n@primitiveDataProperties, @complexDataProperties, @writeOnlyPrimitiveDataProperties, @writeOnlyComplexDataProperties, @metadataProperties,\r\n@metadataIsConsistent, @encodingOption, @timerDurationMilliseconds, @suspensionStateChange, @suspensionReason, @suspensionExceptionName, @keysToAssociate,\r\n@keysToComplete, @keysToFree, @concatenatedKeyProperties, @unlockInstance, @isReadyToRun, @isCompleted, @singleKeyId,\r\n@lastMachineRunOn, @executionStatus, @blockingBookmarks, @workflowHostType, @serviceDeploymentId, @operationTimeout, @identityMetadata");

    $.Field({Static:true , Public:false}, "serviceDeploymentIdsCache", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("System.Guid"), $.Int64]));

    $.Field({Static:true , Public:false}, "serviceDeploymentIdsCacheLock", $asm10.TypeRef("System.Threading.ReaderWriterLockSlim"));

    $.Field({Static:false, Public:false}, "commandText", $.String);

    $.Field({Static:false, Public:false}, "serviceDeploymentHash", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "serviceDeploymentId", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlWorkflowInstanceStore */ 

(function SqlWorkflowInstanceStore$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.LoadRetryHandler)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.ILoadRetryStrategy)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Guid)) ();
  };


























  function SqlWorkflowInstanceStore_get_LoadRetryHandler () {
    return this.SqlWorkflowInstanceStore$LoadRetryHandler$value;
  }; 

  function SqlWorkflowInstanceStore_get_MaxConnectionRetries () {
    return this.SqlWorkflowInstanceStore$MaxConnectionRetries$value;
  }; 


  function SqlWorkflowInstanceStore_get_RetryStrategy () {
    return this.SqlWorkflowInstanceStore$RetryStrategy$value;
  }; 



  function SqlWorkflowInstanceStore_get_WorkflowHostType () {
    return this.SqlWorkflowInstanceStore$WorkflowHostType$value;
  }; 
















  function SqlWorkflowInstanceStore_set_LoadRetryHandler (value) {
    this.SqlWorkflowInstanceStore$LoadRetryHandler$value = value;
  }; 

  function SqlWorkflowInstanceStore_set_MaxConnectionRetries (value) {
    this.SqlWorkflowInstanceStore$MaxConnectionRetries$value = (value | 0);
  }; 

  function SqlWorkflowInstanceStore_set_RetryStrategy (value) {
    this.SqlWorkflowInstanceStore$RetryStrategy$value = value;
  }; 


  function SqlWorkflowInstanceStore_set_WorkflowHostType (value) {
    this.SqlWorkflowInstanceStore$WorkflowHostType$value = value.MemberwiseClone();
  }; 





  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceStore"), 
      Name: "System.Activities.DurableInstancing.SqlWorkflowInstanceStore", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "BeginTryCommand", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTryCommandInternal", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTryCommandInternal", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTryCommandInternalWithVersionCheck", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object, $asm07.TypeRef("System.Version")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginTryCommandSkipRetry", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCachedConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "EndTryCommand", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnqueueRetry", 
      new JSIL.MethodSignature($.Boolean, [$asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEvent", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEventHelper", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner")]), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "FindEventWithReset", 
      new JSIL.MethodSignature($asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent"), $jsilcore.TypeRef("JSIL.Reference", [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceOwner")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateUnlockCommand", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockTracking"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_BufferedHostLockRenewalPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CachedConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DatabaseVersion", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnqueueRunCommands", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceCompletionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceEncodingOption", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstanceOwnersExist", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_LoadRetryHandler", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryHandler")), 
      SqlWorkflowInstanceStore_get_LoadRetryHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MaxConnectionRetries", 
      JSIL.MethodSignature.Return($.Int32), 
      SqlWorkflowInstanceStore_get_MaxConnectionRetries
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_Promotions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Tuple`2", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")])])]))
    );

    $.Method({Static:false, Public:false}, "get_RetryStrategy", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy")), 
      SqlWorkflowInstanceStore_get_RetryStrategy
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.Method({Static:false, Public:false}, "get_WorkflowHostType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      SqlWorkflowInstanceStore_get_WorkflowHostType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "GetNextRetryDelay", 
      new JSIL.MethodSignature($asm07.TypeRef("System.TimeSpan"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsLockRetryEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "IsRetryCommand", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnFreeInstanceHandle", 
      new JSIL.MethodSignature(null, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnNewInstanceHandle", 
      new JSIL.MethodSignature($.Object, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Promote", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), 
          $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm30.TypeRef("System.Xml.Linq.XName")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ScheduledUnlockInstance", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectionString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_DatabaseVersion", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnqueueRunCommands", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HostLockRenewalPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceCompletionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceEncodingOption", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_InstanceLockedExceptionAction", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"))
    );

    $.Method({Static:false, Public:false}, "set_LoadRetryHandler", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryHandler")), 
      SqlWorkflowInstanceStore_set_LoadRetryHandler
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MaxConnectionRetries", 
      JSIL.MethodSignature.Action($.Int32), 
      SqlWorkflowInstanceStore_set_MaxConnectionRetries
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_RetryStrategy", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy")), 
      SqlWorkflowInstanceStore_set_RetryStrategy
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_RunnableInstancesDetectionPeriod", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:false}, "set_WorkflowHostType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      SqlWorkflowInstanceStore_set_WorkflowHostType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetLoadRetryStrategy", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfReadOnly", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UnlockInstanceCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateEventStatus", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceEvent")])
    );

    $.Constant({Static:true , Public:false}, "DefaultMaximumRetries", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "CommonConnectionPoolName", $.String, "System.Activities.DurableInstancing.SqlWorkflowInstanceStore");

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultConnectionOpenTime", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultInstancePersistenceEventDetectionPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "defaultLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "minimumTimeSpanAllowed", $asm07.TypeRef("System.TimeSpan"));

    $.Constant({Static:true , Public:false}, "DefaultPromotionName", $.String, "System.Activities.InstanceMetadata");

    $.Field({Static:false, Public:false}, "bufferedHostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "cachedConnectionString", $.String);

    $.Field({Static:false, Public:false}, "connectionString", $.String);

    $.Field({Static:false, Public:false}, "definedPromotions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Tuple`2", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")])])]));

    $.Field({Static:false, Public:false}, "enqueueRunCommands", $.Boolean);

    $.Field({Static:false, Public:false}, "hostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "instanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"));

    $.Field({Static:false, Public:false}, "instanceEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"));

    $.Field({Static:false, Public:false}, "instanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"));

    $.Field({Static:false, Public:false}, "instancePersistenceEventDetectionPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "isReadOnly", $.Boolean);

    $.Field({Static:false, Public:false}, "scheduledUnlockInstance", $asm07.TypeRef("System.Action`1", [$.Object]));

    $.Field({Static:false, Public:false}, "storeLock", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"));

    $.Field({Static:false, Public:false}, "unlockInstanceCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "databaseVersion", $asm07.TypeRef("System.Version"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStore$MaxConnectionRetries$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStore$LoadRetryHandler$value", $asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryHandler"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStore$RetryStrategy$value", $asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStore$WorkflowHostType$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));


    function SqlWorkflowInstanceStore__cctor () {
      $thisType.defaultConnectionOpenTime = new $asm07.System.TimeSpan();
      $thisType.defaultInstancePersistenceEventDetectionPeriod = new $asm07.System.TimeSpan();
      $thisType.defaultLockRenewalPeriod = new $asm07.System.TimeSpan();
      $thisType.minimumTimeSpanAllowed = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SqlWorkflowInstanceStore__cctor
    );

    $.Property({Static:false, Public:true }, "ConnectionString", $.String);

    $.Property({Static:false, Public:true }, "EnqueueRunCommands", $.Boolean);

    $.Property({Static:false, Public:true }, "HostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "InstanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"));

    $.Property({Static:false, Public:true }, "InstanceEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"));

    $.Property({Static:false, Public:true }, "InstanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"));

    $.Property({Static:false, Public:true }, "RunnableInstancesDetectionPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "MaxConnectionRetries", $.Int32);

    $.Property({Static:false, Public:false}, "BufferedHostLockRenewalPeriod", $asm07.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:false}, "CachedConnectionString", $.String);

    $.Property({Static:false, Public:false}, "LoadRetryHandler", $asm0C.TypeRef("System.Activities.DurableInstancing.LoadRetryHandler"));

    $.Property({Static:false, Public:false}, "Promotions", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Tuple`2", [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")]), $asm07.TypeRef("System.Collections.Generic.List`1", [$asm30.TypeRef("System.Xml.Linq.XName")])])]));

    $.Property({Static:false, Public:false}, "RetryStrategy", $asm0C.TypeRef("System.Activities.DurableInstancing.ILoadRetryStrategy"));

    $.Property({Static:false, Public:false}, "WorkflowHostType", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false}, "InstanceOwnersExist", $.Boolean);

    $.Property({Static:false, Public:false}, "DatabaseVersion", $asm07.TypeRef("System.Version"));

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlWorkflowInstanceStore+UnlockInstanceState */ 

(function UnlockInstanceState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm25.System.Runtime.BackoffTimeoutHelper)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.UnlockInstanceCommand)) ();
  };



  function UnlockInstanceState_get_BackoffTimeoutHelper () {
    return this.UnlockInstanceState$BackoffTimeoutHelper$value;
  }; 

  function UnlockInstanceState_get_UnlockInstanceCommand () {
    return this.UnlockInstanceState$UnlockInstanceCommand$value;
  }; 

  function UnlockInstanceState_set_BackoffTimeoutHelper (value) {
    this.UnlockInstanceState$BackoffTimeoutHelper$value = value;
  }; 

  function UnlockInstanceState_set_UnlockInstanceCommand (value) {
    this.UnlockInstanceState$UnlockInstanceCommand$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SqlWorkflowInstanceStore+UnlockInstanceState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_BackoffTimeoutHelper", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.BackoffTimeoutHelper")), 
      UnlockInstanceState_get_BackoffTimeoutHelper
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UnlockInstanceCommand", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.UnlockInstanceCommand")), 
      UnlockInstanceState_get_UnlockInstanceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BackoffTimeoutHelper", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.BackoffTimeoutHelper")), 
      UnlockInstanceState_set_BackoffTimeoutHelper
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UnlockInstanceCommand", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.UnlockInstanceCommand")), 
      UnlockInstanceState_set_UnlockInstanceCommand
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnlockInstanceState$BackoffTimeoutHelper$value", $asm25.TypeRef("System.Runtime.BackoffTimeoutHelper"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnlockInstanceState$UnlockInstanceCommand$value", $asm0C.TypeRef("System.Activities.DurableInstancing.UnlockInstanceCommand"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "BackoffTimeoutHelper", $asm25.TypeRef("System.Runtime.BackoffTimeoutHelper"));

    $.Property({Static:false, Public:true }, "UnlockInstanceCommand", $asm0C.TypeRef("System.Activities.DurableInstancing.UnlockInstanceCommand"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlWorkflowInstanceStoreConstants */ 

(function SqlWorkflowInstanceStoreConstants$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreConstants", false, [], function ($ib) {
    $ = $ib;

    $.Field({Static:true , Public:true , ReadOnly:true }, "MaxHostLockRenewalPulseInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "DefaultTaskTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "LockOwnerTimeoutBuffer", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "WorkflowNamespace", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "DurableInstancingNamespace", $asm30.TypeRef("System.Xml.Linq.XNamespace"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "LastUpdatePropertyName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "PendingTimerExpirationPropertyName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "BinaryBlockingBookmarksPropertyName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "StatusPropertyName", $asm30.TypeRef("System.Xml.Linq.XName"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "MachineName", $.String);

    $.Constant({Static:true , Public:true }, "DefaultSchema", $.String, "[System.Activities.DurableInstancing]");

    $.Constant({Static:true , Public:true }, "DefaultInstanceCompletionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceCompletionAction"), 1);

    $.Constant({Static:true , Public:true }, "DefaultInstanceEncodingOption", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption"), 1);

    $.Constant({Static:true , Public:true }, "DefaultInstanceLockedExceptionAction", $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceLockedExceptionAction"), 0);

    $.Constant({Static:true , Public:true }, "ExecutingStatusPropertyValue", $.String, "Executing");

    $.Constant({Static:true , Public:true }, "DefaultStringBuilderCapacity", $.Int32, 512);

    $.Constant({Static:true , Public:true }, "MaximumStringLengthSupported", $.Int32, 450);

    $.Constant({Static:true , Public:true }, "MaximumPropertiesPerPromotion", $.Int32, 32);


    function SqlWorkflowInstanceStoreConstants__cctor () {
      $thisType.MaxHostLockRenewalPulseInterval = new $asm07.System.TimeSpan();
      $thisType.DefaultTaskTimeout = new $asm07.System.TimeSpan();
      $thisType.LockOwnerTimeoutBuffer = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SqlWorkflowInstanceStoreConstants__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.StoreUtilities */ 

(function StoreUtilities$Members () {
  var $, $thisType;








  JSIL.MakeStaticClass("System.Activities.DurableInstancing.StoreUtilities", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "CheckRemainingResultSetForErrors", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CheckResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateConnection", 
      new JSIL.MethodSignature($asm11.TypeRef("System.Data.SqlClient.SqlConnection"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetError", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [
          $asm30.TypeRef("System.Xml.Linq.XName"), $asm0C.TypeRef("System.Activities.DurableInstancing.CommandResult"), 
          $asm11.TypeRef("System.Data.SqlClient.SqlDataReader")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetNextResultSet", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm30.TypeRef("System.Xml.Linq.XName"), $asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadLockOwnerMetadata", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "TraceSqlCommand", 
      new JSIL.MethodSignature(null, [$asm11.TypeRef("System.Data.SqlClient.SqlCommand"), $.Boolean])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "Version40", $asm07.TypeRef("System.Version"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "Version45", $asm07.TypeRef("System.Version"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.ExtendLockCommand */ 

(function ExtendLockCommand$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.ExtendLockCommand", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.InstanceLockTracking */ 

(function InstanceLockTracking$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Int64)) ();
  };



  function InstanceLockTracking_get_BoundToLock () {
    return this.InstanceLockTracking$BoundToLock$value;
  }; 

  function InstanceLockTracking_get_InstanceId () {
    return this.InstanceLockTracking$InstanceId$value;
  }; 

  function InstanceLockTracking_get_InstanceVersion () {
    return this.InstanceLockTracking$InstanceVersion$value;
  }; 

  function InstanceLockTracking_get_IsHandleFreed () {
    return this.InstanceLockTracking$IsHandleFreed$value;
  }; 

  function InstanceLockTracking_get_IsSafeToUnlock () {
    return this.InstanceLockTracking$IsSafeToUnlock$value;
  }; 


  function InstanceLockTracking_set_BoundToLock (value) {
    this.InstanceLockTracking$BoundToLock$value = value;
  }; 

  function InstanceLockTracking_set_InstanceId (value) {
    this.InstanceLockTracking$InstanceId$value = value.MemberwiseClone();
  }; 

  function InstanceLockTracking_set_InstanceVersion (value) {
    this.InstanceLockTracking$InstanceVersion$value = value;
  }; 

  function InstanceLockTracking_set_IsHandleFreed (value) {
    this.InstanceLockTracking$IsHandleFreed$value = value;
  }; 

  function InstanceLockTracking_set_IsSafeToUnlock (value) {
    this.InstanceLockTracking$IsSafeToUnlock$value = value;
  }; 





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.InstanceLockTracking", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
    );

    $.Method({Static:false, Public:true }, "get_BoundToLock", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceLockTracking_get_BoundToLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      InstanceLockTracking_get_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceVersion", 
      JSIL.MethodSignature.Return($.Int64), 
      InstanceLockTracking_get_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsHandleFreed", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceLockTracking_get_IsHandleFreed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsSafeToUnlock", 
      JSIL.MethodSignature.Return($.Boolean), 
      InstanceLockTracking_get_IsSafeToUnlock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "HandleFreed", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_BoundToLock", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceLockTracking_set_BoundToLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      InstanceLockTracking_set_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InstanceVersion", 
      JSIL.MethodSignature.Action($.Int64), 
      InstanceLockTracking_set_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsHandleFreed", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceLockTracking_set_IsHandleFreed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsSafeToUnlock", 
      JSIL.MethodSignature.Action($.Boolean), 
      InstanceLockTracking_set_IsSafeToUnlock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "TrackStoreLock", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm27.TypeRef("System.Transactions.DependentTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "TrackStoreUnlock", 
      JSIL.MethodSignature.Action($asm27.TypeRef("System.Transactions.DependentTransaction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TransactedUnlockCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm27.TypeRef("System.Transactions.TransactionEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TransactionCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm27.TypeRef("System.Transactions.TransactionEventArgs")])
    );

    $.Field({Static:false, Public:false}, "synchLock", $.Object);

    $.Field({Static:false, Public:false}, "store", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.Field({Static:false, Public:false}, "InstanceLockTracking$InstanceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceLockTracking$BoundToLock$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceLockTracking$InstanceVersion$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceLockTracking$IsHandleFreed$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceLockTracking$IsSafeToUnlock$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "BoundToLock", $.Boolean);

    $.Property({Static:false, Public:true }, "InstanceVersion", $.Int64);

    $.Property({Static:false, Public:true }, "IsHandleFreed", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSafeToUnlock", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlCommandAsyncResult */ 

(function SqlCommandAsyncResult$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.TransactedAsyncResult"), 
      Name: "System.Activities.DurableInstancing.SqlCommandAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm11.TypeRef("System.Data.SqlClient.SqlCommand"), $.String, 
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $asm27.TypeRef("System.Transactions.DependentTransaction"), 
          $asm07.TypeRef("System.TimeSpan"), $.Int32, 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckRetryCount", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckRetryCountAndTimer", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "CloneSqlCommand", 
      new JSIL.MethodSignature($asm11.TypeRef("System.Data.SqlClient.SqlCommand"), [$asm11.TypeRef("System.Data.SqlClient.SqlCommand")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompleteExecuteReader", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "End", 
      new JSIL.MethodSignature($asm11.TypeRef("System.Data.SqlClient.SqlDataReader"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnqueueRetry", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetRetryDelay", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "HasOperationTimedOut", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "OnExecuteReader", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnRetryCommand", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ShouldRetryForSqlError", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions")])
    );

    $.ExternalMethod({Static:false, Public:true }, "StartCommand", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCommandCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "StartCommandInternal", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "MaximumOpenTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "retryErrorCodes", $jsilcore.TypeRef("System.Array", [$asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorCode")]));

    $.Field({Static:true , Public:false}, "onExecuteReaderCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnExecuteReader", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:true , Public:false}, "onRetryCommandCallback", $asm25.TypeRef("System.Runtime.AsyncResult+AsyncCompletion"), function ($pi) {
        return $asm25.System.Runtime.AsyncResult_AsyncCompletion.New(null, null, new JSIL.MethodPointerInfo($thisType, "OnRetryCommand", new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.IAsyncResult")]), true, false));
      });

    $.Field({Static:false, Public:false}, "connectionString", $.String);

    $.Field({Static:false, Public:false}, "dependentTransaction", $asm27.TypeRef("System.Transactions.DependentTransaction"));

    $.Field({Static:false, Public:false}, "maximumRetries", $.Int32);

    $.Field({Static:false, Public:false}, "retryCount", $.Int32);

    $.Field({Static:false, Public:false}, "eventTraceActivity", $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"));

    $.Field({Static:false, Public:false}, "sqlCommand", $asm11.TypeRef("System.Data.SqlClient.SqlCommand"));

    $.Field({Static:false, Public:false}, "sqlDataReader", $asm11.TypeRef("System.Data.SqlClient.SqlDataReader"));

    $.Field({Static:false, Public:false}, "timeoutHelper", $asm25.TypeRef("System.Runtime.TimeoutHelper"));


    function SqlCommandAsyncResult__cctor () {
      $thisType.MaximumOpenTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SqlCommandAsyncResult__cctor
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: true, 
  }, 
  {
    RetryOnBegin: 1, 
    RetryOnEnd: 2, 
    RetryBeginOrEnd: 3, 
    RetryWhenTransaction: 4, 
  }
);

/* class System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorCode */ 

(function RetryErrorCode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlCommandAsyncResult_RetryErrorOptions)) ();
  };



  function RetryErrorCode_get_ErrorCode () {
    return this.RetryErrorCode$ErrorCode$value;
  }; 

  function RetryErrorCode_get_RetryErrorOptions () {
    return this.RetryErrorCode$RetryErrorOptions$value;
  }; 

  function RetryErrorCode_set_ErrorCode (value) {
    this.RetryErrorCode$ErrorCode$value = (value | 0);
  }; 

  function RetryErrorCode_set_RetryErrorOptions (value) {
    this.RetryErrorCode$RetryErrorOptions$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorCode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions")])
    );

    $.Method({Static:false, Public:true }, "get_ErrorCode", 
      JSIL.MethodSignature.Return($.Int32), 
      RetryErrorCode_get_ErrorCode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RetryErrorOptions", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions")), 
      RetryErrorCode_get_RetryErrorOptions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ErrorCode", 
      JSIL.MethodSignature.Action($.Int32), 
      RetryErrorCode_set_ErrorCode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_RetryErrorOptions", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions")), 
      RetryErrorCode_set_RetryErrorOptions
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RetryErrorCode$ErrorCode$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RetryErrorCode$RetryErrorOptions$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ErrorCode", $.Int32);

    $.Property({Static:false, Public:true }, "RetryErrorOptions", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlCommandAsyncResult+<>c__DisplayClass18_0 */ 

(function $l$gc__DisplayClass18_0$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SqlCommandAsyncResult+<>c__DisplayClass18_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lShouldRetryForSqlError$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorCode")])
    );

    $.Field({Static:false, Public:true }, "error", $.Int32);

    $.Field({Static:false, Public:true }, "retryErrorOptions", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlCommandAsyncResult+RetryErrorOptions"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Activities.DurableInstancing.UnlockInstanceAsyncResult */ 

(function UnlockInstanceAsyncResult$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.UnlockInstanceAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false}, "commandText", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.UnlockInstanceCommand */ 

(function UnlockInstanceCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int64)) ();
  };



  function UnlockInstanceCommand_get_InstanceId () {
    return this.UnlockInstanceCommand$InstanceId$value;
  }; 

  function UnlockInstanceCommand_get_InstanceVersion () {
    return this.UnlockInstanceCommand$InstanceVersion$value;
  }; 

  function UnlockInstanceCommand_get_SurrogateOwnerId () {
    return this.UnlockInstanceCommand$SurrogateOwnerId$value;
  }; 

  function UnlockInstanceCommand_set_InstanceId (value) {
    this.UnlockInstanceCommand$InstanceId$value = value.MemberwiseClone();
  }; 

  function UnlockInstanceCommand_set_InstanceVersion (value) {
    this.UnlockInstanceCommand$InstanceVersion$value = value;
  }; 

  function UnlockInstanceCommand_set_SurrogateOwnerId (value) {
    this.UnlockInstanceCommand$SurrogateOwnerId$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.UnlockInstanceCommand", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_InstanceId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      UnlockInstanceCommand_get_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InstanceVersion", 
      JSIL.MethodSignature.Return($.Int64), 
      UnlockInstanceCommand_get_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SurrogateOwnerId", 
      JSIL.MethodSignature.Return($.Int64), 
      UnlockInstanceCommand_get_SurrogateOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InstanceId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      UnlockInstanceCommand_set_InstanceId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InstanceVersion", 
      JSIL.MethodSignature.Action($.Int64), 
      UnlockInstanceCommand_set_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SurrogateOwnerId", 
      JSIL.MethodSignature.Action($.Int64), 
      UnlockInstanceCommand_set_SurrogateOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnlockInstanceCommand$InstanceId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnlockInstanceCommand$InstanceVersion$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "UnlockInstanceCommand$SurrogateOwnerId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "InstanceVersion", $.Int64);

    $.Property({Static:false, Public:true }, "SurrogateOwnerId", $.Int64);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.InstanceAlreadyLockedToOwnerException */ 

(function InstanceAlreadyLockedToOwnerException$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Int64)) ();
  };



  function InstanceAlreadyLockedToOwnerException_get_InstanceVersion () {
    return this.InstanceAlreadyLockedToOwnerException$InstanceVersion$value;
  }; 

  function InstanceAlreadyLockedToOwnerException_set_InstanceVersion (value) {
    this.InstanceAlreadyLockedToOwnerException$InstanceVersion$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommandException"), 
      Name: "System.Activities.DurableInstancing.InstanceAlreadyLockedToOwnerException", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Guid"), 
          $.Int64
        ])
    );

    $.Method({Static:false, Public:true }, "get_InstanceVersion", 
      JSIL.MethodSignature.Return($.Int64), 
      InstanceAlreadyLockedToOwnerException_get_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_InstanceVersion", 
      JSIL.MethodSignature.Action($.Int64), 
      InstanceAlreadyLockedToOwnerException_set_InstanceVersion
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "InstanceAlreadyLockedToOwnerException$InstanceVersion$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceVersion", $.Int64);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DurableInstancing.SuspensionStateChange */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.SuspensionStateChange", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    NoChange: 0, 
    SuspendInstance: 1, 
    UnsuspendInstance: 2, 
  }
);

/* class System.Activities.DurableInstancing.DefaultObjectSerializer */ 

(function DefaultObjectSerializer$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.DefaultObjectSerializer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DeserializePropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeserializePropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DeserializeValue", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeserializeValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SerializePropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SerializePropertyBag", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SerializeValue", 
      new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SerializeValue", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $.Object])
    );

    $.Field({Static:false, Public:false}, "serializer", $asm21.TypeRef("System.Runtime.Serialization.NetDataContractSerializer"));

    $.ImplementInterfaces(
      /* 0 */ $asm0C.TypeRef("System.Activities.DurableInstancing.IObjectSerializer")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.GZipObjectSerializer */ 

(function GZipObjectSerializer$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.DefaultObjectSerializer"), 
      Name: "System.Activities.DurableInstancing.GZipObjectSerializer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeserializePropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DeserializeValue", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SerializePropertyBag", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SerializeValue", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $.Object])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Activities.DurableInstancing.IObjectSerializer */ 

JSIL.MakeInterface(
  "System.Activities.DurableInstancing.IObjectSerializer", false, [], function ($) {
    $.Method({}, "DeserializeValue", new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$.Byte])]));
    $.Method({}, "DeserializePropertyBag", new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object]), [$jsilcore.TypeRef("System.Array", [$.Byte])]));
    $.Method({}, "SerializeValue", new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [$.Object]));
    $.Method({}, "SerializePropertyBag", new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $.Object])]));
  }, []);

/* class System.Activities.DurableInstancing.ObjectSerializerFactory */ 

(function ObjectSerializerFactory$Members () {
  var $, $thisType;



  JSIL.MakeStaticClass("System.Activities.DurableInstancing.ObjectSerializerFactory", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "GetDefaultObjectSerializer", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.IObjectSerializer"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObjectSerializer", 
      new JSIL.MethodSignature($asm0C.TypeRef("System.Activities.DurableInstancing.IObjectSerializer"), [$asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Activities.DurableInstancing.PrimitiveType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Activities.DurableInstancing.PrimitiveType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Bool: 0, 
    Byte: 1, 
    Char: 2, 
    DateTime: 3, 
    DateTimeOffset: 4, 
    Decimal: 5, 
    Double: 6, 
    Float: 7, 
    Guid: 8, 
    Int: 9, 
    Null: 10, 
    Long: 11, 
    SByte: 12, 
    Short: 13, 
    String: 14, 
    TimeSpan: 15, 
    Type: 16, 
    UInt: 17, 
    ULong: 18, 
    Uri: 19, 
    UShort: 20, 
    XmlQualifiedName: 21, 
    Unavailable: 99, 
  }
);

/* class System.Activities.DurableInstancing.XmlPropertyBag */ 

(function XmlPropertyBag$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm07.TypeRef("System.Object")]), 
      Name: "System.Activities.DurableInstancing.XmlPropertyBag", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertNativeValueToString", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "ConvertStringToNativeType", 
      new JSIL.MethodSignature($.Object, [$.String, $asm0C.TypeRef("System.Activities.DurableInstancing.PrimitiveType")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPrimitiveType", 
      new JSIL.MethodSignature($asm0C.TypeRef("System.Activities.DurableInstancing.PrimitiveType"), [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchema", 
      JSIL.MethodSignature.Return($asm2F.TypeRef("System.Xml.Schema.XmlSchema"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteXml", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.ImplementInterfaces(
      /* 10 */ $asm2F.TypeRef("System.Xml.Serialization.IXmlSerializable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SerializationUtilities */ 

(function SerializationUtilities$Members () {
  var $, $thisType;














  JSIL.MakeStaticClass("System.Activities.DurableInstancing.SerializationUtilities", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "CanDecimalBeStoredAsSqlVariant", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Decimal")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateCorrelationKeyXmlBlob", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm0C.TypeRef("System.Activities.DurableInstancing.CorrelationKey")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateKeyBinaryBlob", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$asm07.TypeRef("System.Collections.Generic.List`1", [$asm0C.TypeRef("System.Activities.DurableInstancing.CorrelationKey")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "DeserializeKeyMetadata", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$jsilcore.TypeRef("System.Array", [$.Byte]), $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );

    $.ExternalMethod({Static:true , Public:true }, "DeserializeMetadataPropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [$jsilcore.TypeRef("System.Array", [$.Byte]), $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );

    $.ExternalMethod({Static:true , Public:true }, "DeserializePropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIdentityAnyRevisionFilterHash", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIdentityHash", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$asm0B.TypeRef("System.Activities.WorkflowIdentity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetIdentityMetadataXml", 
      new JSIL.MethodSignature($.String, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsPropertyTypeSqlVariantCompatible", 
      new JSIL.MethodSignature($.Boolean, [$asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SerializeKeyMetadata", 
      new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );

    $.ExternalMethod({Static:true , Public:true }, "SerializeMetadataPropertyBag", 
      new JSIL.MethodSignature($asm07.TypeRef("System.ArraySegment`1", [$.Byte]), [
          $asm0B.TypeRef("System.Activities.DurableInstancing.SaveWorkflowCommand"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "SerializePropertyBag", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.ArraySegment`1", [$.Byte])]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SerializationUtilities+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SerializationUtilities+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lCreateKeyBinaryBlob$gb__0_0", 
      new JSIL.MethodSignature($.Int32, [$asm0C.TypeRef("System.Activities.DurableInstancing.CorrelationKey")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__0_0", $asm07.TypeRef("System.Func`2", [$asm0C.TypeRef("System.Activities.DurableInstancing.CorrelationKey"), $.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct System.Activities.DurableInstancing.DeletedMetadataValue */ 

(function DeletedMetadataValue$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Activities.DurableInstancing.DeletedMetadataValue", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
      SizeBytes: 1, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.CorrelationKey */ 

(function CorrelationKey$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.ArraySegment$b1.Of($asm07.System.Byte))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Guid)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Int64)) ();
  };






  function CorrelationKey_get_BinaryData () {
    return this.CorrelationKey$BinaryData$value;
  }; 

  function CorrelationKey_get_KeyId () {
    return this.CorrelationKey$KeyId$value;
  }; 

  function CorrelationKey_get_StartPosition () {
    return this.CorrelationKey$StartPosition$value;
  }; 


  function CorrelationKey_set_BinaryData (value) {
    this.CorrelationKey$BinaryData$value = value.MemberwiseClone();
  }; 

  function CorrelationKey_set_KeyId (value) {
    this.CorrelationKey$KeyId$value = value.MemberwiseClone();
  }; 

  function CorrelationKey_set_StartPosition (value) {
    this.CorrelationKey$StartPosition$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.CorrelationKey", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")]), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BuildKeyList", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$asm07.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Guid")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "BuildKeyList", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm07.TypeRef("System.Guid"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$asm30.TypeRef("System.Xml.Linq.XName"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceValue")])]), $asm0C.TypeRef("System.Activities.DurableInstancing.InstanceEncodingOption")])
    );

    $.Method({Static:false, Public:true }, "get_BinaryData", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.ArraySegment`1", [$.Byte])), 
      CorrelationKey_get_BinaryData
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_KeyId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid")), 
      CorrelationKey_get_KeyId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_StartPosition", 
      JSIL.MethodSignature.Return($.Int64), 
      CorrelationKey_get_StartPosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SerializeToXmlElement", 
      JSIL.MethodSignature.Action($asm2F.TypeRef("System.Xml.XmlWriter"))
    );

    $.Method({Static:false, Public:true }, "set_BinaryData", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.ArraySegment`1", [$.Byte])), 
      CorrelationKey_set_BinaryData
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_KeyId", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid")), 
      CorrelationKey_set_KeyId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_StartPosition", 
      JSIL.MethodSignature.Action($.Int64), 
      CorrelationKey_set_StartPosition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationKey$KeyId$value", $asm07.TypeRef("System.Guid"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationKey$StartPosition$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "CorrelationKey$BinaryData$value", $asm07.TypeRef("System.ArraySegment`1", [$.Byte]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "KeyId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "StartPosition", $.Int64);

    $.Property({Static:false, Public:true }, "BinaryData", $asm07.TypeRef("System.ArraySegment`1", [$.Byte]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.RecoverInstanceLocksCommand */ 

(function RecoverInstanceLocksCommand$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.RecoverInstanceLocksCommand", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.RecoverInstanceLocksAsyncResult */ 

(function RecoverInstanceLocksAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.RecoverInstanceLocksAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectRunnableInstancesCommand */ 

(function DetectRunnableInstancesCommand$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.DetectRunnableInstancesCommand", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectRunnableInstancesAsyncResult */ 

(function DetectRunnableInstancesAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.DetectRunnableInstancesAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.TryLoadRunnableWorkflowAsyncResult */ 

(function TryLoadRunnableWorkflowAsyncResult$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.LoadWorkflowAsyncResult"), 
      Name: "System.Activities.DurableInstancing.TryLoadRunnableWorkflowAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectActivatableWorkflowsAsyncResult */ 

(function DetectActivatableWorkflowsAsyncResult$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.DetectActivatableWorkflowsAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_ConnectionString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Property({Static:false, Public:false, Virtual:true }, "ConnectionString", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.QueryActivatableWorkflowAsyncResult */ 

(function QueryActivatableWorkflowAsyncResult$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.DetectActivatableWorkflowsAsyncResult"), 
      Name: "System.Activities.DurableInstancing.QueryActivatableWorkflowAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectActivatableWorkflowsCommand */ 

(function DetectActivatableWorkflowsCommand$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
      Name: "System.Activities.DurableInstancing.DetectActivatableWorkflowsCommand", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.PersistenceTask */ 

(function PersistenceTask$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStore)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Int64)) ();
  };





  function PersistenceTask_get_Store () {
    return this.PersistenceTask$Store$value;
  }; 

  function PersistenceTask_get_StoreLock () {
    return this.PersistenceTask$StoreLock$value;
  }; 

  function PersistenceTask_get_SurrogateLockOwnerId () {
    return this.PersistenceTask$SurrogateLockOwnerId$value;
  }; 






  function PersistenceTask_set_Store (value) {
    this.PersistenceTask$Store$value = value;
  }; 

  function PersistenceTask_set_StoreLock (value) {
    this.PersistenceTask$StoreLock$value = value;
  }; 

  function PersistenceTask_set_SurrogateLockOwnerId (value) {
    this.PersistenceTask$SurrogateLockOwnerId$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.PersistenceTask", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.TimeSpan"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelTimer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CommandCompletedCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Method({Static:false, Public:false}, "get_Store", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      PersistenceTask_get_Store
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_StoreLock", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock")), 
      PersistenceTask_get_StoreLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_SurrogateLockOwnerId", 
      JSIL.MethodSignature.Return($.Int64), 
      PersistenceTask_get_SurrogateLockOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HandleError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnTimerFired", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "ResetTimer", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetTimer", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.TimeSpan")])])
    );

    $.Method({Static:false, Public:false}, "set_Store", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore")), 
      PersistenceTask_set_Store
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_StoreLock", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock")), 
      PersistenceTask_set_StoreLock
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SurrogateLockOwnerId", 
      JSIL.MethodSignature.Action($.Int64), 
      PersistenceTask_set_SurrogateLockOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "automaticallyResetTimer", $.Boolean);

    $.Field({Static:false, Public:false}, "commandCompletedCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "instancePersistenceCommand", $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"));

    $.Field({Static:false, Public:false}, "taskInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "taskTimer", $asm25.TypeRef("System.Runtime.IOThreadTimer"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "timerCancelled", $.Boolean);

    $.Field({Static:false, Public:false}, "taskTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "PersistenceTask$Store$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceTask$StoreLock$value", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "PersistenceTask$SurrogateLockOwnerId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:false}, "Store", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.Property({Static:false, Public:false}, "StoreLock", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"));

    $.Property({Static:false, Public:false}, "SurrogateLockOwnerId", $.Int64);

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectActivatableWorkflowsTask */ 

(function DetectActivatableWorkflowsTask$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"), 
      Name: "System.Activities.DurableInstancing.DetectActivatableWorkflowsTask", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HandleError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetTimer", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.TimeSpan")])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LockRecoveryTask */ 

(function LockRecoveryTask$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"), 
      Name: "System.Activities.DurableInstancing.LockRecoveryTask", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HandleError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.LockRenewalTask */ 

(function LockRenewalTask$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"), 
      Name: "System.Activities.DurableInstancing.LockRenewalTask", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm07.TypeRef("System.TimeSpan"), $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HandleError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.DetectRunnableInstancesTask */ 

(function DetectRunnableInstancesTask$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"), 
      Name: "System.Activities.DurableInstancing.DetectRunnableInstancesTask", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "HandleError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResetTimer", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.Nullable`1", [$asm07.TypeRef("System.TimeSpan")])])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock */ 

(function SqlWorkflowInstanceStoreLock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0C.System.Activities.DurableInstancing.PersistenceTask)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Int64)) ();
  };




  function SqlWorkflowInstanceStoreLock_get_InstanceDetectionTask () {
    return this.SqlWorkflowInstanceStoreLock$InstanceDetectionTask$value;
  }; 



  function SqlWorkflowInstanceStoreLock_get_LockRecoveryTask () {
    return this.SqlWorkflowInstanceStoreLock$LockRecoveryTask$value;
  }; 

  function SqlWorkflowInstanceStoreLock_get_LockRenewalTask () {
    return this.SqlWorkflowInstanceStoreLock$LockRenewalTask$value;
  }; 

  function SqlWorkflowInstanceStoreLock_get_SurrogateLockOwnerId () {
    return this.SqlWorkflowInstanceStoreLock$SurrogateLockOwnerId$value;
  }; 







  function SqlWorkflowInstanceStoreLock_set_InstanceDetectionTask (value) {
    this.SqlWorkflowInstanceStoreLock$InstanceDetectionTask$value = value;
  }; 

  function SqlWorkflowInstanceStoreLock_set_LockRecoveryTask (value) {
    this.SqlWorkflowInstanceStoreLock$LockRecoveryTask$value = value;
  }; 

  function SqlWorkflowInstanceStoreLock_set_LockRenewalTask (value) {
    this.SqlWorkflowInstanceStoreLock$LockRenewalTask$value = value;
  }; 

  function SqlWorkflowInstanceStoreLock_set_SurrogateLockOwnerId (value) {
    this.SqlWorkflowInstanceStoreLock$SurrogateLockOwnerId$value = value;
  }; 


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_HostLockRenewalPulseInterval", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.Method({Static:false, Public:true }, "get_InstanceDetectionTask", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_get_InstanceDetectionTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_IsValid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LockOwnerId", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.Method({Static:false, Public:true }, "get_LockRecoveryTask", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_get_LockRecoveryTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LockRenewalTask", 
      JSIL.MethodSignature.Return($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_get_LockRenewalTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SurrogateLockOwnerId", 
      JSIL.MethodSignature.Return($.Int64), 
      SqlWorkflowInstanceStoreLock_get_SurrogateLockOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_ThisLock", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "IsLockOwnerValid", 
      new JSIL.MethodSignature($.Boolean, [$.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkInstanceOwnerCreated", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Guid"), $.Int64, 
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstanceHandle"), $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "MarkInstanceOwnerLost", 
      new JSIL.MethodSignature(null, [$.Int64, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "MarkInstanceOwnerLost", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "ReturnModificationLock", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_InstanceDetectionTask", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_set_InstanceDetectionTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LockRecoveryTask", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_set_LockRecoveryTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LockRenewalTask", 
      JSIL.MethodSignature.Action($asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask")), 
      SqlWorkflowInstanceStoreLock_set_LockRenewalTask
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_SurrogateLockOwnerId", 
      JSIL.MethodSignature.Action($.Int64), 
      SqlWorkflowInstanceStoreLock_set_SurrogateLockOwnerId
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "TakeModificationLock", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "hostLockRenewalPulseInterval", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "isBeingModified", $.Boolean);

    $.Field({Static:false, Public:false}, "lockOwnerId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "sqlWorkflowInstanceStore", $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"));

    $.Field({Static:false, Public:false}, "lockOwnerInstanceHandle", $asm07.TypeRef("System.WeakReference"));

    $.Field({Static:false, Public:false}, "thisLock", $.Object);

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreLock$InstanceDetectionTask$value", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreLock$LockRecoveryTask$value", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreLock$LockRenewalTask$value", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "SqlWorkflowInstanceStoreLock$SurrogateLockOwnerId$value", $.Int64)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "InstanceDetectionTask", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"));

    $.Property({Static:false, Public:true }, "IsValid", $.Boolean);

    $.Property({Static:false, Public:true }, "LockOwnerId", $asm07.TypeRef("System.Guid"));

    $.Property({Static:false, Public:true }, "LockRecoveryTask", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"));

    $.Property({Static:false, Public:true }, "LockRenewalTask", $asm0C.TypeRef("System.Activities.DurableInstancing.PersistenceTask"));

    $.Property({Static:false, Public:true }, "SurrogateLockOwnerId", $.Int64);

    $.Property({Static:false, Public:false}, "ThisLock", $.Object);

    $.Property({Static:false, Public:false}, "HostLockRenewalPulseInterval", $asm07.TypeRef("System.TimeSpan"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.TestDatabaseVersionAndRunAsyncResult */ 

(function TestDatabaseVersionAndRunAsyncResult$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreAsyncResult"), 
      Name: "System.Activities.DurableInstancing.TestDatabaseVersionAndRunAsyncResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 9, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceContext"), $asm35.TypeRef("System.Runtime.DurableInstancing.InstancePersistenceCommand"), 
          $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStore"), $asm0C.TypeRef("System.Activities.DurableInstancing.SqlWorkflowInstanceStoreLock"), 
          $asm27.TypeRef("System.Transactions.Transaction"), $asm07.TypeRef("System.TimeSpan"), 
          $asm07.TypeRef("System.Version"), $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GenerateSqlCommand", 
      JSIL.MethodSignature.Action($asm11.TypeRef("System.Data.SqlClient.SqlCommand"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetSqlCommandType", 
      JSIL.MethodSignature.Return($asm11.TypeRef("System.Data.CommandType"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetVersion", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Version"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InstanceCommandCompleteCallback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSqlException", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Exception"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSqlProcessingComplete", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ProcessSqlResult", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Exception"), [$asm11.TypeRef("System.Data.SqlClient.SqlDataReader")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ScheduleCallback", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "TestAndRun", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetInt", 
      new JSIL.MethodSignature($.Boolean, [
          $asm11.TypeRef("System.Data.SqlClient.SqlDataReader"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "instanceCommandCompleteCallback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "commandText", $.String);

    $.Field({Static:false, Public:false}, "currentTransaction", $asm27.TypeRef("System.Transactions.Transaction"));

    $.Field({Static:false, Public:false}, "targetVersion", $asm07.TypeRef("System.Version"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.SR */ 

(function SR$Members () {
  var $, $thisType;




























  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CanNotDefineNullForAPromotion", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotPromoteAsSqlVariant", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotPromoteXNameTwiceInPromotion", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DatabaseUpgradeRequiredForCommand", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CleanupInProgress", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HostLockExpired", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_HostLockNotFound", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IdentityNotSupportedWithActivation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceKeyMetadataChangesNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InstanceStoreReadOnly", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MultipleLockOwnersNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_NonWASActivationNotSupported", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_TryLoadRequiresWorkflowType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnknownDatabaseVersion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidLockRenewalPeriod", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidMetadataValue", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "InvalidRunnableInstancesDetectionPeriod", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "NoPromotionsDefined", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PromotionAlreadyDefined", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "PromotionTooManyDefined", 
      new JSIL.MethodSignature($.String, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutOnSqlOperation", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnknownCompressionOption", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnknownSprocResult", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:false}, "InstanceStoreReadOnly", $.String);

    $.Property({Static:true , Public:false}, "HostLockExpired", $.String);

    $.Property({Static:true , Public:false}, "HostLockNotFound", $.String);

    $.Property({Static:true , Public:false}, "CleanupInProgress", $.String);

    $.Property({Static:true , Public:false}, "MultipleLockOwnersNotSupported", $.String);

    $.Property({Static:true , Public:false}, "InstanceKeyMetadataChangesNotSupported", $.String);

    $.Property({Static:true , Public:false}, "NonWASActivationNotSupported", $.String);

    $.Property({Static:true , Public:false}, "TryLoadRequiresWorkflowType", $.String);

    $.Property({Static:true , Public:false}, "UnknownDatabaseVersion", $.String);

    $.Property({Static:true , Public:false}, "IdentityNotSupportedWithActivation", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.TD */ 

(function TD$Members () {
  var $, $thisType;






































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.TD", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateEventDescriptors", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "EndSqlCommandExecute", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "EndSqlCommandExecuteIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureEventDescriptors", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FoundProcessingError", 
      new JSIL.MethodSignature(null, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String, 
          $asm07.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FoundProcessingErrorIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "InstanceLocksRecoveryError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "InstanceLocksRecoveryErrorIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "IsEtwEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "LockRetryTimeout", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "LockRetryTimeoutIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "MaximumRetriesExceededForSqlCommand", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MaximumRetriesExceededForSqlCommandIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "QueuingSqlRetry", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueuingSqlRetryIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "RenewLockSystemError", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "RenewLockSystemErrorIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "RetryingSqlCommandDueToSqlError", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "RetryingSqlCommandDueToSqlErrorIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "RunnableInstancesDetectionError", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "RunnableInstancesDetectionErrorIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SqlExceptionCaught", 
      new JSIL.MethodSignature(null, [
          $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "SqlExceptionCaughtIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartSqlCommandExecute", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "StartSqlCommandExecuteIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutOpeningSqlConnection", 
      new JSIL.MethodSignature(null, [$asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "TimeoutOpeningSqlConnectionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "UnlockInstanceException", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "UnlockInstanceExceptionIsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteEtwEvent", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $asm25.TypeRef("System.Runtime.Diagnostics.EventTraceActivity"), 
          $.String, $.String, 
          $.String
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "WriteTraceSource", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $asm25.TypeRef("System.Runtime.TracePayload")
        ])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:true , Public:false}, "resourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Field({Static:true , Public:false}, "resourceCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "syncLock", $.Object);

    $.Field({Static:true , Public:false}, "eventDescriptorsCreated", $asm07.TypeRef("System.Boolean"));

    $.Property({Static:true , Public:false}, "ResourceManager", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.FxTrace */ 

(function FxTrace$Members () {
  var $, $thisType;























  JSIL.MakeStaticClass("System.Activities.DurableInstancing.FxTrace", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:false}, "EnsureEtwProviderInitialized", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EventLog", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_EventSourceName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Exception", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.ExceptionTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCritical", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceCriticalToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceError", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceErrorToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceInformationToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerbose", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceVerboseToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarning", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShouldTraceWarningToTraceSource", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Trace", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_TracingEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeTracing", 
      JSIL.MethodSignature.Return($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IsEventEnabled", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateEnabledEventsList", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "UpdateEventDefinitions", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]), $jsilcore.TypeRef("System.Array", [$.UInt16])])
    )
      .Attribute($asm07.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Action($asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateLevel", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "baseEventSourceName", $.String, "System.Activities.DurableInstancing");

    $.Constant({Static:true , Public:false}, "EventSourceVersion", $.String, "4.0.0.0");

    $.Field({Static:true , Public:false}, "etwProviderId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "eventSourceName", $.String);

    $.Field({Static:true , Public:false}, "exceptionTrace", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Field({Static:true , Public:false}, "enabledEvents", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Field({Static:true , Public:false}, "end2EndEvents", $asm0A.TypeRef("System.Collections.Generic.SortedSet`1", [$.UInt16]));

    $.Field({Static:true , Public:false}, "eventDescriptors", $jsilcore.TypeRef("System.Array", [$asm25.TypeRef("System.Runtime.Diagnostics.EventDescriptor")]))
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "lockObject", $.Object);

    $.Field({Static:true , Public:false}, "tracingEnabled", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerbose", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformation", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarning", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceError", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCritical", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceVerboseToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceInformationToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceWarningToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceErrorToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "shouldTraceCriticalToTraceSource", $.Boolean, true);

    $.Field({Static:true , Public:false}, "diagnosticTrace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));


    function FxTrace__cctor () {
      $thisType.etwProviderId = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FxTrace__cctor
    );

    $.Property({Static:true , Public:true }, "ShouldTraceCritical", $.Boolean);

    $.Property({Static:true , Public:true }, "TracingEnabled", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceError", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformation", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerbose", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarning", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceCriticalToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceErrorToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceInformationToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceVerboseToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "ShouldTraceWarningToTraceSource", $.Boolean);

    $.Property({Static:true , Public:true }, "Exception", $asm25.TypeRef("System.Runtime.ExceptionTrace"));

    $.Property({Static:true , Public:true }, "Trace", $asm25.TypeRef("System.Runtime.Diagnostics.EtwDiagnosticTrace"));

    $.Property({Static:true , Public:true }, "EventLog", $asm25.TypeRef("System.Runtime.Diagnostics.EventLogger"));

    $.Property({Static:true , Public:false}, "EventSourceName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Activities.DurableInstancing.FxTrace+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Activities.DurableInstancing.FxTrace+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$lInitializeTracing$gb__54_0", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__54_0", $asm07.TypeRef("System.Action"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

