/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm2A = JSIL.DeclareAssembly("System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Web");
JSIL.DeclareNamespace("System.Web.RegularExpressions");
/* class System.Web.RegularExpressions.TagRegexRunner1 */ 

(function TagRegexRunner1$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.TagRegexRunner1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TagRegexFactory1 */ 

(function TagRegexFactory1$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.TagRegexFactory1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TagRegex */ 

(function TagRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.TagRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DirectiveRegexRunner2 */ 

(function DirectiveRegexRunner2$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.DirectiveRegexRunner2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DirectiveRegexFactory2 */ 

(function DirectiveRegexFactory2$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.DirectiveRegexFactory2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DirectiveRegex */ 

(function DirectiveRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.DirectiveRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EndTagRegexRunner3 */ 

(function EndTagRegexRunner3$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.EndTagRegexRunner3", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EndTagRegexFactory3 */ 

(function EndTagRegexFactory3$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.EndTagRegexFactory3", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EndTagRegex */ 

(function EndTagRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.EndTagRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspCodeRegexRunner4 */ 

(function AspCodeRegexRunner4$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.AspCodeRegexRunner4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspCodeRegexFactory4 */ 

(function AspCodeRegexFactory4$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.AspCodeRegexFactory4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspCodeRegex */ 

(function AspCodeRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.AspCodeRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspExprRegexRunner5 */ 

(function AspExprRegexRunner5$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.AspExprRegexRunner5", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspExprRegexFactory5 */ 

(function AspExprRegexFactory5$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.AspExprRegexFactory5", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspExprRegex */ 

(function AspExprRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.AspExprRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DatabindExprRegexRunner6 */ 

(function DatabindExprRegexRunner6$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.DatabindExprRegexRunner6", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DatabindExprRegexFactory6 */ 

(function DatabindExprRegexFactory6$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.DatabindExprRegexFactory6", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DatabindExprRegex */ 

(function DatabindExprRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.DatabindExprRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.CommentRegexRunner7 */ 

(function CommentRegexRunner7$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.CommentRegexRunner7", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.CommentRegexFactory7 */ 

(function CommentRegexFactory7$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.CommentRegexFactory7", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.CommentRegex */ 

(function CommentRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.CommentRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.IncludeRegexRunner8 */ 

(function IncludeRegexRunner8$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.IncludeRegexRunner8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.IncludeRegexFactory8 */ 

(function IncludeRegexFactory8$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.IncludeRegexFactory8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.IncludeRegex */ 

(function IncludeRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.IncludeRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TextRegexRunner9 */ 

(function TextRegexRunner9$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.TextRegexRunner9", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TextRegexFactory9 */ 

(function TextRegexFactory9$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.TextRegexFactory9", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TextRegex */ 

(function TextRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.TextRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.GTRegexRunner10 */ 

(function GTRegexRunner10$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.GTRegexRunner10", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.GTRegexFactory10 */ 

(function GTRegexFactory10$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.GTRegexFactory10", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.GTRegex */ 

(function GTRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.GTRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.LTRegexRunner11 */ 

(function LTRegexRunner11$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.LTRegexRunner11", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.LTRegexFactory11 */ 

(function LTRegexFactory11$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.LTRegexFactory11", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.LTRegex */ 

(function LTRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.LTRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ServerTagsRegexRunner12 */ 

(function ServerTagsRegexRunner12$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.ServerTagsRegexRunner12", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ServerTagsRegexFactory12 */ 

(function ServerTagsRegexFactory12$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.ServerTagsRegexFactory12", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ServerTagsRegex */ 

(function ServerTagsRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.ServerTagsRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.RunatServerRegexRunner13 */ 

(function RunatServerRegexRunner13$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.RunatServerRegexRunner13", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.RunatServerRegexFactory13 */ 

(function RunatServerRegexFactory13$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.RunatServerRegexFactory13", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.RunatServerRegex */ 

(function RunatServerRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.RunatServerRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.SimpleDirectiveRegexRunner14 */ 

(function SimpleDirectiveRegexRunner14$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.SimpleDirectiveRegexRunner14", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.SimpleDirectiveRegexFactory14 */ 

(function SimpleDirectiveRegexFactory14$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.SimpleDirectiveRegexFactory14", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.SimpleDirectiveRegex */ 

(function SimpleDirectiveRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.SimpleDirectiveRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DataBindRegexRunner15 */ 

(function DataBindRegexRunner15$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.DataBindRegexRunner15", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DataBindRegexFactory15 */ 

(function DataBindRegexFactory15$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.DataBindRegexFactory15", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.DataBindRegex */ 

(function DataBindRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.DataBindRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ExpressionBuilderRegexRunner16 */ 

(function ExpressionBuilderRegexRunner16$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.ExpressionBuilderRegexRunner16", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ExpressionBuilderRegexFactory16 */ 

(function ExpressionBuilderRegexFactory16$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.ExpressionBuilderRegexFactory16", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.ExpressionBuilderRegex */ 

(function ExpressionBuilderRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.ExpressionBuilderRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindExpressionRegexRunner17 */ 

(function BindExpressionRegexRunner17$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.BindExpressionRegexRunner17", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindExpressionRegexFactory17 */ 

(function BindExpressionRegexFactory17$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.BindExpressionRegexFactory17", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindExpressionRegex */ 

(function BindExpressionRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.BindExpressionRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindParametersRegexRunner18 */ 

(function BindParametersRegexRunner18$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.BindParametersRegexRunner18", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindParametersRegexFactory18 */ 

(function BindParametersRegexFactory18$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.BindParametersRegexFactory18", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindParametersRegex */ 

(function BindParametersRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.BindParametersRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.FormatStringRegexRunner19 */ 

(function FormatStringRegexRunner19$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.FormatStringRegexRunner19", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.FormatStringRegexFactory19 */ 

(function FormatStringRegexFactory19$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.FormatStringRegexFactory19", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.FormatStringRegex */ 

(function FormatStringRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.FormatStringRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.WebResourceRegexRunner20 */ 

(function WebResourceRegexRunner20$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.WebResourceRegexRunner20", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.WebResourceRegexFactory20 */ 

(function WebResourceRegexFactory20$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.WebResourceRegexFactory20", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.WebResourceRegex */ 

(function WebResourceRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.WebResourceRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.NonWordRegexRunner21 */ 

(function NonWordRegexRunner21$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.NonWordRegexRunner21", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.NonWordRegexFactory21 */ 

(function NonWordRegexFactory21$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.NonWordRegexFactory21", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.NonWordRegex */ 

(function NonWordRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.NonWordRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EvalExpressionRegexRunner22 */ 

(function EvalExpressionRegexRunner22$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.EvalExpressionRegexRunner22", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EvalExpressionRegexFactory22 */ 

(function EvalExpressionRegexFactory22$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.EvalExpressionRegexFactory22", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.EvalExpressionRegex */ 

(function EvalExpressionRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.EvalExpressionRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BrowserCapsRefRegexRunner23 */ 

(function BrowserCapsRefRegexRunner23$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.BrowserCapsRefRegexRunner23", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BrowserCapsRefRegexFactory23 */ 

(function BrowserCapsRefRegexFactory23$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.BrowserCapsRefRegexFactory23", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BrowserCapsRefRegex */ 

(function BrowserCapsRefRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.BrowserCapsRefRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspEncodedExprRegexRunner24 */ 

(function AspEncodedExprRegexRunner24$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.AspEncodedExprRegexRunner24", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspEncodedExprRegexFactory24 */ 

(function AspEncodedExprRegexFactory24$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.AspEncodedExprRegexFactory24", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.AspEncodedExprRegex */ 

(function AspEncodedExprRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.AspEncodedExprRegex", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TagRegex35Runner25 */ 

(function TagRegex35Runner25$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.TagRegex35Runner25", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TagRegex35Factory25 */ 

(function TagRegex35Factory25$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.TagRegex35Factory25", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.TagRegex35 */ 

(function TagRegex35$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.TagRegex35", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemExpressionRegexRunner26 */ 

(function BindItemExpressionRegexRunner26$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.BindItemExpressionRegexRunner26", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemExpressionRegexFactory26 */ 

(function BindItemExpressionRegexFactory26$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.BindItemExpressionRegexFactory26", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemExpressionRegex */ 

(function BindItemExpressionRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.BindItemExpressionRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemParametersRegexRunner27 */ 

(function BindItemParametersRegexRunner27$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"), 
      Name: "System.Web.RegularExpressions.BindItemParametersRegexRunner27", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FindFirstChar", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Go", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InitTrackCount", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemParametersRegexFactory27 */ 

(function BindItemParametersRegexFactory27$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.RegexRunnerFactory"), 
      Name: "System.Web.RegularExpressions.BindItemParametersRegexFactory27", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateInstance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Text.RegularExpressions.RegexRunner"))
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Web.RegularExpressions.BindItemParametersRegex */ 

(function BindItemParametersRegex$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Text.RegularExpressions.Regex"), 
      Name: "System.Web.RegularExpressions.BindItemParametersRegex", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

