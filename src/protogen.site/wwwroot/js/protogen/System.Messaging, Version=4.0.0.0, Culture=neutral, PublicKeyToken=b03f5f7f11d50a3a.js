/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm1C = JSIL.DeclareAssembly("System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("FXAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "Title", $.String, "System.Messaging.dll");

    $.Constant({Static:true , Public:false}, "Description", $.String, "System.Messaging.dll");

    $.Constant({Static:true , Public:false}, "DefaultAlias", $.String, "System.Messaging.dll");

    $.Constant({Static:true , Public:false}, "Copyright", $.String, "\xa9 Microsoft Corporation.  All rights reserved.");

    $.Constant({Static:true , Public:false}, "Version", $.String, "4.0.0.0");

    $.Constant({Static:true , Public:false}, "InformationalVersion", $.String, "4.7.2046.0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", $.String, "30319");

    $.Constant({Static:true , Public:false}, "BuildRevisionStr", $.String, "0");

    $.Constant({Static:true , Public:false}, "DailyBuildNumber", $.Int32, 30319);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", $.String, "7cec85d7bea7798e");

    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", $.String, "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB");

    $.Constant({Static:true , Public:false}, "PlatformPublicKey", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", $.String, "b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", $.String, "00000000000000000400000000000000");

    $.Constant({Static:true , Public:false}, "Mscorlib", $.String, "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemData", $.String, "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", $.String, "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "System", $.String, "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemCore", $.String, "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemNumerics", $.String, "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", $.String, "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", $.String, "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWindowsForms", $.String, "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemXml", $.String, "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", $.String, "b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", $.String, "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", $.String, "31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", $.String, "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9");

    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", $.String, "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemConfiguration", $.String, "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", $.String, "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDeployment", $.String, "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDesign", $.String, "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", $.String, "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", $.String, "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemDrawing", $.String, "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", $.String, "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemManagement", $.String, "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemMessaging", $.String, "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttp", $.String, "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", $.String, "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", $.String, "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", $.String, "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", $.String, "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemSecurity", $.String, "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", $.String, "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemServiceProcess", $.String, "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWeb", $.String, "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", $.String, "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", $.String, "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", $.String, "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", $.String, "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

    $.Constant({Static:true , Public:false}, "SystemWebExtensions", $.String, "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", $.String, "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebMobile", $.String, "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", $.String, "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "SystemWebRouting", $.String, "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "SystemWebServices", $.String, "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "WindowsBase", $.String, "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", $.String, "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", $.String, "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", $.String, "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", $.String, "b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", $.String, "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", $.String, "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", $.String, "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", $.String, "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", $.String, "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

    $.Constant({Static:true , Public:false}, "MicrosoftJScript", $.String, "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
/* class System.ExternDll */ 

(function ExternDll$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("System.ExternDll", false, [], function ($ib) {
    $ = $ib;

    $.Constant({Static:true , Public:true }, "Activeds", $.String, "activeds.dll");

    $.Constant({Static:true , Public:true }, "Advapi32", $.String, "advapi32.dll");

    $.Constant({Static:true , Public:true }, "Comctl32", $.String, "comctl32.dll");

    $.Constant({Static:true , Public:true }, "Comdlg32", $.String, "comdlg32.dll");

    $.Constant({Static:true , Public:true }, "Gdi32", $.String, "gdi32.dll");

    $.Constant({Static:true , Public:true }, "Gdiplus", $.String, "gdiplus.dll");

    $.Constant({Static:true , Public:true }, "Hhctrl", $.String, "hhctrl.ocx");

    $.Constant({Static:true , Public:true }, "Imm32", $.String, "imm32.dll");

    $.Constant({Static:true , Public:true }, "Kernel32", $.String, "kernel32.dll");

    $.Constant({Static:true , Public:true }, "Loadperf", $.String, "Loadperf.dll");

    $.Constant({Static:true , Public:true }, "Mscoree", $.String, "mscoree.dll");

    $.Constant({Static:true , Public:true }, "Clr", $.String, "clr.dll");

    $.Constant({Static:true , Public:true }, "Msi", $.String, "msi.dll");

    $.Constant({Static:true , Public:true }, "Mqrt", $.String, "mqrt.dll");

    $.Constant({Static:true , Public:true }, "Ntdll", $.String, "ntdll.dll");

    $.Constant({Static:true , Public:true }, "Ole32", $.String, "ole32.dll");

    $.Constant({Static:true , Public:true }, "Oleacc", $.String, "oleacc.dll");

    $.Constant({Static:true , Public:true }, "Oleaut32", $.String, "oleaut32.dll");

    $.Constant({Static:true , Public:true }, "Olepro32", $.String, "olepro32.dll");

    $.Constant({Static:true , Public:true }, "PerfCounter", $.String, "perfcounter.dll");

    $.Constant({Static:true , Public:true }, "Powrprof", $.String, "Powrprof.dll");

    $.Constant({Static:true , Public:true }, "Psapi", $.String, "psapi.dll");

    $.Constant({Static:true , Public:true }, "Shell32", $.String, "shell32.dll");

    $.Constant({Static:true , Public:true }, "Shfolder", $.String, "shfolder.dll");

    $.Constant({Static:true , Public:true }, "User32", $.String, "user32.dll");

    $.Constant({Static:true , Public:true }, "Uxtheme", $.String, "uxtheme.dll");

    $.Constant({Static:true , Public:true }, "WinMM", $.String, "winmm.dll");

    $.Constant({Static:true , Public:true }, "Winspool", $.String, "winspool.drv");

    $.Constant({Static:true , Public:true }, "Wtsapi32", $.String, "wtsapi32.dll");

    $.Constant({Static:true , Public:true }, "Version", $.String, "version.dll");

    $.Constant({Static:true , Public:true }, "Vsassert", $.String, "vsassert.dll");

    $.Constant({Static:true , Public:true }, "Fxassert", $.String, "Fxassert.dll");

    $.Constant({Static:true , Public:true }, "Shlwapi", $.String, "shlwapi.dll");

    $.Constant({Static:true , Public:true }, "Crypt32", $.String, "crypt32.dll");

    $.Constant({Static:true , Public:false}, "Odbc32", $.String, "odbc32.dll");

    $.Constant({Static:true , Public:false}, "SNI", $.String, "System.Data.dll");

    $.Constant({Static:true , Public:false}, "OciDll", $.String, "oci.dll");

    $.Constant({Static:true , Public:false}, "OraMtsDll", $.String, "oramts.dll");


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.InvariantComparer */ 

(function InvariantComparer$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.InvariantComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object])
    );

    $.Field({Static:false, Public:false}, "m_compareInfo", $asm07.TypeRef("System.Globalization.CompareInfo"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "Default", $.Type);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IComparer")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.TelemetryEventSource */ 

(function TelemetryEventSource$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Diagnostics.Tracing.EventSource"), 
      Name: "System.TelemetryEventSource", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "CriticalDataOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MeasuresOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MessageQueue", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.Tracing.EventAttribute"), function () { return [1]; });

    $.ExternalMethod({Static:true , Public:false}, "TelemetryOptions", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Diagnostics.Tracing.EventSourceOptions"))
    );

    $.Constant({Static:true , Public:false}, "Reserved44Keyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 17592186044416);

    $.Constant({Static:true , Public:false}, "TelemetryKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 35184372088832);

    $.Constant({Static:true , Public:false}, "MeasuresKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 70368744177664);

    $.Constant({Static:true , Public:false}, "CriticalDataKeyword", $asm07.TypeRef("System.Diagnostics.Tracing.EventKeywords"), 140737488355328);

    $.Constant({Static:true , Public:false}, "CoreData", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 524288);

    $.Constant({Static:true , Public:false}, "InjectXToken", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 1048576);

    $.Constant({Static:true , Public:false}, "RealtimeLatency", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 2097152);

    $.Constant({Static:true , Public:false}, "NormalLatency", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 4194304);

    $.Constant({Static:true , Public:false}, "CriticalPersistence", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 8388608);

    $.Constant({Static:true , Public:false}, "NormalPersistence", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 16777216);

    $.Constant({Static:true , Public:false}, "DropPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 33554432);

    $.Constant({Static:true , Public:false}, "HashPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 67108864);

    $.Constant({Static:true , Public:false}, "MarkPii", $asm07.TypeRef("System.Diagnostics.Tracing.EventTags"), 134217728);

    $.Constant({Static:true , Public:false}, "DropPiiField", $asm07.TypeRef("System.Diagnostics.Tracing.EventFieldTags"), 67108864);

    $.Constant({Static:true , Public:false}, "HashPiiField", $asm07.TypeRef("System.Diagnostics.Tracing.EventFieldTags"), 134217728);

    $.Field({Static:true , Public:false, ReadOnly:true }, "telemetryTraits", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Constant({Static:true , Public:false}, "MessagingProviderName", $.String, "Microsoft.DOTNET.System.Messaging");

    $.Constant({Static:true , Public:false}, "MessageQueueEventId", $.Int32, 1);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Messaging");
/* class System.Messaging.AccessControlEntry */ 

(function AccessControlEntry$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.AccessControlEntry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.Trustee"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1C.TypeRef("System.Messaging.Trustee"), $asm1C.TypeRef("System.Messaging.GenericAccessRights"), 
          $asm1C.TypeRef("System.Messaging.StandardAccessRights"), $asm1C.TypeRef("System.Messaging.AccessControlEntryType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CustomAccessRights", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EntryType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.AccessControlEntryType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GenericAccessRights", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.GenericAccessRights"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StandardAccessRights", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.StandardAccessRights"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Trustee", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Trustee"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_CustomAccessRights", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EntryType", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AccessControlEntryType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_GenericAccessRights", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.GenericAccessRights"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StandardAccessRights", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.StandardAccessRights"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Trustee", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.Trustee"))
    );

    $.Constant({Static:true , Public:false}, "standardRightsMask", $asm1C.TypeRef("System.Messaging.StandardAccessRights"), 2031616);

    $.Constant({Static:true , Public:false}, "genericRightsMask", $asm1C.TypeRef("System.Messaging.GenericAccessRights"), -268435456);

    $.Field({Static:false, Public:false}, "accessFlags", $.Int32);

    $.Field({Static:false, Public:false}, "trustee", $asm1C.TypeRef("System.Messaging.Trustee"));

    $.Field({Static:false, Public:false}, "entryType", $asm1C.TypeRef("System.Messaging.AccessControlEntryType"));

    $.Property({Static:false, Public:true }, "EntryType", $asm1C.TypeRef("System.Messaging.AccessControlEntryType"));

    $.Property({Static:false, Public:false}, "CustomAccessRights", $.Int32);

    $.Property({Static:false, Public:true }, "GenericAccessRights", $asm1C.TypeRef("System.Messaging.GenericAccessRights"));

    $.Property({Static:false, Public:true }, "StandardAccessRights", $asm1C.TypeRef("System.Messaging.StandardAccessRights"));

    $.Property({Static:false, Public:true }, "Trustee", $asm1C.TypeRef("System.Messaging.Trustee"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.AccessControlEntryType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.AccessControlEntryType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Allow: 1, 
    Set: 2, 
    Deny: 3, 
    Revoke: 4, 
  }
);

/* class System.Messaging.AccessControlList */ 

(function AccessControlList$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.CollectionBase"), 
      Name: "System.Messaging.AccessControlList", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.AccessControlEntry")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckEnvironment", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.AccessControlEntry")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.AccessControlEntry")]), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "FreeAcl", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CurrentEnvironment", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "IndexOf", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.AccessControlEntry")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Insert", 
      new JSIL.MethodSignature(null, [$.Int32, $asm1C.TypeRef("System.Messaging.AccessControlEntry")])
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeAcl", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AccessControlEntry"))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "UnknownEnvironment", $.Int32, 0);

    $.Field({Static:true , Public:false, ReadOnly:true }, "W2kEnvironment", $.Int32, 1);

    $.Field({Static:true , Public:false, ReadOnly:true }, "NtEnvironment", $.Int32, 2);

    $.Field({Static:true , Public:false, ReadOnly:true }, "NonNtEnvironment", $.Int32, 3);

    $.Field({Static:true , Public:false}, "environment", $asm07.TypeRef("System.Int32"), function ($pi) {
        return $pi.UnknownEnvironment;
      });

    $.Field({Static:true , Public:false}, "staticLock", $.Object);

    $.Property({Static:true , Public:false}, "CurrentEnvironment", $.Int32);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.Acknowledgment */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.Acknowledgment", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    ReachQueue: 2, 
    Receive: 16384, 
    BadDestinationQueue: 32768, 
    Purged: 32769, 
    ReachQueueTimeout: 32770, 
    QueueExceedMaximumSize: 32771, 
    AccessDenied: 32772, 
    HopCountExceeded: 32773, 
    BadSignature: 32774, 
    BadEncryption: 32775, 
    CouldNotEncrypt: 32776, 
    NotTransactionalQueue: 32777, 
    NotTransactionalMessage: 32778, 
    QueueDeleted: 49152, 
    QueuePurged: 49153, 
    ReceiveTimeout: 49154, 
  }
);

/* enum System.Messaging.AcknowledgeTypes */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.AcknowledgeTypes", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    PositiveArrival: 1, 
    PositiveReceive: 2, 
    NotAcknowledgeReachQueue: 4, 
    FullReachQueue: 5, 
    NegativeReceive: 8, 
    NotAcknowledgeReceive: 12, 
    FullReceive: 14, 
  }
);

/* class System.Messaging.ActiveXMessageFormatter */ 

(function ActiveXMessageFormatter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.ActiveXMessageFormatter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRead", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "InitStreamedObject", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Object, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Message"), $.Object])
    );

    $.Constant({Static:true , Public:false}, "VT_ARRAY", $.Int16, 8192);

    $.Constant({Static:true , Public:false}, "VT_BOOL", $.Int16, 11);

    $.Constant({Static:true , Public:false}, "VT_BSTR", $.Int16, 8);

    $.Constant({Static:true , Public:false}, "VT_CLSID", $.Int16, 72);

    $.Constant({Static:true , Public:false}, "VT_CY", $.Int16, 6);

    $.Constant({Static:true , Public:false}, "VT_DATE", $.Int16, 7);

    $.Constant({Static:true , Public:false}, "VT_I1", $.Int16, 16);

    $.Constant({Static:true , Public:false}, "VT_I2", $.Int16, 2);

    $.Constant({Static:true , Public:false}, "VT_I4", $.Int16, 3);

    $.Constant({Static:true , Public:false}, "VT_I8", $.Int16, 20);

    $.Constant({Static:true , Public:false}, "VT_LPSTR", $.Int16, 30);

    $.Constant({Static:true , Public:false}, "VT_LPWSTR", $.Int16, 31);

    $.Constant({Static:true , Public:false}, "VT_NULL", $.Int16, 1);

    $.Constant({Static:true , Public:false}, "VT_R4", $.Int16, 4);

    $.Constant({Static:true , Public:false}, "VT_R8", $.Int16, 5);

    $.Constant({Static:true , Public:false}, "VT_STREAMED_OBJECT", $.Int16, 68);

    $.Constant({Static:true , Public:false}, "VT_STORED_OBJECT", $.Int16, 69);

    $.Constant({Static:true , Public:false}, "VT_UI1", $.Int16, 17);

    $.Constant({Static:true , Public:false}, "VT_UI2", $.Int16, 18);

    $.Constant({Static:true , Public:false}, "VT_UI4", $.Int16, 19);

    $.Constant({Static:true , Public:false}, "VT_UI8", $.Int16, 21);

    $.Constant({Static:true , Public:false}, "VT_VECTOR", $.Int16, 4096);

    $.Field({Static:false, Public:false}, "internalBuffer", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Field({Static:false, Public:false}, "unicodeEncoding", $asm07.TypeRef("System.Text.UnicodeEncoding"));

    $.Field({Static:false, Public:false}, "asciiEncoding", $asm07.TypeRef("System.Text.ASCIIEncoding"));

    $.Field({Static:false, Public:false}, "internalCharBuffer", $jsilcore.TypeRef("System.Array", [$.Char]));

    $.ImplementInterfaces(
      /* 0 */ $asm1C.TypeRef("System.Messaging.IMessageFormatter"), 
      /* 1 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.ActiveXMessageFormatter+ComStreamFromDataStream */ 

(function ComStreamFromDataStream$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.ActiveXMessageFormatter+ComStreamFromDataStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ActualizeVirtualPosition", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.IStream"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Commit", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature($.Int64, [
          $asm1C.TypeRef("System.Messaging.Interop.IStream"), $.Int64, 
          $jsilcore.TypeRef("System.Array", [$.Int64])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "EFail", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Runtime.InteropServices.ExternalException"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDataStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LockRegion", 
      new JSIL.MethodSignature(null, [
          $.Int64, $.Int64, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "NotImplemented", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Revert", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetSize", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Stat", 
      new JSIL.MethodSignature(null, [$.IntPtr, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "UnlockRegion", 
      new JSIL.MethodSignature(null, [
          $.Int64, $.Int64, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Write", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32])
    );

    $.Field({Static:false, Public:false}, "dataStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "virtualPosition", $.Int64);

    $.ImplementInterfaces(
      /* 0 */ $asm1C.TypeRef("System.Messaging.Interop.IStream")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

})();

/* class System.Messaging.BinaryMessageFormatter */ 

(function BinaryMessageFormatter$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.BinaryMessageFormatter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"), $asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterTypeStyle")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRead", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TopObjectFormat", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TypeFormat", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterTypeStyle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Object, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TopObjectFormat", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TypeFormat", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterTypeStyle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Message"), $.Object])
    );

    $.Field({Static:false, Public:false}, "formatter", $asm07.TypeRef("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"));

    $.Constant({Static:true , Public:false}, "VT_BINARY_OBJECT", $.Int16, 768);

    $.Property({Static:false, Public:true }, "TopObjectFormat", $asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"))
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTopObjectFormat"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm07.System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple]; });

    $.Property({Static:false, Public:true }, "TypeFormat", $asm07.TypeRef("System.Runtime.Serialization.Formatters.FormatterTypeStyle"))
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTypeFormat"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm07.System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded]; });

    $.ImplementInterfaces(
      /* 0 */ $asm1C.TypeRef("System.Messaging.IMessageFormatter"), 
      /* 1 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.CryptographicProviderType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.CryptographicProviderType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    RsaFull: 1, 
    RsqSig: 2, 
    Dss: 3, 
    Fortezza: 4, 
    MicrosoftExchange: 5, 
    Ssl: 6, 
    SttMer: 7, 
    SttAcq: 8, 
    SttBrnd: 9, 
    SttRoot: 10, 
    SttIss: 11, 
  }
);

/* class System.Messaging.Cursor */ 

(function Cursor$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Cursor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.CursorHandle"))
    );

    $.Field({Static:false, Public:false}, "handle", $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"));

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Property({Static:false, Public:false}, "Handle", $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.DefaultPropertiesToSend */ 

(function DefaultPropertiesToSend$Members () {
  var $, $thisType;













































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.DefaultPropertiesToSend", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AcknowledgeType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AdministrationQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AppSpecific", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AttachSenderId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_CachedMessage", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EncryptionAlgorithm", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Extension", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HashAlgorithm", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.HashAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Priority", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessagePriority"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Recoverable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResponseQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToBeReceived", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToReachQueue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransactionStatusQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAuthentication", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseDeadLetterQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseEncryption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseJournalQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseTracing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AcknowledgeType", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AdministrationQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AppSpecific", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AttachSenderId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EncryptionAlgorithm", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Extension", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HashAlgorithm", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.HashAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Priority", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessagePriority"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Recoverable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ResponseQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToBeReceived", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToReachQueue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TransactionStatusQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAuthentication", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseDeadLetterQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseEncryption", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseJournalQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseTracing", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeExtension", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeTimeToBeReceived", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeTimeToReachQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "cachedMessage", $asm1C.TypeRef("System.Messaging.Message"));

    $.Field({Static:false, Public:false}, "designMode", $.Boolean);

    $.Field({Static:false, Public:false}, "cachedAdminQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "cachedResponseQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "cachedTransactionStatusQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Property({Static:false, Public:true }, "AcknowledgeType", $asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm1C.System.Messaging.AcknowledgeTypes.None]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAcknowledgeType"]; });

    $.Property({Static:false, Public:true }, "AdministrationQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAdministrationQueue"]; });

    $.Property({Static:false, Public:true }, "AppSpecific", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [0]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAppSpecific"]; });

    $.Property({Static:false, Public:true }, "AttachSenderId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAttachSenderId"]; });

    $.Property({Static:false, Public:false}, "CachedMessage", $asm1C.TypeRef("System.Messaging.Message"));

    $.Property({Static:false, Public:true }, "EncryptionAlgorithm", $asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm1C.System.Messaging.EncryptionAlgorithm.Rc2]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgEncryptionAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Extension", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorAttribute"), function () { return ["System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgExtension"]; });

    $.Property({Static:false, Public:true }, "HashAlgorithm", $asm1C.TypeRef("System.Messaging.HashAlgorithm"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm1C.System.Messaging.HashAlgorithm.Md5]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgHashAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Label", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgLabel"]; });

    $.Property({Static:false, Public:true }, "Priority", $asm1C.TypeRef("System.Messaging.MessagePriority"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm1C.System.Messaging.MessagePriority.Normal]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgPriority"]; });

    $.Property({Static:false, Public:true }, "Recoverable", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgRecoverable"]; });

    $.Property({Static:false, Public:true }, "ResponseQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgResponseQueue"]; });

    $.Property({Static:false, Public:true }, "TimeToBeReceived", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.TimeoutConverter.__Type__]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToBeReceived"]; });

    $.Property({Static:false, Public:true }, "TimeToReachQueue", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.TimeoutConverter.__Type__]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToReachQueue"]; });

    $.Property({Static:false, Public:true }, "TransactionStatusQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTransactionStatusQueue"]; });

    $.Property({Static:false, Public:true }, "UseAuthentication", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseAuthentication"]; });

    $.Property({Static:false, Public:true }, "UseDeadLetterQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseDeadLetterQueue"]; });

    $.Property({Static:false, Public:true }, "UseEncryption", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseEncryption"]; });

    $.Property({Static:false, Public:true }, "UseJournalQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseJournalQueue"]; });

    $.Property({Static:false, Public:true }, "UseTracing", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseTracing"]; });


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0A.System.ComponentModel.ExpandableObjectConverter.__Type__]; });

})();

/* enum System.Messaging.EncryptionAlgorithm */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.EncryptionAlgorithm", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Rc2: 26114, 
    Rc4: 26625, 
  }
);

/* enum System.Messaging.EncryptionRequired */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.EncryptionRequired", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Optional: 1, 
    Body: 2, 
  }
);

/* enum System.Messaging.GenericAccessRights */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.GenericAccessRights", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    Read: -2147483648, 
    None: 0, 
    All: 268435456, 
    Execute: 536870912, 
    Write: 1073741824, 
  }
);

/* enum System.Messaging.HashAlgorithm */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.HashAlgorithm", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Md2: 32769, 
    Md4: 32770, 
    Md5: 32771, 
    Sha: 32772, 
    Mac: 32773, 
  }
);

/* interface System.Messaging.IMessageFormatter */ 

JSIL.MakeInterface(
  "System.Messaging.IMessageFormatter", true, [], function ($) {
    $.Method({}, "CanRead", new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.Message")]));
    $.Method({}, "Read", new JSIL.MethodSignature($.Object, [$asm1C.TypeRef("System.Messaging.Message")]));
    $.Method({}, "Write", new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Message"), $.Object]));
  }, [$asm07.TypeRef("System.ICloneable")])
  .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.MessageFormatterConverter.__Type__]; });

/* class System.Messaging.Message */ 

(function Message$Members () {
  var $, $thisType;





























































































  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Messaging.Message", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm1C.TypeRef("System.Messaging.IMessageFormatter")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessagePropertyFilter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AdjustMemory", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AdjustToSend", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AcknowledgeType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Acknowledgment", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Acknowledgment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AdministrationQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AppSpecific", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ArrivedTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AttachSenderId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authenticated", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AuthenticationProviderName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AuthenticationProviderType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.CryptographicProviderType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BodyStream", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BodyType", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectorType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultBodySize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultExtensionSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultLabelSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DestinationQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DestinationSymmetricKey", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DigitalSignature", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EncryptionAlgorithm", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Extension", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.IMessageFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HashAlgorithm", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.HashAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFirstInTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLastInTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LookupId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Priority", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessagePriority"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Recoverable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResponseQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SecurityContext", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.SecurityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderCertificate", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderId", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderVersion", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SentTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceMachine", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToBeReceived", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToReachQueue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransactionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransactionStatusQueue", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAuthentication", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseDeadLetterQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseEncryption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseJournalQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseTracing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "IdFromByteArray", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:false}, "IdToByteArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Lock", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AcknowledgeType", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AdministrationQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AppSpecific", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AttachSenderId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AuthenticationProviderName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AuthenticationProviderType", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.CryptographicProviderType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BodyStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BodyType", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectorType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CorrelationId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DestinationSymmetricKey", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DigitalSignature", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EncryptionAlgorithm", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Extension", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.IMessageFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HashAlgorithm", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.HashAlgorithm"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Priority", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessagePriority"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Recoverable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ResponseQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SecurityContext", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.SecurityContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SenderCertificate", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToBeReceived", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToReachQueue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TransactionStatusQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAuthentication", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseDeadLetterQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseEncryption", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseJournalQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseTracing", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetLookupId", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:true , Public:false}, "StringFromBytes", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "StringToBytes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Unlock", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "GenericIdSize", $.Int32, 16);

    $.Constant({Static:true , Public:false}, "MessageIdSize", $.Int32, 20);

    $.Constant({Static:true , Public:false}, "DefaultQueueNameSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "DefaultCryptographicProviderNameSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "DefaultDigitalSignatureSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "DefaultSenderCertificateSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "DefaultSenderIdSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "DefaultSymmetricKeySize", $.Int32, 255);

    $.Field({Static:true , Public:true , ReadOnly:true }, "InfiniteTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:false, Public:false}, "filter", $asm1C.TypeRef("System.Messaging.MessagePropertyFilter"));

    $.Field({Static:false, Public:false}, "machineName", $.String);

    $.Field({Static:false, Public:false}, "receiveCreated", $.Boolean);

    $.Field({Static:false, Public:false}, "cachedBodyObject", $.Object);

    $.Field({Static:false, Public:false}, "cachedBodyStream", $asm07.TypeRef("System.IO.Stream"));

    $.Field({Static:false, Public:false}, "cachedFormatter", $asm1C.TypeRef("System.Messaging.IMessageFormatter"));

    $.Field({Static:false, Public:false}, "cachedResponseQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "cachedTransactionStatusQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "cachedAdminQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "cachedDestinationQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "properties", $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants"));


    function Message__cctor () {
      $thisType.InfiniteTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Message__cctor
    );

    $.Property({Static:false, Public:true }, "Acknowledgment", $asm1C.TypeRef("System.Messaging.Acknowledgment"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAcknowledgement"]; });

    $.Property({Static:false, Public:true }, "AcknowledgeType", $asm1C.TypeRef("System.Messaging.AcknowledgeTypes"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAcknowledgeType"]; });

    $.Property({Static:false, Public:true }, "AdministrationQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAdministrationQueue"]; });

    $.Property({Static:false, Public:true }, "AppSpecific", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAppSpecific"]; });

    $.Property({Static:false, Public:true }, "ArrivedTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgArrivedTime"]; });

    $.Property({Static:false, Public:true }, "AttachSenderId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAttachSenderId"]; });

    $.Property({Static:false, Public:true }, "Authenticated", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticated"]; });

    $.Property({Static:false, Public:true }, "AuthenticationProviderName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticationProviderName"]; });

    $.Property({Static:false, Public:true }, "AuthenticationProviderType", $asm1C.TypeRef("System.Messaging.CryptographicProviderType"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticationProviderType"]; });

    $.Property({Static:false, Public:true }, "Body", $.Object)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "BodyStream", $asm07.TypeRef("System.IO.Stream"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorAttribute"), function () { return ["System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgBodyStream"]; });

    $.Property({Static:false, Public:true }, "BodyType", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgBodyType"]; });

    $.Property({Static:false, Public:true }, "ConnectorType", $asm07.TypeRef("System.Guid"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgConnectorType"]; });

    $.Property({Static:false, Public:true }, "CorrelationId", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgCorrelationId"]; });

    $.Property({Static:false, Public:false}, "DefaultBodySize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:false}, "DefaultExtensionSize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:false}, "DefaultLabelSize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "DestinationQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDestinationQueue"]; });

    $.Property({Static:false, Public:true }, "DestinationSymmetricKey", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDestinationSymmetricKey"]; });

    $.Property({Static:false, Public:true }, "DigitalSignature", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDigitalSignature"]; });

    $.Property({Static:false, Public:true }, "EncryptionAlgorithm", $asm1C.TypeRef("System.Messaging.EncryptionAlgorithm"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgEncryptionAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Extension", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgExtension"]; });

    $.Property({Static:false, Public:true }, "Formatter", $asm1C.TypeRef("System.Messaging.IMessageFormatter"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "HashAlgorithm", $asm1C.TypeRef("System.Messaging.HashAlgorithm"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgHashAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Id", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgId"]; });

    $.Property({Static:false, Public:true }, "IsFirstInTransaction", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgIsFirstInTransaction"]; });

    $.Property({Static:false, Public:true }, "IsLastInTransaction", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgIsLastInTransaction"]; });

    $.Property({Static:false, Public:true }, "Label", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgLabel"]; });

    $.Property({Static:false, Public:true }, "LookupId", $.Int64);

    $.Property({Static:false, Public:true }, "MessageType", $asm1C.TypeRef("System.Messaging.MessageType"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgMessageType"]; });

    $.Property({Static:false, Public:true }, "Priority", $asm1C.TypeRef("System.Messaging.MessagePriority"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgPriority"]; });

    $.Property({Static:false, Public:true }, "Recoverable", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgRecoverable"]; });

    $.Property({Static:false, Public:true }, "ResponseQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgResponseQueue"]; });

    $.Property({Static:false, Public:true }, "SecurityContext", $asm1C.TypeRef("System.Messaging.SecurityContext"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "SenderCertificate", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderCertificate"]; });

    $.Property({Static:false, Public:true }, "SenderId", $jsilcore.TypeRef("System.Array", [$.Byte]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderId"]; });

    $.Property({Static:false, Public:true }, "SenderVersion", $.Int64)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderVersion"]; });

    $.Property({Static:false, Public:true }, "SentTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSentTime"]; });

    $.Property({Static:false, Public:true }, "SourceMachine", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSourceMachine"]; });

    $.Property({Static:false, Public:true }, "TimeToBeReceived", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.TimeoutConverter.__Type__]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToBeReceived"]; });

    $.Property({Static:false, Public:true }, "TimeToReachQueue", $asm07.TypeRef("System.TimeSpan"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.TimeoutConverter.__Type__]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToReachQueue"]; });

    $.Property({Static:false, Public:true }, "TransactionId", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTransactionId"]; });

    $.Property({Static:false, Public:true }, "TransactionStatusQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTransactionStatusQueue"]; });

    $.Property({Static:false, Public:true }, "UseAuthentication", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseAuthentication"]; });

    $.Property({Static:false, Public:true }, "UseDeadLetterQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseDeadLetterQueue"]; });

    $.Property({Static:false, Public:true }, "UseEncryption", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseEncryption"]; });

    $.Property({Static:false, Public:true }, "UseJournalQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseJournalQueue"]; });

    $.Property({Static:false, Public:true }, "UseTracing", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.ReadOnlyAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseTracing"]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerAttribute"), function () { return ["System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

})();

/* class System.Messaging.MessageEnumerator */ 

(function MessageEnumerator$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.MarshalByRefObject"), 
      Name: "System.Messaging.MessageEnumerator", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueue"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CursorHandle", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.CursorHandle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "owner", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "handle", $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"));

    $.Field({Static:false, Public:false}, "index", $.Int32);

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Field({Static:false, Public:false}, "useCorrectRemoveCurrent", $.Boolean);

    $.Property({Static:false, Public:true }, "Current", $asm1C.TypeRef("System.Messaging.Message"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "CursorHandle", $.IntPtr);

    $.Property({Static:false, Public:false}, "Handle", $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator"), 
      /* 1 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.MessageLookupAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageLookupAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Current: 0, 
    Next: 1, 
    Previous: 2, 
    First: 4, 
    Last: 8, 
  }
);

/* enum System.Messaging.MessagePriority */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessagePriority", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Lowest: 0, 
    VeryLow: 1, 
    Low: 2, 
    Normal: 3, 
    AboveNormal: 4, 
    High: 5, 
    VeryHigh: 6, 
    Highest: 7, 
  }
);

/* class System.Messaging.MessagePropertyFilter */ 

(function MessagePropertyFilter$Members () {
  var $, $thisType;
































































































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessagePropertyFilter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearAll", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AcknowledgeType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Acknowledgment", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AdministrationQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AppSpecific", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ArrivedTime", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AttachSenderId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authenticated", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AuthenticationProviderName", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AuthenticationProviderType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Body", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ConnectorType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CorrelationId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultBodySize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultExtensionSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultLabelSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DestinationQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DestinationSymmetricKey", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DigitalSignature", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EncryptionAlgorithm", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Extension", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HashAlgorithm", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFirstInTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsLastInTransaction", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LookupId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageType", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Priority", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Recoverable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResponseQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SecurityContext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderCertificate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderVersion", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SentTime", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SourceMachine", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToBeReceived", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeToReachQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransactionId", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TransactionStatusQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseAuthentication", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseDeadLetterQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseEncryption", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseJournalQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseTracing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AcknowledgeType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Acknowledgment", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AdministrationQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AppSpecific", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ArrivedTime", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AttachSenderId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Authenticated", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AuthenticationProviderName", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AuthenticationProviderType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Body", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ConnectorType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CorrelationId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DefaultBodySize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DefaultExtensionSize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DefaultLabelSize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DestinationQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DestinationSymmetricKey", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DigitalSignature", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EncryptionAlgorithm", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Extension", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_HashAlgorithm", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Id", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsFirstInTransaction", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsLastInTransaction", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_LookupId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MessageType", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Priority", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Recoverable", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ResponseQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_SecurityContext", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SenderCertificate", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SenderId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SenderVersion", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SentTime", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SourceMachine", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToBeReceived", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TimeToReachQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TransactionId", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TransactionStatusQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseAuthentication", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseDeadLetterQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseEncryption", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseJournalQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseTracing", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAll", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SetDefaults", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "ACKNOWLEDGEMENT", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "ACKNOWLEDGE_TYPE", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "ADMIN_QUEUE", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "BODY", $.Int32, 16);

    $.Constant({Static:true , Public:false}, "LABEL", $.Int32, 32);

    $.Constant({Static:true , Public:false}, "ID", $.Int32, 64);

    $.Constant({Static:true , Public:false}, "USE_DEADLETTER_QUEUE", $.Int32, 128);

    $.Constant({Static:true , Public:false}, "RESPONSE_QUEUE", $.Int32, 256);

    $.Constant({Static:true , Public:false}, "MESSAGE_TYPE", $.Int32, 512);

    $.Constant({Static:true , Public:false}, "USE_JOURNALING", $.Int32, 1024);

    $.Constant({Static:true , Public:false}, "LOOKUP_ID", $.Int32, 2048);

    $.Constant({Static:true , Public:false}, "APP_SPECIFIC", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "ARRIVED_TIME", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "ATTACH_SENDER_ID", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "AUTHENTICATED", $.Int32, 16);

    $.Constant({Static:true , Public:false}, "CONNECTOR_TYPE", $.Int32, 32);

    $.Constant({Static:true , Public:false}, "CORRELATION_ID", $.Int32, 64);

    $.Constant({Static:true , Public:false}, "CRYPTOGRAPHIC_PROVIDER_NAME", $.Int32, 128);

    $.Constant({Static:true , Public:false}, "CRYPTOGRAPHIC_PROVIDER_TYPE", $.Int32, 256);

    $.Constant({Static:true , Public:false}, "IS_RECOVERABLE", $.Int32, 512);

    $.Constant({Static:true , Public:false}, "DIGITAL_SIGNATURE", $.Int32, 1024);

    $.Constant({Static:true , Public:false}, "ENCRYPTION_ALGORITHM", $.Int32, 2048);

    $.Constant({Static:true , Public:false}, "EXTENSION", $.Int32, 4096);

    $.Constant({Static:true , Public:false}, "FOREIGN_ADMIN_QUEUE", $.Int32, 8192);

    $.Constant({Static:true , Public:false}, "HASH_ALGORITHM", $.Int32, 16384);

    $.Constant({Static:true , Public:false}, "DESTINATION_QUEUE", $.Int32, 32768);

    $.Constant({Static:true , Public:false}, "PRIORITY", $.Int32, 65536);

    $.Constant({Static:true , Public:false}, "SECURITY_CONTEXT", $.Int32, 131072);

    $.Constant({Static:true , Public:false}, "SENDER_CERTIFICATE", $.Int32, 262144);

    $.Constant({Static:true , Public:false}, "SENDER_ID", $.Int32, 524288);

    $.Constant({Static:true , Public:false}, "SENT_TIME", $.Int32, 1048576);

    $.Constant({Static:true , Public:false}, "SOURCE_MACHINE", $.Int32, 2097152);

    $.Constant({Static:true , Public:false}, "SYMMETRIC_KEY", $.Int32, 4194304);

    $.Constant({Static:true , Public:false}, "TIME_TO_BE_RECEIVED", $.Int32, 8388608);

    $.Constant({Static:true , Public:false}, "TIME_TO_REACH_QUEUE", $.Int32, 16777216);

    $.Constant({Static:true , Public:false}, "USE_AUTHENTICATION", $.Int32, 33554432);

    $.Constant({Static:true , Public:false}, "USE_ENCRYPTION", $.Int32, 67108864);

    $.Constant({Static:true , Public:false}, "USE_TRACING", $.Int32, 134217728);

    $.Constant({Static:true , Public:false}, "VERSION", $.Int32, 268435456);

    $.Constant({Static:true , Public:false}, "IS_FIRST_IN_TRANSACTION", $.Int32, 536870912);

    $.Constant({Static:true , Public:false}, "IS_LAST_IN_TRANSACTION", $.Int32, 1073741824);

    $.Constant({Static:true , Public:false}, "TRANSACTION_ID", $.Int32, -2147483648);

    $.Field({Static:false, Public:false}, "data1", $.Int32);

    $.Field({Static:false, Public:false}, "data2", $.Int32);

    $.Constant({Static:true , Public:false}, "defaultBodySize", $.Int32, 1024);

    $.Constant({Static:true , Public:false}, "defaultExtensionSize", $.Int32, 255);

    $.Constant({Static:true , Public:false}, "defaultLabelSize", $.Int32, 255);

    $.Field({Static:false, Public:false}, "bodySize", $.Int32);

    $.Field({Static:false, Public:false}, "extensionSize", $.Int32);

    $.Field({Static:false, Public:false}, "labelSize", $.Int32);

    $.Property({Static:false, Public:true }, "Acknowledgment", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAcknowledgement"]; });

    $.Property({Static:false, Public:true }, "AcknowledgeType", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAcknowledgeType"]; });

    $.Property({Static:false, Public:true }, "AdministrationQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAdministrationQueue"]; });

    $.Property({Static:false, Public:true }, "AppSpecific", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAppSpecific"]; });

    $.Property({Static:false, Public:true }, "ArrivedTime", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgArrivedTime"]; });

    $.Property({Static:false, Public:true }, "AttachSenderId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAttachSenderId"]; });

    $.Property({Static:false, Public:true }, "Authenticated", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticated"]; });

    $.Property({Static:false, Public:true }, "AuthenticationProviderName", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticationProviderName"]; });

    $.Property({Static:false, Public:true }, "AuthenticationProviderType", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgAuthenticationProviderType"]; });

    $.Property({Static:false, Public:true }, "Body", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgBody"]; });

    $.Property({Static:false, Public:true }, "ConnectorType", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgConnectorType"]; });

    $.Property({Static:false, Public:true }, "CorrelationId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgCorrelationId"]; });

    $.Property({Static:false, Public:true }, "DefaultBodySize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [1024]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDefaultBodySize"]; });

    $.Property({Static:false, Public:true }, "DefaultExtensionSize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [255]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDefaultExtensionSize"]; });

    $.Property({Static:false, Public:true }, "DefaultLabelSize", $.Int32)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [255]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDefaultLabelSize"]; });

    $.Property({Static:false, Public:true }, "DestinationQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDestinationQueue"]; });

    $.Property({Static:false, Public:true }, "DestinationSymmetricKey", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDestinationSymmetricKey"]; });

    $.Property({Static:false, Public:true }, "DigitalSignature", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgDigitalSignature"]; });

    $.Property({Static:false, Public:true }, "EncryptionAlgorithm", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgEncryptionAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Extension", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgExtension"]; });

    $.Property({Static:false, Public:true }, "HashAlgorithm", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgHashAlgorithm"]; });

    $.Property({Static:false, Public:true }, "Id", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgId"]; });

    $.Property({Static:false, Public:true }, "IsFirstInTransaction", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgIsFirstInTransaction"]; });

    $.Property({Static:false, Public:true }, "IsLastInTransaction", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgIsLastInTransaction"]; });

    $.Property({Static:false, Public:true }, "Label", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgLabel"]; });

    $.Property({Static:false, Public:true }, "LookupId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgLookupId"]; });

    $.Property({Static:false, Public:true }, "MessageType", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgMessageType"]; });

    $.Property({Static:false, Public:true }, "Priority", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgPriority"]; });

    $.Property({Static:false, Public:true }, "Recoverable", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgRecoverable"]; });

    $.Property({Static:false, Public:true }, "ResponseQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgResponseQueue"]; });

    $.Property({Static:false, Public:false}, "SecurityContext", $.Boolean);

    $.Property({Static:false, Public:true }, "SenderCertificate", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderCertificate"]; });

    $.Property({Static:false, Public:true }, "SenderId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderId"]; });

    $.Property({Static:false, Public:true }, "SenderVersion", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSenderVersion"]; });

    $.Property({Static:false, Public:true }, "SentTime", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSentTime"]; });

    $.Property({Static:false, Public:true }, "SourceMachine", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgSourceMachine"]; });

    $.Property({Static:false, Public:true }, "TimeToBeReceived", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToBeReceived"]; });

    $.Property({Static:false, Public:true }, "TimeToReachQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTimeToReachQueue"]; });

    $.Property({Static:false, Public:true }, "TransactionId", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTransactionId"]; });

    $.Property({Static:false, Public:true }, "TransactionStatusQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgTransactionStatusQueue"]; });

    $.Property({Static:false, Public:true }, "UseAuthentication", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseAuthentication"]; });

    $.Property({Static:false, Public:true }, "UseDeadLetterQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseDeadLetterQueue"]; });

    $.Property({Static:false, Public:true }, "UseEncryption", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseEncryption"]; });

    $.Property({Static:false, Public:true }, "UseJournalQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [true]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseJournalQueue"]; });

    $.Property({Static:false, Public:true }, "UseTracing", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MsgUseTracing"]; });

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm0A.System.ComponentModel.ExpandableObjectConverter.__Type__]; });

})();

/* class System.Messaging.MessageQueue */ 

(function MessageQueue$Members () {
  var $, $thisType;















































































































































































  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.Component"), 
      Name: "System.Messaging.MessageQueue", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm1C.TypeRef("System.Messaging.QueueAccessMode")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.Boolean, $asm1C.TypeRef("System.Messaging.QueueAccessMode")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_PeekCompleted", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.PeekCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ReceiveCompleted", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.ReceiveCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPeek", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPeek", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPeek", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.TimeSpan"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPeek", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPeek", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor"), 
          $asm1C.TypeRef("System.Messaging.PeekAction"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReceive", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReceive", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReceive", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [$asm07.TypeRef("System.TimeSpan"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReceive", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $.Object, 
          $asm07.TypeRef("System.AsyncCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginReceive", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor"), 
          $.Object, $asm07.TypeRef("System.AsyncCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Cleanup", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "ClearConnectionCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateCursor", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Cursor"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMessageQueuesSnapshot", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateMessageQueuesSnapshot", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "Delete", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EndAsyncOperation", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndPeek", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndReceive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Exists", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateQueueProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AccessMode", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.QueueAccessMode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authenticate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BasePriority", 
      JSIL.MethodSignature.Return($.Int16)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ComputerName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CreateTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultPropertiesToSend", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.DefaultPropertiesToSend"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DenySharedReceive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_EnableConnectionCache", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EncryptionRequired", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.EncryptionRequired"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FormatName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Formatter", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.IMessageFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LastModifyTime", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumJournalSize", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumQueueSize", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageReadPropertyFilter", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessagePropertyFilter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_MQInfo", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue+MQCacheableInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MulticastAddress", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_OutstandingAsyncRequests", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Hashtable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.QueuePropertyVariants"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PropertyFilter", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue+QueuePropertyFilter"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_QueueInfoKey", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue+QueueInfoKeyHolder"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_QueueName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_QueuePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReadHandle", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SynchronizingObject", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.ComponentModel.ISynchronizeInvoke"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transactional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseJournalQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WriteHandle", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAllMessages", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.Message")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Attribute($asm07.TypeRef("System.ObsoleteAttribute"), function () { return ["This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead."]; });

    $.ExternalMethod({Static:true , Public:true }, "GetMachineId", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Guid"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetMessageEnumerator", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageEnumerator"))
    )
      .Attribute($asm07.TypeRef("System.ObsoleteAttribute"), function () { return ["This method returns a MessageEnumerator that implements RemoveCurrent family of methods incorrectly. Please use GetMessageEnumerator2 instead."]; });

    $.ExternalMethod({Static:false, Public:true }, "GetMessageEnumerator2", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageEnumerator"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetMessageQueueEnumerator", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueueEnumerator"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetMessageQueueEnumerator", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.MessageQueueEnumerator"), [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetMessageQueueEnumerator", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.MessageQueueEnumerator"), [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPrivateQueuesByMachine", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPublicQueues", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Type]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPublicQueues", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPublicQueuesByCategory", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$asm07.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPublicQueuesByLabel", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPublicQueuesByLabel", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPublicQueuesByMachine", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Type]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSecurityContext", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.SecurityContext"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalReceiveByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.Boolean, $asm1C.TypeRef("System.Messaging.MessageLookupAction"), 
          $.Int64, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsCanonicalPath", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsCashedInfoInvalidOnReceive", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsFatalError", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsMemoryError", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnRequestCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Peek", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Peek", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Peek", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor"), 
          $asm1C.TypeRef("System.Messaging.PeekAction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "PeekByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm1C.TypeRef("System.Messaging.MessageLookupAction"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "Purge", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Receive", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Cursor"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReceiveAsync", 
      new JSIL.MethodSignature($asm07.TypeRef("System.IAsyncResult"), [
          $asm07.TypeRef("System.TimeSpan"), $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), 
          $.Int32, $asm07.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReceiveBy", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $.Boolean, $.Boolean, 
          $.Boolean, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByCorrelationId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.String, $asm07.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveById", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $.String, $asm07.TypeRef("System.TimeSpan"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [$.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm1C.TypeRef("System.Messaging.MessageLookupAction"), $.Int64, 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReceiveByLookupId", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm1C.TypeRef("System.Messaging.MessageLookupAction"), $.Int64, 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReceiveCurrent", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.Message"), [
          $asm07.TypeRef("System.TimeSpan"), $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), $asm1C.TypeRef("System.Messaging.MessagePropertyFilter"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Refresh", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_PeekCompleted", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.PeekCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ReceiveCompleted", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.ReceiveCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ResetPermissions", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ResolveFormatNameFromQueuePath", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ResolveQueueFromLabel", 
      new JSIL.MethodSignature($.Type, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "SaveQueueProperties", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      new JSIL.MethodSignature(null, [$.Object, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      new JSIL.MethodSignature(null, [$.Object, $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      new JSIL.MethodSignature(null, [$.Object, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Send", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Send", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SendInternal", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm1C.TypeRef("System.Messaging.MessageQueueTransaction"), 
          $asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Authenticate", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BasePriority", 
      JSIL.MethodSignature.Action($.Int16)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Category", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DefaultPropertiesToSend", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.DefaultPropertiesToSend"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DenySharedReceive", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "set_EnableConnectionCache", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EncryptionRequired", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.EncryptionRequired"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Formatter", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.IMessageFormatter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MachineName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaximumJournalSize", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaximumQueueSize", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MessageReadPropertyFilter", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessagePropertyFilter"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MulticastAddress", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_QueueName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SynchronizingObject", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.ISynchronizeInvoke"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseJournalQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAccessMode", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.QueueAccessMode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPermissions", 
      new JSIL.MethodSignature(null, [$.String, $asm1C.TypeRef("System.Messaging.MessageQueueAccessRights")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPermissions", 
      new JSIL.MethodSignature(null, [
          $.String, $asm1C.TypeRef("System.Messaging.MessageQueueAccessRights"), 
          $asm1C.TypeRef("System.Messaging.AccessControlEntryType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPermissions", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueueAccessControlEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPermissions", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AccessControlList"))
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafePurgeQueue", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeReceiveByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $.Int64, $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
          $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeReceiveByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $.Int64, $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
          $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeReceiveMessage", 
      new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
          $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), 
          $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeReceiveMessage", 
      new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
          $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), 
          $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeSendMessage", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $.IntPtr])
    );

    $.ExternalMethod({Static:false, Public:false}, "StaleSafeSendMessage", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), $asm1C.TypeRef("System.Messaging.Interop.ITransaction")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidatePath", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "InfiniteTimeout", $asm07.TypeRef("System.TimeSpan"));

    $.Field({Static:true , Public:true , ReadOnly:true }, "InfiniteQueueSize", $.Int64, function ($pi) {
        return ($asm07.System.UInt64.FromNumber(-1)).ToInt64();
      });

    $.Field({Static:false, Public:false}, "defaultProperties", $asm1C.TypeRef("System.Messaging.DefaultPropertiesToSend"));

    $.Field({Static:false, Public:false}, "receiveFilter", $asm1C.TypeRef("System.Messaging.MessagePropertyFilter"));

    $.Field({Static:false, Public:false}, "accessMode", $asm1C.TypeRef("System.Messaging.QueueAccessMode"));

    $.Field({Static:false, Public:false}, "sharedMode", $.Int32);

    $.Field({Static:false, Public:false}, "formatName", $.String);

    $.Field({Static:false, Public:false}, "queuePath", $.String);

    $.Field({Static:false, Public:false}, "path", $.String);

    $.Field({Static:false, Public:false}, "enableCache", $.Boolean);

    $.Field({Static:false, Public:false}, "properties", $asm1C.TypeRef("System.Messaging.Interop.QueuePropertyVariants"));

    $.Field({Static:false, Public:false}, "formatter", $asm1C.TypeRef("System.Messaging.IMessageFormatter"));

    $.Field({Static:true , Public:false}, "computerName", $asm07.TypeRef("System.String"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "OSVersion", $asm07.TypeRef("System.Version"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "WinXP", $asm07.TypeRef("System.Version"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "Msmq3OrNewer", $.Boolean);

    $.Field({Static:false, Public:false}, "filter", $asm1C.TypeRef("System.Messaging.MessageQueue+QueuePropertyFilter"));

    $.Field({Static:false, Public:false}, "authenticate", $.Boolean);

    $.Field({Static:false, Public:false}, "basePriority", $.Int16);

    $.Field({Static:false, Public:false}, "createTime", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "encryptionLevel", $.Int32);

    $.Field({Static:false, Public:false}, "id", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "label", $.String);

    $.Field({Static:false, Public:false}, "multicastAddress", $.String);

    $.Field({Static:false, Public:false}, "lastModifyTime", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "journalSize", $.Int64);

    $.Field({Static:false, Public:false}, "queueSize", $.Int64);

    $.Field({Static:false, Public:false}, "queueType", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "useJournaling", $.Boolean);

    $.Field({Static:false, Public:false}, "mqInfo", $asm1C.TypeRef("System.Messaging.MessageQueue+MQCacheableInfo"));

    $.Field({Static:false, Public:false}, "attached", $asm07.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "useThreadPool", $.Boolean);

    $.Field({Static:false, Public:false}, "onRequestCompleted", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "onPeekCompleted", $asm1C.TypeRef("System.Messaging.PeekCompletedEventHandler"));

    $.Field({Static:false, Public:false}, "onReceiveCompleted", $asm1C.TypeRef("System.Messaging.ReceiveCompletedEventHandler"));

    $.Field({Static:false, Public:false}, "synchronizingObject", $asm0A.TypeRef("System.ComponentModel.ISynchronizeInvoke"));

    $.Field({Static:false, Public:false}, "outstandingAsyncRequests", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "SUFIX_PRIVATE", $.String, "\\PRIVATE$");

    $.Field({Static:true , Public:false, ReadOnly:true }, "SUFIX_JOURNAL", $.String, "\\JOURNAL$");

    $.Field({Static:true , Public:false, ReadOnly:true }, "SUFIX_DEADLETTER", $.String, "\\DEADLETTER$");

    $.Field({Static:true , Public:false, ReadOnly:true }, "SUFIX_DEADXACT", $.String, "\\XACTDEADLETTER$");

    $.Field({Static:true , Public:false, ReadOnly:true }, "PREFIX_LABEL", $.String, "LABEL:");

    $.Field({Static:true , Public:false, ReadOnly:true }, "PREFIX_FORMAT_NAME", $.String, "FORMATNAME:");

    $.Field({Static:true , Public:false}, "formatNameCache", $asm1C.TypeRef("System.Messaging.MessageQueue+CacheTable`2", [$.String, $.String]));

    $.Field({Static:true , Public:false}, "queueInfoCache", $asm1C.TypeRef("System.Messaging.MessageQueue+CacheTable`2", [$asm1C.TypeRef("System.Messaging.MessageQueue+QueueInfoKeyHolder"), $asm1C.TypeRef("System.Messaging.MessageQueue+MQCacheableInfo")]));

    $.Field({Static:true , Public:false}, "enableConnectionCache", $.Boolean, false);

    $.Field({Static:false, Public:false}, "queueInfoKey", $asm1C.TypeRef("System.Messaging.MessageQueue+QueueInfoKeyHolder"));

    $.Field({Static:false, Public:false}, "administerGranted", $.Boolean);

    $.Field({Static:false, Public:false}, "browseGranted", $.Boolean);

    $.Field({Static:false, Public:false}, "sendGranted", $.Boolean);

    $.Field({Static:false, Public:false}, "receiveGranted", $.Boolean);

    $.Field({Static:false, Public:false}, "peekGranted", $.Boolean);

    $.Field({Static:false, Public:false}, "syncRoot", $.Object);

    $.Field({Static:true , Public:false}, "staticSyncRoot", $.Object);


    function MessageQueue__cctor () {
      $thisType.InfiniteTimeout = new $asm07.System.TimeSpan();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MessageQueue__cctor
    );

    $.Property({Static:false, Public:true }, "AccessMode", $asm1C.TypeRef("System.Messaging.QueueAccessMode"));

    $.Property({Static:false, Public:true }, "Authenticate", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Authenticate"]; });

    $.Property({Static:false, Public:true }, "BasePriority", $.Int16)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_BasePriority"]; });

    $.Property({Static:false, Public:true }, "CanRead", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_CanRead"]; });

    $.Property({Static:false, Public:true }, "CanWrite", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_CanWrite"]; });

    $.Property({Static:false, Public:true }, "Category", $asm07.TypeRef("System.Guid"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Category"]; });

    $.Property({Static:true , Public:false}, "ComputerName", $.String);

    $.Property({Static:false, Public:true }, "CreateTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_CreateTime"]; });

    $.Property({Static:false, Public:true }, "DefaultPropertiesToSend", $asm1C.TypeRef("System.Messaging.DefaultPropertiesToSend"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Content]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_DefaultPropertiesToSend"]; });

    $.Property({Static:false, Public:true }, "DenySharedReceive", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_DenySharedReceive"]; });

    $.Property({Static:true , Public:true }, "EnableConnectionCache", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "EncryptionRequired", $asm1C.TypeRef("System.Messaging.EncryptionRequired"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_EncryptionRequired"]; });

    $.Property({Static:false, Public:true }, "FormatName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_FormatName"]; });

    $.Property({Static:false, Public:true }, "Formatter", $asm1C.TypeRef("System.Messaging.IMessageFormatter"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.MessageFormatterConverter.__Type__]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Formatter"]; });

    $.Property({Static:false, Public:true }, "Id", $asm07.TypeRef("System.Guid"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_GuidId"]; });

    $.Property({Static:false, Public:true }, "Label", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Label"]; });

    $.Property({Static:false, Public:true }, "LastModifyTime", $asm07.TypeRef("System.DateTime"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_LastModifyTime"]; });

    $.Property({Static:false, Public:true }, "MachineName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_MachineName"]; });

    $.Property({Static:false, Public:true }, "MaximumJournalSize", $.Int64)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_MaximumJournalSize"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.SizeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "MaximumQueueSize", $.Int64)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_MaximumQueueSize"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.SizeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "MessageReadPropertyFilter", $asm1C.TypeRef("System.Messaging.MessagePropertyFilter"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Content]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_MessageReadPropertyFilter"]; });

    $.Property({Static:false, Public:false}, "MQInfo", $asm1C.TypeRef("System.Messaging.MessageQueue+MQCacheableInfo"));

    $.Property({Static:false, Public:true }, "MulticastAddress", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_MulticastAddress"]; });

    $.Property({Static:false, Public:true }, "Path", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorAttribute"), function () { return ["System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.SettingsBindableAttribute"), function () { return [true]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.RefreshPropertiesAttribute"), function () { return [$asm0A.System.ComponentModel.RefreshProperties.All]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return ["System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Path"]; });

    $.Property({Static:false, Public:false}, "Properties", $asm1C.TypeRef("System.Messaging.Interop.QueuePropertyVariants"));

    $.Property({Static:false, Public:false}, "PropertyFilter", $asm1C.TypeRef("System.Messaging.MessageQueue+QueuePropertyFilter"));

    $.Property({Static:false, Public:true }, "QueueName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_QueueName"]; });

    $.Property({Static:false, Public:false}, "QueuePath", $.String);

    $.Property({Static:false, Public:true }, "ReadHandle", $.IntPtr)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_ReadHandle"]; });

    $.Property({Static:false, Public:true }, "SynchronizingObject", $asm0A.TypeRef("System.ComponentModel.ISynchronizeInvoke"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [null]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_SynchronizingObject"]; });

    $.Property({Static:false, Public:true }, "Transactional", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_Transactional"]; });

    $.Property({Static:false, Public:true }, "UseJournalQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_UseJournalQueue"]; });

    $.Property({Static:false, Public:true }, "WriteHandle", $.IntPtr)
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_WriteHandle"]; });

    $.Property({Static:false, Public:false}, "OutstandingAsyncRequests", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "QueueInfoKey", $asm1C.TypeRef("System.Messaging.MessageQueue+QueueInfoKeyHolder"));

    $.Event({Static:false, Public:true }, "PeekCompleted", $asm1C.TypeRef("System.Messaging.PeekCompletedEventHandler"))
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_PeekCompleted"]; });

    $.Event({Static:false, Public:true }, "ReceiveCompleted", $asm1C.TypeRef("System.Messaging.ReceiveCompletedEventHandler"))
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MQ_ReceiveCompleted"]; });

    $.ImplementInterfaces(
      /* 2 */ $asm07.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultEventAttribute"), function () { return ["ReceiveCompleted"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.MessageQueueConverter.__Type__]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.EditorAttribute"), function () { return ["System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
    .Attribute($asm0A.TypeRef("System.ComponentModel.InstallerTypeAttribute"), function () { return [$asm1C.System.Messaging.MessageQueueInstaller.__Type__]; })
    .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["MessageQueueDesc"]; });

})();

/* class System.Messaging.MessageQueue+QueuePropertyFilter */ 

(function QueuePropertyFilter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+QueuePropertyFilter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearAll", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Authenticate", $.Boolean);

    $.Field({Static:false, Public:true }, "BasePriority", $.Boolean);

    $.Field({Static:false, Public:true }, "CreateTime", $.Boolean);

    $.Field({Static:false, Public:true }, "EncryptionLevel", $.Boolean);

    $.Field({Static:false, Public:true }, "Id", $.Boolean);

    $.Field({Static:false, Public:true }, "Transactional", $.Boolean);

    $.Field({Static:false, Public:true }, "Label", $.Boolean);

    $.Field({Static:false, Public:true }, "LastModifyTime", $.Boolean);

    $.Field({Static:false, Public:true }, "MaximumJournalSize", $.Boolean);

    $.Field({Static:false, Public:true }, "MaximumQueueSize", $.Boolean);

    $.Field({Static:false, Public:true }, "MulticastAddress", $.Boolean);

    $.Field({Static:false, Public:true }, "Path", $.Boolean);

    $.Field({Static:false, Public:true }, "Category", $.Boolean);

    $.Field({Static:false, Public:true }, "UseJournalQueue", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueue+AsynchronousRequest */ 

(function AsynchronousRequest$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+AsynchronousRequest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1C.TypeRef("System.Messaging.MessageQueue"), $.UInt32, 
          $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), $.Int32, 
          $.Boolean, $.Object, 
          $asm07.TypeRef("System.AsyncCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginRead", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "End", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Action", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncState", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncWaitHandle", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Threading.WaitHandle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CompletedSynchronously", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsCompleted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompletionStatusChanged", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnMessageReceived", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.IntPtr, 
          $.Int32, $.Int32, 
          $.IntPtr, $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
          $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseCompletionEvent", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")])])
    );

    $.Field({Static:false, Public:false}, "onCompletionStatusChanged", $asm07.TypeRef("System.Threading.IOCompletionCallback"));

    $.Field({Static:false, Public:false}, "onMessageReceived", $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"));

    $.Field({Static:false, Public:false}, "callback", $asm07.TypeRef("System.AsyncCallback"));

    $.Field({Static:false, Public:false}, "resetEvent", $asm07.TypeRef("System.Threading.ManualResetEvent"));

    $.Field({Static:false, Public:false}, "asyncState", $.Object);

    $.Field({Static:false, Public:false}, "owner", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "isCompleted", $.Boolean);

    $.Field({Static:false, Public:false}, "status", $.Int32);

    $.Field({Static:false, Public:false}, "message", $asm1C.TypeRef("System.Messaging.Message"));

    $.Field({Static:false, Public:false}, "action", $.Int32);

    $.Field({Static:false, Public:false}, "timeout", $.UInt32);

    $.Field({Static:false, Public:false}, "cursorHandle", $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"));

    $.Property({Static:false, Public:false}, "Action", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncState", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncWaitHandle", $asm07.TypeRef("System.Threading.WaitHandle"));

    $.Property({Static:false, Public:true , Virtual:true }, "CompletedSynchronously", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsCompleted", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IAsyncResult")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueue+CacheTable`2 */ 

(function CacheTable$b2$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+CacheTable`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["Key", "Value"], 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $asm07.TypeRef("System.TimeSpan")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearStale", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Get", 
      new JSIL.MethodSignature($.GenericParameter("Value"), [$.GenericParameter("Key")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Put", 
      new JSIL.MethodSignature(null, [$.GenericParameter("Key"), $.GenericParameter("Value")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("Key")])
    );

    $.Field({Static:false, Public:false}, "table", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.GenericParameter("Key"), $asm1C.TypeRef("System.Messaging.MessageQueue+CacheTable`2+CacheEntry`1", [
            $.GenericParameter("Key"), $.GenericParameter("Value"), 
            $.GenericParameter("Value")
          ])]));

    $.Field({Static:false, Public:false}, "rwLock", $asm07.TypeRef("System.Threading.ReaderWriterLock"));

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "capacity", $.Int32);

    $.Field({Static:false, Public:false}, "originalCapacity", $.Int32);

    $.Field({Static:false, Public:false}, "staleTime", $asm07.TypeRef("System.TimeSpan"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueue+CacheTable`2+CacheEntry`1 */ 

(function CacheEntry$b1$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+CacheTable`2+CacheEntry`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["Key", "Value", "T"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "contents", $.GenericParameter("T"));

    $.Field({Static:false, Public:true }, "timeStamp", $asm07.TypeRef("System.DateTime"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueue+MQCacheableInfo */ 

(function MQCacheableInfo$Members () {
  var $, $thisType;















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+MQCacheableInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm1C.TypeRef("System.Messaging.QueueAccessMode"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddRef", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "BindToThreadPool", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CloseIfNotReferenced", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReadHandle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RefCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transactional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WriteHandle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Release", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "readHandle", $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"));

    $.Field({Static:false, Public:false}, "writeHandle", $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"));

    $.Field({Static:false, Public:false}, "isTransactional", $.Boolean);

    $.Field({Static:false, Public:false}, "isTransactional_valid", $asm07.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "boundToThreadPool", $asm07.TypeRef("System.Boolean"));

    $.Field({Static:false, Public:false}, "formatName", $.String);

    $.Field({Static:false, Public:false}, "shareMode", $.Int32);

    $.Field({Static:false, Public:false}, "accessMode", $asm1C.TypeRef("System.Messaging.QueueAccessModeHolder"));

    $.Field({Static:false, Public:false}, "refCount", $.Int32);

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Field({Static:false, Public:false}, "syncRoot", $.Object);

    $.Property({Static:false, Public:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true }, "RefCount", $.Int32);

    $.Property({Static:false, Public:true }, "ReadHandle", $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"));

    $.Property({Static:false, Public:true }, "WriteHandle", $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"));

    $.Property({Static:false, Public:true }, "Transactional", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueue+QueueInfoKeyHolder */ 

(function QueueInfoKeyHolder$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueue+QueueInfoKeyHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm1C.TypeRef("System.Messaging.QueueAccessMode")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "formatName", $.String);

    $.Field({Static:false, Public:false}, "accessMode", $asm1C.TypeRef("System.Messaging.QueueAccessMode"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueueAccessControlEntry */ 

(function MessageQueueAccessControlEntry$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.AccessControlEntry"), 
      Name: "System.Messaging.MessageQueueAccessControlEntry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Trustee"), $asm1C.TypeRef("System.Messaging.MessageQueueAccessRights")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1C.TypeRef("System.Messaging.Trustee"), $asm1C.TypeRef("System.Messaging.MessageQueueAccessRights"), 
          $asm1C.TypeRef("System.Messaging.AccessControlEntryType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageQueueAccessRights", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueueAccessRights"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MessageQueueAccessRights", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueueAccessRights"))
    );

    $.Property({Static:false, Public:true }, "MessageQueueAccessRights", $asm1C.TypeRef("System.Messaging.MessageQueueAccessRights"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.MessageQueueAccessRights */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageQueueAccessRights", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    DeleteMessage: 1, 
    PeekMessage: 2, 
    ReceiveMessage: 3, 
    WriteMessage: 4, 
    DeleteJournalMessage: 8, 
    ReceiveJournalMessage: 10, 
    SetQueueProperties: 16, 
    GetQueueProperties: 32, 
    DeleteQueue: 65536, 
    GetQueuePermissions: 131072, 
    GenericWrite: 131108, 
    GenericRead: 131115, 
    ChangeQueuePermissions: 262144, 
    TakeQueueOwnership: 524288, 
    FullControl: 983103, 
  }
);

/* class System.Messaging.MessageQueueCriteria */ 

(function MessageQueueCriteria$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueueCriteria", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearAll", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ConvertTime", 
      new JSIL.MethodSignature($.Int32, [$asm07.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CreatedAfter", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CreatedBefore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_FilterMachine", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ModifiedAfter", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ModifiedBefore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Reference", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Category", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CreatedAfter", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CreatedBefore", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MachineName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ModifiedAfter", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ModifiedBefore", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.DateTime"))
    );

    $.Field({Static:false, Public:false}, "createdAfter", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "createdBefore", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "label", $.String);

    $.Field({Static:false, Public:false}, "machine", $.String);

    $.Field({Static:false, Public:false}, "modifiedAfter", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "modifiedBefore", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "category", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "filter", $asm1C.TypeRef("System.Messaging.MessageQueueCriteria+CriteriaPropertyFilter"));

    $.Field({Static:false, Public:false}, "restrictions", $asm1C.TypeRef("System.Messaging.Interop.Restrictions"));

    $.Field({Static:false, Public:false}, "machineId", $asm07.TypeRef("System.Guid"));

    $.Field({Static:true , Public:false}, "minDate", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:true , Public:false}, "maxDate", $asm07.TypeRef("System.DateTime"));


    function MessageQueueCriteria__cctor () {
      $thisType.minDate = new $asm07.System.DateTime();
      $thisType.maxDate = new $asm07.System.DateTime();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MessageQueueCriteria__cctor
    );

    $.Property({Static:false, Public:true }, "CreatedAfter", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "CreatedBefore", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "FilterMachine", $.Boolean);

    $.Property({Static:false, Public:true }, "Label", $.String);

    $.Property({Static:false, Public:true }, "MachineName", $.String);

    $.Property({Static:false, Public:true }, "ModifiedAfter", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "ModifiedBefore", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "Reference", $asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"));

    $.Property({Static:false, Public:true }, "Category", $asm07.TypeRef("System.Guid"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueueCriteria+CriteriaPropertyFilter */ 

(function CriteriaPropertyFilter$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueueCriteria+CriteriaPropertyFilter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ClearAll", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "CreatedAfter", $.Boolean);

    $.Field({Static:false, Public:true }, "CreatedBefore", $.Boolean);

    $.Field({Static:false, Public:true }, "Label", $.Boolean);

    $.Field({Static:false, Public:true }, "MachineName", $.Boolean);

    $.Field({Static:false, Public:true }, "ModifiedAfter", $.Boolean);

    $.Field({Static:false, Public:true }, "ModifiedBefore", $.Boolean);

    $.Field({Static:false, Public:true }, "Category", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueueEnumerator */ 

(function MessageQueueEnumerator$Members () {
  var $, $thisType;












  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.MarshalByRefObject"), 
      Name: "System.Messaging.MessageQueueEnumerator", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueueCriteria"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueueCriteria"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.LocatorHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LocatorHandle", 
      JSIL.MethodSignature.Return($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "criteria", $asm1C.TypeRef("System.Messaging.MessageQueueCriteria"));

    $.Field({Static:false, Public:false}, "locatorHandle", $asm1C.TypeRef("System.Messaging.Interop.LocatorHandle"));

    $.Field({Static:false, Public:false}, "currentMessageQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "checkSecurity", $.Boolean);

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Property({Static:false, Public:true }, "Current", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "LocatorHandle", $.IntPtr);

    $.Property({Static:false, Public:false}, "Handle", $asm1C.TypeRef("System.Messaging.Interop.LocatorHandle"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.IEnumerator"), 
      /* 1 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.MessageQueueErrorCode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageQueueErrorCode", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Base: -1072824320, 
    Generic: -1072824319, 
    Property: -1072824318, 
    QueueNotFound: -1072824317, 
    QueueExists: -1072824315, 
    InvalidParameter: -1072824314, 
    InvalidHandle: -1072824313, 
    OperationCanceled: -1072824312, 
    SharingViolation: -1072824311, 
    ServiceNotAvailable: -1072824309, 
    MachineNotFound: -1072824307, 
    IllegalSort: -1072824304, 
    IllegalUser: -1072824303, 
    NoDs: -1072824301, 
    IllegalQueuePathName: -1072824300, 
    IllegalPropertyValue: -1072824296, 
    IllegalPropertyVt: -1072824295, 
    BufferOverflow: -1072824294, 
    IOTimeout: -1072824293, 
    IllegalCursorAction: -1072824292, 
    MessageAlreadyReceived: -1072824291, 
    IllegalFormatName: -1072824290, 
    FormatNameBufferTooSmall: -1072824289, 
    UnsupportedFormatNameOperation: -1072824288, 
    IllegalSecurityDescriptor: -1072824287, 
    SenderIdBufferTooSmall: -1072824286, 
    SecurityDescriptorBufferTooSmall: -1072824285, 
    CannotImpersonateClient: -1072824284, 
    AccessDenied: -1072824283, 
    PrivilegeNotHeld: -1072824282, 
    InsufficientResources: -1072824281, 
    UserBufferTooSmall: -1072824280, 
    MessageStorageFailed: -1072824278, 
    SenderCertificateBufferTooSmall: -1072824277, 
    InvalidCertificate: -1072824276, 
    CorruptedInternalCertificate: -1072824275, 
    NoInternalUserCertificate: -1072824273, 
    CorruptedSecurityData: -1072824272, 
    CorruptedPersonalCertStore: -1072824271, 
    ComputerDoesNotSupportEncryption: -1072824269, 
    BadSecurityContext: -1072824267, 
    CouldNotGetUserSid: -1072824266, 
    CouldNotGetAccountInfo: -1072824265, 
    IllegalCriteriaColumns: -1072824264, 
    IllegalPropertyId: -1072824263, 
    IllegalRelation: -1072824262, 
    IllegalPropertySize: -1072824261, 
    IllegalRestrictionPropertyId: -1072824260, 
    IllegalQueueProperties: -1072824259, 
    PropertyNotAllowed: -1072824258, 
    InsufficientProperties: -1072824257, 
    MachineExists: -1072824256, 
    IllegalMessageProperties: -1072824255, 
    DsIsFull: -1072824254, 
    DsError: -1072824253, 
    InvalidOwner: -1072824252, 
    UnsupportedAccessMode: -1072824251, 
    ResultBufferTooSmall: -1072824250, 
    DeleteConnectedNetworkInUse: -1072824248, 
    NoResponseFromObjectServer: -1072824247, 
    ObjectServerNotAvailable: -1072824246, 
    QueueNotAvailable: -1072824245, 
    DtcConnect: -1072824244, 
    TransactionImport: -1072824242, 
    TransactionUsage: -1072824240, 
    TransactionSequence: -1072824239, 
    MissingConnectorType: -1072824235, 
    StaleHandle: -1072824234, 
    TransactionEnlist: -1072824232, 
    QueueDeleted: -1072824230, 
    IllegalContext: -1072824229, 
    IllegalSortPropertyId: -1072824228, 
    LabelBufferTooSmall: -1072824226, 
    MqisServerEmpty: -1072824225, 
    MqisReadOnlyMode: -1072824224, 
    SymmetricKeyBufferTooSmall: -1072824223, 
    SignatureBufferTooSmall: -1072824222, 
    ProviderNameBufferTooSmall: -1072824221, 
    IllegalOperation: -1072824220, 
    WriteNotAllowed: -1072824219, 
    WksCantServeClient: -1072824218, 
    DependentClientLicenseOverflow: -1072824217, 
    CorruptedQueueWasDeleted: -1072824216, 
    RemoteMachineNotAvailable: -1072824215, 
    UnsupportedOperation: -1072824214, 
    EncryptionProviderNotSupported: -1072824213, 
    CannotSetCryptographicSecurityDescriptor: -1072824212, 
    CertificateNotProvided: -1072824211, 
    QDnsPropertyNotSupported: -1072824210, 
    CannotCreateCertificateStore: -1072824209, 
    CannotOpenCertificateStore: -1072824208, 
    IllegalEnterpriseOperation: -1072824207, 
    CannotGrantAddGuid: -1072824206, 
    CannotLoadMsmqOcm: -1072824205, 
    NoEntryPointMsmqOcm: -1072824204, 
    NoMsmqServersOnDc: -1072824203, 
    CannotJoinDomain: -1072824202, 
    CannotCreateOnGlobalCatalog: -1072824201, 
    GuidNotMatching: -1072824200, 
    PublicKeyNotFound: -1072824199, 
    PublicKeyDoesNotExist: -1072824198, 
    IllegalPrivateProperties: -1072824197, 
    NoGlobalCatalogInDomain: -1072824196, 
    NoMsmqServersOnGlobalCatalog: -1072824195, 
    CannotGetDistinguishedName: -1072824194, 
    CannotHashDataEx: -1072824193, 
    CannotSignDataEx: -1072824192, 
    CannotCreateHashEx: -1072824191, 
    FailVerifySignatureEx: -1072824190, 
    MessageNotFound: -1072824184, 
  }
);

/* class System.Messaging.MessageQueueException */ 

(function MessageQueueException$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Runtime.InteropServices.ExternalException"), 
      Name: "System.Messaging.MessageQueueException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MessageQueueErrorCode", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueueErrorCode"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm07.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetUnknownErrorMessage", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "nativeErrorCode", $.Int32);

    $.Property({Static:false, Public:true }, "MessageQueueErrorCode", $asm1C.TypeRef("System.Messaging.MessageQueueErrorCode"));

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueueInstaller */ 

(function MessageQueueInstaller$Members () {
  var $, $thisType;






































  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Configuration.Install.ComponentInstaller"), 
      Name: "System.Messaging.MessageQueueInstaller", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Commit", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CopyFromComponent", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.IComponent"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Authenticate", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BasePriority", 
      JSIL.MethodSignature.Return($.Int16)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EncryptionRequired", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.EncryptionRequired"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumJournalSize", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumQueueSize", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MulticastAddress", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Permissions", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.AccessControlList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transactional", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UninstallAction", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Configuration.Install.UninstallAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UseJournalQueue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Install", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalCopyFromComponent", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.ComponentModel.IComponent"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsEquivalentInstaller", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Configuration.Install.ComponentInstaller")])
    );

    $.ExternalMethod({Static:false, Public:false}, "RestoreQueue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Rollback", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Authenticate", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BasePriority", 
      JSIL.MethodSignature.Action($.Int16)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Category", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EncryptionRequired", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.EncryptionRequired"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaximumJournalSize", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaximumQueueSize", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MulticastAddress", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Permissions", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.AccessControlList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Transactional", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UninstallAction", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Configuration.Install.UninstallAction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UseJournalQueue", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeCategory", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Uninstall", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IDictionary"))
    );

    $.Field({Static:false, Public:false}, "authenticate", $.Boolean);

    $.Field({Static:false, Public:false}, "basePriority", $.Int16);

    $.Field({Static:false, Public:false}, "category", $asm07.TypeRef("System.Guid"));

    $.Field({Static:false, Public:false}, "encryptionRequired", $asm1C.TypeRef("System.Messaging.EncryptionRequired"));

    $.Field({Static:false, Public:false}, "label", $.String);

    $.Field({Static:false, Public:false}, "maximumJournalSize", $.Int64);

    $.Field({Static:false, Public:false}, "maximumQueueSize", $.Int64);

    $.Field({Static:false, Public:false}, "multicastAddress", $.String);

    $.Field({Static:false, Public:false}, "path", $.String);

    $.Field({Static:false, Public:false}, "transactional", $.Boolean);

    $.Field({Static:false, Public:false}, "useJournalQueue", $.Boolean);

    $.Field({Static:false, Public:false}, "permissions", $asm1C.TypeRef("System.Messaging.AccessControlList"));

    $.Field({Static:false, Public:false}, "uninstallAction", $asm0F.TypeRef("System.Configuration.Install.UninstallAction"));

    $.Property({Static:false, Public:true }, "Authenticate", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "BasePriority", $.Int16)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [0]; });

    $.Property({Static:false, Public:true }, "Category", $asm07.TypeRef("System.Guid"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return ["System.ComponentModel.GuidConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"]; });

    $.Property({Static:false, Public:true }, "EncryptionRequired", $asm1C.TypeRef("System.Messaging.EncryptionRequired"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm1C.System.Messaging.EncryptionRequired.Optional]; });

    $.Property({Static:false, Public:true }, "Label", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; });

    $.Property({Static:false, Public:true }, "MaximumJournalSize", $.Int64)
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.SizeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "MaximumQueueSize", $.Int64)
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return [$asm1C.System.Messaging.Design.SizeConverter.__Type__]; });

    $.Property({Static:false, Public:true }, "MulticastAddress", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; });

    $.Property({Static:false, Public:true }, "Path", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.EditorAttribute"), function () { return ["System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [""]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.TypeConverterAttribute"), function () { return ["System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"]; });

    $.Property({Static:false, Public:true }, "Permissions", $asm1C.TypeRef("System.Messaging.AccessControlList"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; });

    $.Property({Static:false, Public:true }, "Transactional", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "UninstallAction", $asm0F.TypeRef("System.Configuration.Install.UninstallAction"))
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [$asm0F.System.Configuration.Install.UninstallAction.Remove]; });

    $.Property({Static:false, Public:true }, "UseJournalQueue", $.Boolean)
      .Attribute($asm0A.TypeRef("System.ComponentModel.DefaultValueAttribute"), function () { return [false]; });

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueuePermission */ 

(function MessageQueuePermission$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Security.CodeAccessPermission"), 
      Name: "System.Messaging.MessageQueuePermission", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Permissions.PermissionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"), $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Clear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Copy", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.IPermission"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FromXml", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.SecurityElement"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PermissionEntries", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntryCollection"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetComparer", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEqualityComparer"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Intersect", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Security.IPermission"), [$asm07.TypeRef("System.Security.IPermission")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsSubsetOf", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Security.IPermission")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsUnrestricted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveFormatNames", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ToXml", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.SecurityElement"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Union", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Security.IPermission"), [$asm07.TypeRef("System.Security.IPermission")])
    );

    $.Field({Static:false, Public:false}, "resolvedFormatNames", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "innerCollection", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntryCollection"));

    $.Field({Static:false, Public:false}, "isUnrestricted", $.Boolean);

    $.Constant({Static:true , Public:false}, "Any", $.String, "*");

    $.Property({Static:false, Public:true }, "PermissionEntries", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntryCollection"));

    $.ImplementInterfaces(
      /* 3 */ $asm07.TypeRef("System.Security.Permissions.IUnrestrictedPermission")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.MessageQueuePermissionAccess */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageQueuePermissionAccess", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    Browse: 2, 
    Send: 6, 
    Peek: 10, 
    Receive: 26, 
    Administer: 62, 
  }
);

/* class System.Messaging.MessageQueuePermissionAttribute */ 

(function MessageQueuePermissionAttribute$Members () {
  var $, $thisType;














  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Security.Permissions.CodeAccessSecurityAttribute"), 
      Name: "System.Messaging.MessageQueuePermissionAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Permissions.SecurityAction"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckProperties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreatePermission", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.IPermission"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PermissionAccess", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Category", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MachineName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PermissionAccess", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"))
    );

    $.Field({Static:false, Public:false}, "label", $.String);

    $.Field({Static:false, Public:false}, "machineName", $.String);

    $.Field({Static:false, Public:false}, "path", $.String);

    $.Field({Static:false, Public:false}, "category", $.String);

    $.Field({Static:false, Public:false}, "permissionAccess", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"));

    $.Property({Static:false, Public:true }, "Category", $.String);

    $.Property({Static:false, Public:true }, "Label", $.String);

    $.Property({Static:false, Public:true }, "MachineName", $.String);

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.Property({Static:false, Public:true }, "PermissionAccess", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.$Flags(
          "Assembly", "Class", "Constructor", "Event", 
          "Method", "Struct"
      )]; });

})();

/* class System.Messaging.MessageQueuePermissionEntry */ 

(function MessageQueuePermissionEntry$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueuePermissionEntry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"), $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MachineName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PermissionAccess", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"))
    );

    $.Field({Static:false, Public:false}, "label", $.String);

    $.Field({Static:false, Public:false}, "machineName", $.String);

    $.Field({Static:false, Public:false}, "path", $.String);

    $.Field({Static:false, Public:false}, "category", $.String);

    $.Field({Static:false, Public:false}, "permissionAccess", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"));

    $.Property({Static:false, Public:true }, "Category", $.String);

    $.Property({Static:false, Public:true }, "Label", $.String);

    $.Property({Static:false, Public:true }, "MachineName", $.String);

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.Property({Static:false, Public:true }, "PermissionAccess", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionAccess"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.MessageQueuePermissionEntryCollection */ 

(function MessageQueuePermissionEntryCollection$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Collections.CollectionBase"), 
      Name: "System.Messaging.MessageQueuePermissionEntryCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueuePermission"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddRange", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddRange", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")]), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "IndexOf", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Insert", 
      new JSIL.MethodSignature(null, [$.Int32, $asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClear", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnInsert", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnRemove", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnSet", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Object, 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Remove", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry")])
    );

    $.Field({Static:false, Public:false}, "owner", $asm1C.TypeRef("System.Messaging.MessageQueuePermission"));

    $.Property({Static:false, Public:true }, "Item", $asm1C.TypeRef("System.Messaging.MessageQueuePermissionEntry"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Messaging.MessageQueueTransaction */ 

(function MessageQueueTransaction$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.MessageQueueTransaction", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Abort", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "AbortInternalTransaction", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginQueueOperation", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.ITransaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Commit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "EndQueueOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:false}, "get_InnerTransaction", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.ITransaction"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Status", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.MessageQueueTransactionStatus"))
    );

    $.Field({Static:false, Public:false}, "internalTransaction", $asm1C.TypeRef("System.Messaging.Interop.ITransaction"));

    $.Field({Static:false, Public:false}, "transactionStatus", $asm1C.TypeRef("System.Messaging.MessageQueueTransactionStatus"));

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Property({Static:false, Public:false}, "InnerTransaction", $asm1C.TypeRef("System.Messaging.Interop.ITransaction"));

    $.Property({Static:false, Public:true }, "Status", $asm1C.TypeRef("System.Messaging.MessageQueueTransactionStatus"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.MessageQueueTransactionStatus */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageQueueTransactionStatus", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Aborted: 0, 
    Committed: 1, 
    Initialized: 2, 
    Pending: 3, 
  }
);

/* enum System.Messaging.MessageQueueTransactionType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageQueueTransactionType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Automatic: 1, 
    Single: 3, 
  }
);

/* enum System.Messaging.MessageType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.MessageType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Acknowledgment: 1, 
    Normal: 2, 
    Report: 3, 
  }
);

/* class System.Messaging.MessagingDescriptionAttribute */ 

(function MessagingDescriptionAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Messaging.MessagingDescriptionAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* enum System.Messaging.PeekAction */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.PeekAction", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Current: -2147483648, 
    Next: -2147483647, 
  }
);

/* class System.Messaging.PeekCompletedEventArgs */ 

(function PeekCompletedEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Messaging.PeekCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueue"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AsyncResult", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AsyncResult", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:false, Public:false}, "result", $asm07.TypeRef("System.IAsyncResult"));

    $.Field({Static:false, Public:false}, "message", $asm1C.TypeRef("System.Messaging.Message"));

    $.Field({Static:false, Public:false}, "sender", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Property({Static:false, Public:true }, "AsyncResult", $asm07.TypeRef("System.IAsyncResult"));

    $.Property({Static:false, Public:true }, "Message", $asm1C.TypeRef("System.Messaging.Message"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Messaging.PeekCompletedEventHandler */ 

JSIL.MakeDelegate("System.Messaging.PeekCompletedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1C.TypeRef("System.Messaging.PeekCompletedEventArgs")]));

/* enum System.Messaging.QueueAccessMode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.QueueAccessMode", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Receive: 1, 
    Send: 2, 
    SendAndReceive: 3, 
    Peek: 32, 
    ReceiveAndAdmin: 129, 
    PeekAndAdmin: 160, 
  }
);

/* class System.Messaging.QueueAccessModeHolder */ 

(function QueueAccessModeHolder$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.QueueAccessModeHolder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.QueueAccessMode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetQueueAccessModeHolder", 
      new JSIL.MethodSignature($.Type, [$asm1C.TypeRef("System.Messaging.QueueAccessMode")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetReadAccessMode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetWriteAccessMode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "accessMode", $asm1C.TypeRef("System.Messaging.QueueAccessMode"));

    $.Field({Static:true , Public:false}, "holders", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$asm1C.TypeRef("System.Messaging.QueueAccessMode"), $.Type]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.ReceiveCompletedEventArgs */ 

(function ReceiveCompletedEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "System.Messaging.ReceiveCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueue"), $asm07.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AsyncResult", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Message"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AsyncResult", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IAsyncResult"))
    );

    $.Field({Static:false, Public:false}, "result", $asm07.TypeRef("System.IAsyncResult"));

    $.Field({Static:false, Public:false}, "message", $asm1C.TypeRef("System.Messaging.Message"));

    $.Field({Static:false, Public:false}, "sender", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Property({Static:false, Public:true }, "AsyncResult", $asm07.TypeRef("System.IAsyncResult"));

    $.Property({Static:false, Public:true }, "Message", $asm1C.TypeRef("System.Messaging.Message"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Messaging.ReceiveCompletedEventHandler */ 

JSIL.MakeDelegate("System.Messaging.ReceiveCompletedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm1C.TypeRef("System.Messaging.ReceiveCompletedEventArgs")]));

/* class System.Messaging.SecurityContext */ 

(function SecurityContext$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.SecurityContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Handle", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle"))
    );

    $.Field({Static:false, Public:false}, "handle", $asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle"));

    $.Field({Static:false, Public:false}, "disposed", $.Boolean);

    $.Property({Static:false, Public:false}, "Handle", $asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle"));

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.StandardAccessRights */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.StandardAccessRights", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    Delete: 65536, 
    Write: 131072, 
    Execute: 131072, 
    Read: 131072, 
    ReadSecurity: 131072, 
    WriteSecurity: 262144, 
    ModifyOwner: 524288, 
    Required: 851968, 
    Synchronize: 1048576, 
    All: 2031616, 
  }
);

/* class System.Messaging.Trustee */ 

(function Trustee$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Trustee", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm1C.TypeRef("System.Messaging.TrusteeType")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SystemName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TrusteeType", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.TrusteeType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SystemName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TrusteeType", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.TrusteeType"))
    );

    $.Field({Static:false, Public:false}, "$name", $.String);

    $.Field({Static:false, Public:false}, "systemName", $.String);

    $.Field({Static:false, Public:false}, "trusteeType", $asm1C.TypeRef("System.Messaging.TrusteeType"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "SystemName", $.String);

    $.Property({Static:false, Public:true }, "TrusteeType", $asm1C.TypeRef("System.Messaging.TrusteeType"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Messaging.TrusteeType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Messaging.TrusteeType", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Unknown: 0, 
    User: 1, 
    Group: 2, 
    Domain: 3, 
    Alias: 4, 
    Computer: 5, 
  }
);

/* class System.Messaging.ValidationUtility */ 

(function ValidationUtility$Members () {
  var $, $thisType;











  JSIL.MakeStaticClass("System.Messaging.ValidationUtility", false, [], function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:true , Public:true }, "ValidateAccessControlEntryType", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.AccessControlEntryType")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateCryptographicProviderType", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.CryptographicProviderType")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateEncryptionAlgorithm", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.EncryptionAlgorithm")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateEncryptionRequired", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.EncryptionRequired")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateHashAlgorithm", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.HashAlgorithm")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateMessageLookupAction", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.MessageLookupAction")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateMessagePriority", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.MessagePriority")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateMessageQueueTransactionType", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.MessageQueueTransactionType")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateQueueAccessMode", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.QueueAccessMode")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateTrusteeType", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.TrusteeType")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.XmlMessageFormatter */ 

(function XmlMessageFormatter$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.XmlMessageFormatter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanRead", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateTargetSerializerTable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetTypeNames", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetTypes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Object, [$asm1C.TypeRef("System.Messaging.Message")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TargetTypeNames", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TargetTypes", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Message"), $.Object])
    );

    $.Field({Static:false, Public:false}, "targetTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]));

    $.Field({Static:false, Public:false}, "targetTypeNames", $jsilcore.TypeRef("System.Array", [$.String]));

    $.Field({Static:false, Public:false}, "targetSerializerTable", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "typeNamesAdded", $.Boolean);

    $.Field({Static:false, Public:false}, "typesAdded", $.Boolean);

    $.Property({Static:false, Public:true }, "TargetTypeNames", $jsilcore.TypeRef("System.Array", [$.String]))
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["XmlMsgTargetTypeNames"]; });

    $.Property({Static:false, Public:true }, "TargetTypes", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Type")]))
      .Attribute($asm0A.TypeRef("System.ComponentModel.BrowsableAttribute"), function () { return [false]; })
      .Attribute($asm0A.TypeRef("System.ComponentModel.DesignerSerializationVisibilityAttribute"), function () { return [$asm0A.System.ComponentModel.DesignerSerializationVisibility.Hidden]; })
      .Attribute($asm1C.TypeRef("System.Messaging.MessagingDescriptionAttribute"), function () { return ["XmlMsgTargetTypes"]; });

    $.ImplementInterfaces(
      /* 0 */ $asm1C.TypeRef("System.Messaging.IMessageFormatter"), 
      /* 1 */ $asm07.TypeRef("System.ICloneable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.ResDescriptionAttribute */ 

(function ResDescriptionAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Messaging.ResDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Messaging.ResCategoryAttribute */ 

(function ResCategoryAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Messaging.ResCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.All]; });

})();

/* class System.Messaging.Res */ 

(function Res$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Res", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Constant({Static:true , Public:false}, "MSMQNotInstalled", $.String, "MSMQNotInstalled");

    $.Constant({Static:true , Public:false}, "MSMQInfoNotSupported", $.String, "MSMQInfoNotSupported");

    $.Constant({Static:true , Public:false}, "MissingProperty", $.String, "MissingProperty");

    $.Constant({Static:true , Public:false}, "NotAcknowledgement", $.String, "NotAcknowledgement");

    $.Constant({Static:true , Public:false}, "InvalidId", $.String, "InvalidId");

    $.Constant({Static:true , Public:false}, "ArrivedTimeNotSet", $.String, "ArrivedTimeNotSet");

    $.Constant({Static:true , Public:false}, "AuthenticationNotSet", $.String, "AuthenticationNotSet");

    $.Constant({Static:true , Public:false}, "DestinationQueueNotSet", $.String, "DestinationQueueNotSet");

    $.Constant({Static:true , Public:false}, "IdNotSet", $.String, "IdNotSet");

    $.Constant({Static:true , Public:false}, "LookupIdNotSet", $.String, "LookupIdNotSet");

    $.Constant({Static:true , Public:false}, "MessageTypeNotSet", $.String, "MessageTypeNotSet");

    $.Constant({Static:true , Public:false}, "SenderIdNotAttached", $.String, "SenderIdNotAttached");

    $.Constant({Static:true , Public:false}, "SenderIdNotSet", $.String, "SenderIdNotSet");

    $.Constant({Static:true , Public:false}, "SentTimeNotSet", $.String, "SentTimeNotSet");

    $.Constant({Static:true , Public:false}, "SourceMachineNotSet", $.String, "SourceMachineNotSet");

    $.Constant({Static:true , Public:false}, "VersionNotSet", $.String, "VersionNotSet");

    $.Constant({Static:true , Public:false}, "PathNotSet", $.String, "PathNotSet");

    $.Constant({Static:true , Public:false}, "CriteriaNotDefined", $.String, "CriteriaNotDefined");

    $.Constant({Static:true , Public:false}, "TypeNotSupported", $.String, "TypeNotSupported");

    $.Constant({Static:true , Public:false}, "InvalidQueuePathToCreate", $.String, "InvalidQueuePathToCreate");

    $.Constant({Static:true , Public:false}, "PathSyntax", $.String, "PathSyntax");

    $.Constant({Static:true , Public:false}, "InvalidLabel", $.String, "InvalidLabel");

    $.Constant({Static:true , Public:false}, "AmbiguousLabel", $.String, "AmbiguousLabel");

    $.Constant({Static:true , Public:false}, "LongQueueName", $.String, "LongQueueName");

    $.Constant({Static:true , Public:false}, "TransactionStarted", $.String, "TransactionStarted");

    $.Constant({Static:true , Public:false}, "TransactionNotStarted", $.String, "TransactionNotStarted");

    $.Constant({Static:true , Public:false}, "CoertionType", $.String, "CoertionType");

    $.Constant({Static:true , Public:false}, "InvalidMaxJournalSize", $.String, "InvalidMaxJournalSize");

    $.Constant({Static:true , Public:false}, "InvalidMaxQueueSize", $.String, "InvalidMaxQueueSize");

    $.Constant({Static:true , Public:false}, "InvalidTypeDeserialization", $.String, "InvalidTypeDeserialization");

    $.Constant({Static:true , Public:false}, "InvalidTypeSerialization", $.String, "InvalidTypeSerialization");

    $.Constant({Static:true , Public:false}, "TypeListMissing", $.String, "TypeListMissing");

    $.Constant({Static:true , Public:false}, "FormatterMissing", $.String, "FormatterMissing");

    $.Constant({Static:true , Public:false}, "QueueExistsError", $.String, "QueueExistsError");

    $.Constant({Static:true , Public:false}, "AsyncResultInvalid", $.String, "AsyncResultInvalid");

    $.Constant({Static:true , Public:false}, "NotAMessageQueue", $.String, "NotAMessageQueue");

    $.Constant({Static:true , Public:false}, "NoCurrentMessageQueue", $.String, "NoCurrentMessageQueue");

    $.Constant({Static:true , Public:false}, "NoCurrentMessage", $.String, "NoCurrentMessage");

    $.Constant({Static:true , Public:false}, "TooManyColumns", $.String, "TooManyColumns");

    $.Constant({Static:true , Public:false}, "PropertyAddFailed", $.String, "PropertyAddFailed");

    $.Constant({Static:true , Public:false}, "PropertyOverflow", $.String, "PropertyOverflow");

    $.Constant({Static:true , Public:false}, "MessageNotFound", $.String, "MessageNotFound");

    $.Constant({Static:true , Public:false}, "DefaultSizeError", $.String, "DefaultSizeError");

    $.Constant({Static:true , Public:false}, "IncompleteMQ", $.String, "IncompleteMQ");

    $.Constant({Static:true , Public:false}, "PermissionPathOrCriteria", $.String, "PermissionPathOrCriteria");

    $.Constant({Static:true , Public:false}, "PermissionAllNull", $.String, "PermissionAllNull");

    $.Constant({Static:true , Public:false}, "InvalidProperty", $.String, "InvalidProperty");

    $.Constant({Static:true , Public:false}, "InvalidParameter", $.String, "InvalidParameter");

    $.Constant({Static:true , Public:false}, "InvalidXmlFormat", $.String, "InvalidXmlFormat");

    $.Constant({Static:true , Public:false}, "UnknownError", $.String, "UnknownError");

    $.Constant({Static:true , Public:false}, "CouldntResolve", $.String, "CouldntResolve");

    $.Constant({Static:true , Public:false}, "CouldntResolveName", $.String, "CouldntResolveName");

    $.Constant({Static:true , Public:false}, "IncorrectNumberOfBytes", $.String, "IncorrectNumberOfBytes");

    $.Constant({Static:true , Public:false}, "NotImplemented", $.String, "NotImplemented");

    $.Constant({Static:true , Public:false}, "InvalidDateValue", $.String, "InvalidDateValue");

    $.Constant({Static:true , Public:false}, "StoredObjectsNotSupported", $.String, "StoredObjectsNotSupported");

    $.Constant({Static:true , Public:false}, "PathNameDns", $.String, "PathNameDns");

    $.Constant({Static:true , Public:false}, "InvalidTrusteeName", $.String, "InvalidTrusteeName");

    $.Constant({Static:true , Public:false}, "InvalidTrustee", $.String, "InvalidTrustee");

    $.Constant({Static:true , Public:false}, "WinNTRequired", $.String, "WinNTRequired");

    $.Constant({Static:true , Public:false}, "PlatformNotSupported", $.String, "PlatformNotSupported");

    $.Constant({Static:true , Public:false}, "ClearingQueue", $.String, "ClearingQueue");

    $.Constant({Static:true , Public:false}, "CreatingQueue", $.String, "CreatingQueue");

    $.Constant({Static:true , Public:false}, "RestoringQueue", $.String, "RestoringQueue");

    $.Constant({Static:true , Public:false}, "RemovingQueue", $.String, "RemovingQueue");

    $.Constant({Static:true , Public:false}, "DeletingQueue", $.String, "DeletingQueue");

    $.Constant({Static:true , Public:false}, "MsgTopObjectFormat", $.String, "MsgTopObjectFormat");

    $.Constant({Static:true , Public:false}, "MsgTypeFormat", $.String, "MsgTypeFormat");

    $.Constant({Static:true , Public:false}, "MsgAcknowledgeType", $.String, "MsgAcknowledgeType");

    $.Constant({Static:true , Public:false}, "MsgAdministrationQueue", $.String, "MsgAdministrationQueue");

    $.Constant({Static:true , Public:false}, "MsgAppSpecific", $.String, "MsgAppSpecific");

    $.Constant({Static:true , Public:false}, "MsgAttachSenderId", $.String, "MsgAttachSenderId");

    $.Constant({Static:true , Public:false}, "MsgExtension", $.String, "MsgExtension");

    $.Constant({Static:true , Public:false}, "MsgHashAlgorithm", $.String, "MsgHashAlgorithm");

    $.Constant({Static:true , Public:false}, "MsgLabel", $.String, "MsgLabel");

    $.Constant({Static:true , Public:false}, "MsgPriority", $.String, "MsgPriority");

    $.Constant({Static:true , Public:false}, "MsgRecoverable", $.String, "MsgRecoverable");

    $.Constant({Static:true , Public:false}, "MsgResponseQueue", $.String, "MsgResponseQueue");

    $.Constant({Static:true , Public:false}, "MsgTimeToBeReceived", $.String, "MsgTimeToBeReceived");

    $.Constant({Static:true , Public:false}, "MsgTimeToReachQueue", $.String, "MsgTimeToReachQueue");

    $.Constant({Static:true , Public:false}, "MsgTransactionStatusQueue", $.String, "MsgTransactionStatusQueue");

    $.Constant({Static:true , Public:false}, "MsgUseAuthentication", $.String, "MsgUseAuthentication");

    $.Constant({Static:true , Public:false}, "MsgUseDeadLetterQueue", $.String, "MsgUseDeadLetterQueue");

    $.Constant({Static:true , Public:false}, "MsgUseEncryption", $.String, "MsgUseEncryption");

    $.Constant({Static:true , Public:false}, "MsgUseJournalQueue", $.String, "MsgUseJournalQueue");

    $.Constant({Static:true , Public:false}, "MsgUseTracing", $.String, "MsgUseTracing");

    $.Constant({Static:true , Public:false}, "MsgAcknowledgement", $.String, "MsgAcknowledgement");

    $.Constant({Static:true , Public:false}, "MsgArrivedTime", $.String, "MsgArrivedTime");

    $.Constant({Static:true , Public:false}, "MsgAuthenticated", $.String, "MsgAuthenticated");

    $.Constant({Static:true , Public:false}, "MsgAuthenticationProviderName", $.String, "MsgAuthenticationProviderName");

    $.Constant({Static:true , Public:false}, "MsgAuthenticationProviderType", $.String, "MsgAuthenticationProviderType");

    $.Constant({Static:true , Public:false}, "MsgBodyStream", $.String, "MsgBodyStream");

    $.Constant({Static:true , Public:false}, "MsgBodyType", $.String, "MsgBodyType");

    $.Constant({Static:true , Public:false}, "MsgConnectorType", $.String, "MsgConnectorType");

    $.Constant({Static:true , Public:false}, "MsgCorrelationId", $.String, "MsgCorrelationId");

    $.Constant({Static:true , Public:false}, "MsgDestinationQueue", $.String, "MsgDestinationQueue");

    $.Constant({Static:true , Public:false}, "MsgDestinationSymmetricKey", $.String, "MsgDestinationSymmetricKey");

    $.Constant({Static:true , Public:false}, "MsgDigitalSignature", $.String, "MsgDigitalSignature");

    $.Constant({Static:true , Public:false}, "MsgEncryptionAlgorithm", $.String, "MsgEncryptionAlgorithm");

    $.Constant({Static:true , Public:false}, "MsgId", $.String, "MsgId");

    $.Constant({Static:true , Public:false}, "MsgLookupId", $.String, "MsgLookupId");

    $.Constant({Static:true , Public:false}, "MsgIsFirstInTransaction", $.String, "MsgIsFirstInTransaction");

    $.Constant({Static:true , Public:false}, "MsgIsLastInTransaction", $.String, "MsgIsLastInTransaction");

    $.Constant({Static:true , Public:false}, "MsgMessageType", $.String, "MsgMessageType");

    $.Constant({Static:true , Public:false}, "MsgSenderCertificate", $.String, "MsgSenderCertificate");

    $.Constant({Static:true , Public:false}, "MsgSenderId", $.String, "MsgSenderId");

    $.Constant({Static:true , Public:false}, "MsgSenderVersion", $.String, "MsgSenderVersion");

    $.Constant({Static:true , Public:false}, "MsgSentTime", $.String, "MsgSentTime");

    $.Constant({Static:true , Public:false}, "MsgSourceMachine", $.String, "MsgSourceMachine");

    $.Constant({Static:true , Public:false}, "MsgTransactionId", $.String, "MsgTransactionId");

    $.Constant({Static:true , Public:false}, "MsgBody", $.String, "MsgBody");

    $.Constant({Static:true , Public:false}, "MsgDefaultBodySize", $.String, "MsgDefaultBodySize");

    $.Constant({Static:true , Public:false}, "MsgDefaultExtensionSize", $.String, "MsgDefaultExtensionSize");

    $.Constant({Static:true , Public:false}, "MsgDefaultLabelSize", $.String, "MsgDefaultLabelSize");

    $.Constant({Static:true , Public:false}, "MessageQueueDesc", $.String, "MessageQueueDesc");

    $.Constant({Static:true , Public:false}, "MQ_Authenticate", $.String, "MQ_Authenticate");

    $.Constant({Static:true , Public:false}, "MQ_BasePriority", $.String, "MQ_BasePriority");

    $.Constant({Static:true , Public:false}, "MQ_CanRead", $.String, "MQ_CanRead");

    $.Constant({Static:true , Public:false}, "MQ_CanWrite", $.String, "MQ_CanWrite");

    $.Constant({Static:true , Public:false}, "MQ_Category", $.String, "MQ_Category");

    $.Constant({Static:true , Public:false}, "MQ_CreateTime", $.String, "MQ_CreateTime");

    $.Constant({Static:true , Public:false}, "MQ_DefaultPropertiesToSend", $.String, "MQ_DefaultPropertiesToSend");

    $.Constant({Static:true , Public:false}, "MQ_DenySharedReceive", $.String, "MQ_DenySharedReceive");

    $.Constant({Static:true , Public:false}, "MQ_EncryptionRequired", $.String, "MQ_EncryptionRequired");

    $.Constant({Static:true , Public:false}, "MQ_FormatName", $.String, "MQ_FormatName");

    $.Constant({Static:true , Public:false}, "MQ_Formatter", $.String, "MQ_Formatter");

    $.Constant({Static:true , Public:false}, "MQ_GuidId", $.String, "MQ_GuidId");

    $.Constant({Static:true , Public:false}, "MQ_Label", $.String, "MQ_Label");

    $.Constant({Static:true , Public:false}, "MQ_LastModifyTime", $.String, "MQ_LastModifyTime");

    $.Constant({Static:true , Public:false}, "MQ_MachineName", $.String, "MQ_MachineName");

    $.Constant({Static:true , Public:false}, "MQ_MaximumJournalSize", $.String, "MQ_MaximumJournalSize");

    $.Constant({Static:true , Public:false}, "MQ_MaximumQueueSize", $.String, "MQ_MaximumQueueSize");

    $.Constant({Static:true , Public:false}, "MQ_MessageReadPropertyFilter", $.String, "MQ_MessageReadPropertyFilter");

    $.Constant({Static:true , Public:false}, "MQ_MulticastAddress", $.String, "MQ_MulticastAddress");

    $.Constant({Static:true , Public:false}, "MQ_Path", $.String, "MQ_Path");

    $.Constant({Static:true , Public:false}, "MQ_QueueName", $.String, "MQ_QueueName");

    $.Constant({Static:true , Public:false}, "MQ_ReadHandle", $.String, "MQ_ReadHandle");

    $.Constant({Static:true , Public:false}, "MQ_SynchronizingObject", $.String, "MQ_SynchronizingObject");

    $.Constant({Static:true , Public:false}, "MQ_Transactional", $.String, "MQ_Transactional");

    $.Constant({Static:true , Public:false}, "MQ_UseJournalQueue", $.String, "MQ_UseJournalQueue");

    $.Constant({Static:true , Public:false}, "MQ_WriteHandle", $.String, "MQ_WriteHandle");

    $.Constant({Static:true , Public:false}, "MQ_PeekCompleted", $.String, "MQ_PeekCompleted");

    $.Constant({Static:true , Public:false}, "MQ_ReceiveCompleted", $.String, "MQ_ReceiveCompleted");

    $.Constant({Static:true , Public:false}, "XmlMsgTargetTypeNames", $.String, "XmlMsgTargetTypeNames");

    $.Constant({Static:true , Public:false}, "XmlMsgTargetTypes", $.String, "XmlMsgTargetTypes");

    $.Constant({Static:true , Public:false}, "NotSet", $.String, "NotSet");

    $.Constant({Static:true , Public:false}, "RefByFormatName", $.String, "RefByFormatName");

    $.Constant({Static:true , Public:false}, "RefByPath", $.String, "RefByPath");

    $.Constant({Static:true , Public:false}, "RefByLabel", $.String, "RefByLabel");

    $.Constant({Static:true , Public:false}, "ReferenceLabel", $.String, "ReferenceLabel");

    $.Constant({Static:true , Public:false}, "QueueOk", $.String, "QueueOk");

    $.Constant({Static:true , Public:false}, "QueueHelp", $.String, "QueueHelp");

    $.Constant({Static:true , Public:false}, "SelectLabel", $.String, "SelectLabel");

    $.Constant({Static:true , Public:false}, "MessageQueueBrowser", $.String, "MessageQueueBrowser");

    $.Constant({Static:true , Public:false}, "QueueNetworkProblems", $.String, "QueueNetworkProblems");

    $.Constant({Static:true , Public:false}, "ActiveXFormatter", $.String, "ActiveXFormatter");

    $.Constant({Static:true , Public:false}, "XmlFormatter", $.String, "XmlFormatter");

    $.Constant({Static:true , Public:false}, "InfiniteValue", $.String, "InfiniteValue");

    $.Constant({Static:true , Public:false}, "toStringNone", $.String, "toStringNone");

    $.Constant({Static:true , Public:false}, "PleaseWait", $.String, "PleaseWait");

    $.Constant({Static:true , Public:false}, "CancelCaption", $.String, "CancelCaption");

    $.Constant({Static:true , Public:false}, "C00E0002", $.String, "C00E0002");

    $.Constant({Static:true , Public:false}, "C00E0003", $.String, "C00E0003");

    $.Constant({Static:true , Public:false}, "C00E0005", $.String, "C00E0005");

    $.Constant({Static:true , Public:false}, "C00E0006", $.String, "C00E0006");

    $.Constant({Static:true , Public:false}, "C00E0007", $.String, "C00E0007");

    $.Constant({Static:true , Public:false}, "C00E0008", $.String, "C00E0008");

    $.Constant({Static:true , Public:false}, "C00E0009", $.String, "C00E0009");

    $.Constant({Static:true , Public:false}, "C00E000B", $.String, "C00E000B");

    $.Constant({Static:true , Public:false}, "C00E000D", $.String, "C00E000D");

    $.Constant({Static:true , Public:false}, "C00E0010", $.String, "C00E0010");

    $.Constant({Static:true , Public:false}, "C00E0011", $.String, "C00E0011");

    $.Constant({Static:true , Public:false}, "C00E0013", $.String, "C00E0013");

    $.Constant({Static:true , Public:false}, "C00E0014", $.String, "C00E0014");

    $.Constant({Static:true , Public:false}, "C00E0018", $.String, "C00E0018");

    $.Constant({Static:true , Public:false}, "C00E0019", $.String, "C00E0019");

    $.Constant({Static:true , Public:false}, "C00E001A", $.String, "C00E001A");

    $.Constant({Static:true , Public:false}, "C00E001B", $.String, "C00E001B");

    $.Constant({Static:true , Public:false}, "C00E001C", $.String, "C00E001C");

    $.Constant({Static:true , Public:false}, "C00E001D", $.String, "C00E001D");

    $.Constant({Static:true , Public:false}, "C00E001E", $.String, "C00E001E");

    $.Constant({Static:true , Public:false}, "C00E001F", $.String, "C00E001F");

    $.Constant({Static:true , Public:false}, "C00E0020", $.String, "C00E0020");

    $.Constant({Static:true , Public:false}, "C00E0021", $.String, "C00E0021");

    $.Constant({Static:true , Public:false}, "C00E0022", $.String, "C00E0022");

    $.Constant({Static:true , Public:false}, "C00E0023", $.String, "C00E0023");

    $.Constant({Static:true , Public:false}, "C00E0024", $.String, "C00E0024");

    $.Constant({Static:true , Public:false}, "C00E0025", $.String, "C00E0025");

    $.Constant({Static:true , Public:false}, "C00E0026", $.String, "C00E0026");

    $.Constant({Static:true , Public:false}, "C00E0027", $.String, "C00E0027");

    $.Constant({Static:true , Public:false}, "C00E0028", $.String, "C00E0028");

    $.Constant({Static:true , Public:false}, "C00E002A", $.String, "C00E002A");

    $.Constant({Static:true , Public:false}, "C00E002B", $.String, "C00E002B");

    $.Constant({Static:true , Public:false}, "C00E002C", $.String, "C00E002C");

    $.Constant({Static:true , Public:false}, "C00E002D", $.String, "C00E002D");

    $.Constant({Static:true , Public:false}, "C00E002F", $.String, "C00E002F");

    $.Constant({Static:true , Public:false}, "C00E0030", $.String, "C00E0030");

    $.Constant({Static:true , Public:false}, "C00E0033", $.String, "C00E0033");

    $.Constant({Static:true , Public:false}, "C00E0035", $.String, "C00E0035");

    $.Constant({Static:true , Public:false}, "C00E0036", $.String, "C00E0036");

    $.Constant({Static:true , Public:false}, "C00E0037", $.String, "C00E0037");

    $.Constant({Static:true , Public:false}, "C00E0038", $.String, "C00E0038");

    $.Constant({Static:true , Public:false}, "C00E0039", $.String, "C00E0039");

    $.Constant({Static:true , Public:false}, "C00E003A", $.String, "C00E003A");

    $.Constant({Static:true , Public:false}, "C00E003B", $.String, "C00E003B");

    $.Constant({Static:true , Public:false}, "C00E003C", $.String, "C00E003C");

    $.Constant({Static:true , Public:false}, "C00E003D", $.String, "C00E003D");

    $.Constant({Static:true , Public:false}, "C00E003E", $.String, "C00E003E");

    $.Constant({Static:true , Public:false}, "C00E003F", $.String, "C00E003F");

    $.Constant({Static:true , Public:false}, "C00E0040", $.String, "C00E0040");

    $.Constant({Static:true , Public:false}, "C00E0041", $.String, "C00E0041");

    $.Constant({Static:true , Public:false}, "C00E0042", $.String, "C00E0042");

    $.Constant({Static:true , Public:false}, "C00E0043", $.String, "C00E0043");

    $.Constant({Static:true , Public:false}, "C00E0044", $.String, "C00E0044");

    $.Constant({Static:true , Public:false}, "C00E0045", $.String, "C00E0045");

    $.Constant({Static:true , Public:false}, "C00E0046", $.String, "C00E0046");

    $.Constant({Static:true , Public:false}, "C00E0048", $.String, "C00E0048");

    $.Constant({Static:true , Public:false}, "C00E0049", $.String, "C00E0049");

    $.Constant({Static:true , Public:false}, "C00E004A", $.String, "C00E004A");

    $.Constant({Static:true , Public:false}, "C00E004B", $.String, "C00E004B");

    $.Constant({Static:true , Public:false}, "C00E004C", $.String, "C00E004C");

    $.Constant({Static:true , Public:false}, "C00E004E", $.String, "C00E004E");

    $.Constant({Static:true , Public:false}, "C00E0050", $.String, "C00E0050");

    $.Constant({Static:true , Public:false}, "C00E0051", $.String, "C00E0051");

    $.Constant({Static:true , Public:false}, "C00E0055", $.String, "C00E0055");

    $.Constant({Static:true , Public:false}, "C00E0056", $.String, "C00E0056");

    $.Constant({Static:true , Public:false}, "C00E0058", $.String, "C00E0058");

    $.Constant({Static:true , Public:false}, "C00E005A", $.String, "C00E005A");

    $.Constant({Static:true , Public:false}, "C00E005B", $.String, "C00E005B");

    $.Constant({Static:true , Public:false}, "C00E005C", $.String, "C00E005C");

    $.Constant({Static:true , Public:false}, "C00E005D", $.String, "C00E005D");

    $.Constant({Static:true , Public:false}, "C00E005E", $.String, "C00E005E");

    $.Constant({Static:true , Public:false}, "C00E005F", $.String, "C00E005F");

    $.Constant({Static:true , Public:false}, "C00E0060", $.String, "C00E0060");

    $.Constant({Static:true , Public:false}, "C00E0061", $.String, "C00E0061");

    $.Constant({Static:true , Public:false}, "C00E0062", $.String, "C00E0062");

    $.Constant({Static:true , Public:false}, "C00E0063", $.String, "C00E0063");

    $.Constant({Static:true , Public:false}, "C00E0064", $.String, "C00E0064");

    $.Constant({Static:true , Public:false}, "C00E0065", $.String, "C00E0065");

    $.Constant({Static:true , Public:false}, "C00E0066", $.String, "C00E0066");

    $.Constant({Static:true , Public:false}, "C00E0067", $.String, "C00E0067");

    $.Constant({Static:true , Public:false}, "C00E0068", $.String, "C00E0068");

    $.Constant({Static:true , Public:false}, "C00E0069", $.String, "C00E0069");

    $.Constant({Static:true , Public:false}, "C00E006A", $.String, "C00E006A");

    $.Constant({Static:true , Public:false}, "C00E006B", $.String, "C00E006B");

    $.Constant({Static:true , Public:false}, "C00E006C", $.String, "C00E006C");

    $.Constant({Static:true , Public:false}, "C00E006D", $.String, "C00E006D");

    $.Constant({Static:true , Public:false}, "C00E006E", $.String, "C00E006E");

    $.Constant({Static:true , Public:false}, "C00E006F", $.String, "C00E006F");

    $.Constant({Static:true , Public:false}, "C00E0070", $.String, "C00E0070");

    $.Constant({Static:true , Public:false}, "C00E0071", $.String, "C00E0071");

    $.Constant({Static:true , Public:false}, "C00E0072", $.String, "C00E0072");

    $.Constant({Static:true , Public:false}, "C00E0073", $.String, "C00E0073");

    $.Constant({Static:true , Public:false}, "C00E0074", $.String, "C00E0074");

    $.Constant({Static:true , Public:false}, "C00E0075", $.String, "C00E0075");

    $.Constant({Static:true , Public:false}, "C00E0076", $.String, "C00E0076");

    $.Constant({Static:true , Public:false}, "C00E0077", $.String, "C00E0077");

    $.Constant({Static:true , Public:false}, "C00E0078", $.String, "C00E0078");

    $.Constant({Static:true , Public:false}, "C00E0079", $.String, "C00E0079");

    $.Constant({Static:true , Public:false}, "C00E007A", $.String, "C00E007A");

    $.Constant({Static:true , Public:false}, "C00E007B", $.String, "C00E007B");

    $.Constant({Static:true , Public:false}, "C00E007C", $.String, "C00E007C");

    $.Constant({Static:true , Public:false}, "C00E007D", $.String, "C00E007D");

    $.Constant({Static:true , Public:false}, "C00E007E", $.String, "C00E007E");

    $.Constant({Static:true , Public:false}, "C00E007F", $.String, "C00E007F");

    $.Constant({Static:true , Public:false}, "C00E0080", $.String, "C00E0080");

    $.Constant({Static:true , Public:false}, "C00E0081", $.String, "C00E0081");

    $.Constant({Static:true , Public:false}, "C00E0082", $.String, "C00E0082");

    $.Field({Static:true , Public:false}, "loader", $.Type);

    $.Field({Static:false, Public:false}, "resources", $asm07.TypeRef("System.Resources.ResourceManager"));

    $.Property({Static:true , Public:false}, "Culture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm07.TypeRef("System.Resources.ResourceManager"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Messaging.Design");
/* class System.Messaging.Design.MessageFormatterConverter */ 

(function MessageFormatterConverter$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.ExpandableObjectConverter"), 
      Name: "System.Messaging.Design.MessageFormatterConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertTo", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetStandardValues", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.ComponentModel.TypeConverter+StandardValuesCollection"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetStandardValuesExclusive", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetStandardValuesSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Design.MessageQueueConverter */ 

(function MessageQueueConverter$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Messaging.Design.MessageQueueConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AddToCache", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFromCache", 
      new JSIL.MethodSignature($asm1C.TypeRef("System.Messaging.MessageQueue"), [$.String])
    );

    $.Field({Static:true , Public:false}, "componentsCreated", $asm07.TypeRef("System.Collections.Hashtable"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Design.QueuePathDialog */ 

(function QueuePathDialog$Members () {
  var $, $thisType;



















  JSIL.MakeType({
      BaseType: $asm2C.TypeRef("System.Windows.Forms.Form"), 
      Name: "System.Messaging.Design.QueuePathDialog", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IServiceProvider"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.Design.IUIService"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AfterSelect", 
      new JSIL.MethodSignature(null, [$.Object, $asm2C.TypeRef("System.Windows.Forms.TreeViewEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeforeSelect", 
      new JSIL.MethodSignature(null, [$.Object, $asm2C.TypeRef("System.Windows.Forms.TreeViewCancelEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ChoosePath", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DoubleClicked", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "IndexChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnClickHelpButton", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnFormClosing", 
      JSIL.MethodSignature.Action($asm2C.TypeRef("System.Windows.Forms.FormClosingEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnHandleCreated", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnHelpRequested", 
      new JSIL.MethodSignature(null, [$.Object, $asm2C.TypeRef("System.Windows.Forms.HelpEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnPopulateTreeview", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.MessageQueue")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSelectQueue", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueue"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnShowError", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "PopulateThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SelectQueue", 
      JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.MessageQueue"))
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "HELP_KEYWORD", $.String, "System.Messaging.Design.QueuePathDialog");

    $.Field({Static:false, Public:false}, "icons", $asm2C.TypeRef("System.Windows.Forms.ImageList"));

    $.Field({Static:false, Public:false}, "okButton", $asm2C.TypeRef("System.Windows.Forms.Button"));

    $.Field({Static:false, Public:false}, "pathType", $asm2C.TypeRef("System.Windows.Forms.ComboBox"));

    $.Field({Static:false, Public:false}, "enterprise", $asm2C.TypeRef("System.Windows.Forms.TreeView"));

    $.Field({Static:false, Public:false}, "helpButton", $asm2C.TypeRef("System.Windows.Forms.Button"));

    $.Field({Static:false, Public:false}, "selectLabel", $asm2C.TypeRef("System.Windows.Forms.Label"));

    $.Field({Static:false, Public:false}, "referenceLabel", $asm2C.TypeRef("System.Windows.Forms.Label"));

    $.Field({Static:false, Public:false}, "cancelButton", $asm2C.TypeRef("System.Windows.Forms.Button"));

    $.Field({Static:false, Public:false}, "path", $.String);

    $.Field({Static:false, Public:false}, "queuePath", $.String);

    $.Field({Static:false, Public:false}, "lastPathType", $.Int32);

    $.Field({Static:false, Public:false}, "exit", $.Boolean);

    $.Field({Static:false, Public:false}, "selectedQueue", $asm1C.TypeRef("System.Messaging.MessageQueue"));

    $.Field({Static:false, Public:false}, "uiService", $asm2C.TypeRef("System.Windows.Forms.Design.IUIService"));

    $.Field({Static:false, Public:false}, "provider", $asm07.TypeRef("System.IServiceProvider"));

    $.Field({Static:false, Public:false}, "machinesTable", $asm07.TypeRef("System.Collections.Hashtable"));

    $.Field({Static:false, Public:false}, "populateThread", $asm07.TypeRef("System.Threading.Thread"));

    $.Field({Static:false, Public:false}, "closed", $.Boolean);

    $.Field({Static:false, Public:false}, "populateThreadRan", $.Boolean);

    $.Field({Static:true , Public:false, ReadOnly:true }, "PREFIX_LABEL", $.String, "LABEL:");

    $.Field({Static:true , Public:false, ReadOnly:true }, "PREFIX_FORMAT_NAME", $.String, "FORMATNAME:");

    $.Property({Static:false, Public:true }, "Path", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Messaging.Design.QueuePathDialog+FinishPopulateDelegate */ 

JSIL.MakeDelegate("System.Messaging.Design.QueuePathDialog+FinishPopulateDelegate", false, [], 
  JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.MessageQueue")])));

/* delegate System.Messaging.Design.QueuePathDialog+SelectQueueDelegate */ 

JSIL.MakeDelegate("System.Messaging.Design.QueuePathDialog+SelectQueueDelegate", false, [], 
  new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.MessageQueue"), $asm07.TypeRef("System.Int32")]));

/* delegate System.Messaging.Design.QueuePathDialog+ShowErrorDelegate */ 

JSIL.MakeDelegate("System.Messaging.Design.QueuePathDialog+ShowErrorDelegate", false, [], 
  JSIL.MethodSignature.Void);

/* class System.Messaging.Design.QueuePathEditor */ 

(function QueuePathEditor$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm17.TypeRef("System.Drawing.Design.UITypeEditor"), 
      Name: "System.Messaging.Design.QueuePathEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EditValue", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.IServiceProvider"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEditStyle", 
      new JSIL.MethodSignature($asm17.TypeRef("System.Drawing.Design.UITypeEditorEditStyle"), [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Design.SizeConverter */ 

(function SizeConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Messaging.Design.SizeConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Design.TimeoutConverter */ 

(function TimeoutConverter$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.ComponentModel.TypeConverter"), 
      Name: "System.Messaging.Design.TimeoutConverter", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CanConvertFrom", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertFrom", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ConvertTo", 
      new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm07.TypeRef("System.Globalization.CultureInfo"), 
          $.Object, $asm07.TypeRef("System.Type")
        ])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Messaging.Interop");
/* class System.Messaging.Interop.Columns */ 

(function Columns$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.Columns", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddColumnId", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetColumnsRef", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.Columns+MQCOLUMNSET"))
    );

    $.Field({Static:false, Public:false}, "maxCount", $.Int32);

    $.Field({Static:false, Public:false}, "columnSet", $asm1C.TypeRef("System.Messaging.Interop.Columns+MQCOLUMNSET"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.Columns+MQCOLUMNSET */ 

(function MQCOLUMNSET$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.Columns+MQCOLUMNSET", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetId", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.Field({Static:false, Public:true }, "columnCount", $.Int32);

    $.Field({Static:false, Public:true }, "columnIdentifiers", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Messaging.Interop.IPersist */ 

JSIL.MakeInterface(
  "System.Messaging.Interop.IPersist", false, [], function ($) {
    $.Method({}, "GetClassID", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["0000010C-0000-0000-C000-000000000046"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Messaging.Interop.IPersistStream */ 

JSIL.MakeInterface(
  "System.Messaging.Interop.IPersistStream", false, [], function ($) {
    $.Method({}, "GetClassID", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])));
    $.Method({}, "IsDirty", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Load", JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.Interop.IStream")));
    $.Method({}, "Save", new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Interop.IStream"), $.Boolean]));
    $.Method({}, "GetSizeMax", JSIL.MethodSignature.Return($.Int64));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["00000109-0000-0000-C000-000000000046"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Messaging.Interop.IPersistStreamInit */ 

JSIL.MakeInterface(
  "System.Messaging.Interop.IPersistStreamInit", false, [], function ($) {
    $.Method({}, "GetClassID", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])));
    $.Method({}, "IsDirty", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Load", JSIL.MethodSignature.Action($asm1C.TypeRef("System.Messaging.Interop.IStream")));
    $.Method({}, "Save", new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Interop.IStream"), $.Boolean]));
    $.Method({}, "GetSizeMax", JSIL.MethodSignature.Return($.Int64));
    $.Method({}, "InitNew", JSIL.MethodSignature.Void);
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["7FD52380-4E07-101B-AE2D-08002B2EC713"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Messaging.Interop.IStream */ 

JSIL.MakeInterface(
  "System.Messaging.Interop.IStream", false, [], function ($) {
    $.Method({}, "Read", new JSIL.MethodSignature($.Int32, [$.IntPtr, $.Int32]));
    $.Method({}, "Write", new JSIL.MethodSignature($.Int32, [$.IntPtr, $.Int32]));
    $.Method({}, "Seek", new JSIL.MethodSignature($.Int64, [$.Int64, $.Int32]));
    $.Method({}, "SetSize", JSIL.MethodSignature.Action($.Int64));
    $.Method({}, "CopyTo", new JSIL.MethodSignature($.Int64, [
          $.Type, $.Int64, 
          $jsilcore.TypeRef("System.Array", [$.Int64])
        ]));
    $.Method({}, "Commit", JSIL.MethodSignature.Action($.Int32));
    $.Method({}, "Revert", JSIL.MethodSignature.Void);
    $.Method({}, "LockRegion", new JSIL.MethodSignature(null, [
          $.Int64, $.Int64, 
          $.Int32
        ]));
    $.Method({}, "UnlockRegion", new JSIL.MethodSignature(null, [
          $.Int64, $.Int64, 
          $.Int32
        ]));
    $.Method({}, "Stat", new JSIL.MethodSignature(null, [$.IntPtr, $.Int32]));
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["0000000C-0000-0000-C000-000000000046"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Messaging.Interop.ITransaction */ 

JSIL.MakeInterface(
  "System.Messaging.Interop.ITransaction", false, [], function ($) {
    $.Method({}, "Commit", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32
        ]));
    $.Method({}, "Abort", new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32
        ]));
    $.Method({}, "GetTransactionInfo", new JSIL.MethodSignature($.Int32, [$.IntPtr]));
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["0FB15084-AF41-11CE-BD2B-204C4F4F5020"]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Messaging.Interop.MessagePropertyVariants */ 

(function MessagePropertyVariants$Members () {
  var $, $thisType;































  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.MessagePropertyVariants", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AdjustSize", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetGuid", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetI2", 
      new JSIL.MethodSignature($.Int16, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetI4", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetIntPtr", 
      new JSIL.MethodSignature($.IntPtr, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetString", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetStringVectorBasePointer", 
      new JSIL.MethodSignature($.IntPtr, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetStringVectorLength", 
      new JSIL.MethodSignature($.UInt32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetUI1", 
      new JSIL.MethodSignature($.Byte, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetUI1Vector", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetUI2", 
      new JSIL.MethodSignature($.Int16, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetUI4", 
      new JSIL.MethodSignature($.Int32, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetUI8", 
      new JSIL.MethodSignature($.Int64, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Ghost", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Lock", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Remove", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetEmpty", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetGuid", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetI2", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int16])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetI4", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetNull", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "SetString", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUI1", 
      new JSIL.MethodSignature(null, [$.Int32, $.Byte])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUI1Vector", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUI2", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int16])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUI4", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUI8", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Unlock", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "VT_UNDEFINED", $.Int16, 0);

    $.Constant({Static:true , Public:true }, "VT_EMPTY", $.Int16, 32767);

    $.Constant({Static:true , Public:true }, "VT_ARRAY", $.Int16, 8192);

    $.Constant({Static:true , Public:true }, "VT_BOOL", $.Int16, 11);

    $.Constant({Static:true , Public:true }, "VT_BSTR", $.Int16, 8);

    $.Constant({Static:true , Public:true }, "VT_CLSID", $.Int16, 72);

    $.Constant({Static:true , Public:true }, "VT_CY", $.Int16, 6);

    $.Constant({Static:true , Public:true }, "VT_DATE", $.Int16, 7);

    $.Constant({Static:true , Public:true }, "VT_I1", $.Int16, 16);

    $.Constant({Static:true , Public:true }, "VT_I2", $.Int16, 2);

    $.Constant({Static:true , Public:true }, "VT_I4", $.Int16, 3);

    $.Constant({Static:true , Public:true }, "VT_I8", $.Int16, 20);

    $.Constant({Static:true , Public:true }, "VT_LPSTR", $.Int16, 30);

    $.Constant({Static:true , Public:true }, "VT_LPWSTR", $.Int16, 31);

    $.Constant({Static:true , Public:true }, "VT_NULL", $.Int16, 1);

    $.Constant({Static:true , Public:true }, "VT_R4", $.Int16, 4);

    $.Constant({Static:true , Public:true }, "VT_R8", $.Int16, 5);

    $.Constant({Static:true , Public:true }, "VT_STREAMED_OBJECT", $.Int16, 68);

    $.Constant({Static:true , Public:true }, "VT_STORED_OBJECT", $.Int16, 69);

    $.Constant({Static:true , Public:true }, "VT_UI1", $.Int16, 17);

    $.Constant({Static:true , Public:true }, "VT_UI2", $.Int16, 18);

    $.Constant({Static:true , Public:true }, "VT_UI4", $.Int16, 19);

    $.Constant({Static:true , Public:true }, "VT_UI8", $.Int16, 21);

    $.Constant({Static:true , Public:true }, "VT_VECTOR", $.Int16, 4096);

    $.Field({Static:false, Public:false}, "MAX_PROPERTIES", $.Int32);

    $.Field({Static:false, Public:false}, "basePropertyId", $.Int32);

    $.Field({Static:false, Public:false}, "propertyCount", $.Int32);

    $.Field({Static:false, Public:false}, "handleVectorProperties", $asm07.TypeRef("System.Runtime.InteropServices.GCHandle"));

    $.Field({Static:false, Public:false}, "handleVectorIdentifiers", $asm07.TypeRef("System.Runtime.InteropServices.GCHandle"));

    $.Field({Static:false, Public:false}, "handleVectorStatus", $asm07.TypeRef("System.Runtime.InteropServices.GCHandle"));

    $.Field({Static:false, Public:false}, "reference", $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"));

    $.Field({Static:false, Public:false}, "vectorIdentifiers", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:false}, "vectorStatus", $jsilcore.TypeRef("System.Array", [$.Int32]));

    $.Field({Static:false, Public:false}, "vectorProperties", $jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.Interop.MQPROPVARIANTS")]));

    $.Field({Static:false, Public:false}, "variantTypes", $jsilcore.TypeRef("System.Array", [$.Int16]));

    $.Field({Static:false, Public:false}, "objects", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "handles", $jsilcore.TypeRef("System.Array", [$.Object]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.MessagePropertyVariants+MQPROPS */ 

(function MQPROPS$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.MessagePropertyVariants+MQPROPS", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "propertyCount", $.Int32);

    $.Field({Static:false, Public:false}, "propertyIdentifiers", $.IntPtr);

    $.Field({Static:false, Public:false}, "propertyValues", $.IntPtr);

    $.Field({Static:false, Public:false}, "status", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.MachinePropertyVariants */ 

(function MachinePropertyVariants$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants"), 
      Name: "System.Messaging.Interop.MachinePropertyVariants", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Messaging.Interop.MQPROPVARIANTS */ 

(function MQPROPVARIANTS$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Messaging.Interop.MQPROPVARIANTS", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      ExplicitLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:false, Offset: 0}, "vt", $.Int16);

    $.Field({Static:false, Public:false, Offset: 2}, "wReserved1", $.Int16);

    $.Field({Static:false, Public:false, Offset: 4}, "wReserved2", $.Int16);

    $.Field({Static:false, Public:false, Offset: 6}, "wReserved3", $.Int16);

    $.Field({Static:false, Public:false, Offset: 8}, "bVal", $.Byte);

    $.Field({Static:false, Public:false, Offset: 8}, "iVal", $.Int16);

    $.Field({Static:false, Public:false, Offset: 8}, "lVal", $.Int32);

    $.Field({Static:false, Public:false, Offset: 8}, "hVal", $.Int64);

    $.Field({Static:false, Public:false, Offset: 8}, "ptr", $.IntPtr);

    $.Field({Static:false, Public:false, Offset: 8}, "caub", $asm1C.TypeRef("System.Messaging.Interop.MQPROPVARIANTS+CAUB"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Messaging.Interop.MQPROPVARIANTS+CAUB */ 

(function CAUB$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Messaging.Interop.MQPROPVARIANTS+CAUB", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:false}, "cElems", $.UInt32);

    $.Field({Static:false, Public:false}, "pElems", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;





  JSIL.MakeStaticClass("System.Messaging.Interop.NativeMethods", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:false}, "IntMQGetSecurityContextEx", 
      new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle")])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQGetSecurityContextEx", 
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQGetSecurityContextEx", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.SecurityContextHandle")])])
    );

    $.PInvokeMethod({Static:true , Public:true }, "OleLoadFromStream", 
      new JSIL.MethodSignature($.Object, [$asm1C.TypeRef("System.Messaging.Interop.IStream"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Guid")])]), 
      {
        Module: "ole32.dll", 
        Result: {
          NativeType: "IntF"
        }
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "OleSaveToStream", 
      new JSIL.MethodSignature(null, [$asm1C.TypeRef("System.Messaging.Interop.IPersistStream"), $asm1C.TypeRef("System.Messaging.Interop.IStream")]), 
      {
        Module: "ole32.dll", 
      }
    );

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_NEGATIVE_ARRIVAL", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_NEGATIVE_RECEIVE", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_POSITIVE_ARRIVAL", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_POSITIVE_RECEIVE", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_FULL_REACH_QUEUE", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_FULL_RECEIVE", $.Int32, 14);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_NOTACKNOWLEDGE_REACH_QUEUE", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "ACKNOWLEDGE_NOTACKNOWLEDGE_RECEIVE", $.Int32, 12);

    $.Constant({Static:true , Public:false}, "ALG_CLASS_DATA_ENCRYPT", $.Int32, 24576);

    $.Constant({Static:true , Public:false}, "ALG_CLASS_HASH", $.Int32, 32768);

    $.Constant({Static:true , Public:false}, "ALG_SID_MD2", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "ALG_SID_MD4", $.Int32, 2);

    $.Constant({Static:true , Public:false}, "ALG_SID_MD5", $.Int32, 3);

    $.Constant({Static:true , Public:false}, "ALG_SID_SHA", $.Int32, 4);

    $.Constant({Static:true , Public:false}, "ALG_SID_MAC", $.Int32, 5);

    $.Constant({Static:true , Public:false}, "ALG_SID_RIPEMD", $.Int32, 6);

    $.Constant({Static:true , Public:false}, "ALG_SID_RIPEMD160", $.Int32, 7);

    $.Constant({Static:true , Public:false}, "ALG_SID_SSL3SHAMD5", $.Int32, 8);

    $.Constant({Static:true , Public:false}, "ALG_SID_RC2", $.Int32, 2);

    $.Constant({Static:true , Public:false}, "ALG_SID_RC4", $.Int32, 1);

    $.Constant({Static:true , Public:false}, "ALG_TYPE_ANY", $.Int32, 0);

    $.Constant({Static:true , Public:false}, "ALG_TYPE_BLOCK", $.Int32, 1536);

    $.Constant({Static:true , Public:false}, "ALG_TYPE_STREAM", $.Int32, 2048);

    $.Constant({Static:true , Public:true }, "CALG_MD2", $.Int32, 32769);

    $.Constant({Static:true , Public:true }, "CALG_MD4", $.Int32, 32770);

    $.Constant({Static:true , Public:true }, "CALG_MD5", $.Int32, 32771);

    $.Constant({Static:true , Public:true }, "CALG_SHA", $.Int32, 32772);

    $.Constant({Static:true , Public:true }, "CALG_MAC", $.Int32, 32773);

    $.Constant({Static:true , Public:true }, "CALG_RC2", $.Int32, 26114);

    $.Constant({Static:true , Public:true }, "CALG_RC4", $.Int32, 26625);

    $.Constant({Static:true , Public:true }, "LOCK_WRITE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "LOCK_EXCLUSIVE", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "LOCK_ONLYONCE", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "STATFLAG_DEFAULT", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "STATFLAG_NONAME", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "STATFLAG_NOOPEN", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "STGC_DEFAULT", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "STGC_OVERWRITE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "STGC_ONLYIFCURRENT", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "STREAM_SEEK_SET", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "STREAM_SEEK_CUR", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "STREAM_SEEK_END", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "E_UNEXPECTED", $.Int32, -2147418113);

    $.Constant({Static:true , Public:true }, "E_NOTIMPL", $.Int32, -2147467263);

    $.Constant({Static:true , Public:true }, "E_OUTOFMEMORY", $.Int32, -2147024882);

    $.Constant({Static:true , Public:true }, "E_INVALIDARG", $.Int32, -2147024809);

    $.Constant({Static:true , Public:true }, "E_NOINTERFACE", $.Int32, -2147467262);

    $.Constant({Static:true , Public:true }, "E_POINTER", $.Int32, -2147467261);

    $.Constant({Static:true , Public:true }, "E_HANDLE", $.Int32, -2147024890);

    $.Constant({Static:true , Public:true }, "E_ABORT", $.Int32, -2147467260);

    $.Constant({Static:true , Public:true }, "E_FAIL", $.Int32, -2147467259);

    $.Field({Static:true , Public:true }, "IID_IUnknown", $asm07.TypeRef("System.Guid"));

    $.Constant({Static:true , Public:true }, "MANAGEMENT_BASE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MANAGEMENT_ACTIVEQUEUES", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MANAGEMENT_PRIVATEQ", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "MANAGEMENT_DSSERVER", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "MANAGEMENT_CONNECTED", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "MANAGEMENT_TYPE", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "MACHINE_BASE", $.Int32, 200);

    $.Constant({Static:true , Public:true }, "MACHINE_SITE_ID", $.Int32, 201);

    $.Constant({Static:true , Public:true }, "MACHINE_ID", $.Int32, 202);

    $.Constant({Static:true , Public:true }, "MACHINE_PATHNAME", $.Int32, 203);

    $.Constant({Static:true , Public:true }, "MACHINE_CONNECTION", $.Int32, 204);

    $.Constant({Static:true , Public:true }, "MACHINE_ENCRYPTION_PK", $.Int32, 205);

    $.Constant({Static:true , Public:true }, "MAX_MESSAGE_ID_SIZE", $.Int32, 20);

    $.Constant({Static:true , Public:true }, "MAX_LABEL_LEN", $.Int32, 124);

    $.Constant({Static:true , Public:true }, "MESSAGE_AUTHENTICATION_LEVEL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_AUTHENTICATION_LEVEL_ALWAYS", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_AUTHENTICATION_LEVEL_MSMQ10", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "MESSAGE_AUTHENTICATION_LEVEL_MSMQ20", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_ACCESS_DENIED", $.Int32, 32772);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_BAD_DESTINATION_QUEUE", $.Int32, 32768);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_BAD_ENCRYPTION", $.Int32, 32775);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_BAD_SIGNATURE", $.Int32, 32774);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_COULD_NOT_ENCRYPT", $.Int32, 32776);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_HOP_COUNT_EXCEEDED", $.Int32, 32773);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_NORMAL", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_NOT_TRANSACTIONAL_QUEUE", $.Int32, 32777);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_NOT_TRANSACTIONAL_MESSAGE", $.Int32, 32778);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_PURGED", $.Int32, 32769);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_QUEUE_DELETED", $.Int32, 49152);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_QUEUE_EXCEED_QUOTA", $.Int32, 32771);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_QUEUE_PURGED", $.Int32, 49153);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_REACH_QUEUE", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_REACH_QUEUE_TIMEOUT", $.Int32, 32770);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_RECEIVE", $.Int32, 16384);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_RECEIVE_TIMEOUT", $.Int32, 49154);

    $.Constant({Static:true , Public:true }, "MESSAGE_CLASS_REPORT", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_DELIVERY_EXPRESS", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_DELIVERY_RECOVERABLE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_JOURNAL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_JOURNAL_DEADLETTER", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_JOURNAL_JOURNAL", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "MESSAGE_PRIVACY_LEVEL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_PRIVACY_LEVEL_BODY", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_BASE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_ACKNOWLEDGE", $.Int32, 6);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_ADMIN_QUEUE", $.Int32, 17);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_ADMIN_QUEUE_LEN", $.Int32, 18);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_APPSPECIFIC", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_ARRIVEDTIME", $.Int32, 32);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_AUTHENTICATED", $.Int32, 25);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_AUTH_LEVEL", $.Int32, 24);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_BODY", $.Int32, 9);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_BODY_SIZE", $.Int32, 10);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_BODY_TYPE", $.Int32, 42);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_CLASS", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_CONNECTOR_TYPE", $.Int32, 38);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_CORRELATIONID", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_DELIVERY", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_DEST_QUEUE", $.Int32, 33);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_DEST_QUEUE_LEN", $.Int32, 34);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_DEST_SYMM_KEY", $.Int32, 43);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_DEST_SYMM_KEY_LEN", $.Int32, 44);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_ENCRYPTION_ALG", $.Int32, 27);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_EXTENSION", $.Int32, 35);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_EXTENSION_LEN", $.Int32, 36);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_FIRST_IN_XACT", $.Int32, 50);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_HASH_ALG", $.Int32, 26);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_JOURNAL", $.Int32, 7);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_LABEL", $.Int32, 11);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_LABEL_LEN", $.Int32, 12);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_LAST_IN_XACT", $.Int32, 51);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_MSGID", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_PRIORITY", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_PRIV_LEVEL", $.Int32, 23);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_PROV_NAME", $.Int32, 48);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_PROV_NAME_LEN", $.Int32, 49);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_PROV_TYPE", $.Int32, 47);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_RESP_QUEUE", $.Int32, 15);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_RESP_QUEUE_LEN", $.Int32, 16);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SECURITY_CONTEXT", $.Int32, 37);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENDERID", $.Int32, 20);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENDERID_LEN", $.Int32, 21);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENDERID_TYPE", $.Int32, 22);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENDER_CERT", $.Int32, 28);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENDER_CERT_LEN", $.Int32, 29);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SENTTIME", $.Int32, 31);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SIGNATURE", $.Int32, 45);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SIGNATURE_LEN", $.Int32, 46);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_SRC_MACHINE_ID", $.Int32, 30);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_TIME_TO_BE_RECEIVED", $.Int32, 14);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_TIME_TO_REACH_QUEUE", $.Int32, 13);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_TRACE", $.Int32, 41);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_VERSION", $.Int32, 19);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_XACT_STATUS_QUEUE", $.Int32, 39);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_XACT_STATUS_QUEUE_LEN", $.Int32, 40);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_XACTID", $.Int32, 52);

    $.Constant({Static:true , Public:true }, "MESSAGE_PROPID_LOOKUPID", $.Int32, 60);

    $.Constant({Static:true , Public:true }, "MESSAGE_SENDERID_TYPE_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_SENDERID_TYPE_SID", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MESSAGE_TRACE_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "MESSAGE_TRACE_SEND_ROUTE_TO_REPORT_QUEUE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "PROV_RSA_FULL", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "PROV_RSA_SIG", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "PROV_DSS", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "PROV_FORTEZZA", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "PROV_MS_EXCHANGE", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "PROV_SSL", $.Int32, 6);

    $.Constant({Static:true , Public:true }, "PROV_STT_MER", $.Int32, 7);

    $.Constant({Static:true , Public:true }, "PROV_STT_ACQ", $.Int32, 8);

    $.Constant({Static:true , Public:true }, "PROV_STT_BRND", $.Int32, 9);

    $.Constant({Static:true , Public:true }, "PROV_STT_ROOT", $.Int32, 10);

    $.Constant({Static:true , Public:true }, "PROV_STT_ISS", $.Int32, 11);

    $.Constant({Static:true , Public:true }, "QUEUE_ACCESS_RECEIVE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_ACCESS_SEND", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "QUEUE_ACCESS_PEEK", $.Int32, 32);

    $.Constant({Static:true , Public:true }, "QUEUE_ACCESS_ADMIN", $.Int32, 128);

    $.Constant({Static:true , Public:true }, "QUEUE_ACTION_RECEIVE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_ACTION_PEEK_CURRENT", $.Int32, -2147483648);

    $.Constant({Static:true , Public:true }, "QUEUE_ACTION_PEEK_NEXT", $.Int32, -2147483647);

    $.Constant({Static:true , Public:false}, "LOOKUP_PEEK_MASK", $.Int32, 1073741840);

    $.Constant({Static:true , Public:false}, "LOOKUP_RECEIVE_MASK", $.Int32, 1073741856);

    $.Constant({Static:true , Public:true }, "QUEUE_AUTHENTICATE_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_AUTHENTICATE_AUTHENTICATE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_JOURNAL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_JOURNAL_JOURNAL", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_PRIVACY_LEVEL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_PRIVACY_LEVEL_OPTIONAL", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_PRIVACY_LEVEL_BODY", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_BASE", $.Int32, 100);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_INSTANCE", $.Int32, 101);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_TYPE", $.Int32, 102);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_PATHNAME", $.Int32, 103);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_JOURNAL", $.Int32, 104);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_QUOTA", $.Int32, 105);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_BASEPRIORITY", $.Int32, 106);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_JOURNAL_QUOTA", $.Int32, 107);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_LABEL", $.Int32, 108);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_CREATE_TIME", $.Int32, 109);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_MODIFY_TIME", $.Int32, 110);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_AUTHENTICATE", $.Int32, 111);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_PRIV_LEVEL", $.Int32, 112);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_TRANSACTION", $.Int32, 113);

    $.Constant({Static:true , Public:true }, "QUEUE_PROPID_MULTICAST_ADDRESS", $.Int32, 125);

    $.Constant({Static:true , Public:true }, "QUEUE_SHARED_MODE_DENY_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_SHARED_MODE_DENY_RECEIVE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTION_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTION_MTS", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTION_XA", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTION_SINGLE", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTIONAL_NONE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "QUEUE_TRANSACTIONAL_TRANSACTIONAL", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "MQ_ERROR_SECURITY_DESCRIPTOR_TOO_SMALL", $.Int32, -1072824285);

    $.Constant({Static:true , Public:true }, "MQ_OK", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_SID", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_NAME", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_USER", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_GROUP", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_DOMAIN", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_ALIAS", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "TRUSTEE_IS_WELL_KNOWN_GROUP", $.Int32, 5);

    $.Constant({Static:true , Public:true }, "DACL_SECURITY_INFORMATION", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "GRANT_ACCESS", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "SET_ACCESS", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "DENY_ACCESS", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "REVOKE_ACCESS", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "NO_MULTIPLE_TRUSTEE", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "ERROR_SUCCESS", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "SECURITY_DESCRIPTOR_REVISION", $.Int32, 1);


    function NativeMethods__cctor () {
      $thisType.IID_IUnknown = new $asm07.System.Guid();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NativeMethods__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; });

})();

/* class System.Messaging.Interop.NativeMethods+SECURITY_DESCRIPTOR */ 

(function SECURITY_DESCRIPTOR$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.NativeMethods+SECURITY_DESCRIPTOR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "revision", $.Byte);

    $.Field({Static:false, Public:true }, "size", $.Byte);

    $.Field({Static:false, Public:true }, "control", $.Int16);

    $.Field({Static:false, Public:true }, "owner", $.IntPtr);

    $.Field({Static:false, Public:true }, "Group", $.IntPtr);

    $.Field({Static:false, Public:true }, "Sacl", $.IntPtr);

    $.Field({Static:false, Public:true }, "Dacl", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Messaging.Interop.NativeMethods+ExplicitAccess */ 

(function ExplicitAccess$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "System.Messaging.Interop.NativeMethods+ExplicitAccess", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "grfAccessPermissions", $.Int32);

    $.Field({Static:false, Public:true }, "grfAccessMode", $.Int32);

    $.Field({Static:false, Public:true }, "grfInheritance", $.Int32);

    $.Field({Static:false, Public:true }, "pMultipleTrustees", $.IntPtr);

    $.Field({Static:false, Public:true }, "MultipleTrusteeOperation", $.Int32);

    $.Field({Static:false, Public:true }, "TrusteeForm", $.Int32);

    $.Field({Static:false, Public:true }, "TrusteeType", $.Int32);

    $.Field({Static:false, Public:true }, "data", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.QueuePropertyVariants */ 

(function QueuePropertyVariants$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants"), 
      Name: "System.Messaging.Interop.QueuePropertyVariants", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "MaxQueuePropertyIndex", $.Int32, 26);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.Restrictions */ 

(function Restrictions$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.Restrictions", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddGuid", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm07.TypeRef("System.Guid")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddGuid", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddI4", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddItem", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int16, $.IntPtr
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetRestrictionsRef", 
      JSIL.MethodSignature.Return($asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"))
    );

    $.Field({Static:false, Public:false}, "restrictionStructure", $asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"));

    $.Constant({Static:true , Public:true }, "PRLT", $.Int32, 0);

    $.Constant({Static:true , Public:true }, "PRLE", $.Int32, 1);

    $.Constant({Static:true , Public:true }, "PRGT", $.Int32, 2);

    $.Constant({Static:true , Public:true }, "PRGE", $.Int32, 3);

    $.Constant({Static:true , Public:true }, "PREQ", $.Int32, 4);

    $.Constant({Static:true , Public:true }, "PRNE", $.Int32, 5);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.Restrictions+MQRESTRICTION */ 

(function MQRESTRICTION$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "System.Messaging.Interop.Restrictions+MQRESTRICTION", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Object"), "Finalize");

    $.ExternalMethod({Static:false, Public:true }, "GetNextValidPtr", 
      new JSIL.MethodSignature($.IntPtr, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetRestrictionSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:true }, "restrictionCount", $.Int32);

    $.Field({Static:false, Public:true }, "restrinctions", $.IntPtr);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.MessageQueueHandle */ 

(function MessageQueueHandle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), 
      Name: "System.Messaging.Interop.MessageQueueHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsInvalid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "InvalidHandle", $.Type);

    $.Property({Static:false, Public:true , Virtual:true }, "IsInvalid", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.MessageQueueHandle+InvalidMessageQueueHandle */ 

(function InvalidMessageQueueHandle$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), 
      Name: "System.Messaging.Interop.MessageQueueHandle+InvalidMessageQueueHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.CursorHandle */ 

(function CursorHandle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), 
      Name: "System.Messaging.Interop.CursorHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsInvalid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "NullHandle", $.Type);

    $.Property({Static:false, Public:true , Virtual:true }, "IsInvalid", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.CursorHandle+InvalidCursorHandle */ 

(function InvalidCursorHandle$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), 
      Name: "System.Messaging.Interop.CursorHandle+InvalidCursorHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.LocatorHandle */ 

(function LocatorHandle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), 
      Name: "System.Messaging.Interop.LocatorHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsInvalid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "InvalidHandle", $.Type);

    $.Property({Static:false, Public:true , Virtual:true }, "IsInvalid", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.LocatorHandle+InvalidLocatorHandle */ 

(function InvalidLocatorHandle$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm1C.TypeRef("System.Messaging.Interop.LocatorHandle"), 
      Name: "System.Messaging.Interop.LocatorHandle+InvalidLocatorHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.SecurityContextHandle */ 

(function SecurityContextHandle$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), 
      Name: "System.Messaging.Interop.SecurityContextHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.IntPtr)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsInvalid", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseHandle", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "IsInvalid", $.Boolean);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Messaging.Interop.SafeNativeMethods */ 

(function SafeNativeMethods$Members () {
  var $, $thisType;



















  JSIL.MakeStaticClass("System.Messaging.Interop.SafeNativeMethods", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:true }, "FormatMessage", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.IntPtr, 
          $.Int32, $.Int32, 
          $asm07.TypeRef("System.Text.StringBuilder"), $.Int32, 
          $.IntPtr
        ]), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetComputerName", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("System.Array", [$.Int32])]), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "GetHandleInformation", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Runtime.InteropServices.SafeHandle"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]), 
      {
        Module: "kernel32.dll", 
        CharSet: 'auto',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "IntMQBeginTransaction", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.ITransaction")])]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQBeginTransaction", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "IntMQInstanceToFormatName", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $asm07.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQInstanceToFormatName", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQPathNameToFormatName", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm07.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQPathNameToFormatName", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "LocalFree", 
      new JSIL.MethodSignature($.IntPtr, [$.IntPtr]), 
      {
        Module: "kernel32.dll", 
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQBeginTransaction", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.ITransaction")])])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQCloseCursor", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    )
      .Attribute($asm07.TypeRef("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute"), function () { return [$asm07.System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, $asm07.System.Runtime.ConstrainedExecution.Cer.MayFail]; });

    $.PInvokeMethod({Static:true , Public:true }, "MQCloseQueue", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    )
      .Attribute($asm07.TypeRef("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute"), function () { return [$asm07.System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, $asm07.System.Runtime.ConstrainedExecution.Cer.MayFail]; });

    $.PInvokeMethod({Static:true , Public:true }, "MQCreateCursor", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.CursorHandle")])]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQFreeMemory", 
      JSIL.MethodSignature.Action($.IntPtr), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQFreeSecurityContext", 
      JSIL.MethodSignature.Action($.IntPtr), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    )
      .Attribute($asm07.TypeRef("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute"), function () { return [$asm07.System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, $asm07.System.Runtime.ConstrainedExecution.Cer.MayFail]; });

    $.ExternalMethod({Static:true , Public:true }, "MQInstanceToFormatName", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $asm07.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQLocateEnd", 
      new JSIL.MethodSignature($.Int32, [$.IntPtr]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    )
      .Attribute($asm07.TypeRef("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute"), function () { return [$asm07.System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, $asm07.System.Runtime.ConstrainedExecution.Cer.MayFail]; });

    $.PInvokeMethod({Static:true , Public:true }, "MQLocateNext", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.LocatorHandle"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$asm1C.TypeRef("System.Messaging.Interop.MQPROPVARIANTS")])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQPathNameToFormatName", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm07.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.PInvokeMethod({Static:true , Public:true }, "SetEntriesInAclW", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.IntPtr, 
          $.IntPtr, $jsilcore.TypeRef("JSIL.Reference", [$.IntPtr])
        ]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_ALLOCATE_BUFFER", $.Int32, 256);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_IGNORE_INSERTS", $.Int32, 512);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_FROM_STRING", $.Int32, 1024);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_FROM_HMODULE", $.Int32, 2048);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_FROM_SYSTEM", $.Int32, 4096);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_ARGUMENT_ARRAY", $.Int32, 8192);

    $.Constant({Static:true , Public:true }, "FORMAT_MESSAGE_MAX_WIDTH_MASK", $.Int32, 255);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; })
    .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

})();

/* delegate System.Messaging.Interop.SafeNativeMethods+ReceiveCallback */ 

JSIL.MakeDelegate("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback", false, [], 
  new JSIL.MethodSignature(null, [
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.IntPtr"), 
      $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
      $asm07.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), 
      $asm07.TypeRef("System.IntPtr")
    ]));

/* class System.Messaging.Interop.UnsafeNativeMethods */ 

(function UnsafeNativeMethods$Members () {
  var $, $thisType;
































  JSIL.MakeStaticClass("System.Messaging.Interop.UnsafeNativeMethods", false, [], function ($ib) {
    $ = $ib;

    $.PInvokeMethod({Static:true , Public:true }, "GetSecurityDescriptorDacl", 
      new JSIL.MethodSignature($.Boolean, [
          $.IntPtr, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.IntPtr]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "InitializeSecurityDescriptor", 
      new JSIL.MethodSignature($.Boolean, [$asm1C.TypeRef("System.Messaging.Interop.NativeMethods+SECURITY_DESCRIPTOR"), $.Int32]), 
      {
        Module: "advapi32.dll", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQCreateQueue", 
      new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $asm07.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQCreateQueue", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQDeleteQueue", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQDeleteQueue", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQGetMachineProperties", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.IntPtr, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQGetMachineProperties", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQGetQueueProperties", 
      new JSIL.MethodSignature($.Int32, [$.String, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQGetQueueProperties", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQLocateBegin", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"), 
          $asm1C.TypeRef("System.Messaging.Interop.Columns+MQCOLUMNSET"), $.IntPtr, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.LocatorHandle")])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQLocateBegin", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQMgmtGetInfo", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQMgmtGetInfo", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQOpenQueue", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle")])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQOpenQueue", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQReceiveMessageByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.Int64, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $.IntPtr
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQReceiveMessageByLookupId", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQReceiveMessageByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.Int64, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQReceiveMessageByLookupId", 
      }
    );

    $.PInvokeMethod({Static:true , Public:false}, "IntMQSetQueueProperties", 
      new JSIL.MethodSignature($.Int32, [$.String, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
        EntryPoint: "MQSetQueueProperties", 
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "LookupAccountName", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.IntPtr, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $asm07.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "advapi32.dll", 
        CharSet: 'auto',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQCreateQueue", 
      new JSIL.MethodSignature($.Int32, [
          $.IntPtr, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $asm07.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQDeleteQueue", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQGetMachineProperties", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.IntPtr, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQGetQueueProperties", 
      new JSIL.MethodSignature($.Int32, [$.String, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQGetQueueSecurity", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.IntPtr, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQLocateBegin", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm1C.TypeRef("System.Messaging.Interop.Restrictions+MQRESTRICTION"), 
          $asm1C.TypeRef("System.Messaging.Interop.Columns+MQCOLUMNSET"), $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.LocatorHandle")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQMgmtGetInfo", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQOpenQueue", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle")])
        ])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQPurgeQueue", 
      new JSIL.MethodSignature($.Int32, [$asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle")]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQReceiveMessage", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.UInt32, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), $.IntPtr
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQReceiveMessage", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.UInt32, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $asm1C.TypeRef("System.Messaging.Interop.CursorHandle"), $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQReceiveMessageByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.Int64, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $.IntPtr
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "MQReceiveMessageByLookupId", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $.Int64, 
          $.Int32, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$asm07.TypeRef("System.Threading.NativeOverlapped")]), $asm1C.TypeRef("System.Messaging.Interop.SafeNativeMethods+ReceiveCallback"), 
          $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQSendMessage", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $.IntPtr
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQSendMessage", 
      new JSIL.MethodSignature($.Int32, [
          $asm1C.TypeRef("System.Messaging.Interop.MessageQueueHandle"), $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS"), 
          $asm1C.TypeRef("System.Messaging.Interop.ITransaction")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.ExternalMethod({Static:true , Public:true }, "MQSetQueueProperties", 
      new JSIL.MethodSignature($.Int32, [$.String, $asm1C.TypeRef("System.Messaging.Interop.MessagePropertyVariants+MQPROPS")])
    );

    $.PInvokeMethod({Static:true , Public:true }, "MQSetQueueSecurity", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $asm1C.TypeRef("System.Messaging.Interop.NativeMethods+SECURITY_DESCRIPTOR")
        ]), 
      {
        Module: "mqrt.dll", 
        CharSet: 'unicode',
      }
    );

    $.PInvokeMethod({Static:true , Public:true }, "SetSecurityDescriptorDacl", 
      new JSIL.MethodSignature($.Boolean, [
          $asm1C.TypeRef("System.Messaging.Interop.NativeMethods+SECURITY_DESCRIPTOR"), $.Boolean, 
          $.IntPtr, $.Boolean
        ]), 
      {
        Module: "advapi32.dll", 
      }
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [false]; })
    .Attribute($asm07.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

})();

