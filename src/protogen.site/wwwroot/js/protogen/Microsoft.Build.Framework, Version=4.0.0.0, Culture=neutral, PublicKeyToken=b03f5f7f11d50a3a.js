/* Generated by JSIL v0.8.2 build 17182. See http://jsil.org/ for more information. */ 
'use strict';
/* Generating type stubs only */ 
var $asm00 = JSIL.DeclareAssembly("Microsoft.Build.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Build");
JSIL.DeclareNamespace("Microsoft.Build.Framework");
/* struct Microsoft.Build.Framework.BuildEngineResult */ 

(function BuildEngineResult$Members () {
  var $, $thisType;




  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ValueType"), 
      Name: "Microsoft.Build.Framework.BuildEngineResult", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Boolean, $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Build.Framework.ITaskItem")])])])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Result", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetOutputsPerProject", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Build.Framework.ITaskItem")])])]))
    );

    $.Field({Static:false, Public:false}, "buildResult", $.Boolean);

    $.Field({Static:false, Public:false}, "targetOutputsPerProject", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Build.Framework.ITaskItem")])])]));

    $.Property({Static:false, Public:true }, "Result", $.Boolean);

    $.Property({Static:false, Public:true }, "TargetOutputsPerProject", $asm07.TypeRef("System.Collections.Generic.IList`1", [$asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Build.Framework.ITaskItem")])])]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildEventArgs */ 

(function BuildEventArgs$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Build.Framework.BuildEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BuildEventContext", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HelpKeyword", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SenderName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ThreadId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Timestamp", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BuildEventContext", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "set_Message", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetBuildEventContextDefaultAfterSerialization", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnDeserializedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetBuildEventContextDefaultBeforeSerialization", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnDeserializingAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "message", $.String);

    $.Field({Static:false, Public:false}, "helpKeyword", $.String);

    $.Field({Static:false, Public:false}, "senderName", $.String);

    $.Field({Static:false, Public:false}, "timestamp", $asm07.TypeRef("System.DateTime"));

    $.Field({Static:false, Public:false}, "threadId", $.Int32);

    $.Field({Static:false, Public:false}, "buildEventContext", $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"))
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Property({Static:false, Public:true }, "Timestamp", $asm07.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "ThreadId", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);

    $.Property({Static:false, Public:true }, "HelpKeyword", $.String);

    $.Property({Static:false, Public:true }, "SenderName", $.String);

    $.Property({Static:false, Public:true }, "BuildEventContext", $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.LazyFormattedBuildEventArgs */ 

(function LazyFormattedBuildEventArgs$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildEventArgs"), 
      Name: "Microsoft.Build.Framework.LazyFormattedBuildEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(4, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "FormatString", 
      new JSIL.MethodSignature($.String, [
          $asm07.TypeRef("System.Globalization.CultureInfo"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "args", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "OnDeserialized", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnDeserializedAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "$arguments", $jsilcore.TypeRef("System.Array", [$.Object]));

    $.Field({Static:false, Public:false}, "originalCulture", $asm07.TypeRef("System.Globalization.CultureInfo"));

    $.Field({Static:false, Public:false}, "locker", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildErrorEventArgs */ 

(function BuildErrorEventArgs$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.LazyFormattedBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildErrorEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 12, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime"), $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(11, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Code", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndLineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_File", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Subcategory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProjectFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "subcategory", $.String);

    $.Field({Static:false, Public:false}, "code", $.String);

    $.Field({Static:false, Public:false}, "file", $.String);

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "lineNumber", $.Int32);

    $.Field({Static:false, Public:false}, "columnNumber", $.Int32);

    $.Field({Static:false, Public:false}, "endLineNumber", $.Int32);

    $.Field({Static:false, Public:false}, "endColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "Subcategory", $.String);

    $.Property({Static:false, Public:true }, "Code", $.String);

    $.Property({Static:false, Public:true }, "File", $.String);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "ColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndLineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndColumnNumber", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildStatusEventArgs */ 

(function BuildStatusEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.LazyFormattedBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildStatusEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(4, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildFinishedEventArgs */ 

(function BuildFinishedEventArgs$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildFinishedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Boolean, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Boolean, $asm07.TypeRef("System.DateTime"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(4, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Build.Framework.MessageImportance */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Build.Framework.MessageImportance", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    High: 0, 
    Normal: 1, 
    Low: 2, 
  }
);

/* class Microsoft.Build.Framework.BuildMessageEventArgs */ 

(function BuildMessageEventArgs$Members () {
  var $, $thisType;




















  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.LazyFormattedBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildMessageEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 13, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"), 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"), 
          $asm07.TypeRef("System.DateTime"), $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(5, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"), $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"), $asm07.TypeRef("System.DateTime"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(12, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Code", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndLineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_File", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Importance", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Subcategory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProjectFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "importance", $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"));

    $.Field({Static:false, Public:false}, "subcategory", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "code", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "file", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "projectFile", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "lineNumber", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "columnNumber", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "endLineNumber", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "endColumnNumber", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Property({Static:false, Public:true }, "Importance", $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"));

    $.Property({Static:false, Public:true }, "Subcategory", $.String);

    $.Property({Static:false, Public:true }, "Code", $.String);

    $.Property({Static:false, Public:true }, "File", $.String);

    $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "ColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndLineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildStartedEventArgs */ 

(function BuildStartedEventArgs$Members () {
  var $, $thisType;







  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime"), $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(3, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, "get_BuildEnvironment", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.Field({Static:false, Public:false}, "environmentOnBuildStart", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Property({Static:false, Public:true }, "BuildEnvironment", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildWarningEventArgs */ 

(function BuildWarningEventArgs$Members () {
  var $, $thisType;
















  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.LazyFormattedBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.BuildWarningEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 12, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime"), $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(11, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Code", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndColumnNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EndLineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_File", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Subcategory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProjectFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "subcategory", $.String);

    $.Field({Static:false, Public:false}, "code", $.String);

    $.Field({Static:false, Public:false}, "file", $.String);

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "lineNumber", $.Int32);

    $.Field({Static:false, Public:false}, "columnNumber", $.Int32);

    $.Field({Static:false, Public:false}, "endLineNumber", $.Int32);

    $.Field({Static:false, Public:false}, "endColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "Subcategory", $.String);

    $.Property({Static:false, Public:true }, "Code", $.String);

    $.Property({Static:false, Public:true }, "File", $.String);

    $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "ColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndLineNumber", $.Int32);

    $.Property({Static:false, Public:true }, "EndColumnNumber", $.Int32);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.CriticalBuildMessageEventArgs */ 

(function CriticalBuildMessageEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventArgs"), 
      Name: "Microsoft.Build.Framework.CriticalBuildMessageEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 12, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime"), $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(11, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.CustomBuildEventArgs */ 

(function CustomBuildEventArgs$Members () {
  var $, $thisType;





  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.LazyFormattedBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.CustomBuildEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(4, "messageArgs", function (_) {
          _.Attribute($asm07.TypeRef("System.ParamArrayAttribute"))
        });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.ExternalProjectFinishedEventArgs */ 

(function ExternalProjectFinishedEventArgs$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.ExternalProjectFinishedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.Boolean, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.ExternalProjectStartedEventArgs */ 

(function ExternalProjectStartedEventArgs$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventArgs"), 
      Name: "Microsoft.Build.Framework.ExternalProjectStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetNames", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "targetNames", $.String);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TargetNames", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Microsoft.Build.Framework.IBuildEngine3 */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IBuildEngine3", true, [], function ($) {
    $.Method({}, "BuildProjectFilesInParallel", new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Build.Framework.BuildEngineResult"), [
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.IDictionary")]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.Generic.IList`1", [$.String])]), 
          $jsilcore.TypeRef("System.Array", [$.String]), $.Boolean
        ]));
    $.Method({}, "Yield", JSIL.MethodSignature.Void);
    $.Method({}, "Reacquire", JSIL.MethodSignature.Void);
  }, [$asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine2"), $asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")]);

/* enum Microsoft.Build.Framework.RegisteredTaskObjectLifetime */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Build.Framework.RegisteredTaskObjectLifetime", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Build: 0, 
    AppDomain: 1, 
  }
);

/* interface Microsoft.Build.Framework.IBuildEngine4 */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IBuildEngine4", true, [], function ($) {
    $.Method({}, "RegisterTaskObject", new JSIL.MethodSignature(null, [
          $.Object, $.Object, 
          $asm00.TypeRef("Microsoft.Build.Framework.RegisteredTaskObjectLifetime"), $.Boolean
        ]));
    $.Method({}, "GetRegisteredTaskObject", new JSIL.MethodSignature($.Object, [$.Object, $asm00.TypeRef("Microsoft.Build.Framework.RegisteredTaskObjectLifetime")]));
    $.Method({}, "UnregisterTaskObject", new JSIL.MethodSignature($.Object, [$.Object, $asm00.TypeRef("Microsoft.Build.Framework.RegisteredTaskObjectLifetime")]));
  }, [$asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine3"), $asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine2"), $asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")]);

/* interface Microsoft.Build.Framework.IGeneratedTask */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IGeneratedTask", true, [], function ($) {
    $.Method({}, "SetPropertyValue", new JSIL.MethodSignature(null, [$asm00.TypeRef("Microsoft.Build.Framework.TaskPropertyInfo"), $.Object]));
    $.Method({}, "GetPropertyValue", new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Microsoft.Build.Framework.TaskPropertyInfo")]));
  }, [$asm00.TypeRef("Microsoft.Build.Framework.ITask")]);

/* interface Microsoft.Build.Framework.IBuildEngine */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IBuildEngine", true, [], function ($) {
    $.Method({}, "LogErrorEvent", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildErrorEventArgs")));
    $.Method({}, "LogWarningEvent", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildWarningEventArgs")));
    $.Method({}, "LogMessageEvent", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventArgs")));
    $.Method({}, "LogCustomEvent", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventArgs")));
    $.Method({}, "get_ContinueOnError", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "get_LineNumberOfTaskNode", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "get_ColumnNumberOfTaskNode", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "get_ProjectFileOfTaskNode", JSIL.MethodSignature.Return($.String));
    $.Method({}, "BuildProjectFile", new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("System.Array", [$.String]), 
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.IDictionary")
        ]));
    $.Property({}, "ContinueOnError");
    $.Property({}, "LineNumberOfTaskNode");
    $.Property({}, "ColumnNumberOfTaskNode");
    $.Property({}, "ProjectFileOfTaskNode");
  }, []);

/* interface Microsoft.Build.Framework.IBuildEngine2 */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IBuildEngine2", true, [], function ($) {
    $.Method({}, "get_IsRunningMultipleNodes", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "BuildProjectFile", new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("System.Array", [$.String]), 
          $asm07.TypeRef("System.Collections.IDictionary"), $asm07.TypeRef("System.Collections.IDictionary"), 
          $.String
        ]));
    $.Method({}, "BuildProjectFilesInParallel", new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.IDictionary")]), $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Collections.IDictionary")]), 
          $jsilcore.TypeRef("System.Array", [$.String]), $.Boolean, 
          $.Boolean
        ]));
    $.Property({}, "IsRunningMultipleNodes");
  }, [$asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")]);

/* interface Microsoft.Build.Framework.IEventRedirector */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IEventRedirector", true, [], function ($) {
    $.Method({}, "ForwardEvent", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildEventArgs")));
  }, []);

/* delegate Microsoft.Build.Framework.BuildMessageEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildMessageEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventArgs")]));

/* delegate Microsoft.Build.Framework.BuildErrorEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildErrorEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildErrorEventArgs")]));

/* delegate Microsoft.Build.Framework.BuildWarningEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildWarningEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildWarningEventArgs")]));

/* delegate Microsoft.Build.Framework.CustomBuildEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.CustomBuildEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventArgs")]));

/* delegate Microsoft.Build.Framework.BuildStartedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildStartedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildStartedEventArgs")]));

/* delegate Microsoft.Build.Framework.BuildFinishedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildFinishedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildFinishedEventArgs")]));

/* delegate Microsoft.Build.Framework.ProjectStartedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.ProjectStartedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.ProjectStartedEventArgs")]));

/* delegate Microsoft.Build.Framework.ProjectFinishedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.ProjectFinishedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.ProjectFinishedEventArgs")]));

/* delegate Microsoft.Build.Framework.TargetStartedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.TargetStartedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.TargetStartedEventArgs")]));

/* delegate Microsoft.Build.Framework.TargetFinishedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.TargetFinishedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.TargetFinishedEventArgs")]));

/* delegate Microsoft.Build.Framework.TaskStartedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.TaskStartedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.TaskStartedEventArgs")]));

/* delegate Microsoft.Build.Framework.TaskFinishedEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.TaskFinishedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.TaskFinishedEventArgs")]));

/* delegate Microsoft.Build.Framework.BuildStatusEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.BuildStatusEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs")]));

/* delegate Microsoft.Build.Framework.AnyEventHandler */ 

JSIL.MakeDelegate("Microsoft.Build.Framework.AnyEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Object"), $asm00.TypeRef("Microsoft.Build.Framework.BuildEventArgs")]));

/* interface Microsoft.Build.Framework.IEventSource */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IEventSource", true, [], function ($) {
    $.Method({}, "add_MessageRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventHandler")));
    $.Method({}, "remove_MessageRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventHandler")));
    $.Method({}, "add_ErrorRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildErrorEventHandler")));
    $.Method({}, "remove_ErrorRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildErrorEventHandler")));
    $.Method({}, "add_WarningRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildWarningEventHandler")));
    $.Method({}, "remove_WarningRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildWarningEventHandler")));
    $.Method({}, "add_BuildStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildStartedEventHandler")));
    $.Method({}, "remove_BuildStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildStartedEventHandler")));
    $.Method({}, "add_BuildFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildFinishedEventHandler")));
    $.Method({}, "remove_BuildFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildFinishedEventHandler")));
    $.Method({}, "add_ProjectStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ProjectStartedEventHandler")));
    $.Method({}, "remove_ProjectStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ProjectStartedEventHandler")));
    $.Method({}, "add_ProjectFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ProjectFinishedEventHandler")));
    $.Method({}, "remove_ProjectFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ProjectFinishedEventHandler")));
    $.Method({}, "add_TargetStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TargetStartedEventHandler")));
    $.Method({}, "remove_TargetStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TargetStartedEventHandler")));
    $.Method({}, "add_TargetFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TargetFinishedEventHandler")));
    $.Method({}, "remove_TargetFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TargetFinishedEventHandler")));
    $.Method({}, "add_TaskStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TaskStartedEventHandler")));
    $.Method({}, "remove_TaskStarted", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TaskStartedEventHandler")));
    $.Method({}, "add_TaskFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TaskFinishedEventHandler")));
    $.Method({}, "remove_TaskFinished", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.TaskFinishedEventHandler")));
    $.Method({}, "add_CustomEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventHandler")));
    $.Method({}, "remove_CustomEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.CustomBuildEventHandler")));
    $.Method({}, "add_StatusEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventHandler")));
    $.Method({}, "remove_StatusEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventHandler")));
    $.Method({}, "add_AnyEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.AnyEventHandler")));
    $.Method({}, "remove_AnyEventRaised", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.AnyEventHandler")));
  }, []);

/* interface Microsoft.Build.Framework.IForwardingLogger */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.IForwardingLogger", true, [], function ($) {
    $.Method({}, "get_BuildEventRedirector", JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.IEventRedirector")));
    $.Method({}, "set_BuildEventRedirector", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.IEventRedirector")));
    $.Method({}, "get_NodeId", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "set_NodeId", JSIL.MethodSignature.Action($.Int32));
    $.Property({}, "BuildEventRedirector");
    $.Property({}, "NodeId");
  }, [$asm00.TypeRef("Microsoft.Build.Framework.INodeLogger"), $asm00.TypeRef("Microsoft.Build.Framework.ILogger")]);

/* enum Microsoft.Build.Framework.LoggerVerbosity */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Build.Framework.LoggerVerbosity", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Quiet: 0, 
    Minimal: 1, 
    Normal: 2, 
    Detailed: 3, 
    Diagnostic: 4, 
  }
);

/* interface Microsoft.Build.Framework.ILogger */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ILogger", true, [], function ($) {
    $.Method({}, "get_Verbosity", JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.LoggerVerbosity")));
    $.Method({}, "set_Verbosity", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.LoggerVerbosity")));
    $.Method({}, "get_Parameters", JSIL.MethodSignature.Return($.String));
    $.Method({}, "set_Parameters", JSIL.MethodSignature.Action($.String));
    $.Method({}, "Initialize", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.IEventSource")));
    $.Method({}, "Shutdown", JSIL.MethodSignature.Void);
    $.Property({}, "Verbosity");
    $.Property({}, "Parameters");
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; });

/* interface Microsoft.Build.Framework.INodeLogger */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.INodeLogger", true, [], function ($) {
    $.Method({}, "Initialize", new JSIL.MethodSignature(null, [$asm00.TypeRef("Microsoft.Build.Framework.IEventSource"), $.Int32]));
  }, [$asm00.TypeRef("Microsoft.Build.Framework.ILogger")])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; });

/* interface Microsoft.Build.Framework.ITask */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITask", true, [], function ($) {
    $.Method({}, "get_BuildEngine", JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")));
    $.Method({}, "set_BuildEngine", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")));
    $.Method({}, "get_HostObject", JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.ITaskHost")));
    $.Method({}, "set_HostObject", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ITaskHost")));
    $.Method({}, "Execute", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "BuildEngine");
    $.Property({}, "HostObject");
  }, []);

/* interface Microsoft.Build.Framework.ICancelableTask */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ICancelableTask", true, [], function ($) {
    $.Method({}, "Cancel", JSIL.MethodSignature.Void);
  }, [$asm00.TypeRef("Microsoft.Build.Framework.ITask")]);

/* interface Microsoft.Build.Framework.ITaskFactory */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITaskFactory", true, [], function ($) {
    $.Method({}, "get_FactoryName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_TaskType", JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")));
    $.Method({}, "Initialize", new JSIL.MethodSignature($.Boolean, [
          $.String, $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm00.TypeRef("Microsoft.Build.Framework.TaskPropertyInfo")]), 
          $.String, $asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")
        ]));
    $.Method({}, "GetTaskParameters", JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Microsoft.Build.Framework.TaskPropertyInfo")])));
    $.Method({}, "CreateTask", new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Build.Framework.ITask"), [$asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")]));
    $.Method({}, "CleanupTask", JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.ITask")));
    $.Property({}, "FactoryName");
    $.Property({}, "TaskType");
  }, []);

/* interface Microsoft.Build.Framework.ITaskFactory2 */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITaskFactory2", true, [], function ($) {
    $.Method({}, "Initialize", new JSIL.MethodSignature($.Boolean, [
          $.String, $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $asm00.TypeRef("Microsoft.Build.Framework.TaskPropertyInfo")]), $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine")
        ]));
    $.Method({}, "CreateTask", new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Build.Framework.ITask"), [$asm00.TypeRef("Microsoft.Build.Framework.IBuildEngine"), $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String])]));
  }, [$asm00.TypeRef("Microsoft.Build.Framework.ITaskFactory")]);

/* interface Microsoft.Build.Framework.ITaskHost */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITaskHost", true, [], function ($) {
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm07.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9049A481-D0E9-414f-8F92-D4F67A0359A6"]; });

/* interface Microsoft.Build.Framework.ITaskItem */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITaskItem", true, [], function ($) {
    $.Method({}, "get_ItemSpec", JSIL.MethodSignature.Return($.String));
    $.Method({}, "set_ItemSpec", JSIL.MethodSignature.Action($.String));
    $.Method({}, "get_MetadataNames", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.ICollection")));
    $.Method({}, "get_MetadataCount", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetMetadata", new JSIL.MethodSignature($.String, [$.String]));
    $.Method({}, "SetMetadata", new JSIL.MethodSignature(null, [$.String, $.String]));
    $.Method({}, "RemoveMetadata", JSIL.MethodSignature.Action($.String));
    $.Method({}, "CopyMetadataTo", JSIL.MethodSignature.Action($.Type));
    $.Method({}, "CloneCustomMetadata", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary")));
    $.Property({}, "ItemSpec");
    $.Property({}, "MetadataNames");
    $.Property({}, "MetadataCount");
  }, [])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8661674F-2148-4F71-A92A-49875511C528"]; });

/* interface Microsoft.Build.Framework.ITaskItem2 */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.ITaskItem2", true, [], function ($) {
    $.Method({}, "get_EvaluatedIncludeEscaped", JSIL.MethodSignature.Return($.String));
    $.Method({}, "set_EvaluatedIncludeEscaped", JSIL.MethodSignature.Action($.String));
    $.Method({}, "GetMetadataValueEscaped", new JSIL.MethodSignature($.String, [$.String]));
    $.Method({}, "SetMetadataValueLiteral", new JSIL.MethodSignature(null, [$.String, $.String]));
    $.Method({}, "CloneCustomMetadataEscaped", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IDictionary")));
    $.Property({}, "EvaluatedIncludeEscaped");
  }, [$asm00.TypeRef("Microsoft.Build.Framework.ITaskItem")])
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; })
  .Attribute($asm07.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["ac6d5a59-f877-461b-88e3-b2f06fce0cb9"]; });

/* class Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute */ 

(function LoadInSeparateAppDomainAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Class]; });

})();

/* class Microsoft.Build.Framework.LoggerException */ 

(function LoggerException$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Exception"), 
      Name: "Microsoft.Build.Framework.LoggerException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Exception"), 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorCode", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HelpKeyword", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm07.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "errorCode", $.String);

    $.Field({Static:false, Public:false}, "helpKeyword", $.String);

    $.Property({Static:false, Public:true }, "ErrorCode", $.String);

    $.Property({Static:false, Public:true }, "HelpKeyword", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.BuildEventContext */ 

(function BuildEventContext$Members () {
  var $, $thisType;

















  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.BuildEventContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BuildRequestId", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Invalid", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NodeId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectContextId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectInstanceId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubmissionId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalEquals", 
      new JSIL.MethodSignature($.Boolean, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.Field({Static:false, Public:false}, "nodeId", $.Int32);

    $.Field({Static:false, Public:false}, "targetId", $.Int32);

    $.Field({Static:false, Public:false}, "projectContextId", $.Int32);

    $.Field({Static:false, Public:false}, "taskId", $.Int32);

    $.Field({Static:false, Public:false}, "projectInstanceId", $.Int32);

    $.Field({Static:false, Public:false}, "submissionId", $.Int32);

    $.Constant({Static:true , Public:true }, "InvalidProjectContextId", $.Int32, -2);

    $.Constant({Static:true , Public:true }, "InvalidTaskId", $.Int32, -1);

    $.Constant({Static:true , Public:true }, "InvalidTargetId", $.Int32, -1);

    $.Constant({Static:true , Public:true }, "InvalidNodeId", $.Int32, -2);

    $.Constant({Static:true , Public:true }, "InvalidProjectInstanceId", $.Int32, -1);

    $.Constant({Static:true , Public:true }, "InvalidSubmissionId", $.Int32, -1);

    $.Property({Static:true , Public:true }, "Invalid", $.Type);

    $.Property({Static:false, Public:true }, "NodeId", $.Int32);

    $.Property({Static:false, Public:true }, "TargetId", $.Int32);

    $.Property({Static:false, Public:true }, "ProjectContextId", $.Int32);

    $.Property({Static:false, Public:true }, "TaskId", $.Int32);

    $.Property({Static:false, Public:true }, "ProjectInstanceId", $.Int32);

    $.Property({Static:false, Public:true }, "SubmissionId", $.Int32);

    $.Property({Static:false, Public:true }, "BuildRequestId", $.Int64);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.OutputAttribute */ 

(function OutputAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.OutputAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Property]; });

})();

/* class Microsoft.Build.Framework.ProjectFinishedEventArgs */ 

(function ProjectFinishedEventArgs$Members () {
  var $, $thisType;








  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.ProjectFinishedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.ProjectStartedEventArgs */ 

(function ProjectStartedEventArgs$Members () {
  var $, $thisType;






















  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.ProjectStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 10, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Collections.IEnumerable"), $asm07.TypeRef("System.Collections.IEnumerable")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.Collections.IEnumerable"), 
          $asm07.TypeRef("System.Collections.IEnumerable"), $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.Collections.IEnumerable"), 
          $asm07.TypeRef("System.Collections.IEnumerable"), $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"), 
          $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.Collections.IEnumerable"), $asm07.TypeRef("System.Collections.IEnumerable"), 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.Collections.IEnumerable"), 
          $asm07.TypeRef("System.Collections.IEnumerable"), $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"), 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:false}, "GeneratePropertyList", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GlobalProperties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Items", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParentProjectBuildEventContext", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectId", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetNames", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ToolsVersion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_GlobalProperties", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_ToolsVersion", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDefaultsAfterSerialization", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnDeserializedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SetDefaultsBeforeSerialization", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Runtime.Serialization.StreamingContext"))
    )
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OnDeserializingAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Constant({Static:true , Public:true }, "InvalidProjectId", $.Int32, -1);

    $.Field({Static:false, Public:false}, "projectId", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "parentProjectBuildEventContext", $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"))
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "targetNames", $.String);

    $.Field({Static:false, Public:false}, "globalProperties", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]))
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "toolsVersion", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.Serialization.OptionalFieldAttribute"));

    $.Field({Static:false, Public:false}, "properties", $asm07.TypeRef("System.Collections.IEnumerable"));

    $.Field({Static:false, Public:false}, "items", $asm07.TypeRef("System.Collections.IEnumerable"));

    $.Property({Static:false, Public:true }, "ProjectId", $.Int32);

    $.Property({Static:false, Public:true }, "ParentProjectBuildEventContext", $asm00.TypeRef("Microsoft.Build.Framework.BuildEventContext"));

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TargetNames", $.String);

    $.Property({Static:false, Public:true }, "GlobalProperties", $asm07.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.String]));

    $.Property({Static:false, Public:true }, "ToolsVersion", $.String);

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.IEnumerable"));

    $.Property({Static:false, Public:true }, "Items", $asm07.TypeRef("System.Collections.IEnumerable"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.RequiredAttribute */ 

(function RequiredAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.RequiredAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Property]; });

})();

/* class Microsoft.Build.Framework.RequiredRuntimeAttribute */ 

(function RequiredRuntimeAttribute$Members () {
  var $, $thisType;



  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.RequiredRuntimeAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RuntimeVersion", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "runtimeVersion", $.String);

    $.Property({Static:false, Public:true }, "RuntimeVersion", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Class]; });

})();

/* class Microsoft.Build.Framework.RunInMTAAttribute */ 

(function RunInMTAAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.RunInMTAAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Class]; });

})();

/* class Microsoft.Build.Framework.RunInSTAAttribute */ 

(function RunInSTAAttribute$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Attribute"), 
      Name: "Microsoft.Build.Framework.RunInSTAAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm07.System.AttributeTargets.Class]; });

})();

/* class Microsoft.Build.Framework.TargetFinishedEventArgs */ 

(function TargetFinishedEventArgs$Members () {
  var $, $thisType;













  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.TargetFinishedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm07.TypeRef("System.Collections.IEnumerable")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm07.TypeRef("System.DateTime"), $asm07.TypeRef("System.Collections.IEnumerable")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetOutputs", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TargetOutputs", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.IEnumerable"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "targetFile", $.String);

    $.Field({Static:false, Public:false}, "targetName", $.String);

    $.Field({Static:false, Public:false}, "succeeded", $.Boolean);

    $.Field({Static:false, Public:false}, "targetOutputs", $asm07.TypeRef("System.Collections.IEnumerable"));

    $.Property({Static:false, Public:true }, "TargetName", $.String);

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TargetFile", $.String);

    $.Property({Static:false, Public:true }, "TargetOutputs", $asm07.TypeRef("System.Collections.IEnumerable"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.TargetStartedEventArgs */ 

(function TargetStartedEventArgs$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.TargetStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParentTarget", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TargetName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "targetName", $.String);

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "targetFile", $.String);

    $.Field({Static:false, Public:false}, "parentTarget", $.String);

    $.Property({Static:false, Public:true }, "TargetName", $.String);

    $.Property({Static:false, Public:true }, "ParentTarget", $.String);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TargetFile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.TaskCommandLineEventArgs */ 

(function TaskCommandLineEventArgs$Members () {
  var $, $thisType;






  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildMessageEventArgs"), 
      Name: "Microsoft.Build.Framework.TaskCommandLineEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm00.TypeRef("Microsoft.Build.Framework.MessageImportance"), $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CommandLine", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Property({Static:false, Public:true }, "CommandLine", $.String);

    $.Property({Static:false, Public:true }, "TaskName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.TaskFinishedEventArgs */ 

(function TaskFinishedEventArgs$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.TaskFinishedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.Boolean, 
          $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Succeeded", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "taskName", $.String);

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "taskFile", $.String);

    $.Field({Static:false, Public:false}, "succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "TaskName", $.String);

    $.Property({Static:false, Public:true }, "Succeeded", $.Boolean);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TaskFile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.TaskPropertyInfo */ 

(function TaskPropertyInfo$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Type)) ();
  };



  function TaskPropertyInfo_get_Name () {
    return this.TaskPropertyInfo$Name$value;
  }; 

  function TaskPropertyInfo_get_Output () {
    return this.TaskPropertyInfo$Output$value;
  }; 

  function TaskPropertyInfo_get_PropertyType () {
    return this.TaskPropertyInfo$PropertyType$value;
  }; 

  function TaskPropertyInfo_get_Required () {
    return this.TaskPropertyInfo$Required$value;
  }; 

  function TaskPropertyInfo_set_Name (value) {
    this.TaskPropertyInfo$Name$value = value;
  }; 

  function TaskPropertyInfo_set_Output (value) {
    this.TaskPropertyInfo$Output$value = value;
  }; 

  function TaskPropertyInfo_set_PropertyType (value) {
    this.TaskPropertyInfo$PropertyType$value = value;
  }; 

  function TaskPropertyInfo_set_Required (value) {
    this.TaskPropertyInfo$Required$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.TaskPropertyInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Type"), 
          $.Boolean, $.Boolean
        ])
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      TaskPropertyInfo_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Output", 
      JSIL.MethodSignature.Return($.Boolean), 
      TaskPropertyInfo_get_Output
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyType", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type")), 
      TaskPropertyInfo_get_PropertyType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Required", 
      JSIL.MethodSignature.Return($.Boolean), 
      TaskPropertyInfo_get_Required
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      TaskPropertyInfo_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Output", 
      JSIL.MethodSignature.Action($.Boolean), 
      TaskPropertyInfo_set_Output
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PropertyType", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Type")), 
      TaskPropertyInfo_set_PropertyType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Required", 
      JSIL.MethodSignature.Action($.Boolean), 
      TaskPropertyInfo_set_Required
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TaskPropertyInfo$PropertyType$value", $asm07.TypeRef("System.Type"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TaskPropertyInfo$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TaskPropertyInfo$Output$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TaskPropertyInfo$Required$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "PropertyType", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Output", $.Boolean);

    $.Property({Static:false, Public:true }, "Required", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.TaskStartedEventArgs */ 

(function TaskStartedEventArgs$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.BuildStatusEventArgs"), 
      Name: "Microsoft.Build.Framework.TaskStartedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $asm07.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "CreateFromStream", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.BinaryReader"), $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ProjectFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskFile", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TaskName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WriteToStream", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.IO.BinaryWriter"))
    );

    $.Field({Static:false, Public:false}, "taskName", $.String);

    $.Field({Static:false, Public:false}, "projectFile", $.String);

    $.Field({Static:false, Public:false}, "taskFile", $.String);

    $.Property({Static:false, Public:true }, "TaskName", $.String);

    $.Property({Static:false, Public:true }, "ProjectFile", $.String);

    $.Property({Static:false, Public:true }, "TaskFile", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft.Build.Framework.XamlTypes");
/* class Microsoft.Build.Framework.XamlTypes.Argument */ 

(function Argument$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };





  function Argument_get_IsRequired () {
    return this.Argument$IsRequired$value;
  }; 

  function Argument_get_Property () {
    return this.Argument$Property$value;
  }; 

  function Argument_get_Separator () {
    return this.Argument$Separator$value;
  }; 

  function Argument_set_IsRequired (value) {
    this.Argument$IsRequired$value = value;
  }; 

  function Argument_set_Property (value) {
    this.Argument$Property$value = value;
  }; 

  function Argument_set_Separator (value) {
    this.Argument$Separator$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.Argument", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_IsRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      Argument_get_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Property", 
      JSIL.MethodSignature.Return($.String), 
      Argument_get_Property
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Separator", 
      JSIL.MethodSignature.Return($.String), 
      Argument_get_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      Argument_set_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Property", 
      JSIL.MethodSignature.Action($.String), 
      Argument_set_Property
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Separator", 
      JSIL.MethodSignature.Action($.String), 
      Argument_set_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Argument$Property$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Argument$IsRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Argument$Separator$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Property", $.String);

    $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

    $.Property({Static:false, Public:true }, "Separator", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.BaseProperty */ 

(function BaseProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.Argument))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Build.Framework.XamlTypes.Rule)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Microsoft.Build.Framework.XamlTypes.DataSource)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.NameValuePair))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.ValueEditor))) ();
  };





  function BaseProperty_get_Arguments () {
    return this.BaseProperty$Arguments$value;
  }; 

  function BaseProperty_get_Category () {
    return this.BaseProperty$Category$value;
  }; 

  function BaseProperty_get_ContainingRule () {
    return this.BaseProperty$ContainingRule$value;
  }; 

  function BaseProperty_get_DataSource () {
    return this.BaseProperty$DataSource$value;
  }; 

  function BaseProperty_get_Default () {
    return this.BaseProperty$Default$value;
  }; 

  function BaseProperty_get_Description () {
    return this.BaseProperty$Description$value;
  }; 


  function BaseProperty_get_F1Keyword () {
    return this.BaseProperty$F1Keyword$value;
  }; 

  function BaseProperty_get_HelpContext () {
    return this.BaseProperty$HelpContext$value;
  }; 

  function BaseProperty_get_HelpFile () {
    return this.BaseProperty$HelpFile$value;
  }; 

  function BaseProperty_get_HelpUrl () {
    return this.BaseProperty$HelpUrl$value;
  }; 

  function BaseProperty_get_IncludeInCommandLine () {
    return this.BaseProperty$IncludeInCommandLine$value;
  }; 

  function BaseProperty_get_IsRequired () {
    return this.BaseProperty$IsRequired$value;
  }; 

  function BaseProperty_get_Metadata () {
    return this.BaseProperty$Metadata$value;
  }; 

  function BaseProperty_get_MultipleValuesAllowed () {
    return this.BaseProperty$MultipleValuesAllowed$value;
  }; 

  function BaseProperty_get_Name () {
    return this.BaseProperty$Name$value;
  }; 

  function BaseProperty_get_ReadOnly () {
    return this.BaseProperty$ReadOnly$value;
  }; 

  function BaseProperty_get_Separator () {
    return this.BaseProperty$Separator$value;
  }; 

  function BaseProperty_get_Subcategory () {
    return this.BaseProperty$Subcategory$value;
  }; 

  function BaseProperty_get_Switch () {
    return this.BaseProperty$Switch$value;
  }; 

  function BaseProperty_get_SwitchPrefix () {
    return this.BaseProperty$SwitchPrefix$value;
  }; 

  function BaseProperty_get_ValueEditors () {
    return this.BaseProperty$ValueEditors$value;
  }; 

  function BaseProperty_get_Visible () {
    return this.BaseProperty$Visible$value;
  }; 

  function BaseProperty_set_Arguments (value) {
    this.BaseProperty$Arguments$value = value;
  }; 

  function BaseProperty_set_Category (value) {
    this.BaseProperty$Category$value = value;
  }; 

  function BaseProperty_set_ContainingRule (value) {
    this.BaseProperty$ContainingRule$value = value;
  }; 

  function BaseProperty_set_DataSource (value) {
    this.BaseProperty$DataSource$value = value;
  }; 

  function BaseProperty_set_Default (value) {
    this.BaseProperty$Default$value = value;
  }; 

  function BaseProperty_set_Description (value) {
    this.BaseProperty$Description$value = value;
  }; 


  function BaseProperty_set_F1Keyword (value) {
    this.BaseProperty$F1Keyword$value = value;
  }; 

  function BaseProperty_set_HelpContext (value) {
    this.BaseProperty$HelpContext$value = (value | 0);
  }; 

  function BaseProperty_set_HelpFile (value) {
    this.BaseProperty$HelpFile$value = value;
  }; 

  function BaseProperty_set_HelpUrl (value) {
    this.BaseProperty$HelpUrl$value = value;
  }; 

  function BaseProperty_set_IncludeInCommandLine (value) {
    this.BaseProperty$IncludeInCommandLine$value = value;
  }; 

  function BaseProperty_set_IsRequired (value) {
    this.BaseProperty$IsRequired$value = value;
  }; 

  function BaseProperty_set_Metadata (value) {
    this.BaseProperty$Metadata$value = value;
  }; 

  function BaseProperty_set_MultipleValuesAllowed (value) {
    this.BaseProperty$MultipleValuesAllowed$value = value;
  }; 

  function BaseProperty_set_Name (value) {
    this.BaseProperty$Name$value = value;
  }; 

  function BaseProperty_set_ReadOnly (value) {
    this.BaseProperty$ReadOnly$value = value;
  }; 

  function BaseProperty_set_Separator (value) {
    this.BaseProperty$Separator$value = value;
  }; 

  function BaseProperty_set_Subcategory (value) {
    this.BaseProperty$Subcategory$value = value;
  }; 

  function BaseProperty_set_Switch (value) {
    this.BaseProperty$Switch$value = value;
  }; 

  function BaseProperty_set_SwitchPrefix (value) {
    this.BaseProperty$SwitchPrefix$value = value;
  }; 

  function BaseProperty_set_ValueEditors (value) {
    this.BaseProperty$ValueEditors$value = value;
  }; 

  function BaseProperty_set_Visible (value) {
    this.BaseProperty$Visible$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.BaseProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")])), 
      BaseProperty_get_Arguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Category", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Category
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ContainingRule", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")), 
      BaseProperty_get_ContainingRule
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DataSource", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource")), 
      BaseProperty_get_DataSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Default", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_F1Keyword", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_F1Keyword
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HelpContext", 
      JSIL.MethodSignature.Return($.Int32), 
      BaseProperty_get_HelpContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HelpFile", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_HelpFile
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HelpUrl", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_HelpUrl
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IncludeInCommandLine", 
      JSIL.MethodSignature.Return($.Boolean), 
      BaseProperty_get_IncludeInCommandLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsRequired", 
      JSIL.MethodSignature.Return($.Boolean), 
      BaseProperty_get_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      BaseProperty_get_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MultipleValuesAllowed", 
      JSIL.MethodSignature.Return($.Boolean), 
      BaseProperty_get_MultipleValuesAllowed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ReadOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      BaseProperty_get_ReadOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Separator", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Subcategory", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Subcategory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Switch", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_Switch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SwitchPrefix", 
      JSIL.MethodSignature.Return($.String), 
      BaseProperty_get_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ValueEditors", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ValueEditor")])), 
      BaseProperty_get_ValueEditors
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Visible", 
      JSIL.MethodSignature.Return($.Boolean), 
      BaseProperty_get_Visible
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Arguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")])), 
      BaseProperty_set_Arguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Category", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Category
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_ContainingRule", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")), 
      BaseProperty_set_ContainingRule
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DataSource", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource")), 
      BaseProperty_set_DataSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Default", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Default
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Description", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_F1Keyword", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_F1Keyword
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HelpContext", 
      JSIL.MethodSignature.Action($.Int32), 
      BaseProperty_set_HelpContext
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HelpFile", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_HelpFile
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HelpUrl", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_HelpUrl
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IncludeInCommandLine", 
      JSIL.MethodSignature.Action($.Boolean), 
      BaseProperty_set_IncludeInCommandLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsRequired", 
      JSIL.MethodSignature.Action($.Boolean), 
      BaseProperty_set_IsRequired
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      BaseProperty_set_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MultipleValuesAllowed", 
      JSIL.MethodSignature.Action($.Boolean), 
      BaseProperty_set_MultipleValuesAllowed
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReadOnly", 
      JSIL.MethodSignature.Action($.Boolean), 
      BaseProperty_set_ReadOnly
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Separator", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Subcategory", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Subcategory
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Switch", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_Switch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SwitchPrefix", 
      JSIL.MethodSignature.Action($.String), 
      BaseProperty_set_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ValueEditors", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ValueEditor")])), 
      BaseProperty_set_ValueEditors
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Visible", 
      JSIL.MethodSignature.Action($.Boolean), 
      BaseProperty_set_Visible
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "BaseProperty$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Description$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$F1Keyword$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$HelpUrl$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$HelpFile$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$HelpContext$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Category$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Subcategory$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$ReadOnly$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$MultipleValuesAllowed$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Switch$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$SwitchPrefix$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Separator$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Visible$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$IncludeInCommandLine$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$IsRequired$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Default$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$DataSource$value", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Metadata$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$Arguments$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$ValueEditors$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ValueEditor")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BaseProperty$ContainingRule$value", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Description", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "F1Keyword", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "HelpUrl", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "HelpFile", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [false]; });

    $.Property({Static:false, Public:true }, "HelpContext", $.Int32);

    $.Property({Static:false, Public:true }, "Category", $.String);

    $.Property({Static:false, Public:true }, "Subcategory", $.String);

    $.Property({Static:false, Public:true }, "ReadOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "MultipleValuesAllowed", $.Boolean);

    $.Property({Static:false, Public:true }, "Switch", $.String);

    $.Property({Static:false, Public:true }, "SwitchPrefix", $.String);

    $.Property({Static:false, Public:true }, "Separator", $.String);

    $.Property({Static:false, Public:true }, "Visible", $.Boolean);

    $.Property({Static:false, Public:true }, "IncludeInCommandLine", $.Boolean);

    $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

    $.Property({Static:false, Public:true }, "Default", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "DataSource", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource"));

    $.Property({Static:false, Public:true }, "Metadata", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]));

    $.Property({Static:false, Public:true }, "Arguments", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")]));

    $.Property({Static:false, Public:true }, "ValueEditors", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ValueEditor")]));

    $.Property({Static:false, Public:true }, "ContainingRule", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule"));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Arguments"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.BoolProperty */ 

(function BoolProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function BoolProperty_get_ReverseSwitch () {
    return this.BoolProperty$ReverseSwitch$value;
  }; 

  function BoolProperty_set_ReverseSwitch (value) {
    this.BoolProperty$ReverseSwitch$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.BoolProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ReverseSwitch", 
      JSIL.MethodSignature.Return($.String), 
      BoolProperty_get_ReverseSwitch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ReverseSwitch", 
      JSIL.MethodSignature.Action($.String), 
      BoolProperty_set_ReverseSwitch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "BoolProperty$ReverseSwitch$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ReverseSwitch", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.CategorySchema */ 

(function CategorySchema$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.CategorySchema", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.Category */ 

(function Category$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };





  function Category_get_Description () {
    return this.Category$Description$value;
  }; 


  function Category_get_HelpString () {
    return this.Category$HelpString$value;
  }; 

  function Category_get_Name () {
    return this.Category$Name$value;
  }; 

  function Category_get_Subtype () {
    return this.Category$Subtype$value;
  }; 

  function Category_set_Description (value) {
    this.Category$Description$value = value;
  }; 


  function Category_set_HelpString (value) {
    this.Category$HelpString$value = value;
  }; 

  function Category_set_Name (value) {
    this.Category$Name$value = value;
  }; 

  function Category_set_Subtype (value) {
    this.Category$Subtype$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.CategorySchema"), 
      Name: "Microsoft.Build.Framework.XamlTypes.Category", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String), 
      Category_get_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_HelpString", 
      JSIL.MethodSignature.Return($.String), 
      Category_get_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      Category_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Subtype", 
      JSIL.MethodSignature.Return($.String), 
      Category_get_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Description", 
      JSIL.MethodSignature.Action($.String), 
      Category_set_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_HelpString", 
      JSIL.MethodSignature.Action($.String), 
      Category_set_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      Category_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Subtype", 
      JSIL.MethodSignature.Action($.String), 
      Category_set_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "Category$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Category$Description$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Category$Subtype$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Category$HelpString$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Description", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Subtype", $.String);

    $.Property({Static:false, Public:true }, "HelpString", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.ContentType */ 

(function ContentType$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.NameValuePair))) ();
  };





  function ContentType_get_DefaultContentTypeForItemType () {
    return this.ContentType$DefaultContentTypeForItemType$value;
  }; 

  function ContentType_get_DisplayName () {
    return this.ContentType$DisplayName$value;
  }; 

  function ContentType_get_ItemGroupName () {
    return this.ContentType$ItemGroupName$value;
  }; 

  function ContentType_get_ItemType () {
    return this.ContentType$ItemType$value;
  }; 

  function ContentType_get_Metadata () {
    return this.ContentType$Metadata$value;
  }; 

  function ContentType_get_Name () {
    return this.ContentType$Name$value;
  }; 





  function ContentType_set_DefaultContentTypeForItemType (value) {
    this.ContentType$DefaultContentTypeForItemType$value = value;
  }; 

  function ContentType_set_DisplayName (value) {
    this.ContentType$DisplayName$value = value;
  }; 

  function ContentType_set_ItemGroupName (value) {
    this.ContentType$ItemGroupName$value = value;
  }; 

  function ContentType_set_ItemType (value) {
    this.ContentType$ItemType$value = value;
  }; 

  function ContentType_set_Metadata (value) {
    this.ContentType$Metadata$value = value;
  }; 

  function ContentType_set_Name (value) {
    this.ContentType$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ContentType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_DefaultContentTypeForItemType", 
      JSIL.MethodSignature.Return($.Boolean), 
      ContentType_get_DefaultContentTypeForItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      ContentType_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ItemGroupName", 
      JSIL.MethodSignature.Return($.String), 
      ContentType_get_ItemGroupName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ItemType", 
      JSIL.MethodSignature.Return($.String), 
      ContentType_get_ItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      ContentType_get_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ContentType_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetMetadata", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.ContentType_$lGetSchemaObjects$gd__30.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.ContentType_$lGetSchemaObjectTypes$gd__29.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "InitializeMetadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String]))
    );

    $.Method({Static:false, Public:true }, "set_DefaultContentTypeForItemType", 
      JSIL.MethodSignature.Action($.Boolean), 
      ContentType_set_DefaultContentTypeForItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      ContentType_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ItemGroupName", 
      JSIL.MethodSignature.Action($.String), 
      ContentType_set_ItemGroupName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ItemType", 
      JSIL.MethodSignature.Action($.String), 
      ContentType_set_ItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      ContentType_set_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      ContentType_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "metadata", $asm07.TypeRef("System.Lazy`1", [$asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])]));

    $.Field({Static:false, Public:false}, "ContentType$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ContentType$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ContentType$ItemType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ContentType$DefaultContentTypeForItemType$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ContentType$ItemGroupName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ContentType$Metadata$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "ItemType", $.String);

    $.Property({Static:false, Public:true }, "DefaultContentTypeForItemType", $.Boolean);

    $.Property({Static:false, Public:true }, "ItemGroupName", $.String)
      .Attribute($asm07.TypeRef("System.ObsoleteAttribute"), function () { return ["Unused.  Use ItemType property instead.", true]; });

    $.Property({Static:false, Public:true }, "Metadata", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize"), 
      /* 1 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Metadata"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.ContentType+<GetSchemaObjectTypes>d__29 */ 

(function $lGetSchemaObjectTypes$gd__29$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ContentType+<GetSchemaObjectTypes>d__29", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.ContentType+<GetSchemaObjects>d__30 */ 

(function $lGetSchemaObjects$gd__30$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ContentType+<GetSchemaObjects>d__30", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ContentType"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    BeforeContext: 0, 
    AfterContext: 1, 
  }
);

/* class Microsoft.Build.Framework.XamlTypes.DataSource */ 

(function DataSource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation)) ();
  };





  function DataSource_get_HasConfigurationCondition () {
    return this.DataSource$HasConfigurationCondition$value;
  }; 

  function DataSource_get_ItemType () {
    return this.DataSource$ItemType$value;
  }; 

  function DataSource_get_Label () {
    return this.DataSource$Label$value;
  }; 

  function DataSource_get_MSBuildTarget () {
    return this.DataSource$MSBuildTarget$value;
  }; 

  function DataSource_get_PersistedName () {
    return this.DataSource$PersistedName$value;
  }; 

  function DataSource_get_Persistence () {
    return this.DataSource$Persistence$value;
  }; 

  function DataSource_get_SourceOfDefaultValue () {
    return this.DataSource$SourceOfDefaultValue$value;
  }; 

  function DataSource_get_SourceType () {
    return this.DataSource$SourceType$value;
  }; 

  function DataSource_set_HasConfigurationCondition (value) {
    this.DataSource$HasConfigurationCondition$value = value;
  }; 

  function DataSource_set_ItemType (value) {
    this.DataSource$ItemType$value = value;
  }; 

  function DataSource_set_Label (value) {
    this.DataSource$Label$value = value;
  }; 

  function DataSource_set_MSBuildTarget (value) {
    this.DataSource$MSBuildTarget$value = value;
  }; 

  function DataSource_set_PersistedName (value) {
    this.DataSource$PersistedName$value = value;
  }; 

  function DataSource_set_Persistence (value) {
    this.DataSource$Persistence$value = value;
  }; 

  function DataSource_set_SourceOfDefaultValue (value) {
    this.DataSource$SourceOfDefaultValue$value = value;
  }; 

  function DataSource_set_SourceType (value) {
    this.DataSource$SourceType$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.DataSource", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_HasConfigurationCondition", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataSource_get_HasConfigurationCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ItemType", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_ItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Label", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_Label
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MSBuildTarget", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_MSBuildTarget
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PersistedName", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_PersistedName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Persistence", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_Persistence
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SourceOfDefaultValue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation")), 
      DataSource_get_SourceOfDefaultValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SourceType", 
      JSIL.MethodSignature.Return($.String), 
      DataSource_get_SourceType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HasConfigurationCondition", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataSource_set_HasConfigurationCondition
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ItemType", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_ItemType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Label", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_Label
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MSBuildTarget", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_MSBuildTarget
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PersistedName", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_PersistedName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Persistence", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_Persistence
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SourceOfDefaultValue", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation")), 
      DataSource_set_SourceOfDefaultValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SourceType", 
      JSIL.MethodSignature.Action($.String), 
      DataSource_set_SourceType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$Persistence$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$PersistedName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$Label$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$ItemType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$HasConfigurationCondition$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$SourceType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$MSBuildTarget$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DataSource$SourceOfDefaultValue$value", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Persistence", $.String);

    $.Property({Static:false, Public:true }, "PersistedName", $.String);

    $.Property({Static:false, Public:true }, "Label", $.String);

    $.Property({Static:false, Public:true }, "ItemType", $.String);

    $.Property({Static:false, Public:true }, "HasConfigurationCondition", $.Boolean);

    $.Property({Static:false, Public:true }, "SourceType", $.String);

    $.Property({Static:false, Public:true }, "MSBuildTarget", $.String);

    $.Property({Static:false, Public:true }, "SourceOfDefaultValue", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation"));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty */ 

(function DynamicEnumProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.NameValuePair))) ();
  };



  function DynamicEnumProperty_get_EnumProvider () {
    return this.DynamicEnumProperty$EnumProvider$value;
  }; 

  function DynamicEnumProperty_get_ProviderSettings () {
    return this.DynamicEnumProperty$ProviderSettings$value;
  }; 

  function DynamicEnumProperty_set_EnumProvider (value) {
    this.DynamicEnumProperty$EnumProvider$value = value;
  }; 

  function DynamicEnumProperty_set_ProviderSettings (value) {
    this.DynamicEnumProperty$ProviderSettings$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.DynamicEnumProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_EnumProvider", 
      JSIL.MethodSignature.Return($.String), 
      DynamicEnumProperty_get_EnumProvider
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ProviderSettings", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      DynamicEnumProperty_get_ProviderSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_EnumProvider", 
      JSIL.MethodSignature.Action($.String), 
      DynamicEnumProperty_set_EnumProvider
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ProviderSettings", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      DynamicEnumProperty_set_ProviderSettings
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicEnumProperty$EnumProvider$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "DynamicEnumProperty$ProviderSettings$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "EnumProvider", $.String);

    $.Property({Static:false, Public:true }, "ProviderSettings", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.EnumProperty */ 

(function EnumProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.EnumValue))) ();
  };




  function EnumProperty_get_AdmissibleValues () {
    return this.EnumProperty$AdmissibleValues$value;
  }; 

  function EnumProperty_set_AdmissibleValues (value) {
    this.EnumProperty$AdmissibleValues$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.EnumProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_AdmissibleValues", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.EnumValue")])), 
      EnumProperty_get_AdmissibleValues
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_AdmissibleValues", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.EnumValue")])), 
      EnumProperty_set_AdmissibleValues
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumProperty$AdmissibleValues$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.EnumValue")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "AdmissibleValues", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.EnumValue")]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["AdmissibleValues"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.EnumValue */ 

(function EnumValue$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.Argument))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.NameValuePair))) ();
  };



  function EnumValue_get_Arguments () {
    return this.EnumValue$Arguments$value;
  }; 

  function EnumValue_get_Description () {
    return this.EnumValue$Description$value;
  }; 


  function EnumValue_get_HelpString () {
    return this.EnumValue$HelpString$value;
  }; 

  function EnumValue_get_IsDefault () {
    return this.EnumValue$IsDefault$value;
  }; 

  function EnumValue_get_Metadata () {
    return this.EnumValue$Metadata$value;
  }; 

  function EnumValue_get_Name () {
    return this.EnumValue$Name$value;
  }; 

  function EnumValue_get_Switch () {
    return this.EnumValue$Switch$value;
  }; 

  function EnumValue_get_SwitchPrefix () {
    return this.EnumValue$SwitchPrefix$value;
  }; 

  function EnumValue_set_Arguments (value) {
    this.EnumValue$Arguments$value = value;
  }; 

  function EnumValue_set_Description (value) {
    this.EnumValue$Description$value = value;
  }; 


  function EnumValue_set_HelpString (value) {
    this.EnumValue$HelpString$value = value;
  }; 

  function EnumValue_set_IsDefault (value) {
    this.EnumValue$IsDefault$value = value;
  }; 

  function EnumValue_set_Metadata (value) {
    this.EnumValue$Metadata$value = value;
  }; 

  function EnumValue_set_Name (value) {
    this.EnumValue$Name$value = value;
  }; 

  function EnumValue_set_Switch (value) {
    this.EnumValue$Switch$value = value;
  }; 

  function EnumValue_set_SwitchPrefix (value) {
    this.EnumValue$SwitchPrefix$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.EnumValue", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Arguments", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")])), 
      EnumValue_get_Arguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String), 
      EnumValue_get_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_HelpString", 
      JSIL.MethodSignature.Return($.String), 
      EnumValue_get_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_IsDefault", 
      JSIL.MethodSignature.Return($.Boolean), 
      EnumValue_get_IsDefault
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      EnumValue_get_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      EnumValue_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Switch", 
      JSIL.MethodSignature.Return($.String), 
      EnumValue_get_Switch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SwitchPrefix", 
      JSIL.MethodSignature.Return($.String), 
      EnumValue_get_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Arguments", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")])), 
      EnumValue_set_Arguments
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Description", 
      JSIL.MethodSignature.Action($.String), 
      EnumValue_set_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_HelpString", 
      JSIL.MethodSignature.Action($.String), 
      EnumValue_set_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_IsDefault", 
      JSIL.MethodSignature.Action($.Boolean), 
      EnumValue_set_IsDefault
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      EnumValue_set_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      EnumValue_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Switch", 
      JSIL.MethodSignature.Action($.String), 
      EnumValue_set_Switch
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SwitchPrefix", 
      JSIL.MethodSignature.Action($.String), 
      EnumValue_set_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "EnumValue$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$Description$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$HelpString$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$Switch$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$SwitchPrefix$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$IsDefault$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$Metadata$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "EnumValue$Arguments$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Description", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "HelpString", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Switch", $.String);

    $.Property({Static:false, Public:true }, "SwitchPrefix", $.String);

    $.Property({Static:false, Public:true }, "IsDefault", $.Boolean);

    $.Property({Static:false, Public:true }, "Metadata", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]));

    $.Property({Static:false, Public:true }, "Arguments", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Argument")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Arguments"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.FileExtension */ 

(function FileExtension$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function FileExtension_get_ContentType () {
    return this.FileExtension$ContentType$value;
  }; 

  function FileExtension_get_Name () {
    return this.FileExtension$Name$value;
  }; 



  function FileExtension_set_ContentType (value) {
    this.FileExtension$ContentType$value = value;
  }; 

  function FileExtension_set_Name (value) {
    this.FileExtension$Name$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.FileExtension", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_ContentType", 
      JSIL.MethodSignature.Return($.String), 
      FileExtension_get_ContentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      FileExtension_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.FileExtension_$lGetSchemaObjects$gd__10.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.FileExtension_$lGetSchemaObjectTypes$gd__9.__Type__]; });

    $.Method({Static:false, Public:true }, "set_ContentType", 
      JSIL.MethodSignature.Action($.String), 
      FileExtension_set_ContentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      FileExtension_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileExtension$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FileExtension$ContentType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "ContentType", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.FileExtension+<GetSchemaObjectTypes>d__9 */ 

(function $lGetSchemaObjectTypes$gd__9$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.FileExtension+<GetSchemaObjectTypes>d__9", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.FileExtension+<GetSchemaObjects>d__10 */ 

(function $lGetSchemaObjects$gd__10$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.FileExtension+<GetSchemaObjects>d__10", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.FileExtension"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.IntProperty */ 

(function IntProperty$Members () {
  var $, $thisType;



  function IntProperty_get_MaxValue () {
    return this.IntProperty$MaxValue$value;
  }; 

  function IntProperty_get_MinValue () {
    return this.IntProperty$MinValue$value;
  }; 

  function IntProperty_set_MaxValue (value) {
    this.IntProperty$MaxValue$value = value;
  }; 

  function IntProperty_set_MinValue (value) {
    this.IntProperty$MinValue$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.IntProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_MaxValue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$.Int32])), 
      IntProperty_get_MaxValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_MinValue", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Nullable`1", [$.Int32])), 
      IntProperty_get_MinValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MaxValue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$.Int32])), 
      IntProperty_set_MaxValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_MinValue", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Nullable`1", [$.Int32])), 
      IntProperty_set_MinValue
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IntProperty$MinValue$value", $asm07.TypeRef("System.Nullable`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "IntProperty$MaxValue$value", $asm07.TypeRef("System.Nullable`1", [$.Int32]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "MinValue", $asm07.TypeRef("System.Nullable`1", [$.Int32]));

    $.Property({Static:false, Public:true }, "MaxValue", $asm07.TypeRef("System.Nullable`1", [$.Int32]));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode */ 

JSIL.MakeInterface(
  "Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode", true, [], function ($) {
    $.Method({}, "GetSchemaObjectTypes", JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")])));
    $.Method({}, "GetSchemaObjects", new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")]));
  }, []);

/* class Microsoft.Build.Framework.XamlTypes.ItemType */ 

(function ItemType$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Boolean)) ();
  };





  function ItemType_get_DefaultContentType () {
    return this.ItemType$DefaultContentType$value;
  }; 

  function ItemType_get_DisplayName () {
    return this.ItemType$DisplayName$value;
  }; 

  function ItemType_get_Name () {
    return this.ItemType$Name$value;
  }; 

  function ItemType_get_UpToDateCheckInput () {
    return this.ItemType$UpToDateCheckInput$value;
  }; 



  function ItemType_set_DefaultContentType (value) {
    this.ItemType$DefaultContentType$value = value;
  }; 

  function ItemType_set_DisplayName (value) {
    this.ItemType$DisplayName$value = value;
  }; 

  function ItemType_set_Name (value) {
    this.ItemType$Name$value = value;
  }; 

  function ItemType_set_UpToDateCheckInput (value) {
    this.ItemType$UpToDateCheckInput$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ItemType", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_DefaultContentType", 
      JSIL.MethodSignature.Return($.String), 
      ItemType_get_DefaultContentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String), 
      ItemType_get_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      ItemType_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UpToDateCheckInput", 
      JSIL.MethodSignature.Return($.Boolean), 
      ItemType_get_UpToDateCheckInput
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.ItemType_$lGetSchemaObjects$gd__20.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.ItemType_$lGetSchemaObjectTypes$gd__19.__Type__]; });

    $.Method({Static:false, Public:true }, "set_DefaultContentType", 
      JSIL.MethodSignature.Action($.String), 
      ItemType_set_DefaultContentType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String), 
      ItemType_set_DisplayName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      ItemType_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UpToDateCheckInput", 
      JSIL.MethodSignature.Action($.Boolean), 
      ItemType_set_UpToDateCheckInput
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ItemType$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ItemType$DisplayName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ItemType$DefaultContentType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ItemType$UpToDateCheckInput$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "DefaultContentType", $.String);

    $.Property({Static:false, Public:true }, "UpToDateCheckInput", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize"), 
      /* 1 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.ItemType+<GetSchemaObjectTypes>d__19 */ 

(function $lGetSchemaObjectTypes$gd__19$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ItemType+<GetSchemaObjectTypes>d__19", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.ItemType+<GetSchemaObjects>d__20 */ 

(function $lGetSchemaObjects$gd__20$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ItemType+<GetSchemaObjects>d__20", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ItemType"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.NameValuePair */ 

(function NameValuePair$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function NameValuePair_get_Name () {
    return this.NameValuePair$Name$value;
  }; 

  function NameValuePair_get_Value () {
    return this.NameValuePair$Value$value;
  }; 

  function NameValuePair_set_Name (value) {
    this.NameValuePair$Name$value = value;
  }; 

  function NameValuePair_set_Value (value) {
    this.NameValuePair$Value$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.NameValuePair", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      NameValuePair_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String), 
      NameValuePair_get_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      NameValuePair_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.String), 
      NameValuePair_set_Value
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NameValuePair$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "NameValuePair$Value$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Value", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions */ 

(function ProjectSchemaDefinitions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode))) ();
  };



  function ProjectSchemaDefinitions_get_Nodes () {
    return this.ProjectSchemaDefinitions$Nodes$value;
  }; 



  function ProjectSchemaDefinitions_set_Nodes (value) {
    this.ProjectSchemaDefinitions$Nodes$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Nodes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")])), 
      ProjectSchemaDefinitions_get_Nodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions_$lGetSchemaObjects$gd__6.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    );

    $.Method({Static:false, Public:true }, "set_Nodes", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")])), 
      ProjectSchemaDefinitions_set_Nodes
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ProjectSchemaDefinitions$Nodes$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Nodes", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")]));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Nodes"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions+<GetSchemaObjects>d__6 */ 

(function $lGetSchemaObjects$gd__6$Members () {
  var $, $thisType;











  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions+<GetSchemaObjects>d__6", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally2", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.ProjectSchemaDefinitions"));

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.List`1+Enumerator", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")]));

    $.Field({Static:false, Public:false}, "$l$g7__wrap2", $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum Microsoft.Build.Framework.XamlTypes.RuleOverrideMode */ 

JSIL.MakeEnum(
  {
    FullName: "Microsoft.Build.Framework.XamlTypes.RuleOverrideMode", 
    BaseType: $asm07.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Replace: 0, 
    Extend: 1, 
  }
);

/* class Microsoft.Build.Framework.XamlTypes.RuleSchema */ 

(function RuleSchema$Members () {
  var $, $thisType;


  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.RuleSchema", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.Rule */ 

(function Rule$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.Category))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Microsoft.Build.Framework.XamlTypes.DataSource)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.System.Collections.Generic.Dictionary$b2.Of($asm07.System.String, $asm07.System.Object))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Microsoft.Build.Framework.XamlTypes.RuleOverrideMode)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.BaseProperty))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.System.Boolean)) ();
  };






  function Rule_get_AdditionalInputs () {
    return this.Rule$AdditionalInputs$value;
  }; 

  function Rule_get_Categories () {
    return this.Rule$Categories$value;
  }; 

  function Rule_get_CommandLine () {
    return this.Rule$CommandLine$value;
  }; 

  function Rule_get_DataSource () {
    return this.Rule$DataSource$value;
  }; 

  function Rule_get_Description () {
    return this.Rule$Description$value;
  }; 



  function Rule_get_ExecutionDescription () {
    return this.Rule$ExecutionDescription$value;
  }; 

  function Rule_get_FileExtension () {
    return this.Rule$FileExtension$value;
  }; 

  function Rule_get_HelpString () {
    return this.Rule$HelpString$value;
  }; 

  function Rule_get_Metadata () {
    return this.Rule$Metadata$value;
  }; 

  function Rule_get_Name () {
    return this.Rule$Name$value;
  }; 

  function Rule_get_Order () {
    return this.Rule$Order$value;
  }; 

  function Rule_get_Outputs () {
    return this.Rule$Outputs$value;
  }; 

  function Rule_get_OverrideMode () {
    return this.Rule$OverrideMode$value;
  }; 

  function Rule_get_PageTemplate () {
    return this.Rule$PageTemplate$value;
  }; 

  function Rule_get_Properties () {
    return this.Rule$Properties$value;
  }; 

  function Rule_get_PropertyPagesHidden () {
    return this.Rule$PropertyPagesHidden$value;
  }; 

  function Rule_get_Separator () {
    return this.Rule$Separator$value;
  }; 

  function Rule_get_ShowOnlyRuleProperties () {
    return this.Rule$ShowOnlyRuleProperties$value;
  }; 

  function Rule_get_SupportsFileBatching () {
    return this.Rule$SupportsFileBatching$value;
  }; 

  function Rule_get_SwitchPrefix () {
    return this.Rule$SwitchPrefix$value;
  }; 

  function Rule_get_ToolName () {
    return this.Rule$ToolName$value;
  }; 







  function Rule_set_AdditionalInputs (value) {
    this.Rule$AdditionalInputs$value = value;
  }; 

  function Rule_set_Categories (value) {
    this.Rule$Categories$value = value;
  }; 

  function Rule_set_CommandLine (value) {
    this.Rule$CommandLine$value = value;
  }; 

  function Rule_set_DataSource (value) {
    this.Rule$DataSource$value = value;
  }; 

  function Rule_set_Description (value) {
    this.Rule$Description$value = value;
  }; 


  function Rule_set_ExecutionDescription (value) {
    this.Rule$ExecutionDescription$value = value;
  }; 

  function Rule_set_FileExtension (value) {
    this.Rule$FileExtension$value = value;
  }; 

  function Rule_set_HelpString (value) {
    this.Rule$HelpString$value = value;
  }; 

  function Rule_set_Metadata (value) {
    this.Rule$Metadata$value = value;
  }; 

  function Rule_set_Name (value) {
    this.Rule$Name$value = value;
  }; 

  function Rule_set_Order (value) {
    this.Rule$Order$value = (value | 0);
  }; 

  function Rule_set_Outputs (value) {
    this.Rule$Outputs$value = value;
  }; 

  function Rule_set_OverrideMode (value) {
    this.Rule$OverrideMode$value = value;
  }; 

  function Rule_set_PageTemplate (value) {
    this.Rule$PageTemplate$value = value;
  }; 

  function Rule_set_Properties (value) {
    this.Rule$Properties$value = value;
  }; 

  function Rule_set_PropertyPagesHidden (value) {
    this.Rule$PropertyPagesHidden$value = value;
  }; 

  function Rule_set_Separator (value) {
    this.Rule$Separator$value = value;
  }; 

  function Rule_set_ShowOnlyRuleProperties (value) {
    this.Rule$ShowOnlyRuleProperties$value = value;
  }; 

  function Rule_set_SupportsFileBatching (value) {
    this.Rule$SupportsFileBatching$value = value;
  }; 

  function Rule_set_SwitchPrefix (value) {
    this.Rule$SwitchPrefix$value = value;
  }; 

  function Rule_set_ToolName (value) {
    this.Rule$ToolName$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleSchema"), 
      Name: "Microsoft.Build.Framework.XamlTypes.Rule", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCategoryNamePropertyListMap", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_AdditionalInputs", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_AdditionalInputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Categories", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")])), 
      Rule_get_Categories
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CommandLine", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_CommandLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DataSource", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource")), 
      Rule_get_DataSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EvaluatedCategories", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")]))
    );

    $.Method({Static:false, Public:true }, "get_ExecutionDescription", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_ExecutionDescription
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FileExtension", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_FileExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HelpString", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])), 
      Rule_get_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Order", 
      JSIL.MethodSignature.Return($.Int32), 
      Rule_get_Order
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Outputs", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_OverrideMode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleOverrideMode")), 
      Rule_get_OverrideMode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PageTemplate", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_PageTemplate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Properties", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")])), 
      Rule_get_Properties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyPagesHidden", 
      JSIL.MethodSignature.Return($.Boolean), 
      Rule_get_PropertyPagesHidden
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Separator", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShowOnlyRuleProperties", 
      JSIL.MethodSignature.Return($.Boolean), 
      Rule_get_ShowOnlyRuleProperties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SupportsFileBatching", 
      JSIL.MethodSignature.Return($.Boolean), 
      Rule_get_SupportsFileBatching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_SwitchPrefix", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ToolName", 
      JSIL.MethodSignature.Return($.String), 
      Rule_get_ToolName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetPropertiesByCategory", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Collections.Specialized.OrderedDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPropertiesInCategory", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IList`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")]), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetProperty", 
      new JSIL.MethodSignature($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.Rule_$lGetSchemaObjects$gd__101.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.Rule_$lGetSchemaObjectTypes$gd__100.__Type__]; });

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "set_AdditionalInputs", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_AdditionalInputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Categories", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")])), 
      Rule_set_Categories
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CommandLine", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_CommandLine
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_DataSource", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource")), 
      Rule_set_DataSource
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Description", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_Description
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_ExecutionDescription", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_ExecutionDescription
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FileExtension", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_FileExtension
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HelpString", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_HelpString
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])), 
      Rule_set_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_Name
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Order", 
      JSIL.MethodSignature.Action($.Int32), 
      Rule_set_Order
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Outputs", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_Outputs
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_OverrideMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleOverrideMode")), 
      Rule_set_OverrideMode
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PageTemplate", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_PageTemplate
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Properties", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")])), 
      Rule_set_Properties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyPagesHidden", 
      JSIL.MethodSignature.Action($.Boolean), 
      Rule_set_PropertyPagesHidden
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Separator", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_Separator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ShowOnlyRuleProperties", 
      JSIL.MethodSignature.Action($.Boolean), 
      Rule_set_ShowOnlyRuleProperties
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SupportsFileBatching", 
      JSIL.MethodSignature.Action($.Boolean), 
      Rule_set_SupportsFileBatching
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_SwitchPrefix", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_SwitchPrefix
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ToolName", 
      JSIL.MethodSignature.Action($.String), 
      Rule_set_ToolName
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "Rule$Name$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$ToolName$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Description$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$HelpString$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$SwitchPrefix$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Separator$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$PageTemplate$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$DataSource$value", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Order$value", $.Int32)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$SupportsFileBatching$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$ShowOnlyRuleProperties$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$FileExtension$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$ExecutionDescription$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$CommandLine$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$AdditionalInputs$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Outputs$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$OverrideMode$value", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleOverrideMode"))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Properties$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Categories$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$Metadata$value", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Rule$PropertyPagesHidden$value", $.Boolean)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "syncObject", $.Object);

    $.Field({Static:false, Public:false}, "evaluatedCategories", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")]));

    $.Field({Static:false, Public:false}, "categoryNamePropertyListMap", $asm0A.TypeRef("System.Collections.Specialized.OrderedDictionary"));

    $.Field({Static:false, Public:false}, "propertiesByNameMap", $asm07.TypeRef("System.Collections.ObjectModel.ReadOnlyDictionary`2", [$.String, $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")]));

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "ToolName", $.String);

    $.Property({Static:false, Public:true }, "Description", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "HelpString", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "SwitchPrefix", $.String);

    $.Property({Static:false, Public:true }, "Separator", $.String);

    $.Property({Static:false, Public:true }, "PageTemplate", $.String);

    $.Property({Static:false, Public:true }, "DataSource", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.DataSource"));

    $.Property({Static:false, Public:true }, "Order", $.Int32);

    $.Property({Static:false, Public:true }, "SupportsFileBatching", $.Boolean);

    $.Property({Static:false, Public:true }, "ShowOnlyRuleProperties", $.Boolean);

    $.Property({Static:false, Public:true }, "FileExtension", $.String);

    $.Property({Static:false, Public:true }, "ExecutionDescription", $.String);

    $.Property({Static:false, Public:true }, "CommandLine", $.String);

    $.Property({Static:false, Public:true }, "AdditionalInputs", $.String);

    $.Property({Static:false, Public:true }, "Outputs", $.String);

    $.Property({Static:false, Public:true }, "OverrideMode", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleOverrideMode"));

    $.Property({Static:false, Public:true }, "Properties", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty")]));

    $.Property({Static:false, Public:true }, "Categories", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")]));

    $.Property({Static:false, Public:true }, "Metadata", $asm07.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object]));

    $.Property({Static:false, Public:true }, "PropertyPagesHidden", $.Boolean);

    $.Property({Static:false, Public:true }, "EvaluatedCategories", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Category")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize"), 
      /* 1 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Properties"]; })
    .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["Rule: {Name}"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.Rule+<GetSchemaObjectTypes>d__100 */ 

(function $lGetSchemaObjectTypes$gd__100$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.Rule+<GetSchemaObjectTypes>d__100", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.Rule+<GetSchemaObjects>d__101 */ 

(function $lGetSchemaObjects$gd__101$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.Rule+<GetSchemaObjects>d__101", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.RuleBag */ 

(function RuleBag$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.Rule))) ();
  };





  function RuleBag_get_Rules () {
    return this.RuleBag$Rules$value;
  }; 



  function RuleBag_set_Rules (value) {
    this.RuleBag$Rules$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.RuleBag", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Rules", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")])), 
      RuleBag_get_Rules
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjects", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), [$asm07.TypeRef("System.Type")])
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.RuleBag_$lGetSchemaObjects$gd__8.__Type__]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetSchemaObjectTypes", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]))
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.IteratorStateMachineAttribute"), function () { return [$asm00.Microsoft.Build.Framework.XamlTypes.RuleBag_$lGetSchemaObjectTypes$gd__7.__Type__]; });

    $.Method({Static:false, Public:true }, "set_Rules", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")])), 
      RuleBag_set_Rules
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "RuleBag$Rules$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Rules", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize"), 
      /* 1 */ $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.IProjectSchemaNode")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Rules"]; });

})();

/* class Microsoft.Build.Framework.XamlTypes.RuleBag+<GetSchemaObjectTypes>d__7 */ 

(function $lGetSchemaObjectTypes$gd__7$Members () {
  var $, $thisType;









  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.RuleBag+<GetSchemaObjectTypes>d__7", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Type$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.get_Current", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Type"))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Type$g.Current", $asm07.TypeRef("System.Type"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Type")]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Type")]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.RuleBag+<GetSchemaObjects>d__8 */ 

(function $lGetSchemaObjects$gd__8$Members () {
  var $, $thisType;










  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.RuleBag+<GetSchemaObjects>d__8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Object$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]))
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("System.Object")]), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm07.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm07.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm07.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.Object);

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g3__type", $asm07.TypeRef("System.Type"));

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.RuleBag"));

    $.Field({Static:false, Public:false}, "$l$g7__wrap1", $asm07.TypeRef("System.Collections.Generic.List`1+Enumerator", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.Rule")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object]), 
      /* 1 */ $asm07.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm07.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 3 */ $asm07.TypeRef("System.IDisposable"), 
      /* 4 */ $asm07.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Microsoft.Build.Framework.XamlTypes.StringListProperty */ 

(function StringListProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function StringListProperty_get_CommandLineValueSeparator () {
    return this.StringListProperty$CommandLineValueSeparator$value;
  }; 

  function StringListProperty_get_RendererValueSeparator () {
    return this.StringListProperty$RendererValueSeparator$value;
  }; 

  function StringListProperty_get_Subtype () {
    return this.StringListProperty$Subtype$value;
  }; 

  function StringListProperty_set_CommandLineValueSeparator (value) {
    this.StringListProperty$CommandLineValueSeparator$value = value;
  }; 

  function StringListProperty_set_RendererValueSeparator (value) {
    this.StringListProperty$RendererValueSeparator$value = value;
  }; 

  function StringListProperty_set_Subtype (value) {
    this.StringListProperty$Subtype$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.StringListProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_CommandLineValueSeparator", 
      JSIL.MethodSignature.Return($.String), 
      StringListProperty_get_CommandLineValueSeparator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_RendererValueSeparator", 
      JSIL.MethodSignature.Return($.String), 
      StringListProperty_get_RendererValueSeparator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Subtype", 
      JSIL.MethodSignature.Return($.String), 
      StringListProperty_get_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CommandLineValueSeparator", 
      JSIL.MethodSignature.Action($.String), 
      StringListProperty_set_CommandLineValueSeparator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_RendererValueSeparator", 
      JSIL.MethodSignature.Action($.String), 
      StringListProperty_set_RendererValueSeparator
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Subtype", 
      JSIL.MethodSignature.Action($.String), 
      StringListProperty_set_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StringListProperty$CommandLineValueSeparator$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StringListProperty$RendererValueSeparator$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StringListProperty$Subtype$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "CommandLineValueSeparator", $.String);

    $.Property({Static:false, Public:true }, "RendererValueSeparator", $.String);

    $.Property({Static:false, Public:true }, "Subtype", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.StringProperty */ 

(function StringProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };



  function StringProperty_get_Subtype () {
    return this.StringProperty$Subtype$value;
  }; 

  function StringProperty_set_Subtype (value) {
    this.StringProperty$Subtype$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.BaseProperty"), 
      Name: "Microsoft.Build.Framework.XamlTypes.StringProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Method({Static:false, Public:true }, "get_Subtype", 
      JSIL.MethodSignature.Return($.String), 
      StringProperty_get_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Subtype", 
      JSIL.MethodSignature.Action($.String), 
      StringProperty_set_Subtype
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "StringProperty$Subtype$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Subtype", $.String);

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Build.Framework.XamlTypes.ValueEditor */ 

(function ValueEditor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm00.Microsoft.Build.Framework.XamlTypes.NameValuePair))) ();
  };






  function ValueEditor_get_EditorType () {
    return this.ValueEditor$EditorType$value;
  }; 

  function ValueEditor_get_Metadata () {
    return this.ValueEditor$Metadata$value;
  }; 


  function ValueEditor_set_EditorType (value) {
    this.ValueEditor$EditorType$value = value;
  }; 

  function ValueEditor_set_Metadata (value) {
    this.ValueEditor$Metadata$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Object"), 
      Name: "Microsoft.Build.Framework.XamlTypes.ValueEditor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BeginInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EndInit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Method({Static:false, Public:true }, "get_EditorType", 
      JSIL.MethodSignature.Return($.String), 
      ValueEditor_get_EditorType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Metadata", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      ValueEditor_get_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Method({Static:false, Public:true }, "set_EditorType", 
      JSIL.MethodSignature.Action($.String), 
      ValueEditor_set_EditorType
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Metadata", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")])), 
      ValueEditor_set_Metadata
    )
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "displayName", $.String);

    $.Field({Static:false, Public:false}, "ValueEditor$EditorType$value", $.String)
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ValueEditor$Metadata$value", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]))
      .Attribute($asm07.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "EditorType", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String)
      .Attribute($asm0A.TypeRef("System.ComponentModel.LocalizableAttribute"), function () { return [true]; });

    $.Property({Static:false, Public:true }, "Metadata", $asm07.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Microsoft.Build.Framework.XamlTypes.NameValuePair")]));

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.ComponentModel.ISupportInitialize")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm2D.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Metadata"]; });

})();

